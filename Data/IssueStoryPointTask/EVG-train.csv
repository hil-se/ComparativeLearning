"issuekey","type","components","storypoint","title","description_text"
"EVG-336","New Feature","app",1,"Spawnhost in AWS regions besides us-east-1","""[~david.hows] recently spent a month in NYC as a new """"exo-dev"""" for the kernel team. He proclaimed MCI as a """"Brilliant magical tool, knowledge and access to it needs to be shared widely.""""    One point he identified: +spawnhost+ functionality is incredibly helpful, *except when the host is on the other side of the world from you*. Packet latency from Sydney to us-east-1 is bad and Windows RDP is especially unusable with high latency.    If we roll out spawnhost functionality more widely to support staff, Dublin will feel the same pinch, but Sydney will still feel it most.    *Request*: allow spawnhost users to provision instance in a alternate Amazon EC2 region.    - I think you need [AMI Copy for Amazon EC2|http://aws.amazon.com/about-aws/whats-new/2013/03/12/announcing-ami-copy-for-amazon-ec2/]  -- pay for transfer and storage in the new region  - Initial EC2 regions supported:  -- US East (Virginia) = us-east-1  -- Asia Pacific (Sydney) = ap-southeast-2  -- MAYBE: EU West (Ireland) = eu-west-1  - Add a pull-down menu on the """"spawnhost configure"""" page to select AWS region (small set we allow)  - Use MCI user timezone preferences to select an EC2 region for the user?  -- or make it another preference?  """
"EVG-90","Improvement","app",2,"get rid of global locking","""its bad design and its gettin pretty irritating to users when patches time out."""
"EVG-136","Improvement","app",1,"hostinit should use workdir","""In provisioning and setting up a host, the hostinit process should do all it's work in the specified distro working directory."""
"EVG-298","Improvement","app",1,"Simplify util.FileExists API","""the function definition is        which accepts multiple arguments then path joins them together. However, none of our code actually makes use of this multi-arg approach. We always do a filepath.Join() on the inputs before passing them to FileExists in our code. Let's change the function to behave the way we're using it."""
"EVG-68","New Feature","app",2,"allow terminating a host directly from UI","""if """"decommissioning"""" a host isn't good enough (the host is actually stuck in a weird state that decommissioning won't get it out of) it would be useful to have the ability to just forceably terminate it right away."""
"EVG-223","New Feature","app",2,"Add patch alert triggers","""as an extension of the alert/notify rewrite"""
"EVG-497","Bug","legacy-ui",2,"""Terminate host ()?""","""When clicking the trash icon on https://evergreen.mongodb.com/ui/spawn I get a thoughtful question if I am sure if I want to terminate the instance... But it doesn't tell me which instance.    The message appears to supposed to have more info  {code}  public/static/partials/user_host_terminate.html:      Terminate <strong>[[curHostData.distro._id]]</strong> host (<strong>[[curHostData.id]]</strong>)?  {code}    But only becomes    """
"EVG-518","Task","app",1,"Remove InsecureSkipVerify with modified go http package","""evaluate whether or not we can take out InsecureSkipVerify with the modified http package for go 1.6  """
"EVG-631","Improvement","app",1,"Log an event whenever a user sets priority","""Would be nice to have the option to look this up if we ever encounter a string of abuse."""
"EVG-700","Improvement","legacy-ui",2,"Add git tags in commit, if any, to waterfall page","""Is it possible to display any tags a given commit has in the waterfall page? Now that there are no BUMP commits for releases this information will be very useful to identify releases.    See attached screenshot for details.    Thanks,  Ram√≥n.    Cc [~geert.bosch]"""
"EVG-763","Task","app",2,"evergreen configuration validator should validate commands inside of functions ","""e.g. if a function definition is missing a command field, it should raise an error in the validator."""
"EVG-805","Bug","app",1,"Disallow decommissioning static hosts","""That status doesn't make a lot of sense for static hosts - they should either be running or quarantined on the hosts page. There also appear to be some internal process(es?) that attempt to terminate hosts in this status."""
"EVG-929","New Feature","app",1,"spawn page should give helpful error if there are no spawnable distros","""This will only affect deployments where no distro types allow user spawning. Right now on such deployments, you can set up a public key but cannot click the """"SPAWN"""" button, with no error message to indicate why."""
"EVG-939","Bug","app",1,"'Error setting host RDP password' message incorrectly displays error message","""I received this error message:      """"\[object Object\]"""" should be the error message instead, presumably."""
"EVG-948","New Feature","app",1,"Add revision order number to expansions","""This will allow users to upload artifacts with a monotonically increasing sequence number."""
"EVG-992","New Feature","app",1,"""json.get"" and ""s3.get"" commands should automatically create outer directory if it doesn't exist yet","""for example, in :      if """"src"""" doesn't exist, we should just automatically mkdir it before trying to write stand.json into it.  This avoids the need for the project maintainer to have to remember to explicitly do a """"mkdir"""" somewhere before the command runs.    The workaround is to add the following before the json.get:    """
"EVG-1016","Improvement","app",1,"System.out/err xUnit output not displayed","""See [this build|https://evergreen.mongodb.com/task/mongo_java_driver_ubuntu_1404_test_0078a5e9b337fd76cacf38c2185c84a67ed25a5b_16_05_16_15_31_47#/log/E]    Many of the test suites should have System.out content in the test report, e.g.        I don't see it displayed anywhere in the UI."""
"EVG-1041","New Feature","legacy-ui",2,"Add audit log for user-triggered events with filtering","""Would be nice to have an audit log listing who did what at what time on Evergreen.    Right now if I need to restart a task I can add a note via the Build Baron plugin saying """"I restarted this task"""", but if I need to restart all failures in a build (EVG-429) I can't easily add a note to all the restarted tasks.    Ideally the audit log would have some filtering mechanism (like the waterfall view has) so one could type """"restart"""" to see all the recent task restarts.    I think this would be useful information for the Build Baron to have, so the """"audit log"""" is just a proposal. If a task restart (or cancellation, or priority change) automatically added a note visible via the BB plugin I think that would meet the requirements."""
"EVG-1053","Bug","app",1,"repo tracker should not try to fetch info on projects that are still in the process of being configured","""Creating a new project from the admin panel inserts a record into the project refs, and the next repo tracker run tries to pull commits for that project ref even when the user has not yet finished updating it with the repo owner/name/branch etc.    This results in almost always getting at least 1 alert about the project being broken as it's being set up, which is pretty annoying (and confusing)."""
"EVG-1066","New Feature","app",2,"hosts page should show idle time of each host","""It shows how long the host has been up, and (if applicable) how long the current task has been running.  But, there's no way to see how long an idle host has been idle, without going to a specific host's page and inspecting its event log."""
"EVG-3011","Task","perf-tools",8,"Add ability to zoom out on performance trend graphs","""From multiple discussions it would be nice to be able to zoom out on the trend graphs on mongo-perf and sys-perf to see longer term trends. The data could be sampled as we zoom out. """
"EVG-9556","New Feature","platform",1,"Define test result type and reporting format for greenbay","""Include methods for creating, aggregating, printing, writing to a file, both in human readable format and in evergreen's report.json format."""
"EVG-9415","New Feature","platform",0.5,"Write build system and Evergreen configuration for greenbay","""This will borrow significantly from the amboy/curator/etc projects."""
"EVG-1245","Improvement","app",2,"New Project should be disabled on project page for non super-users","""Project admins cannot create their own projects. """
"EVG-1286","New Feature","app",1,"Track how many tasks a host has run","""This would enable us to easily see if hosts ever get into the pathological state of coming up, waiting, and then shutting down without running any tasks. We could log an event when this occurs. """
"EVG-1285","Bug","legacy-ui",1,"Project admins cannot view disabled projects if they have no enabled projects","""Suppose I am the project admin of two projects, foo and bar. If foo is enabled and bar is disabled, I can view both foo and bar. If, however, I am just the project admin of bar, I cannot view bar."""
"EVG-1288","Bug","app",2,"Task execution data files only appear when viewing Latest","""When viewing a previous execution of a task the files associated to that execution are not visible. When viewing the Latest, all executions are visible (this may not make sense)."""
"EVG-1335","Improvement","legacy-ui",2,"Hide decommissioned hosts on Hosts page","""Can the decommissioned hosts be hidden by default on the Hosts page?  Perhaps we can have a checkbox 'Show decommissioned hosts' similar to what we do for spawned?    I don't think anyone needs to see those boxes on a daily basis, I never had a case where I needed to see or do anything with the decommissioned servers, they just take additional space on the page and make sorting and filtering more difficult."""
"EVG-1350","New Feature","app",1,"Document undocumented evergreen commands","""I have seen the following commands in various Evergreen config files, but none are documented on the [Project Commands|https://github.com/evergreen-ci/evergreen/wiki/Project-Commands] wiki page:  * archive.targz_pack  * expansions.fetch  * expansions.update  * git.apply_patch  * keyval.inc  * manifest.load  * s3.get  * s3Copy.copy  * shell.track  * shell.cleanup    Could these (and any *other* available commands) please be documented?    Thanks"""
"EVG-1386","Bug","app",2,"Set RDP Password no longer working","""I can no longer use the """"Set RDP Password"""" to set passwords on the windows spawn hosts.    The form appears to have been submitted successfully but the password is never changed, I have to login to the server over ssh and reset it manually"""
"EVG-1404","New Feature","app",1,"Remove HTTP verb constants in evergreen package when GCCGO version moves beyond 1.4","""The HTTP verb constants that go added after go1.4, e.g. http.MethodPut etc, are copied into the evergreen globals.go file so that we can use them in GCCGO version 1.4.     When we upgrade past this version, the constants should be removed and references to them should be replaced. """
"EVG-1460","Bug","app",2,"use --binary in git commands ","""The next chapter in the saga of the huge patch, which began in EVG-1459.    The file in question, libbson-objects.inv, is a *new* binary file that is added by the patch.    https://evergreen.mongodb.com/task/mongo_c_driver_releng_make_release_archive_340e610e019f404105aae8e2c1c12f8c85fc4c72_17_01_20_21_07_54"""
"EVG-1488","New Feature","app",1,"Add timestamp expansion","""If Evergreen provides a default expansion for the timestamp used to construct build_id, etc., then users can construct better build/task and ultimately S3 artifact identifiers than are currently provided by Evergreen itself.  """
"EVG-1487","Bug","app",1,"build_id and task_id have a race condition for patch builds","""Recent discussions and inspection gave me the impression that expansions work roughly this way (where """"roughly"""" means I'm not trying to be specific about how reserved characters are converted to dashes or underscores or whatever):    * project' ‚Äì key for project in evergreen  * 'revision' ‚Äì SHA1 of a commit in the repo for the project  * 'build_variant' ‚Äì entry in the 'buildvariants' part of the config.yml  * 'task_name' ‚Äì task name from 'tasks' part of config.yml  * 'version_id'  ** For commits: roughly {{""""$\{project\}\_$\{revision\}""""}}  ** For patches: a unique ID  * 'build_id' ‚Äì roughly {{""""$\{project\}\_$\{build_variant\}\_$\{revision\}\_$\{TIMESTAMP\}""""}}  * 'task_id' ‚Äì roughly {{""""$\{project\}\_$\{build_variant\}\_$\{task_name\}\_$\{revision\}\_$\{TIMESTAMP\}""""}}  * 'execution' ‚Äì number of times a 'task_id' has executed (starting at 0)    My understanding is that TIMESTAMP is the commit timestamp for commits and the submission time for patches.    From this, it appears that it is possible for two patches on the same commit submitted at the same TIMESTAMP to wind up with the same 'build_id's and 'task_id's.    Without considering backwards compatibility issues, it looks like for patch builds, the 'build_id' and 'task_id' should be using the 'version_id' in place of the 'revision' field.    Alternatively, if 'version_id' for patches were 'project_<UNIQUEID>', then 'build_id' and 'task_id' could remove the 'project' and 'revision' expansions and just use 'version_id' instead, as it would include project information and a unique identifier:    * 'build_id' ‚Äì roughly {{""""$\{version_id\}\_$\{build_variant\}\_$\{TIMESTAMP\}""""}}  * 'task_id' ‚Äì roughly {{""""$\{version_id\}\_$\{build_variant\}\_$\{task_name\}\_$\{TIMESTAMP\}""""}}    It would be even more consistent, perhaps, to put timestamp after 'version_id' since that's what it's tied to, which would give you:    * 'build_id' ‚Äì roughly {{""""$\{version_id\}\_$\{TIMESTAMP\}\_$\{build_variant\}""""}}  * 'task_id' ‚Äì roughly {{""""$\{build_id\}\_$\{task_name\}""""}}    TIMESTAMP could even go first, before 'version_id', which has the added value of allowing id's to sort chronologically (e.g. listing contents of an S3 bucket):    * 'build_id' ‚Äì roughly {{""""$\{TIMESTAMP\}\_$\{version_id\}\_$\{build_variant\}""""}}  * 'task_id' ‚Äì roughly {{""""$\{build_id\}\_$\{task_name\}""""}}    Following that logic, you could add a new expansion:    * 'expansion_id' ‚Äì roughly {{""""$\{task_id\}\_$\{expansion\}""""}}    Then all the unique identifier expansions would build logically and consistently on each other.    That would simplify the job of users choosing an expansion for naming artifacts to S3:    * Need something to reuse across tasks for a build: use just 'build_id'  * Need some task output for external consumption (e.g. a release tarball): use just 'task_id'  * Need to save debugging output from a particular task run: use just 'execution_id'"""
"EVG-1503","Task","app",1,"Document 'command_type'","""It's not mentioned on the wiki."""
"EVG-1523","Improvement","app",2,"handle test result test files that are too long to index","""we need an index on this field, so we should either truncate these files or figure out some other way to handle this. """
"EVG-1520","Improvement","app",0,"Allow projects to specify required builders for patch builds","""It would be nice if project managers could specify in a file what builders are required when sending patch builds, so the {{evergreen}} cli could read those defaults when users don't specify them.    We'd have to decide what to do when users have specified default builders in their {{.evergreen.yml}} file; probably printing a warning and honoring user's settings would be enough."""
"EVG-1533","Bug","app",2,"previously executed tasks may not be included in test history retrieval ","""The [current implementation | https://github.com/evergreen-ci/evergreen/blob/master/model/task_history.go#L415] of merging old and current tasks may exclude ones if they are sorted in different ways.     We should include tests with both tasks and archived tasks that cover both the normal archiving a task case, and one where the two may have different sets of test results. """
"EVG-1540","Improvement","app",2,"adjust time zones on test-history command to support user's local timezones","""We currently support inputting only UTC, which what is stored in the DB. We should come up with a good way to support users' timezones. """
"EVG-1560","New Feature","app",2,"Endpoint to report on build success rate and elapsed time within a project/variant","""For Cloud tests on Evergreen, we'd like to create custom reports that track the pass/fail rate of all tasks on a build variant and the time taken for each.    As such, we'd like a REST endpoint that only requires {project} and {variant}, can take an optional {maxResults} and {sortBy}, that returns information on the last {maxResults} of builds. We need task-level detail but not test-level.  """
"EVG-1576","Bug","app",2,"s3 operations should be more robust to networking issues","""either by more retry logic if system failures continue, or preferably by pushing tasks to doing s3 operations with their own code (or curator.) """
"EVG-1614","Bug","app",2,"dist-race tarball execs should have the same file names as standard build","""this will make it easy to drop in or deploy race-detector enabled binaries, which isn't currently possible given that the file names aren't the same as the standard builds. However, not being able to tell based on file name if an artifact has the race detector by looking at it might make builds less hygienic or easy to produce.     we could also just put symlinks in the tarball, which may or may not work more long term. """
"EVG-1628","New Feature","app",1,"get rid of global lock for task cleanup on timed out heartbeats","""The global lock is used for cleaning up hosts and tasks. This will probably require some use of atomic updates.  Currently we cleanup timed out tasks and reset them.   """
"EVG-1640","New Feature","app",1,"get rid of global lock for host cleanup ","""this may require having atomic updates on the host status """
"EVG-1650","Bug","app",1,"Fix (MISSING) in runner logs","""There are a lot of (MISSING) appearing in the runner logs.        Some examples:  """
"EVG-1662","Bug","app",2,"No overflow checking on batchtime","""It is possible to set a very large batchtime (e.g.: max int64) and overflow the internal representation. The consequence is that builds will always be scheduled."""
"EVG-9468","New Feature","platform",8,"Revive Dagger Tools ","""this ticket is a place holder for work on the dagger project to make the visualizer work and import some existing work"""
"EVG-1691","Bug","legacy-ui",2,"Don't display sub-second timings on on stats graphs","""https://evergreen.mongodb.com/task_timing/mongodb-mongo-master#/project=mongodb-mongo-master&buildVariant=enterprise-rhel-62-64-bit&taskName=compile_all&requester=gitter_request&limit=500    Doing so severely skews the visual quality of the results. The spikes to high values are harder to ignore without heuristics, but rounding down times to the nearest second seems worthwhile."""
"EVG-1692","Bug","app",2,"compile_all task failing continuously for weeks without sending notifications","""You can see the failure history here:    https://evergreen.mongodb.com/task_history/mongodb-mongo-master/compile_all    But this query (which I would expect to return a BFG ticket every ~3rd day or so) instead only has one ticket:    https://jira.mongodb.org/issues/?jql=project%20in%20(BFG%2C%20BF)%20and%20cf%5B14277%5D%20%3D%20ubuntu1604-debug-ubsan%20and%20%22Failing%20Tasks%22%20%3D%20compile_all"""
"EVG-1714","New Feature","app",2,"go test plugin should be more flexible in its parsing ","""This test shouldn't fail, and does because gccgo has a different zero time value string format, which our regex doesn't account for.     https://evergreen.mongodb.com/task/Greenbay_rhel62_gccgo_test_output_2876d0bd3a8b690c1adc411d6d7b0e7534c6750e_17_06_10_17_06_01"""
"EVG-1717","Improvement","app",2,"Fetch a Paginated List of Distros: GET /distros","""EVG-880 implements only a portion of the distro model. We should enrich the APIDistro struct to implement the remainder of the model. Note also that EVG-880 assumes the distros list is not paginated, so this needs to be changed when the route is implemented."""
"EVG-1776","Bug","legacy-ui",2,"Base URL for JIRA tickets is sometimes ""undefined"" instead of ""jira.mongodb.com""","""See https://evergreen.mongodb.com/build/mongodb_mongo_master_ubuntu1604_debug_aubsan_lite_6c0e2884a22a82d57f2cef12756fc6a7609e20c9_17_06_14_21_15_31"""
"EVG-1799","Bug","app",1,"ETA tooltip always shows >= 1 day on patch builds","""For example, in progress tasks on https://evergreen.mongodb.com/version/594803ff2fbabe4229000a86 have a tooltip showing ETA: >= 1 day    See https://evergreen.mongodb.com/patches/project/mongodb-mongo-v3.4 for more examples.    The waterfall page isn't affected: https://evergreen.mongodb.com/waterfall/mongodb-mongo-v3.4"""
"EVG-9391","Bug","platform",2,"On Windows curator stat process-tree --pid <> does not return complete info","""This ticket is related to incomplete process information when querying the """"http://localhost:2285/status"""" Evergreen endpoint on Windows. As requested, I've run the following curator command on Windows with the curator build {{d7616}} commit.            with output:        I do not see any """"ps_info"""" data."""
"EVG-9510","New Feature","platform",1,"curator compile only push tasks should depend on a full suite","""to avoid pushing in cases where a test has failed """
"EVG-9465","New Feature","platform",1,"greenbay tests leave detritus in home directory","""observed from test compile operation on windows, presumably elsewhere. """
"EVG-1818","Improvement","app",1,"In BF project the ""diff"" link missing ""mongo""","""eg https://jira.mongodb.org/browse/BF-5321 points to https://github.com/mongodb/commit/932c2f345598d8e1d283e8c2bb54fd8d0e11c853 ( the link misses mongo)"""
"EVG-1823","New Feature","app",1,"swap order of id/link/etc and summary as printed by evergreen patch","""The link and Id are the most important bits of info since they are always needed after submitting a patch. Unfortunately for large patches, they get scrolled off screen by the summary, which is not only less important, it is also redundant with the summary printed before submitting the patch. Also it seems to print several blank lines at the end, making this even worse.    """
"EVG-1820","New Feature","app",1,"static hosts should not get flagged for termination","""I have a static host that was marked as unreachable, and the monitor published a bunch of """"flagged for termination because: """" messages. Obviously the host can't be terminated though because it is static.  https://evergreen.mongodb.com/host/root@ec2-54-242-216-156.compute-1.amazonaws.com"""
"EVG-3310","Improvement","app",8,"Annotations (relevant BF tickets) for trend graphs in evergreen perf plugin","""When triaging Microbenchmarks and sys-perf, it's difficult to get any historical info about historical ups and downs in the trend graphs. There may exist a Jira ticket, but when just looking at the trend graph, there's no marker or link to say that this jump 3 weeks ago is a known issue. A lot of time is then wasted by the build baron re-discovering things that are already known.    We'd like to change the display so that, in addition to displaying change points, Build Failures are also rendered onto the trend graphs.    BF tickets have 'Evergreen Project', 'Failing Buildvariants', 'Failing Tasks' and 'First Failing Revision' / 'Fix Revision' fields that can be used to link to the point in the trend graphs.    When a BF and a Change Point exist for the same revision, the BF should take precedence (as this indicates that the change is known or is being worked on).¬†"""
"EVG-1829","Bug","legacy-ui",1,"HTTP error handler on some pages give non-helpful error messages","""Like on the settings page, due to the browser returning a JSON object for the error but we're trying to display it verbatim."""
"EVG-1828","Bug","app",1,"avoid removing task directory after timeouts ","""turns out this removed files during the post task, and we shouldn't do that"""
"EVG-1827","Build Failure","app",2,"timeouts still marked as system failures","""e.g.     https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_multiversion_multistorage_engine_f0110e2682e3a787df062ee3feb7637add694978_17_06_29_14_43_19/0    EVG-1608"""
"EVG-1839","Improvement","app",2,"clean up/restructure log messages ","""specifically I want to use the line constructors *much* less as they're quite hard to use in a structured format. """
"EVG-1838","New Feature","app",1,"write application logs to files and log service","""continue only writing agent lots to log service, if possible."""
"EVG-1844","Task","app",1,"move command package and refactor it to accept conexts ","""new package should be called subprocess """
"EVG-1843","Task","app",1,"client.LogProducer's writer methods should accepet levels. ","""so that we can properly filter stderr messages to error"""
"EVG-1842","Question","app",1,"new client retryGet should handle nil responses","""the current implementation logs but doesn't error if the response is nil. (which I think should always be an error, or at least I believe that the response is never nil if the error is nil. It would be nice to prevent the implementation of the method handlers from needing to consider the possibility of a response being nil if they check the error.     would want to update/refactor the client methods accordingly as well"""
"EVG-1841","Question","app",1,"new client getnexttask method takes a taskID/secret","""this seems like it is in error or is confusing. """
"EVG-1840","New Feature","app",2,"implement legacy client methods for routes required by attach plugin",""""""
"EVG-1849","Improvement","app",2,"Instances should fail to provision if adding tags fails","""This will prevent cases like BUILD-3424, where the reaper stopped a user's spawnhost."""
"EVG-1856","Bug","app",1,"More informative error message when spawning hosts","""If a host fails to spawn, it will not appear in the UI, but there will still be a green info message saying """"Host spawned."""" This is confusing to users who cannot tell if their host actually spawned, nor the reason it may have failed. It can fail if, for example, the distro is configured incorrectly with an image ID that does not exist.    https://evergreen.mongodb.com/spawn"""
"EVG-1855","Bug","app",1,"OpenStack security groups are NOT optional","""The Evergreen UI indicates that security groups are an optional parameter, but the API call to create an instance will actually fail if a security group is not indicated. We need to fix the UI and also update settings validation in the provider implementation."""
"EVG-1854","Bug","app",2,"handleAPIError returns wrong error status code","""Returned JSON document claims 500 status but curl -I shows 404. Problem likely exists in handleAPIError() method in rest/route/handler.go because returned error is cast to rest.APIError instead of *rest.APIError.    See:      """
"EVG-1853","Bug","app",1,"GCE does not accept spaces in new instance names","""If you spawn a GCE host using the default distro name """"new distro"""", GCE returns an error: Must be a match of regex '(?:[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?)'. We should clean/validate the instance name in GCE before making an API call to spawn an instance."""
"EVG-1852","Bug","app",1,"Hosts are not removed from DB when terminated in GCE and OpenStack","""If you spawn a host in GCE/OpenStack and then terminate it, it will still show up in the Evergreen Hosts UI because it was not removed from the DB."""
"EVG-1862","New Feature","app",2,"Implement methods for reading VMware instance attributes","""These provider methods behave the same for hosts created by Evergreen and hosts that are created with the vSphere web client, so they are possible to test before we figure out how to spawn instances using the vSphere API. This involves implementing the following methods of the cloud manager interface:  * GetInstanceStatus()  * GetDNSName()  * IsUp()"""
"EVG-1861","New Feature","app",2,"Authenticate to a vCenter server using the VMware golang library","""This ticket involves creating a client interface to the golang library similar to in the OpenStack and GCE cloud providers. At the end, we should have an authenticated client that can be used to make more API calls to the server.  * Create an interface to the golang library with a mock for testing  * Add credentials to *evergreen.Settings structure  * Make an API call to authenticate to the server"""
"EVG-1860","Improvement","app",2,"Clean up build API routes","""Some class names in the build abort route are misnamed, and some tests are a little messy.    Ex: buildIdAbortGetHandler, AbortBuild/FindBuildById argument names"""
"EVG-1865","Bug","app",2,"Time conversion errors in API models and pagination functions","""The conversion from service level structs to API structs is incorrect. Given a time.Time field, several API models are using naive type casting to coerce these fields into APITime fields, which truncates location data and results in off-by-4-hours errors. Instead we should be using the model.NewTime method which first converts the input time to a location of UTC before populating APITime fields.     Furthermore, the serialization of the time in the actual pagination function is also incorrect. Rather than format the next page's first time properly using time.Format, we currently use the .String() method which again improperly truncates the location data but also uses the wrong format.    Routes affected include but are not limited to build, metrics, and hosts."""
"EVG-1864","Bug","legacy-ui",2,"Scrolling up on the build timeline requires scrolling down","""Scenario to reproduce:    1. Visit: https://evergreen.mongodb.com/version/performance_12568fbc406678ebd98a93d121175b1f765c4766#/0  2. Attempt to scroll up on the Build Time so you can work back to the current date. It requires you to continually scroll down and then back up to trigger a load.     While seemingly small this is really annoying for build barons investigating failures.  Expected: When you scroll up on the build timeline it loads earlier and earlier dates without requiring a scroll down.  """
"EVG-1868","Improvement","app",1,"Support custom machine types in Google Compute distros","""In addition to predefined machine types, Google Compute also supports custom machine types that are priced differently according to the number of vCPUs and memory used. GCE distro configuration should also support custom machine types.    {panel:title=Source: [https://cloud.google.com/compute/pricing#custommachinetypepricing]}  Create a custom machine type with a specific number of vCPUs and amount of memory if predefined machine types are not optimal for your workloads. Custom machine types also save you the cost of running on a larger, more expensive machine type if you don't need to use all the resources of that machine type.    For example, instead of using an n1-standard-8 machine type when you just need a machine type with 6 vCPUs, create a custom machine type instance with 6 vCPUs and 22.5 GB of memory. Creating a custom machine type can save you up to 40% compared to selecting a larger machine type.  {panel}  """
"EVG-1870","Improvement","app",1,"Methods in rest client should not log","""They should return errors, which the caller will log."""
"EVG-1876","Bug","app",1,"API user and key header constants are reversed","""const (   AuthTokenCookie   = """"mci-token""""   TaskSecretHeader  = """"Task-Secret""""   HostHeader        = """"Host-Id""""   HostSecretHeader  = """"Host-Secret""""   ContentTypeHeader = """"Content-Type""""   ContentTypeValue  = """"application/json""""   APIUserHeader     = """"Api-Key""""   APIKeyHeader      = """"Api-User""""  )"""
"EVG-1880","Improvement","app",3,"Get all revisions for a project: GET /projects/<project-id>/revisions/","""Get all revisions for a project during a specific time period, which will be given as form values included in the http request. """
"EVG-9488","New Feature","platform",1,"Change granularity to duration","""Change mentions of granularity to duration in the build cost reporting tool."""
"EVG-1888","Task","app",1,"Add route to kill all agents","""this should go in the status server that runs in the agent"""
"EVG-1890","Bug","app",1,"Fix setup/teardown script ordering","""The order of events is:  # Copy the teardown script to the host.  # Copy the setup script to the host.  # Run the setup script.    Some setup scripts, however, mount the working directory elsewhere, which means the setup and teardown scripts are no longer present in the distro's working directory, and then Evergreen cannot run the teardown script."""
"EVG-1895","Bug","app",1,"Pagination broken in the hosts route","""We should fix the fact that the data Connector to properly sort the host results so that the pagination operations make sense.    We'll address the parameter passing problem separately. """
"EVG-1894","New Feature","app",2,"Get all Tasks by Project for Cost Route: GET cost/projects/<project_id>/task ","""Include starttime and duration when filtering for relevant tasks """
"EVG-1901","Build Failure","app",2,"test-rest-model failure","""h2. [test-rest-model failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_rest_model_patch_752543f46b1c2a22f984c3b1ce15ff88b6314696_597639282fbabe43520018ce_17_07_24_18_15_39/0]    Host: [ec2-54-224-143-176.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-9hqi78wk]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~sejin.park]~  """
"EVG-1900","Bug","app",2,"fetch hosts route pagination broken","""When fetching a page of hosts, we are not sorting correctly"""
"EVG-1903","Bug","legacy-ui",1,"patches listed in version history drawer","""The two versions at the top of the list in the screenshot link to patch tasks.   Only commit tasks should be showing up there."""
"EVG-9493","New Feature","platform",1,"fields message triggered panic",""""""
"EVG-1906","Bug","app",1,"Reachability check ssh command doesn't use the same options as other ssh commands","""We started to add {{UserKnownHostsFile=/dev/null}} to ssh options in [this commit|https://github.com/evergreen-ci/evergreen/commit/8ee7f60f243acbb4fdc8f2131e10458c3def80a7#diff-6a305ad019927e85a72e8ffc3842a4b0R536] but it doesn't look like it applies to the reachability checks. And it causes issues sometimes."""
"EVG-1904","Bug","legacy-ui",2,"schedule patch button can result in patch being scheduled multiple times ","""we ended up in a situation with duplicate tasks being created after the first invocation errored in the middle of the operation. """
"EVG-1912","Bug","legacy-ui",1,"Provision failed status has unreadable white font","""Due to the label css class overriding the grey color we want"""
"EVG-1911","New Feature","app",1,"push sysinfo data to logs on a regular loop in all services. ","""runner and api server. """
"EVG-1910","Improvement","app",2,"Write documentation for API v2 routes related to Version and Build Cost Reporting","""Version related routes:   * EVG-1741: GET /versions/<version_id>  * EVG-1746: POST /versions/<version_id>/abort  * EVG-1747: POST /versions/version-id/restart   * EVG-1735: GET /versions/version-id/builds    Cost related routes:   * EVG-1778: GET cost/version/<version-id>  * EVG-1894: GET cost/projects/<project-id>/tasks with time info  * EVG-1878: GET cost/distro/<distro-id> with time info  """
"EVG-1913","New Feature","app",2,"set JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE for process termination ","""on windows """
"EVG-1921","New Feature","app",2,"Splunk Logging Client Creates Backpressure in Agent","""Grapes. """
"EVG-1920","New Feature","app",2,"Provide global system task status count over time via status endpoint","""This query would potentially be extremely useful to monitor. We could alert on it (maybe) or just manually check it to gauge the effects of things like network changes, infrastructure changes, or deploys.    At least # of """"system unresponsive"""" tasks in the past 30 minutes would be useful.     To add to that it would be nice to override the time period, and to list all statuses, not just system unresponsive. """
"EVG-1927","Task","app",1,"Vendor Docker golang library","""Docker and Go have changed a lot since 2015. We've been using this library:  github.com/fsouza/go-dockerclient    We should use this fancy new official one instead:  github.com/docker/docker  f7d09a0a9bd626782e63e7295ca87690f26a1fb4    We also need this to configure Docker networking options:  github.com/docker/go-connections  3ede32e2033de7505e6500d6c868c2b9ed9f169d    The annoying thing is that when I try to import both packages as is, I get the vendoring issue that is document at [https://github.com/moby/moby/issues/28269]. A workaround I found is to remove the nested vendor dir at """"evergreen/vendor/github.com/docker/docker/vendor/github.com/docker/go-connections"""" so that imports would properly reference the dir at """"evergreen/vendor/github.com/docker/go-connections"""". Maybe there's a cleaner solution?"""
"EVG-1924","Bug","legacy-ui",2,"Task links on host page point only to latest execution","""Instead of linking to the execution that ran on the given host.     For example, on [the host page for host *_sir-92v86p9h_*|https://evergreen.mongodb.com/host/sir-92v86p9h], there's a link to [this task|https://evergreen.mongodb.com/task/mongodb_mongo_v3.4_enterprise_debian81_64_jsCore_auth_bca21d14a4f25d7884d1f56d2e6ff02e334c9578_17_07_27_19_10_29], which is the latest execution, and ran on *_sir-91xg5wik_*, not *_sir-92v86p9h_*. It should link to [this task|https://evergreen.mongodb.com/task/mongodb_mongo_v3.4_enterprise_debian81_64_jsCore_auth_bca21d14a4f25d7884d1f56d2e6ff02e334c9578_17_07_27_19_10_29/2] instead."""
"EVG-1923","Build Failure","app",2,"lint failures","""h2. [lint failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_lint_1201c83d28d1e43c4baf2fe854644398d879f2f6_17_07_31_22_14_33/0]    Host: [ec2-54-160-246-44.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-2vq87b3g]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *lint-agent* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-agent=fail]    *lint-cli* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-cli=fail]    *lint-taskrunner* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-taskrunner=fail]    *lint-plugin* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-plugin=fail]    *lint-hostinit* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-hostinit=fail]    *lint-plugin-builtin-keyval* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-plugin-builtin-keyval=fail]    *lint-plugin-builtin-git* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-plugin-builtin-git=fail]    *lint-plugin-builtin-gotest* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-plugin-builtin-gotest=fail]    *lint-plugin-builtin-attach* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-plugin-builtin-attach=fail]    *lint-plugin-builtin-manifest* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-plugin-builtin-manifest=fail]    *lint-plugin-builtin-archive* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-plugin-builtin-archive=fail]    *lint-plugin-builtin-shell* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-plugin-builtin-shell=fail]    *lint-plugin-builtin-s3copy* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-plugin-builtin-s3copy=fail]    *lint-plugin-builtin-expansions* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-plugin-builtin-expansions=fail]    *lint-plugin-builtin-s3* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-plugin-builtin-s3=fail]    *lint-notify* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-notify=fail]    *lint-thirdparty* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-thirdparty=fail]    *lint-scheduler* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-scheduler=fail]    *lint-model* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-model=fail]    *lint-validator* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-validator=fail]    *lint-service* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-service=fail]    *lint-monitor* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-monitor=fail]    *lint-repotracker* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-repotracker=fail]    *lint-cloud-providers* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-cloud-providers=fail]    *lint-cloud-providers-vsphere* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-cloud-providers-vsphere=fail]    *lint-rest-client* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-rest-client=fail]    *lint-rest-data* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-rest-data=fail]    *lint-rest-route* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-rest-route=fail]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-1938","Bug","app",1,"APITask's TimeTaken and ExpectedDuration fields are in nanoseconds, not milliseconds","""*Problem background:* {{APITask}} defined in rest/model/task.go has fields named {{TimeTaken}} and {{ExpectedDuration}} that are of type {{time.Duration}}. The JSON tags (""""{{time_taken_ms}}"""" & """"{{expected_duration_ms}}"""") as well as the documentation describe them to be in milliseconds, but the code does not convert the values from nanoseconds to milliseconds.     1) In {{Task}} model, the values are set in nanoseconds.            - In {{func MarkEnd()}}, {{TimeTaken}} is set by doing {{t.TimeTaken = finishTime.Sub(t.StartTime)}}, which produces duration in an int64 nanosecond count.            - In {{func ExpectedTaskDuration()}}, {{ExpectedDuration}} is set by: {{expDuration := time.Duration(result.ExpectedDuration) * time.Nanosecond}}. {{result.ExpectedDuration}} is expected to be in nanoseconds, and since {{time.Nanosecond}} = 1, this does not convert the value correctly.     2) In APITask, the values from Task are carried over without conversion.          *Immediate Problem:* There is an inconsistency between the code and the JSON tag & documentation regarding time unit.     *Long-term Problem:* Since we would like {{TimeTaken}} and {{ExpectedDuration}} to be in ms instead of ns, the code should implement conversion. Moreover, in the process of data migration, existing data should also be converted accordingly.       """
"EVG-1937","Bug","app",1,"evergreen --help prints out help message twice","""Looks like there's extra logging going on.      Affects this version:  """
"EVG-1929","Task","app",1,"remove or revive Digital Ocean Host Provider","""We're using the old API for this provider, so any requests to them return """"API v1 has reached end-of-life. Please use API v2.""""    https://developers.digitalocean.com/documentation/changelog/api-v1/api-v1-end-of-life/"""
"EVG-1940","Task","ui",1,"Add a log viewer with rich functionality","""Currently evergreen allow to view logs as HTML or raw text.  Server developers can benefit from the additional functionality when investigating build failures.  Such functionality may be divided into the group that  needs server support and the group that does not  the latter include features:  - regexp filters on the log lines  - regexp search  - formatting BSON objects  - bookmarking   - hide columns  of the log  (vertical filtering)  - order by contents of columns of the log    the former is   - jump to the code line that printed the log message in github repo  - connect commands that spawn multiple processes (i.e mongos -> shard -> config server -> shard) etc    There is a POC of such viewer that implements   - regexp filters on the log lines and   - jumping to the code line that printed the log message    The POC is a client side react project so it can be easily added to evergreen log view buttons as a third option."""
"EVG-1941","Task","app",1,"evergreen metrics endpoints panic service","""saw this in staging after playing with the metrics endpoint: {{http: panic serving 52.21.89.200:61105: interface conversion: interface {} is route.taskMetricsArgs, not *route.taskMetricsArgs}}    """
"EVG-1943","Build Failure","app",1,"TestInvalidTimesAsKeyShouldError","""h2. [test-rest-route failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_rest_route_f7b33dbc7857ab39db8d8143d235e25fc96a551c_17_08_05_18_03_38/0]    Host: [ec2-54-146-26-86.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-ie7r75ig]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestInvalidTimesAsKeyShouldError* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-rest-route#TestInvalidTimesAsKeyShouldError=fail]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-1947","Improvement","ui",1,"Logkeeper shouldn't make everything italic in CSS","""This makes the output harder to read."""
"EVG-1944","Bug","app",1,"glide.lock file has errors: upgrade testify everywhere","""Vendoring dependencies works fine using glide as of 23f6a9d8e774f597faabae8b58b8c6020b3f79ef, but errors for later versions of glide (confirmed for version 0.13.0-dev installed with brew).    {panel:title=Error Message}  [ERROR] Failed to set version on github.com/davecgh/go-spew to 260b7a32dd8770eb5ba41da17d125914ae064ef8: Unable to update checked out version  [ERROR] Failed to set version on github.com/stretchr/objx to 260b7a32dd8770eb5ba41da17d125914ae064ef8: Unable to update checked out version  [ERROR] Failed to set version on github.com/stretchr/testify to 260b7a32dd8770eb5ba41da17d125914ae064ef8: Unable to update checked out version  [ERROR] Failed to set version on github.com/stretchr/objx to 260b7a32dd8770eb5ba41da17d125914ae064ef8: Unable to update checked out version  {panel}    Specifically, the glide.lock file uses the same commit hash for the 4 codebases above, and that commit hash does not actually exist in any of the codebases. We should find and replace those hashes with real commit hashes, and check that the lock file is compatible with newer versions of glide that catch this error."""
"EVG-1948","Build Failure","app",2,"race-proto failure","""h2. [race-proto failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_proto_21447c8c37c9f82b891a0f3c10a55a97de317e95_17_08_07_21_43_48/0]    Host: [ec2-54-80-90-168.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-ghw87a4j]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-1954","Bug","app",2,"Git get_project command creates wrong directory before cloning module","""The git get_project command, before cloning a module, runs a {mkdir -p}} ({{os.MkdirAll(...)}}) command on the path where it will clone the module repository.    The path used for {{mkdir}} does not match the path used to clone the module repository.    The path used for {{mkdir}} is: {{conf.WorkDir/module.Prefix/module.Name/...}}.  The path used to clone the module repository is: {{conf.WorkDir/Directory/module.Prefix/module.Name/}}, {{Directory}} being the directory where the project repository was cloned.    This does not impact the cloning of the module repository, but it leaves an unexpected empty path (e.g. {{mongo/db/modules/enterprise/}}) in the project directory that causes a error when trying to copy the {{mongo}} binary into the project directory."""
"EVG-1952","Task","app",1,"force http service to timeout large requests","""to avoid leaving request workers hanging when requests timeout. """
"EVG-1951","Task","app",1,"prioritize tasks that have spent more time in the queue. ","""to avoid the starvation case where tasks hang out in the middle of the queue."""
"EVG-1959","Bug","app",1,"A GET requests to /rest/v2/tasks/{task-id}/tests endpoint is returning 404","""Even though there are tests for a given task, this REST endpoint returns 404. For example:      This 404 error is returned in patch and mainline builds."""
"EVG-1975","New Feature","legacy-ui",1,"Add button to admin page to restart tasks that failed/system failed during the degraded period","""Expand on the functionality for bulk restarting of tasks that exists for versions and builds today."""
"EVG-1965","Improvement","app",2,"Modify Each Existing Runner Process to Check Flags Before Each Run","""Include each runner process listed in runner/registry.go as well as stopping task dispatching. """
"EVG-1962","Task","app",1,"increase batchtime massively for osx/zap builds","""also disable stepback for these variants. """
"EVG-1988","Improvement","app",2,"Junit errors must include system-out field","""The JUnit parser should include {{<system-out>}} from the test as well as the error.     For example, when you click the """"HTML"""" or """"Raw"""" for the failing test here: https://evergreen.mongodb.com/task/mms_int_INT_JAVA_MMS_027f21ea449448e16c29d4f8ffd8d5559badbc0b_17_08_14_14_21_29     You see only the {{<error>}} in https://evergreen.mongodb.com/test_log/mms_int_INT_JAVA_MMS_027f21ea449448e16c29d4f8ffd8d5559badbc0b_17_08_14_14_21_29/0/com.xgen.svc.mms.api.res.ApiUsersResourceIntTests.testDeleteUser not the {{<system-out>}}    Appending the {{<system-out>}} to the error output would be greatly useful. """
"EVG-1987","Bug","app",1,"Agent is hitting max open files on static boxes","""Even though max open files limit is high, I see evergreen agent hitting it      lsof output looks like this      agent logs"""
"EVG-1986","Build Failure","app",2,"TestSubtreeCleanup","""h2. [test-subprocess failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_subprocess_55bd39c7c3cbca05713203c10b07fd269ec80ab6_17_08_14_16_33_22/0]    Host: [ec2-54-227-224-67.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-a91i7sqh]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestSubtreeCleanup* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-subprocess#TestSubtreeCleanup=fail]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-1984","Bug","app",1,"Build Baron Jira plugin not working","""In the build baron plugin on a given evergreen task page, the plugin always returns """"No results found matching task or tests"""" rather than a list of related tickets."""
"EVG-1979","Task","app",2,"create ""service"" subcommand to start UI or API srever","""- could create symlinks or shell wrappers in the tarball, so we could begin the merged binary transition sooner.  - see if its easy to get rid of EVGHOME  """
"EVG-1978","Task","app",1,"services should log to standard out if no log file is configured","""(e.g. let the sytemd journal take everything, not have to log rotate on boxes) """
"EVG-1991","Bug","app",2,"Can't spawn hosts with a new key from the UI","""Saved keys work, and you can spawn with a new key from the CLI"""
"EVG-1997","Improvement","app",2,"Allow authenticated users to reconfigure other people's patches","""Every so often we have patches for WiredTiger drops or custom builds that need to have a variant or two added for testing or delivery purposes. When this happens, if the original author of the patch is not around we need an admin to do it.    I think it should be ok for users to reconfigure other people's patches."""
"EVG-1999","Problem Ticket","app",1,"Avoid removing task directory before the post-tasks run.","""I noticed that when a task gets aborted, the agent removes the task directory before the post-tasks run so if something in post-tasks tries to use a file or folder in the task directory, it will logically fail and the task will be marked as failed instead of aborted.    Example - https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_aggregation_WT_ese_27c4847e65a0162897ad72a3a39636ac7bd3cf67_17_08_14_21_52_45    It's not clear that this task was aborted though because of EVG-55, I just happen to know that the entire build was indeed aborted."""
"EVG-2003","New Feature","app",2,"log recent task statuses","""like /api/status/recent_tasks but to the log.     in the runner.     some reasonable task status """
"EVG-2002","Bug","app",2,"improve cancelation of runners ","""use more contexts"""
"EVG-2005","New Feature","legacy-ui",1,"add ability to abort build while unscheduling","""We already have this feature for versions; it would be nice to have it for builds as well."""
"EVG-2014","Bug","app",2,"Task history endpoint needs to do limits last in its query","""  {code:json}  [              {                  """"$match"""" : {                      """"branch"""" : """"mongodb-mongo-master"""",                      """"r"""" : """"gitter_request"""",                      """"$or"""" : [                          {                              """"details.timed_out"""" : {                                  """"$ne"""" : true                              },                              """"details.type"""" : {                                  """"$ne"""" : """"system""""                              },                              """"status"""" : {                                  """"$in"""" : [                                      """"failed""""                                  ]                              }                          }                      ],                      """"test_results.test_file"""" : {                          """"$in"""" : [                              """"jstests/sharding/config_version_rollback.js""""                          ]                      },                      """"start_time"""" : {                          """"$gte"""" : ISODate(""""2017-08-01T00:00:00Z"""")                      },                  }              },              {                  """"$limit"""" : 10              },              {                  """"$project"""" : {                      """"status"""" : 1,                      """"test_results"""" : 1,                      """"start_time"""" : 1,                      """"details"""" : 1,                      """"display_name"""" : 1,                      """"build_variant"""" : 1,                      """"execution"""" : 1,                      """"order"""" : 1,                      """"old_task_id"""" : 1,                      """"branch"""" : 1,                      """"gitspec"""" : 1,                      """"_id"""" : 1                  }              },              {                  """"$unwind"""" : """"$test_results""""              },              {                  """"$match"""" : {                      """"test_results.status"""" : {                          """"$in"""" : [                              """"fail""""                          ]                      },                      """"test_results.test_file"""" : {                          """"$in"""" : [                              """"jstests/sharding/config_version_rollback.js""""                          ]                      }                  }              },              {                  """"$sort"""" : {                      """"order"""" : -1,                      """"test_results.test_file"""" : -1                  }              },              {                  """"$project"""" : {                      """"lid"""" : """"$test_results.log_id"""",                      """"tdt"""" : """"$details.type"""",                      """"test_status"""" : """"$test_results.status"""",                      """"task_status"""" : """"$status"""",                      """"st"""" : """"$test_results.start"""",                      """"et"""" : """"$test_results.end"""",                      """"to"""" : """"$details.timed_out"""",                      """"tid"""" : """"$_id"""",                      """"r"""" : """"$gitspec"""",                      """"p"""" : """"$branch"""",                      """"tn"""" : """"$display_name"""",                      """"ex"""" : """"$execution.execution"""",                      """"url"""" : """"$test_results.url"""",                      """"tf"""" : """"$test_results.test_file"""",                      """"otid"""" : """"$old_task_id"""",                      """"url_r"""" : """"$test_results.url_raw"""",                      """"bv"""" : """"$build_variant""""                  }              }          ]  {code}  """
"EVG-2009","Build Failure","app",2,"test-proto failure",""" h2. [test-proto failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_proto_115cd9f9e9a6328579240810dc85839e2fbfb28e_17_08_25_00_27_39/0]  Host: [ec2-54-161-255-88.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-4av87v5h] Project: [mci|https://evergreen.mongodb.com/waterfall/mci]     ~BF Ticket Generated by [~brian.samek]~ """
"EVG-9651","Task","platform",1,"build system and test helpers for anser ","""e.g. port the makefile"""
"EVG-9612","Task","platform",2,"describe periodic job for cost reporting collection","""might involve application with mongodb backed amboy queue. """
"EVG-2186","Bug","app",1,"On Windows a GET request to Evergreen /status endpoint consistently returns after > 40 seconds. ","""As part of the buildscripts/collect_resource_info.py script to collect system resource usage info, we make a GET request to the /status Evergreen endpoint every 5 seconds. We expect this call to return immediately, however, based on our testing on Windows, it shows the request consistently takes over 40 seconds to return. Here is an example:    https://evergreen.mongodb.com/task/mongodb_mongo_master_windows_64_2k8_debug_off_replica_sets_initsync_static_jscore_passthrough_MMAPv1_patch_5dcaad5f137eebc1915c0fc7b5078da4aa86f915_59a0b8b8c9ec440568014edd_17_08_25_23_54_46#/log/S    In the {{System Resource Info - Execution 0}} link I've added a {{duration}} field to each document returned. This measures the time in seconds between sending the GET request and receiving the response."""
"EVG-2018","Build Failure","app",1,"lint-proto",""" h2. [lint failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_lint_c7175f35bd1976630705b06f8cdad85b46ed4735_17_08_28_13_45_50/0]  Host: [ec2-54-145-89-248.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-fvn869bh] Project: [mci|https://evergreen.mongodb.com/waterfall/mci]  *lint-proto* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-proto=fail]     ~BF Ticket Generated by [~brian.samek]~ """
"EVG-2015","Bug","app",2,"/tasks/<task_id>/tests endpoint does not form previous page correctly","""When querying for the previous page, we do a pipeline like this, which does not return the document that we want to start on within the results (in this case we started on TestGetDNSNameAPICall)        This returns the following document (the exact results of the previous query)  { """"line_num"""" : 1, """"exit_code"""" : 0, """"log_id"""" : """"598be3eb9dbe3244ba0000ab"""", """"test_file"""" : """"TestConfigureAPICall"""", """"start"""" : 1502340075, """"end"""" : 1502340075, """"status"""" : """"pass"""" }    However this gets filtered out by this block of code, so we never create the previous page      """
"EVG-2019","Bug","app",1,"Test Timeouts showing up as System Failures","""Test timeouts seem to still be showing up as purple after the changes [this commit|https://github.com/evergreen-ci/evergreen/commit/83b35bf8ccf358a0774ff32ff52943abb04cd689] (EVG-1872, EVG-1608)    https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_replica_sets_WT_ese_cee116558d7771b520c0fd4dd239c0a987dcc2ec_17_08_28_15_41_52    It's happening mostly with the the {{initial_sync_with_write_load.js}} test and seems to have started around August 23rd on RHEL 6 (but I haven't looked at enough data points to confirm this)"""
"EVG-2024","Bug","legacy-ui",1,"isprod flag in Evergreen settings file doesn't work","""The UI server is always setting it to true"""
"EVG-2027","Bug","legacy-ui",2,"Version errors (and probably warnings) don't display in UI","""On https://evergreen.mongodb.com/version/sys_perf_9a41a9d7cb22c29986fc3d66bb0a284c0b7c6c50#/0 the errors are supposed to display under the count of errors, but don't for some reason"""
"EVG-9584","Build Failure","platform",1,"TestSingleWorkerSuite","""h2. [race-pool failed on race-detector|https://evergreen.mongodb.com/task/amboy_race_detector_race_pool_91247c9ebc9bd4e33d44e920b3e44363777435ef_17_08_11_16_08_36/0]    Host: [ec2-54-197-120-146.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-43bi5jyg]  Project: [amboy|https://evergreen.mongodb.com/waterfall/amboy]    *TestSingleWorkerSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/amboy/race-pool#TestSingleWorkerSuite=fail]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-2036","Build Failure","app",2,"race-proto failure","""h2. [race-proto failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_proto_779d1fd69cb92952c1d5364b0050d7e5512a139a_17_09_08_19_59_14/0]    Host: [ec2-54-198-104-119.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-v3sg7mmk]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2034","Task","app",1,"remove shell script shims from evergreen deploy toolchain","""our deployed environments no longer depend upon them, so we should clean up the indirection. """
"EVG-2033","Improvement","app",2,"rest/v2/ endpoint for tasks by status in a recent time period","""default to 30m"""
"EVG-2032","Build Failure","app",1,"test-rest-client failure","""h2. [test-rest-client failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_rest_client_f645d805a3830c2a5ea747bb2a682d7e72e2f3bf_17_09_08_15_45_52/0]    Host: [ec2-54-211-227-89.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-x96r4qnj]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~john.liu]~  """
"EVG-2038","Task","app",2,"evergreen web service should host api and ui routes","""we can have a single service listen on more than one port for now and later remove one of the ports. """
"EVG-9675","Task","platform",2,"create model for aggregated/summation of bcr data ","""potentially directly from the database, rather than against the API to avoid credentials issues. """
"EVG-2049","Task","app",2,"select a default project if specified project name does not exist","""sites must default to *some* project. if the config file specifies a """"wrong"""" project, then we should pick the first project (or something similar.) """
"EVG-2041","Bug","app",2,"s3 command takes longer in new agent","""For example, [test-alerts took 20 seconds|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_alerts_cfbbe9b69bf097768e136a70abc6ad6dd62a7311_17_09_08_21_08_15] to run with the old agent but [2 minutes 22 seconds|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_alerts_7677ed72f6b91917629f50c40ae142b6c29346e3_17_09_09_02_54_17] to run with the new agent. The increase comes from the s3 puts:  """
"EVG-2070","Bug","app",1,"Intermittent s3.put failures for optional uploads","""In the sqlproxy project, we have been observing occasional s3.put failures for files marked as optional. See [here|https://evergreen.mongodb.com/task/sqlproxy_single_variant__os_single_variant~debian81_sign_0ffa9f806c9f9f07cdf653799d0e86b5821519fd_17_09_11_20_02_29] for an example.    [~adinoyi.omuya] took a look at the recent changes, and noted this:    it looks like taking the attach file logic out of the retry loop made it so that when a local file doesn't exist, an s3.put operation now fails:  see https://github.com/evergreen-ci/evergreen/blob/master/command/s3_put.go#L261 (what retry logic used to do)"""
"EVG-2067","Bug","app",1,"Messages written to the task logs don't have leading whitespace preserved","""I suspect the new Evergreen agent is doing something like calling {{strings.Trim()}} or {{strings.TrimSpace()}} instead of {{strings.TrimRight()}}.        https://evergreen.mongodb.com/task_log_raw/mongodb_mongo_master_enterprise_rhel_62_64_bit_aggregation_33cb4a950c5de3c1c783b25ecf0fd4454cce844a_17_09_12_17_37_00/0?type=T&text=true        https://evergreen.mongodb.com/task_log_raw/mongodb_mongo_master_enterprise_rhel_62_64_bit_aggregation_c31e309846609b4309a72868db7eafc189f839ca_17_09_01_21_51_14/0?type=T&text=true"""
"EVG-2076","New Feature","app",1,"evergreen patch should link to tasks when -f is given","""Currently, when you run an evergreen patch with the finalize option it gives you a link to the patch. Once you click on the link you are taken to a page which says:        Which is not what you really want if you are giving the --finalize flag. It should instead just link you directly to the tasks status page."""
"EVG-2074","Bug","app",2,"New Evergreen agent isn't performing task timeouts","""I noticed on the Evergreen waterfall page that there were fuzzer tasks taking 4 hours to run, but were considered """"failures"""" rather """"timeouts"""".        https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_debian71_64_jstestfuzz_sharded_WT_27471dc703ea0144ce4419d0bb59a4d092877d24_17_09_12_18_06_18        https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_windows_64_2k8_jstestfuzz_concurrent_replication_c5e038cb5e25cfdd4037534d34ce0d4e11f5c1ec_17_09_12_21_40_29    The """"jstestfuzz*"""" Evergreen tasks [set their {{exec_timeout_secs}} to 4 hours|https://github.com/mongodb/mongo/blob/27471dc703ea0144ce4419d0bb59a4d092877d24/etc/evergreen.yml#L138] and [set their {{timeout_secs}} to 30 minutes|https://github.com/mongodb/mongo/blob/27471dc703ea0144ce4419d0bb59a4d092877d24/etc/evergreen.yml#L131].    # It doesn't appear that the idle timeout is being triggered after 30 minutes of not seeing resmoke.py write anything to its stdout pipe.  # It doesn't appear that the """"timeout"""" section of the Evergreen project configuration file is being executed."""
"EVG-2073","Task","app",2,"add s390/POWER/ARM tests that use cross compiled binaries","""support for this *mostly* exists in the form of dist-test, but there's some CI changes that we'd need to make to make this a reality. """
"EVG-2071","Build Failure","app",1,"TestCommandTestSuite, TestShellExec","""h2. [test-proto failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_proto_a4f9cf75b2e2d9e51faba4d900730d82857e00d9_17_09_12_21_31_20/0]    Host: [ec2-54-211-4-223.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-9vcg7kjh]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestCommandTestSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-proto#TestCommandTestSuite=fail]    *TestShellExec* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-proto#TestShellExec=fail]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-2091","Problem Ticket","legacy-ui",2,"Host list is very slow","""https://evergreen.mongodb.com/hosts is very slow to load and respond when searching"""
"EVG-2088","Bug","app",1,"shell.exec should fail if directory does not exist","""I have the following in an EVG config:    {{post:      - command: shell.exec      params:        working_dir: mms/server        script: |           ...  }}    Some tasks however don't have the folder {{mms/server}}. As such they fail to run this post task and they hang for 15m before EVG shuts them down. We should see some error output and the next post task should run. See https://evergreen.mongodb.com/task/mms_unit_js_GITHUB_PR_START_3c19e4f2cf774c9c2dab6506cca89a7a45a286cd_17_09_15_17_55_02"""
"EVG-2086","Bug","app",1,"hang_analyzer doesn't appear to run in Windows","""Test suite timed out after running for ~6hrs    https://evergreen.mongodb.com/task/mongodb_mongo_master_windows_64_2k8_debug_sharding_patch_fe125855b6b3e8feb9d7d666338a7f2d29d301ad_59b9960ce3c3316a9e024b4a_17_09_13_20_33_28/0    There appears to be on output for hang analyzer and there was also no evidence that an attempt was made."""
"EVG-2085","Build Failure","app",2,"TestCommandTestSuite","""h2. [race-agent failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_agent_ce89b33b74493e60b49a3b85720f9c0e8b5ed397_17_09_15_15_01_53/0]    Host: [ec2-54-158-79-112.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-q79r7sth]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestCommandTestSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestCommandTestSuite=fail]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-2084","Build Failure","app",1,"TestFetchEBSPricing, TestEBSPriceCaching","""h2. [test-cloud-providers-ec2 failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_cloud_providers_ec2_cd6d70d2c248a96b3fa1f2a21ba025d536af5b16_17_09_15_13_41_22/0]    Host: [ec2-54-158-120-3.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-1fg86i1h]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestFetchEBSPricing* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-cloud-providers-ec2#TestFetchEBSPricing=fail]    *TestEBSPriceCaching* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-cloud-providers-ec2#TestEBSPriceCaching=fail]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-2083","Build Failure","app",1,"TestDirectoryCleanup","""h2. [test-agent failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_agent_28483b573e858d2164715f948b82c831bb86e2e9_17_09_14_23_01_10/0]    Host: [ec2-54-224-201-86.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-fy7g4nkg]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestDirectoryCleanup* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-agent#TestDirectoryCleanup=fail]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2100","Bug","app",1,"New Evergreen agent appears not to normalize Windows CRLF line endings","""There's an extra blank line after each line of output from {{wmic}}.        https://evergreen.mongodb.com/task_log_raw/mongodb_mongo_master_windows_64_2k8_debug_aggregation_WT_e49cbf575a9f8a867280d0a21c3da622700dc3f5_17_09_18_16_55_14/0?type=S&text=true"""
"EVG-2099","Build Failure","app",1,"Address race detector failures in agent tests","""h2. [coverage failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_coverage_61502934324cd17f6db77e5294fb91f37a94fd78_17_09_16_18_54_13/0]    Host: [ec2-54-198-34-242.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-ig7r634j]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2098","Improvement","app",2,"Pushing to a GitHub pull request should unschedule older patch builds","""(for that pull request, of the automatically configured kind.)    Maybe also only if they've not been modified. """
"EVG-2095","Bug","app",1,"avoid global mutable string variables in the global.go file","""there are a few, we should avoid this """
"EVG-2094","Bug","app",1,"remove legacy logger and loggingwriter","""which will let us get rid of our last slogger dependency. """
"EVG-2092","Bug","app",2,"Command timeout is being set after command finishes and is sometimes not set","""The original symptom of this problem is that the sys-perf project has purple instead of red tasks. The db has json.send in run test (step 4.2 of 6) as the last command run, but in fact steps 5, 6.1, and 6.2 succeeded. Step 6.3 failed.    Here is an example from the Evergreen self-tests.        Setting command timeout, which also sets the current command, should happen immediately after we log """"Running command %v (step..."""" and before we run the command. There may be a race between startIdleTimeoutWatch() and checkIn(), since startIdleTimeoutWatch() calls checkIn(). startIdleTimeoutWatch() sends on the same channel it's listening on, which could conceivably cause unpredictable behavior. Since checkIn() uses a non-blocking send, a deadlock could cause it not to set tc.currentCommand. """
"EVG-9400","Bug","platform",1,"It's possible for grip to panic when trying to send a long message","""At around 10 pm last night, the taskrunner kept hitting panics when trying to log a large error string related to starting agents:        From what I could see from splunk, it was trying to start agents on about 100 hosts (though it's possible only a fraction of those errored). I tried to reproduce this with grip logging 50000 lines to stdout but was unsuccessful"""
"EVG-2104","Improvement","app",1,"display Build URL in evergreen patch summary only for finalized patches","""For unfinalized submitted patches, the Build URL simply links to a page with the text """"not found"""" and so isn't useful.  Putting the Build URL next to the Configure [patch] URL makes it harder to click on them."""
"EVG-2103","New Feature","app",2,"Add endpoint for host statistics","""This came out of a post-mortem of EVG-1990. This endpoint should provide host statistics so that the status page can alert for incidents of this type."""
"EVG-2107","New Feature","legacy-ui",1,"notification banner should be dismissable","""and remember that i dismissed it in localStorage or a cookie or something"""
"EVG-2105","Bug","ui",2,"Logkeeper inserts test and global logs with wrong start time","""A [commit|https://github.com/evergreen-ci/logkeeper/commit/4d1eecad89a349fcadf765690cbdc877fee99d57#diff-100d281dce5be5551efb680a8617d493] to fix lint errors changed this function:        to this:        In the changed example, Go's zero value for time, January 1, year 1, is always returned, because earliest starts at this zero value, and no time can be earlier than this. This function sets the value of the started field in the log document. There is a 365 day TTL index on this field, so the documents were successfully inserted and then deleted by MongoDB, since the value in the started field was older than 365 days."""
"EVG-2111","Bug","app",2,"command timeout appears to not work","""In a task that was run the command did not timeout after two hours of idle output. The command only timed out after the task hit the 6 hour task timeout.    +Expected Result:+  After the command did not log any lines to evergreen for 2 hours, the command would be terminated.    Task: https://evergreen.mongodb.com/task/mongodb_mongo_master_windows_64_2k8_debug_auth_48cdb7d69246339e097bf23ec0e6b9187a3f9221_17_09_21_06_03_29/0  Log File: https://evergreen.mongodb.com/task_log_raw/mongodb_mongo_master_windows_64_2k8_debug_auth_48cdb7d69246339e097bf23ec0e6b9187a3f9221_17_09_21_06_03_29/0?type=T&text=true    +Selected log lines:+      References  https://jira.mongodb.org/browse/BF-6631"""
"EVG-2110","Bug","app",1,"Agent panics on zSeries when getting error response from api server","""We've seen this problem across all the zSeries boxes (rhel6/7, sles11/12, ubuntu1604) in the past few days.    Agent panics from time to time and the last line in logs is error response from api server like this      As [~brian.samek] suggested, I run the agent in the foreground to get more details and I see this runtime error now      This is from a rhel67-z box."""
"EVG-2109","Improvement","app",1,"EVG does not give a useful error message when aws_key/aws_secret are blank","""This came up as part of the timezone project, where an evergreen project was created to publish a timelib build artifact to the s3 bucket downloads.mongodb.org. A sample patch build is below, where the s3.put task appears to complete successfully yet the files do not get pushed:    https://evergreen.mongodb.com/task/mongodb_olsen_timezones_linux_64_compile_patch_20f042bac80a25384ed877ea032f84cdd694a1da_59c2a736e3c33124a8001a2f_17_09_20_17_37_46"""
"EVG-2114","Build Failure","app",1,"lint failure","""h2. [lint failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_lint_1ac5afb5168e9d565fb732bfaeae96d5925da84d_17_09_21_19_38_19/0]    Host: [ec2-54-205-80-112.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-4ybi5agj]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2113","Bug","app",2,"golang: Single test failure marks all other tests with same name as failed","""See: https://evergreen.mongodb.com/task/stitch_cloud_prod_linux_64_tests_without_cloud_c217911122ce24c6446811aa3da471378e9741b0_17_09_22_16_39_58    The {{TestStageMetrics}} test only failed for our twilio service but other services that use the same name passed but are marked as failed."""
"EVG-2112","Task","legacy-ui",1,"Upgrade angular version to 1.6.6","""current version is 1.3.9"""
"EVG-2115","Task","app",2,"add terminate spawnhost route to new api and refactor cli accordingly","""the spawnhost termination route is only in the UI server because it depends on the settings object (which rest/v2 doesn't have access to.)     we should make sure that we have enough ways to populate routes that we can get access to this if we need to.     I think we should wait to do this until later when the settings object is loadable from the database, and we have moved to a middleware-based security model (I think this will be true when we start using gimlet and have an anser-like Environment concept). """
"EVG-2118","Build Failure","app",1,"s3.put times out after many hours without any diagnostic information","""toolchain-builder tasks are timing out while running     +Task+  https://evergreen.mongodb.com/task/toolchain_builder_debian71_compile_8bee304eec313fd501bc673c13321446a4154653_17_09_20_16_03_07    +Task Logs:+:      +Agent Logs+      This is also occuring on other tasks:  https://evergreen.mongodb.com/task/toolchain_builder_debian81_compile_8bee304eec313fd501bc673c13321446a4154653_17_09_20_16_03_07  https://evergreen.mongodb.com/task/toolchain_builder_rhel62_compile_8bee304eec313fd501bc673c13321446a4154653_17_09_20_16_03_07"""
"EVG-2117","Bug","app",2,"Some tasks have incomplete system logs","""I've noticed that some tasks have incomplete system logs like no ps, df output.    It's inconsistent though, same task can be ok on one commit and miss system logs on the other.  I also don't see a correlation between this problem and a task being green or red."""
"EVG-2116","Bug","app",1,"Recent tasks rest v2 endpoint returns null tasks in verbose mode","""https://evergreen.mongodb.com/rest/v2/status/recent_tasks?minutes=15 works, but https://evergreen.mongodb.com/rest/v2/status/recent_tasks?minutes=15&verbose=true does not."""
"EVG-2126","Problem Ticket","app",2,"zombie task invasion","""https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_jstestfuzz_sharded_session_WT_patch_7765cbafc5ab73262ce8d233c2410194b6bba1d7_59cbeaf4e3c3312ab20012c2_17_09_27_18_16_41"""
"EVG-2124","Problem Ticket","app",1,"setupReadyHosts runs only a handful of times per hour at peak load","""Overnight setupReadyHosts runs every 20 seconds, but during the day it can take more than 30 minutes between runs. This is presumably causing delays in spawnhost creation. It can also cause hosts to be reaped by Evergreen because they are not set up quickly enough."""
"EVG-2123","Bug","legacy-ui",1,"Unable to spawn hosts and currently spawned hosts are not showing","""When I go to to spawn a host I have an empty public key in the dropdown and see this message:    {quote}  You cannot spawn a host because there are no spawnable distros.  {quote}    I have a spawned host currently running from this morning, but it doesn't show up on the spawn host page:    ec2-54-81-41-251.compute-1.amazonaws.com"""
"EVG-2130","Bug","app",1,"json.send command is failing","""A number of the tests are failing due to system failures with a 'System Timed out' status.    For example, one of the task logs contains:     """
"EVG-2129","Build Failure","app",1,"lint failure","""h2. [lint failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_lint_5574d71c7305785f9574b167f99e5bce6ed4494e_17_09_27_21_16_12/0]    Host: [ec2-54-224-255-41.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-krkg4hik]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2128","Task","app",1,"use standard library contexts, and remove legacy contexts ","""this also means we can remove gorilla contexts"""
"EVG-2134","Bug","legacy-ui",2,"Accessing resources that can be filtered via direct URL is broken","""When I want to view certain distros on the hosts page by opening a direct URL like https://evergreen.mongodb.com/hosts#/filter/rhel70-small, I get redirected to https://evergreen.mongodb.com/hosts#!/filter/#%2Ffilter%2Frhel70-small page that loads all the hosts.  It applies to all the distros, not just rhel70-small.    I normally jump to those urls from https://evergreen.mongodb.com/task_queue where each distro has """"view hosts"""" shortcut.    Same problem occurs when trying to jump from a scheduled task to the task queue it's in by clicking the """"Nth in queue"""" link on the task's page.  For example, URL it's taking me to is https://evergreen.mongodb.com/task_queue#/#mongodb_mongo_master_ubuntu1604_debug_ubsan_tool_e977f79fb37f7c6608bcfa7df81932b302285a57_17_09_29_13_40_59 and I get redirected https://evergreen.mongodb.com/task_queue/#!#%2F%23mongodb_mongo_master_ubuntu1604_debug_ubsan_tool_e977f79fb37f7c6608bcfa7df81932b302285a57_17_09_29_13_40_59 and it loads the entire page without taking me to the exact task like it used.    P.S. I had hard time coming up with the ticket summary, feel free to change to something that makes sense. """
"EVG-2132","Bug","app",2,"Evergreen overdelivering notifications","""Since the recent change to simplify the logic around notification delivery it looks like we're generating notifications in cases where we should not be.  Looking at this query:    https://jira.mongodb.org/issues/?jql=project%20%3D%20BFG%20AND%20text%20~%20%22%5C%22multiversion_auth%20on%20~%20ASAN%20Enterprise%20SSL%20Ubuntu%2016.04%20DEBUG%20(downgrade_replset.js)%5C%22%22    All of these notifications are for the same task, same test, same buildvariant and different commits.  Given that the logic is supposed to send only one notification every 48 hours for such a combination, the fact that we are sending upwards of 10 per day seems like a bug."""
"EVG-2139","Task","app",2,"subprocess.RemoteCommand's wait may not work. ","""We observe commands hitting the time out and then, when we call """"kill"""" on the command (to prevent zombie ssh sessions,) we report that the command is not running, and then when trying to reproduce commands we find that commands that take ~minutes in evergreen take 10s of seconds manually.     RemoteCommand isn't (well?) tested (we don't have a suitable integration environment, it's difficult to mock this component. It may make sense to replace it, or replace its internals, entirely. """
"EVG-2137","Task","app",2,"slow provisioning should use AWS started time not created_time","""created_time is subject to fluctuations in runner throughput and inter-runner interaction, and being too aggressive here can lead to hosts getting terminated too soon. """
"EVG-2152","Bug","app",2,"Hang analyzer no longer runs for hanged tasks/missing hang analyzer output","""While trying to diagnose BF-5821, I noticed that the hanged tasks were missing their hang analyzer output in the task log: https://evergreen.mongodb.com/task/mongodb_mongo_master_ubuntu1604_debug_asan_multiversion_multistorage_engine_4f5ec27ba25abb13e554721d65aa1c91100bca5e_17_09_29_22_38_23. I also noticed that the hang analyzer only ran for 57 microseconds, which seems like far too few microseconds let alone seconds to actually analyze the hang."""
"EVG-2151","Build Failure","app",1,"TestSetupReadyHosts","""h2. [test-hostinit failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_hostinit_70b94443c8afabb6f2bcf3c27b8882e895dadb05_17_10_02_17_54_19/0]    Host: [ec2-54-80-104-127.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-fwkg4yek]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestSetupReadyHosts* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-hostinit#TestSetupReadyHosts=fail]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2150","Build Failure","app",1,"TestS3CopyPluginExecution","""h2. [test-command failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_command_70b94443c8afabb6f2bcf3c27b8882e895dadb05_17_10_02_17_54_19/0]    Host: [ec2-54-166-203-175.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-jfir4mvj]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestS3CopyPluginExecution* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-command#TestS3CopyPluginExecution=fail]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2149","Build Failure","app",1,"test-cli failure","""h2. [test-cli failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_cli_70b94443c8afabb6f2bcf3c27b8882e895dadb05_17_10_02_17_54_19/0]    Host: [ec2-54-81-214-176.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-3gi87mng]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2146","Bug","legacy-ui",1,"Evergreen /task_history page modifies window.location.hash in a way that makes URL non-copyable from location bar","""Clicking the {{server8070.js}} link on [this task page|https://evergreen.mongodb.com/task/mongodb_mongo_master_rollback_3dot4_rhel_62_replica_sets_ac9d5702568845898659dfee662ce05320ce13e7_17_10_02_13_37_58] links to https://evergreen.mongodb.com/task_history/mongodb-mongo-master/replica_sets?revision=ac9d5702568845898659dfee662ce05320ce13e7#server8070.js=fail; however, after the page loads the {{window.location.hash}} is modified to be """"\!#server8070.js=fail"""" and is interpreted as highlighting cases where the {{\!#server8070.js}} test failed upon reload."""
"EVG-2145","Bug","legacy-ui",2,"Fix time picker on admin settings page","""It was removed in EVG-2123"""
"EVG-2144","New Feature","app",1,"Evergreen smoke test","""This smoke test will run as part of our test suite in Evergreen. It will:  # Start the runner and the web service.  # Start a container for the agent.  # Insert some data into the database.  # Run a project config containing a minimal example of each command."""
"EVG-2165","Bug","legacy-ui",1,"""raw"" logs aren't working properly","""e.g.    https://evergreen.mongodb.com/test_log/59d3d30b2a60ed21b400070e?raw=1    Renders like this:   !image-2017-10-03-18-02-45-006.png|thumbnail!     It looks like the response headers have Content-type: text/html,   but it should be text/plain."""
"EVG-2164","Improvement","app",1,"Rename distro.Distro.Id's JSON field name from '_id'","""Change '_id' to a more appropriate name."""
"EVG-2162","Bug","app",1,"Agent still cleaning up .ssh directory on Windows","""https://evergreen.mongodb.com/host/sir-2rm87wfh    problem running taskrunner: problem starting agent on host sir-2rm87wfh: error prepping remote host sir-2rm87wfh: error creating directories on remote machine: Warning: Permanently added 'ec2-54-166-21-78.compute-1.amazonaws.com,54.166.21.78' (RSA) to the list of known hosts.  Permission denied (publickey,gssapi-keyex,gssapi-with-mic).  : exit status 255  problem starting agent on host sir-rbfg6yvh: error prepping remote host sir-rbfg6yvh: error creating directories on remote machine: ssh: connect to host ec2-54-162-206-86.compute-1.amazonaws.com port 22: Connection timed out  : exit status 255  problem starting agent on host sir-p5ir6d2k: error prepping remote host sir-p5ir6d2k: error creating directories on remote machine: ssh: connect to host ec2-54-166-129-183.compute-1.amazonaws.com port 22: Connection timed out  : exit status 255"""
"EVG-2161","Task","app",1,"change notify email presentation type","""make them actually text emails; remove the <@ from the subject line; etc.    (these are the internal emails"""
"EVG-2159","Improvement","app",1,"Add debug build to Evergreen Makefile","""Update Makefile to add a debug build option that will  * leave debug symbols (remove """"-w"""" from ldflags)  * Disable inlining and optimisations: (Add to go build: -gcflags """"-N -l"""")  for debugging with GDB."""
"EVG-2155","Improvement","app",2,"Evergreen should be more robust to disabled projects","""* The next_task endpoint should not return tasks for projects which are missing or disabled  * The scheduler shouldn't enqueue tasks from missing or disabled projects"""
"EVG-2154","Build Failure","app",1,"lint failure","""h2. [lint failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_lint_c660df7721c3a2cd04d29ce3126bf9fe5d4035aa_17_09_28_14_50_08/0]    Host: [ec2-54-198-160-83.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-995847nh]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2174","Bug","app",2,"Correctly handle scenarios where EC2 cancels spot requests","""The spot instance request ID 'sir-rbfg6yvh' does not exist (InvalidSpotInstanceRequestID.NotFound)  github.com/evergreen-ci/evergreen/cloud/providers/ec2.(*EC2SpotManager).describeSpotRequest   /data/mci/3c3159ed41cb07b22be02ed0dd51e90f/gopath/src/github.com/evergreen-ci/evergreen/cloud/providers/ec2/ec2spot.go:373  github.com/evergreen-ci/evergreen/cloud/providers/ec2.(*EC2SpotManager).GetInstanceStatus   /data/mci/3c3159ed41cb07b22be02ed0dd51e90f/gopath/src/github.com/evergreen-ci/evergreen/cloud/providers/ec2/ec2spot.go:161  github.com/evergreen-ci/evergreen/cloud.(*CloudHost).GetInstanceStatus   /data/mci/3c3159ed41cb07b22be02ed0dd51e90f/gopath/src/github.com/evergreen-ci/evergreen/cloud/cloud.go:191  github.com/evergreen-ci/evergreen/monitor.checkHostReachability   /data/mci/3c3159ed41cb07b22be02ed0dd51e90f/gopath/src/github.com/evergreen-ci/evergreen/monitor/host_monitoring.go:97  github.com/evergreen-ci/evergreen/monitor.monitorReachability.func1   /data/mci/3c3159ed41cb07b22be02ed0dd51e90f/gopath/src/github.com/evergreen-ci/evergreen/monitor/host_monitoring.go:58  runtime.goexit   /opt/go/src/runtime/asm_amd64.s:2086  failed to get spot request info for sir-rbfg6yvh  github.com/evergreen-ci/evergreen/cloud/providers/ec2.(*EC2SpotManager).GetInstanceStatus   /data/mci/3c3159ed41cb07b22be02ed0dd51e90f/gopath/src/github.com/evergreen-ci/evergreen/cloud/providers/ec2/ec2spot.go:163  github.com/evergreen-ci/evergreen/cloud.(*CloudHost).GetInstanceStatus   /data/mci/3c3159ed41cb07b22be02ed0dd51e90f/gopath/src/github.com/evergreen-ci/evergreen/cloud/cloud.go:191  github.com/evergreen-ci/evergreen/monitor.checkHostReachability   /data/mci/3c3159ed41cb07b22be02ed0dd51e90f/gopath/src/github.com/evergreen-ci/evergreen/monitor/host_monitoring.go:97  github.com/evergreen-ci/evergreen/monitor.monitorReachability.func1   /data/mci/3c3159ed41cb07b22be02ed0dd51e90f/gopath/src/github.com/evergreen-ci/evergreen/monitor/host_monitoring.go:58  runtime.goexit   /opt/go/src/runtime/asm_amd64.s:2086 """
"EVG-2171","Task","app",1,"Please reduce the default tag expiration time for hosts from 90 days to 10 days","""90 days seems to be too much in excess for host expiration and would like to reduce it to a more reasonable number."""
"EVG-2169","Bug","app",2,"Agent was unable to kill running process","""2 tasks within a patch build timed out. I don't believe that either should have hit the time limit."""
"EVG-2167","Task","app",2,"application environment accessors","""wrap existing settings options     anser/sink style"""
"EVG-2177","Task","app",2,"migrate periodic background jobs to amboy services internally","""this is mostly to just reduce the nubmber of random one-off background threads, and to help us build confidence in amboy within evergreen.     I'm mostly thinking about the data collection threads that log recent task statuses to splunk along with application and system statistics collection """
"EVG-2189","Bug","app",2,"gopsutil doesn't collect cpu_times on Windows","""{quote}  * Collect system resource usage data for all supported host types (e.g. ZaP and Intel; Windows, Solaris, Linux and Darwin)  * Collect CPU, IO, and Memory usage for all processes spawned by a task, stored on a per-process level, (for tasks that spawn many processes).  ** The parent process ID of each process spawned by the task will also be included in this information.  {quote}    The """"cpu"""" field for all processes on Windows is being reported as an object containing all 0's, so I don't think the work for collecting this metric happened. There was an idea of taking the code for the automation agent and upstreaming it to {{gopsutil}}.    http://evergreen.mongodb.com/api/rest/v2/tasks/mongodb_mongo_master_windows_64_2k8_debug_sharding_WT_155db509a8e376211095cec062f7aa5be1b7707e_17_10_08_00_36_06/metrics/process?start_at=%222006-01-02T15:04:05.000Z%22"""
"EVG-2188","Bug","app",2,"gopsutil doesn't collect io_counters on OS X","""{quote}  * Collect system resource usage data for all supported host types (e.g. ZaP and Intel; Windows, Solaris, Linux and Darwin)  * Collect CPU, IO, and Memory usage for all processes spawned by a task, stored on a per-process level, (for tasks that spawn many processes).  ** The parent process ID of each process spawned by the task will also be included in this information.  {quote}    The """"writeBytes"""" field for all processes on OS X is being reported as 0, so I don't think the work for collecting this metric happened. There was an idea of taking the code for the automation agent and upstreaming it to {{gopsutil}}.    http://evergreen.mongodb.com/api/rest/v2/tasks/mongodb_mongo_master_osx_1010_debug_aggregation_WT_155db509a8e376211095cec062f7aa5be1b7707e_17_10_08_00_36_06/metrics/process?start_at=%222006-01-02T15:04:05.000Z%22"""
"EVG-2197","Build Failure","app",1,"race-agent failure","""h2. [race-agent failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_agent_d57aa60195b8cfb0e03a19a7f0430cdd639db8aa_17_10_10_15_44_43/0]    Host: [ec2-54-166-157-83.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-zs1g5kkj]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2196","Build Failure","app",1,"test-agent failure","""h2. [test-agent failed on windows|https://evergreen.mongodb.com/task/mci_windows_test_agent_d57aa60195b8cfb0e03a19a7f0430cdd639db8aa_17_10_10_15_44_43/0]    Host: [ec2-54-197-96-19.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-se5i7mpg]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2195","Bug","app",2,"'evergreen test-history' returning old data","""Running this command:        Gives me the following results:        I would have expected some of the more recent failures (like any of these: BF-5239) to show up in this command.    It seems like either I'm inputting the wrong command here (and there's a sort which isn't listed in the --help?) or that this command is sorting the wrong way?"""
"EVG-2193","Bug","app",1,"Evergreen isn't respecting timeout_secs as part of command settings","""The {{concurrency*}} tasks run a JavaScript test that runs other JavaScript tests. Since resmoke.py won't produce output until the outer JavaScript test finishes, we've increased the {{timeout_secs}} setting to what we'd ordinarily use for the entire task. For example, [the """"idle timeout"""" for the {{concurrency_sharded_with_stepdowns_and_balancer_WT}} is set to 6 hours|https://github.com/mongodb/mongo/blob/f74896d9aae90d0b31eeb06f37f59ca386c03570/etc/evergreen.yml#L3603].    {code:yaml}  - <<: *task_template    name: concurrency_sharded_with_stepdowns_and_balancer_WT    commands:    - func: """"do setup""""    - func: """"run tests""""      timeout_secs: 21600 # 6 hour timeout for each test      vars:        resmoke_args: --suites=concurrency_sharded_with_stepdowns_and_balancer --storageEngine=wiredTiger  {code}    However, the Evergreen tasks are timing after running for 2 hours without resmoke.py producing any output.    {quote}  2h 5m 7s  Started on Oct 10, 2017 1:07:21 am  Finished on Oct 10, 2017 3:12:29 am    https://evergreen.mongodb.com/task/mongodb_mongo_master_windows_64_2k8_debug_concurrency_sharded_with_stepdowns_and_balancer_WT_63a1ed132fce92bca57845879f4bb25e44c92874_17_10_10_00_23_21  {quote}    The [task timing for the {{concurrency_sharded_with_stepdowns_and_balancer_WT}} task|https://evergreen.mongodb.com/task_timing/mongodb-mongo-master#/project=mongodb-mongo-master&buildVariant=windows-64-2k8-debug&taskName=concurrency_sharded_with_stepdowns_and_balancer_WT&requester=gitter_request&limit=100&onlySuccessful=false] shows that it started to time out after the deploy from Oct 5th that includes the changes from EVG-2152. [~sam.kleinman] and I did some debugging Oct 9th together and identified a line in {{agent/command.go}} that was always setting the command's timeout to {{defaultIdleTimeout}} (= 2 hours); however, even with [Sam's changes|https://github.com/evergreen-ci/evergreen/commit/886d894ef477d37afccda47cff3d1b5ee7fb5e35], the {{timeout_secs}} still appears to not be getting respected.    h6. Agent logs    The """"agent logs"""" show that the Evergreen agent is incorrectly setting the command timeout to 2 hours.    """
"EVG-2206","Improvement","app",1,"Taskrunner should log when it is dispatching an agent to an uncommunicative host","""[Currently|https://github.com/evergreen-ci/evergreen/blob/85790be675d892f39a74d66b2204f67aad053fa7/taskrunner/task_runner.go#L44], we do not make a distinction between three cases:  # Hosts which have never had an agent running.  # Agents which have aborted gracefully (because, for example, we have upgraded Evergreen).  # Agents which have not checked in in greater than MaxLCTInterval.    In the third case we should log that this has happened, as it indicates that an agent may have exited due to an unexpected error or panic."""
"EVG-2204","Build Failure","app",1,"lint failure","""h2. [lint failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_lint_ca6ea0c0879d9ac5489e094e67d8fe6daad6803b_17_10_11_14_47_30/0]    Host: [ec2-54-205-214-155.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-btai4dwj]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2201","Task","app",1,"add alert for underwater distro schedule","""log alert if expected runtime for a distro at maxhosts is more than day (more than a week for statics?) """
"EVG-2208","Build Failure","app",1,"race-agent failure","""h2. [race-agent failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_agent_69487ae236457d78fd37f604464f442eb2766c27_17_10_12_14_19_23/0]    Host: [ec2-54-161-145-173.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-y9mg7vrj]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2209","Build Failure","app",1,"race-agent failures","""h2. [race-agent failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_agent_27f512e14a34247d213456c605bb547f06467879_17_10_13_04_12_42/0]    Host: [ec2-54-205-148-172.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-kmdi744h]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestAgentIntegrationSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentIntegrationSuite=fail]    *TestAgentIntegrationSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentIntegrationSuite=fail]    *TestAgentIntegrationSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentIntegrationSuite=fail]    *TestAgentIntegrationSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentIntegrationSuite=fail]    *TestRunTask* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestRunTask=fail]    *TestRunTask* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestRunTask=fail]    *TestRunTask* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestRunTask=fail]    *TestRunTask* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestRunTask=fail]    *TestAgentIntegrationSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentIntegrationSuite=fail]    *TestRunTask* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestRunTask=fail]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2214","Improvement","app",1,"Runners should log when they finish running","""We alert if a runner has not run in the last 10 minutes based on logging that each runner does when it starts. We should also log when each runner process finishes so that we can detect stalls or panics in the middle of an agent run. """
"EVG-2218","Task","perf-tools",1,"Make trend view the default view for performance patch builds (sys-perf and microbenchmarks)","""Can we make the trend view the default for patch builds in the perf plugin? The trend view makes it easier to see if the change due to the patch is significant or not based on historical data. """
"EVG-2228","Bug","legacy-ui",1,"Can't decommission hosts from hosts page","""Clicking the button appears to noop."""
"EVG-2232","Task","app",1,"Populate git hash field in BF and BFG jira projects","""I added a """"Git Hash"""" field to the BF and BFG projects - can we make sure this gets populated with the git hash ID when a ticket gets generated?    cc [~max.hirschhorn] [~david.daly] Would it be best to use the short or long git hash ID?"""
"EVG-2230","Bug","app",2,"Agent should heartbeat before starting the heartbeat ticker","""Otherwise, it will not heartbeat during tasks that take less than 30 seconds. If it runs many of these in a row, it may never heartbeat."""
"EVG-2241","Build Failure","app",2,"TestParserOnRealTests","""{color:red}colored text{color}h2. [test-command failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_command_20af791587220d4de3e5e52d7191808d8ed82716_17_10_24_14_12_33/0]    Host: [ec2-54-204-66-74.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-vj9r43bj]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestParserOnRealTests* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-command#TestParserOnRealTests=fail]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2240","Build Failure","app",2,"TestSetupReadyHosts","""h2. [test-hostinit failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_hostinit_20af791587220d4de3e5e52d7191808d8ed82716_17_10_24_14_12_33/0]    Host: [ec2-54-161-232-14.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-xmdr743k]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestSetupReadyHosts* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-hostinit#TestSetupReadyHosts=fail]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2239","Build Failure","app",2,"TestEnvironmentSuite, TestLoadingConfig","""h2. [test-evergreen failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_evergreen_20af791587220d4de3e5e52d7191808d8ed82716_17_10_24_14_12_33/0]    Host: [ec2-54-204-104-120.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-f3k845tk]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestEnvironmentSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-evergreen#TestEnvironmentSuite=fail]    *TestLoadingConfig* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-evergreen#TestLoadingConfig=fail]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-2265","New Feature","app",2,"add direct-to-slack logger for Alert/Emergency messages","""we'll need to get bot credentials"""
"EVG-2262","Build Failure","app",1,"lint-cli, lint-model-task, lint-taskrunner","""h2. [lint failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_lint_ebf6771fae3f87e6f859fe300ca63d5b903209d5_17_10_24_21_47_56/0]    Host: [ec2-54-204-243-118.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-x9y84pbk]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *lint-cli* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-cli=fail]    *lint-model-task* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-model-task=fail]    *lint-taskrunner* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/lint#lint-taskrunner=fail]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-2260","New Feature","app",1,"avoid running second mkdir if there is no setup script","""in taskrunner/host_gateway.go"""
"EVG-2258","Bug","legacy-ui",1,"Nil pointer when viewing first execution of a 1 execution task","""  """
"EVG-2268","New Feature","app",1,"terminate idle linux ephemeral hosts more quickly","""given secondly billing, and the fact that starting hosts is now much quicker, keeping idle hosts around for longer doesn't feel particularly useful."""
"EVG-2266","Problem Ticket","app",2,"Evergreen spawned host failed to load task artifacts","""I spawned a Windows hosts from the this task (twice) and selected to load the artifacts. The host came up without the artifacts:  """
"EVG-2275","Bug","app",1,"Teardown fails to trigger teardown of DSI cluster","""I don't know how to prove this one way or the other - but this is an example of a machine that was torn down but the DSI infrastructure was not torn down:    https://evergreen.mongodb.com/host/i-02a8b54c1e6d5fffa    [~david.daly]    If this is in fact an Evergreen issue then we need to move this over to Evergreen. """
"EVG-2278","New Feature","app",2,"audit and cleanup evergreen service/runner application process ","""to avoid interactions with other processes:   - loggers should be setup first and have teardown last (maybe move them into the environment.)   - potentially wait for some period of time for the local queue to drain.   """
"EVG-9367","Bug","platform",1,"amboy/anser should use mongodb's mgo fork ","""so that we can support change streams """
"EVG-2291","New Feature","app",1,"task runner should add an event to the hosts event log when it deploys a new agent","""including the hash"""
"EVG-2286","New Feature","app",1,"Cleanup util/spawn/remote packages","""There's a bunch of dead code that misses the linter's because it's public, this ticket is a cleanup bucket. """
"EVG-9544","New Feature","platform",2,"Capability to monitor all processes on Windows","""Curator has the capability ot monitor all processes on Linux using      For Windows this cannot be done. It would be better having a new option to monitor all processes, perhaps {{curator stat process --all-pid}}."""
"EVG-9542","New Feature","platform",2,"Curator --file option should handle existing file better","""Logging the ouput of curator with the --file option will overwrite an existing file. It should append to it. Perhaps another option could control this behavior."""
"EVG-9513","New Feature","platform",1,"Curator process and system resource monitoring should not require AWS credentials","""We are using curator just for system and process resource monitoring.    When started on a non-Evergreen launched node, the following message shows up in stdout:  """
"EVG-9331","Bug","platform",1,"Curator warings/errors should be logged to stderr","""See MAKE-290 for how a warning gets generated. When a warning is produced it ends up in stdout/JSON file, it should go to stderr."""
"EVG-2298","Bug","app",1,"Some spawn hosts are not provisioning","""Debian and Amazon spawnhosts, and possibly others, are failing to provision. setup.sh is correctly being placed in the user's home directory. However, Evergreen attempts to run the setup script in _root's_ home directory. This presumably only affects spawnhosts because running the setup script uses a different code path for build hosts."""
"EVG-2297","Build Failure","app",1,"race-agent failures","""h2. [race-agent failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_agent_8d1cd0f9dbb7a744edbb9cdc1a379f8cf59a85db_17_11_02_18_25_58/0]    Host: [ec2-54-221-151-108.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-wm9r7w3h]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestAgentSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentSuite=fail]    *TestAgentEndTaskShouldExit* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentEndTaskShouldExit=fail]    *TestAgentSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentSuite=fail]    *TestAgentEndTaskShouldExit* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentEndTaskShouldExit=fail]    *TestAgentSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentSuite=fail]    *TestAgentEndTaskShouldExit* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentEndTaskShouldExit=fail]    *TestAgentSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentSuite=fail]    *TestAgentEndTaskShouldExit* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentEndTaskShouldExit=fail]    *TestAgentSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentSuite=fail]    *TestAgentEndTaskShouldExit* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-agent#TestAgentEndTaskShouldExit=fail]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2303","Build Failure","app",1,"race-scheduler failure","""h2. [race-scheduler failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_scheduler_59a6190a0c5afed01051cd42e547adbc1d16994d_17_11_03_17_57_13/0]    Host: [ec2-54-227-88-100.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-4gsr6vqh]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~john.liu]~  """
"EVG-2300","Task","app",2,"monitor should flag hosts that encounter system failures more than 3 times","""we should definitely flag/report these?  potentially also be able to turn it off so we don't end up terminating hosts too often when there's a bad commit afoot. """
"EVG-9579","New Feature","platform",1,"add ability for jobs to be local-queue only","""versions set to -1 or something on the job type document"""
"EVG-9439","New Feature","platform",2,"amboy queue backed grip.Sender implementation ","""let's put this in a new repo in the evergreen-ci org, as its reasonably general use.     the idea is that we want a sender that wraps a queue and sends messages as possible but gets us out of needing to use the buffered sender (which centers on a capped buffer used in combination with a message batching type,) and is not suitable for some use cases.     """
"EVG-9653","Task","platform",1,"remote ordered queue may serialize migrations ","""maybe the queue implementation is too naive or the dependencies are too strict.  """
"EVG-9507","New Feature","platform",1,"remove level setting options from logger interface","""just set levels via the sender """
"EVG-2307","Build Failure","app",1,"race-rest-data failures","""h2. [race-rest-data failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_rest_data_dbecd8bb7a03f60240497048299bebfa701130ae_17_11_06_17_30_06/0]    Host: [ec2-54-146-155-98.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-tp386iij]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestMockConnectorSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-rest-data#TestMockConnectorSuite=fail]    *TestMockConnectorSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-rest-data#TestMockConnectorSuite=fail]    *TestMockConnectorSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-rest-data#TestMockConnectorSuite=fail]    *TestMockConnectorSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-rest-data#TestMockConnectorSuite=fail]    *TestMockConnectorSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/race-rest-data#TestMockConnectorSuite=fail]          ~BF Ticket Generated by [~john.liu]~  """
"EVG-2316","Task","app",1,"fuzz start of runner tasksb","""so that there isn't a big hit when the runner restarts"""
"EVG-2314","Build Failure","app",1,"TestAgentIntegrationSuite","""h2. [test-agent failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_agent_e1bfc1f450e177ecbe3d52134c264550806c8dca_17_11_07_15_53_24/0]    Host: [ec2-54-90-171-120.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-wqyg55qg]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]    *TestAgentIntegrationSuite* - [Logs|] | [History|https://evergreen.mongodb.com/task_history/mci/test-agent#TestAgentIntegrationSuite=fail]          ~BF Ticket Generated by [~john.liu]~  """
"EVG-2311","Bug","app",2,"Panic in monitor when running teardown script on hosts","""Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]: RemoteCommand(teardown-i-09abec83f62eae9cc-6037277636045730342) killing process 2575  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]: panic: runtime error: invalid memory address or nil pointer dereference  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]: [signal SIGSEGV: segmentation violation code=0x1 addr=0x20 pc=0x76dce9]  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]: goroutine 991 [running]:  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]: panic(0x15a5ba0, 0xc420012080)  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]:         /opt/go/src/runtime/panic.go:500 +0x1a1  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]: github.com/evergreen-ci/evergreen/monitor.runHostTeardown(0x246b0a0, 0xc420244f40, 0xc4afe97ab8, 0xc43e4ec570, 0xc4bb136630, 0xc42a764cf0)  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]:         /data/mci/9641710e6fdec15649cd1d40233e0409/gopath/src/github.com/evergreen-ci/evergreen/monitor/hosts.go:206 +0x289  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]: github.com/evergreen-ci/evergreen/monitor.terminateHost(0x246b0a0, 0xc420244f40, 0xc4afe97ab8, 0xc420234000, 0x180001, 0x0)  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]:         /data/mci/9641710e6fdec15649cd1d40233e0409/gopath/src/github.com/evergreen-ci/evergreen/monitor/hosts.go:177 +0x3b3  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]: github.com/evergreen-ci/evergreen/monitor.terminateHosts.func1.1(0xc4b78a6c00, 0x615c4d)  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]:         /data/mci/9641710e6fdec15649cd1d40233e0409/gopath/src/github.com/evergreen-ci/evergreen/monitor/hosts.go:120 +0x48  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]: github.com/evergreen-ci/evergreen/util.RunFunctionWithTimeout.func1(0xc43326b440, 0xc43e4ec540)  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]:         /data/mci/9641710e6fdec15649cd1d40233e0409/gopath/src/github.com/evergreen-ci/evergreen/util/func.go:24 +0x27  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]: created by github.com/evergreen-ci/evergreen/util.RunFunctionWithTimeout  Nov 07 00:56:03 evergreenapp-2.build.10gen.cc evergreen[2346]:         /data/mci/9641710e6fdec15649cd1d40233e0409/gopath/src/github.com/evergreen-ci/evergreen/util/func.go:25 +0x7c"""
"EVG-2317","Bug","legacy-ui",1,"Missing Test Summary from Previous Test Executions","""There seems to have been a behavior change in restarting tasks introduced in the past week where the sidebar stops showing information for previous executions. I was able to reproduce this behavior in my patch builds and when manually restarting a task on mainline mongodb-master.    I've attached screenshots of a patch build that I ran last week with a before and after comparison. The side bar showed information on the 4th and 5th executions from last week. But when I restarted the task again with a 6th execution just now, test information on the 5th execution (and all other executions) disappeared."""
"EVG-2321","Improvement","app",2,"Remove legacy taskfind methods","""* Remove """"NoMerge"""" methods  * FindOne and FindOneOld should not merge by default  * Remove the test results field from the task struct  * Create a test results method"""
"EVG-2325","Bug","app",1,"Log teardown script output","""The sys-perf project has been leaking resources recently. It appears that the teardown script isn't being called. For instance, see this [host|https://evergreen.mongodb.com/host/i-0dc091d289bd98e76]. When the host was terminated, it says the teardown script ran successfully, but there is no output from the teardown script, and it ran suspiciously fast. For reference, here's a [host|https://evergreen.mongodb.com/host/i-0d622c42b5addd18e] from last week that was successfully torn down.     This failure is causing us to leak resources, which in turn causes us to hit AWS limits on our sys-perf account, which in turn leads to purple tasks. We're having to do a lot of cleanup by hand to keep things working. """
"EVG-2324","New Feature","app",1,"Tag EBS volumes","""Can we apply the same tags to EBS volumes that we do to EC2 instances?     It's very helpful for spending analysis to have tags on AWS entities that Evergreen manages, such as EC2 instances, which Evergreen launches and terminates directly. The EBS volumes attached to those instances are only used for the launched EC2 instances, but have no tags, so can't be accounted for as easily for billing-wise."""
"EVG-9648","Task","platform",2,"reduce exported surface area of amboy/queue package","""also merge in the driver package."""
"EVG-2332","Bug","app",1,"Cannot apply patch that deletes binary file","""I deleted some files, including a binary file called """"paper\-100k.pdf"""", and submitted the change for a patch test with """"evergreen patch \-\- \-\-binary"""":    https://evergreen.mongodb.com/task/mongo_c_driver_releng_link_with_cmake_mac_patch_760dbf8f60306dd4775c1690d3f1936b03431efe_5a09d242c9ec446c07006e6e_17_11_13_17_11_30    It logs:    ... and proceeds to test the unpatched source."""
"EVG-2330","Improvement","app",1,"Evergreen CLI should not log debug messages",""""""
"EVG-9395","Bug","platform",1,"ConvertToComposer does not set log level on a fieldMessage on calls after the first","""We are logging startHosts success messages at Error but should be logging them at Info.    https://github.com/evergreen-ci/evergreen/blob/master/hostinit/runner.go#L84 has the side effect of setting the message type to Error even though it doesn't log, so when the next line runs, it logs at the Error level even though it should lot at Info.    I think this is because fieldMessage.setup() sets the metadata field to &Base only if it is not already set https://github.com/mongodb/grip/blob/master/message/fields.go#L117. As a result, ConvertToComposer, which is called by all *When methods even if they noop, only sets the level of a fieldMessage the first time it runs."""
"EVG-2335","Bug","app",1,"Hosts that fail to provision do not have logs to explain why","""E.g., https://evergreen.mongodb.com/host/sir-82qr4fyk"""
"EVG-2341","New Feature","app",1,"run longer tasks first","""all other things being equal, this should shorten makespan"""
"EVG-2343","New Feature","app",2,"unschedule tasks older than a threshold","""to avoid forcing the scheduler to continually reconsider tasks that are underwater?    we should define an underwater threshold, but one or two weeks is probably correct. """
"EVG-2342","New Feature","app",2,"remove unreachable static hosts from host pool ","""seems reasonable to quarantine unreachable hosts to prevent putting pressure on the taskrunner until we can increase the taskrunner capacity."""
"EVG-2355","New Feature","app",1,"logkeeper app logging improvements","""- slack  - panic handlers"""
"EVG-2349","New Feature","app",1,"reduce taskrunner alert frequency. ","""- alert only if a host fails 5 times in a row.   - provide more context about an alert (provider/distro)   """
"EVG-2354","Improvement","legacy-ui",2,"Tooltips + filtering not working on history page","""As an example, if you look at this page:    https://evergreen.mongodb.com/task_history/mongodb-mongo-master/noPassthrough_WT#/backup_restore_stop_start.js=fail&buildVariants=    Hovering over failing tasks does not show the failing tests in the tooltip.  In addition, the filter on the right side of the page no longer works.    While not a blocker, this is still a pretty bad one for us."""
"EVG-2352","Bug","app",1,"task_lifecycle.go incorrectly calculates that build is ""finished"" when 1 task remains","""I observed via the v2 build endpoint that when a build still has 1 task remaining, it believes that all tasks are complete and therefore calculates the finished time, make span, etc. This might be effecting the experience in the UI but is definitely confusing api users. The suspect line of code is here:    https://github.com/evergreen-ci/evergreen/blob/9dd90b01cda9824688c287408a680901db0d60a1/model/task_lifecycle.go#L459    """
"EVG-2350","Improvement","app",2,"expand scope of host event log","""- queries/helpers to support: last n host events in order (by kind).  - query to support: events (in order) in the last time period.  - add event logs connectivity issues.  - add event logs taskrunner errors.  """
"EVG-2360","Bug","app",2,"JUnit parser omits errors in tests","""When the JUnit was parsed from https://evergreen.mongodb.com/task/mms_unit_java_UNIT_JAVA_MMS_patch_b13b9850dc1d66bb326b41c893b416446bcaaada_5a1db5ece3c3315c910004c4_17_11_28_19_15_56 - the error in {{com.xgen.svc.mms.svc.deployment.DeploymentDiffSvcUnitTests}} was not found.     See attached XML file.     If a JUnit file has {{errors>0}} in the {{<testsuite>}} block, then EVG must mark the test as failed and include the text from the {{<error>}} element for the reason."""
"EVG-2359","Bug","app",1,"Misconfigured (?) alerts can cause API server to panic","""{     """"action"""":""""aborted"""",     """"duration"""":99758786,     """"metadata"""":{        """"level"""":80,        """"hostname"""":""""evergreenapp-3.build.10gen.cc"""",        """"time"""":""""2017-11-28T19:06:30.279939625Z"""",        """"process"""":""""/srv/evergreen/current/clients/linux_amd64/evergreen"""",        """"pid"""":23697     },     """"panic"""":""""invalid memory address or nil pointer dereference"""",     """"path"""":""""/api/2/task/mms_e2e_local_with_daemon_E2E_Local_ATM_GSSAPI_Auth_39af01bba94eb8e94d772555ee352baf2bfe88b0_17_11_28_15_38_10/end"""",     """"request"""":317538,     """"span"""":""""99.759063ms"""",     """"stack"""":{        """"message"""":""""[runtime/asm_amd64.s:510] """",        """"frames"""":[           {              """"function"""":""""runtime.call64"""",              """"file"""":""""/usr/lib/go/src/runtime/asm_amd64.s"""",              """"line"""":510           },           {              """"function"""":""""runtime.gopanic"""",              """"file"""":""""/usr/lib/go/src/runtime/panic.go"""",              """"line"""":491           },           {              """"function"""":""""runtime.panicmem"""",              """"file"""":""""/usr/lib/go/src/runtime/panic.go"""",              """"line"""":63           },           {              """"function"""":""""runtime.sigpanic"""",              """"file"""":""""/usr/lib/go/src/runtime/signal_unix.go"""",              """"line"""":367           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/alerts.TaskFailTransition.ShouldExecute"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/alerts/project_triggers.go"""",              """"line"""":157           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/alerts.(*TaskFailTransition).ShouldExecute"""",              """"file"""":""""\u003cautogenerated\u003e"""",              """"line"""":1           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/alerts.getActiveTaskFailureTriggers"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/alerts/alerts_activation.go"""",              """"line"""":159           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/alerts.RunTaskFailureTriggers"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/alerts/alerts_activation.go"""",              """"line"""":57           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/service.(*APIServer).EndTask"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/service/api_task.go"""",              """"line"""":174           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/service.(*APIServer).EndTask-fm"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/service/api.go"""",              """"line"""":768           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/service.(*APIServer).checkHost.func1"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/service/api.go"""",              """"line"""":259           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/service.(*APIServer).checkTask.func1"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/service/api.go"""",              """"line"""":170           },           {              """"function"""":""""net/http.HandlerFunc.ServeHTTP"""",              """"file"""":""""/usr/lib/go/src/net/http/server.go"""",              """"line"""":1918           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/vendor/github.com/gorilla/mux.(*Router).ServeHTTP"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/vendor/github.com/gorilla/mux/mux.go"""",              """"line"""":114           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.Wrap.func1"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go"""",              """"line"""":46           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.HandlerFunc.ServeHTTP"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go"""",              """"line"""":29           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.middleware.ServeHTTP"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go"""",              """"line"""":38           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.(middleware).ServeHTTP-fm"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go"""",              """"line"""":38           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/service.UserMiddleware.func1"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/service/middleware.go"""",              """"line"""":399           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.HandlerFunc.ServeHTTP"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go"""",              """"line"""":29           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.middleware.ServeHTTP"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go"""",              """"line"""":38           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.(middleware).ServeHTTP-fm"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go"""",              """"line"""":38           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/service.(*RecoveryLogger).ServeHTTP"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/service/middleware.go"""",              """"line"""":472           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.middleware.ServeHTTP"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go"""",              """"line"""":38           },           {              """"function"""":""""github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.(*Negroni).ServeHTTP"""",              """"file"""":""""/home/tychoish/goprojects/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go"""",              """"line"""":86           },           {              """"function"""":""""net/http.serverHandler.ServeHTTP"""",              """"file"""":""""/usr/lib/go/src/net/http/server.go"""",              """"line"""":2619           },           {              """"function"""":""""net/http.(*conn).serve"""",              """"file"""":""""/usr/lib/go/src/net/http/server.go"""",              """"line"""":1801           },           {              """"function"""":""""runtime.goexit"""",              """"file"""":""""/usr/lib/go/src/runtime/asm_amd64.s"""",              """"line"""":2337           }        ],        """"time"""":""""2017-11-28T19:06:30.279914551Z""""     }  }"""
"EVG-2362","New Feature","app",1,"Add parameter to expansions.update to ignore missing file","""The command {{expansions.update}} is used to update the expansion macros based on YML file. Sometimes this is done conditionally that the YML file may or may not be created. In this case the update fails, Perhaps a param could be added to suppress the error if the YML {{file}} does not exist.    This is the case where it would be useful to have:  {code}    """"copy EC2 artifacts"""":      - command: shell.exec        params:          shell: bash          working_dir: src          script: |            if [ -z """"${ec2_artifacts}"""" ]; then              exit 0            fi            ...      - command: expansions.update        params:          file: src/${aws_ec2_yml}  {code}    The function {{""""copy EC2 artifacts""""}} is invoked, but only should continue under certain conditions. Maybe an alternate method is to exit the function early, but I do not know how that can be done in {{evergreen.yml}}    Resulting output:    """
"EVG-9403","Bug","platform",1,"configure socket timeout in anserdb interface","""might make sense to also set this by default in the migration app to something reasonable? """
"EVG-9353","Bug","platform",2,"rate limiting pool smoke test suite","""- expand coverage  - improve logging    (anecdotally it appears to not be working"""
"EVG-2387","Incident","app",2,"Look into why JIRA tickets were created for ops alerts over the weekend","""The two alerts:    Host: sles12-z-2.maristisv.build.10gen.cc  Distro: suse12-zseries-test  jira_error  ----------------  jira authentication error: Auth at JIRA instance failed (HTTP(S) request). Post /rest/auth/1/session: unsupported protocol scheme    and    Host: sles12-z-1.maristisv.build.10gen.cc  Distro: suse12-zseries-build  jira_error  ----------------  jira authentication error: Auth at JIRA instance failed (HTTP(S) request). Post /rest/auth/1/session: unsupported protocol scheme"""
"EVG-2389","Bug","app",2,"Expansions update caused files to not be found after deploy","""See https://evergreen.mongodb.com/task/sqlproxy_full_matrix__os_full_matrix~windows_mongodb_version~latest_mongodb_topology~standalone_tdvt_patch_9a4997e9cd86d24ef206b8c0b29e5ccc6340b567_5a285085c9ec4467ae0000b9_17_12_06_20_18_14/0#/%23%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%25229a4997e9cd86d24ef206b8c0b29e5ccc6340b567%2522%257D%255D%257D#%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%25229a4997e9cd86d24ef206b8c0b29e5ccc6340b567%2522%257D%255D%257D"""
"EVG-2404","New Feature","app",2,"new attach.resources command","""- should work like attach.results,  - allow file globbing,   - use existing attach artifacts results. """
"EVG-2402","New Feature","app",2,"add flag to files structure for filtering download","""- the default should be to download the file.  - name: """"ignore_for_reproduction"""" """
"EVG-2401","New Feature","app",2,"simple.exec command","""no shell just:  - working directory,   - envvar   - args that we run shlex split on."""
"EVG-2400","Improvement","app",2,"update vendored migration tools","""- revendor amboy and anser   - update migrations entry point to use new application structure   - add new command for command line?  - import any local changes to the migration utility """
"EVG-2398","Bug","ui",1,"Logkeeper logs some messages at too high a level","""We should investigate and change them to the appropriate levels"""
"EVG-9678","Task","platform",2,"grip.message.CollectAllProcesses() is slow on OS X 10.12","""CollectAllProcesses() can take ~32 seconds to get list of running processes.    See https://evergreen.mongodb.com/task/mci_osx_test_command_ac87c5d1aed2ec4a80f93b992e5c3e53c11427d2_17_12_12_17_01_28    Log from test on My computer:   rsamuels ÓÇ∞ ‚ãØ ÓÇ± github.com ÓÇ± evergreen-ci ÓÇ± evergreen ÓÇ∞ make test-command RUN_TEST=""""TestShellExecuteCommand/TestCancellingContextShouldCancelCommand"""" RUN_COUNT=50  go test -ldflags=""""-w -s -X=github.com/evergreen-ci/evergreen.BuildRevision=a82e9e00278d27efcea7b509e3663798bbd4939c"""" -c -o bin/test.command ./command  EVGHOME=/Users/rsamuels/go/src/github.com/evergreen-ci/evergreen SETTINGS_OVERRIDE=/Users/rsamuels/mongo/creds.yml ./bin/test.command -test.v -test.run='TestShellExecuteCommand/TestCancellingContextShouldCancelCommand' -test.count='50' -test.timeout=10m 2>&1 | tee bin/output.command.test  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (30.61s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (30.60s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (31.17s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (31.17s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (31.23s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (31.22s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (31.87s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (31.87s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (32.11s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (32.11s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (31.22s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (31.22s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (32.12s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (32.12s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (31.69s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (31.69s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (31.83s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (31.83s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (30.88s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (30.87s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (31.98s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (31.98s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (31.78s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (31.77s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (31.94s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (31.94s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (32.67s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (32.66s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (32.44s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (32.44s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (33.81s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (33.80s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (34.15s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (34.15s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  --- PASS: TestShellExecuteCommand (34.45s)      --- PASS: TestShellExecuteCommand/TestCancellingContextShouldCancelCommand (34.45s)  === RUN   TestShellExecuteCommand  === RUN   TestShellExecuteCommand/TestCancellingContextShouldCancelCommand  panic: test timed out after 10m0s"""
"EVG-9545","New Feature","platform",1,"Add githash to curator version","""Print the githash as part of the curator version when {{--version}} is specified."""
"EVG-9376","Bug","platform",1,"Time from ""curator stat"" on Windows is incorrect","""The time reported by curator for {{stat}} is incorrect, and always the same on Windows:  """
"EVG-2410","Bug","app",1,"Smoke test failing due to address already in use","""    https://evergreen.mongodb.com/task_log_raw/mci_ubuntu1604_smoke_test_783f92be62e7d0877d86e2d0bc80f498b853b328_17_12_13_22_42_43/1?type=T&text=true"""
"EVG-2408","Improvement","app",2,"Extend Rest v2 API to include patch alias","""Extend patches to include """"Alias"""". The __github alias indicates use of github pull request testing."""
"EVG-2407","Bug","app",1,"archive.targz_unpack cannot find file","""{{ls}} confirms the file is present, and yet:      I don't see any cases of anyone actually using this command, so it's possible it's been broken for a while, but no one has noticed, or I may be using it incorrectly. I noticed this when I was trying to use the command in EVG-2377.    We should probably add it to the smoke test when it's fixed."""
"EVG-9341","Bug","platform",2,"Curator cannot write to an existing file","""I am using the following command. When issuing it a second time (after the file has been closed (system rebooted), it fails to write to the file and provides the result to stdout.      Resulting output:  """
"EVG-2417","New Feature","app",2,"new manifests should populate the branch field ","""they use the project rather than the project_ref.     in service/api_plugin_manifest.go"""
"EVG-2423","Improvement","app",2,"Smoke test should load data itself instead of doing it in bash in self-tests.yml","""This will also allow us to generate the agent secret dynamically."""
"EVG-2451","Task","app",2,"improve handling of logging errors","""particularly around the deco-host alert"""
"EVG-2444","Improvement","app",1,"Specify --index in git apply for patch builds","""This would allow us to be able to apply patches from the {{.gitmodules}} file. See an example build here where we currently do not do this and fail a patch because of it https://evergreen.mongodb.com/task/stitch_ios_sdk_linux_64_run_tests_patch_aebe6ea5306136c6a284ddc6bfd7bcb0968fbfb1_5a39c1dfe3c33112c4001acc_17_12_20_01_50_23."""
"EVG-2440","Bug","legacy-ui",2,"Finishing a display task causes visual bug for its box","""https://evergreen.mongodb.com/task/mci_race_detector_display_lint_bff5658ca3ec9e21b1e84b63bc909d3c0ad924e8_17_12_20_16_29_50      {     """"id"""" : """"mci_race_detector_dist_bff5658ca3ec9e21b1e84b63bc909d3c0ad924e8_17_12_20_16_29_50"""",     """"d"""" : """"dist"""",     """"s"""" : """"failed"""",     """"ed"""" : {      """"status"""" : """"failed"""",      """"type"""" : """"test"""",      """"desc"""" : """"'shell.exec' in \""""run-make\""""""""     },     """"st"""" : ISODate(""""2017-12-20T16:33:50.946Z""""),     """"tt"""" : NumberLong(""""60353534749""""),     """"a"""" : true    },"""
"EVG-2439","Bug","app",2,"Queries in model/scheduler_stats.go should skip display tasks","""These queries rely on task metadata (like scheduled and started) that are not set for display tasks."""
"EVG-2438","Improvement","legacy-ui|perf-tools",5,"Improved performance chart analysis by controlling y axis range and scale","""In order to make it easier to for engineers to analyze charts, it would be helpful to be able to toggle the y-axis to control:  1. Linear vs Logarithmic scale  2. Origin (0) based vs Zoomed in    Acceptance Criteria:  1. Ability to toggle linear vs logarithmic on performance chart page that will update all charts  2. Ability to toggle Origin vs Zoomed In for y-axis starting off point  3. Preference are maintained for the duration of the session  4. Default is Linear, Zoomed  5. Toggle should float so you can access it anywhere (regardless of scrolling)"""
"EVG-2436","Bug","legacy-ui",1,"Large display tasks have some visual issues","""https://evergreen-staging.corp.mongodb.com/task/mci_race_detector_display_lint_patch_0cc8e73995b8c9ea86632b8cb97de262b76c502e_5a3999f59dbe32091a00000a_17_12_19_23_00_25"""
"EVG-2447","Task","app",1,"Remove size field from distro mount points","""We do not use this field, and it is not supported by aws-sdk-go. After EVG-2416, we should remove this field from the UI."""
"EVG-2446","Task","app",1,"fix and reenable underwater task pruning","""we turned it off with a feature flag, because the query is backwards. """
"EVG-2450","Task","app",2,"make subprocess.Command implementations private","""it looks like we mostly use the literal constructors, which we'll need to replace.     additionally the ssh and scp implementations can be refactored and simplified given the use of the CommandContext constructor. """
"EVG-2456","Bug","app",2,"Something set a task to priority to < 0","""This caused the task to show status """"Blacklisted"""". Since this is not possible to set with the UI, something set this task to have a negative priority. Setting the priority via the UI to non-negative fixed this particular task, but we should figure out what set this priority.    https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_sharding_jscore_passthrough_WT_patch_43b1a2984a4c7b9d1fbc9e4d0d6596c6f626ffda_5a43de53e3c33137e1004d18_17_12_27_17_55_10"""
"EVG-2453","Bug","legacy-ui",1,"Sorting by time taken on Evergreen task page doesn't sort correctly","""For example, see https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_osx_1010_mmapv1_jstestfuzz_replication_resync_3949ed24bfe7e936384120a785c1e6ad627bc1bd_17_12_13_03_41_35/0.    !Screen Shot 2017-12-27 at 10.52.42 AM.png|thumbnail!    In https://evergreen.mongodb.com/task/mongodb_mongo_v3.6_enterprise_osx_1010_mmapv1_replica_sets_initsync_jscore_passthrough_b5cdf38ac7a01e4abd519d8a8019c47cfaf8b7e0_17_12_18_21_19_09/0, {{views_all_commands.js}} ran for 23 minutes, but appears towards the bottom.    !Screen Shot 2017-12-27 at 10.55.49 AM.png|thumbnail!"""
"EVG-2457","Problem Ticket","app",1,"scripts/all_configs.go is broken","""    Most likely because evergreen/cli was removed in https://github.com/evergreen-ci/evergreen/commit/01ee03317c369b5663637be7dda2891bd3c7fc2b"""
"EVG-2463","Bug","legacy-ui",2,"Task page continuously requests the task logs","""When on a task page, the full task logs are requested and downloaded every few seconds by the browser.  This happens even after the task has ended and the logs no longer change."""
"EVG-2462","Build Failure","app",1,"smoke-test-endpoints failure","""h2. [smoke-test-endpoints failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_smoke_test_endpoints_0e61f0b474edc2ba483df93a1b3985786163c2ba_17_12_29_18_17_15/0]     Host: [ec2-54-92-156-27.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-8d587wmh]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2461","Bug","app",1,"Add degraded mode flag to prevent CLI from updating","""For cases where we know the CLI is known to be broken."""
"EVG-2464","Improvement","app",2,"Automatically retry jobs that fail due to host termination","""I've investigated several test failures that turned out to be due to a host termination - for example BF-7103. It would reduce the amount of noise in the Evergreen test results if jobs that fail due to a host being terminated were automatically retried."""
"EVG-2474","Build Failure","app",2,"test-cloud failure","""h2. [race-cloud failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_cloud_ca50b345db53a9eaae5f55f56e9d564d8a25a0f5_18_01_02_16_53_00/0]     Host: [ec2-54-221-22-58.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-apci7chh]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2473","Task","app",1,"call repotracker function in webhook handler for push events","""- in amboy job"""
"EVG-2509","Bug","legacy-ui",1,"left nav on jscore very slow to load","""See for example: https://evergreen.mongodb.com/task/mongodb_mongo_v3.6_enterprise_rhel_62_64_bit_jsCore_a6a3056ce0833e969665380e0eca7ed2aca42742_18_01_03_21_21_01    Any jscore passthrough is similarly impacted.  Takes about 23.49s to load the left nav.  This nav is essential for identifying when a test started failing."""
"EVG-2507","Improvement","app",1,"Don't step back lint tasks","""since they take a long time and it's not that important"""
"EVG-2505","Bug","legacy-ui",1,"Able to edit patch alias name to be blank","""# Create a patch alias  # Save it  # Delete the alias name field  # Save again    What should happen: Save fails with an error messages.  What actually happens: Save succeeds."""
"EVG-2498","Task","app",2,"Change pre/post to use task_group setup/teardown handlers","""The implementation for this is that tasks not in a task_group are in a task_group of 1. The difference is that their setup and teardown is in fact pre and post."""
"EVG-2497","Task","app",2,"Add timeout handler for task_group","""This will run if a task in a task group times out. If it does not exist the top-level timeout handler will run."""
"EVG-2496","Task","app",2,"Add task_group setup/teardown test logic to agent","""This setup/teardown runs before and after each task in a task_group. Certain commands, like attach.artifacts, should be illegal here."""
"EVG-2494","Task","app",2,"Modify agent GetNextTask logic to take into account task groups","""The agent needs to handle the additional data it will receive, i.e., setup and teardown logic."""
"EVG-2493","Task","app",2,"Implement next task discovery for tasks not in task groups","""Tasks not in a task_group are in a task_group of 1."""
"EVG-2491","Task","app",1,"Implement mock for next task discovery","""Implement the interface for testing."""
"EVG-2490","New Feature","app",2,"Implement task removal from queue","""We need to support removing a task from the middle of the queue, and determine when we will need to do this."""
"EVG-2489","Task","app",2,"Design interface for next task discovery","""This is to support 3 other tickets:    Implement a mock for next task discovery.  Implement discovering the next task for a task_group.  Implement discovering the next task for tasks not in task groups."""
"EVG-2487","Task","app",2,"Add last_task_group field to host model","""Add a previous_task_group field. Do not change running_task, as this is used to determine if a host can be assigned a task."""
"EVG-2486","Task","app",2,"Make changes to task model for task_group","""Add any task_group metadata that we will need to hold onto."""
"EVG-2485","New Feature","app",2,"Create task_group model","""This model will be used to parse the evergreen configuration file."""
"EVG-2482","Task","app",2,"Define generate.tasks model","""Define the model that describes the JSON document which will be passed to the generate.tasks command."""
"EVG-2480","Task","app",1,"Rename simple.exec to subprocess.exec","""Subprocess.exec has been implemented but under another name. Since it is not yet used, we can simply rename it in the commands package."""
"EVG-2514","Improvement","ui",2,"Lobster line numbers should always be visible","""Since line numbers are needed for bookmarking, They should always stay on the left side of the page no matter how far you scroll to the right."""
"EVG-2538","Bug","legacy-ui",1,"UI server panics if you try to view a task execution that doesn't exist","""https://evergreen-staging.corp.mongodb.com/task/mci_race_detector_race_hostinit_959673cc5c242f1a5669171a353f8dc4bb1b9058_18_01_04_19_33_08/5    (switched to a staging link to we panic prod by clicking this)"""
"EVG-2533","Bug","app",1,"hostinit should log errors at a higher level","""     if ready, err := init.IsHostReady(&h); !ready {        m := message.Fields{         """"GUID"""":    init.GUID,         """"message"""": """"host not ready for setup"""",         """"hostid"""":  h.Id,         """"DNS"""":     h.Host,         """"runner"""":  RunnerName,        }          if err != nil {         m[""""error""""] = err.Error()        }          grip.Info(m)        continue       }"""
"EVG-2549","Build Failure","app",1,"race-cloud failure","""h2. [race-cloud failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_cloud_adac48ce22826cb6a33202d38184a3f3566e6bff_18_01_08_21_01_25/0]     Host: [ec2-54-211-48-14.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-46ni524k]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2548","Improvement","app",2,"Write additional integration tests for new ec2 host provider","""There is currently one for spot, but not for on-demand. There may also be an opportunity to improve the spot integration test, and to add integration tests for features other than spawn."""
"EVG-2546","Build Failure","app",1,"test-cloud failure","""h2. [test-cloud failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_cloud_0ecf2db50c3df64e0db5e1ccab40e016d5ff2ecc_18_01_08_17_20_28/0]     Host: [ec2-54-196-16-165.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-fm3r4jrh]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2545","Task","app",2,"Expansions for Patches created by Github Pull Requests","""github_pr_number  github_org  github_repo  github_author"""
"EVG-2544","Build Failure","app",1,"test-command failure","""h2. [test-command failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_command_055bf72a82de7ae4e0551bc097a524ccd6cc654a_18_01_08_15_39_50/0]     Host: [ec2-54-144-148-137.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-mchr7t9j]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2559","Build Failure","app",1,"lint-spawn failure","""h2. [lint-spawn failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_lint_spawn_1d9ce86c998861e2980ea0f8cf72e950e62fee46_18_01_09_14_15_14/0]     Host: [ec2-54-205-156-199.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-cg686e1h]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~john.liu]~  """
"EVG-2557","Improvement","legacy-ui",1,"Display tasks should list number of execution tasks they contain","""It's not obvious in the screenshot that the lint task contains 38 tasks, of which only 37 have run. It would be nice to add the number to the """"This task contains:"""" line, like """"This task contains 38 tasks:""""."""
"EVG-2554","Bug","app",2,"Display task in which all execution tasks are green is red","""https://evergreen.mongodb.com/task/mci_race_detector_display_lint_1d9ce86c998861e2980ea0f8cf72e950e62fee46_18_01_09_14_15_14"""
"EVG-2551","Build Failure","app",1,"test-command failure","""h2. [test-command failed on windows|https://evergreen.mongodb.com/task/mci_windows_test_command_adac48ce22826cb6a33202d38184a3f3566e6bff_18_01_08_21_01_25/0]     Host: [ec2-54-147-219-159.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-mvci6gwj]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-9458","New Feature","platform",2,"make conditional logging a composer feature. ","""rather than a property of the journaling level."""
"EVG-9349","Bug","platform",2,"message.WrapStack type ","""that can wrap a composer (or similar.) """
"EVG-2569","Task","app",1,"Increase infrequent runner interval to 3 minutes","""This is currently set at 2 minutes. The infrequent runners are alerts, notify, and repotracker. We need to reduce this interval because the repotracker is getting close to using up our GitHub rate limit. We hope to fix this by moving projects to EVG-2568."""
"EVG-2568","New Feature","app",1,"Add flag to allow individual projects to use Github webhooks to track pushes, instead of repotracker polling","""We currently poll GitHub for new commits. This is becoming unsustainable. We currently use more than 80% of our hourly GitHub wait limit. We should allow projects to opt in to using webhooks.    The repotracker runner should exclude projects with this flag enabled."""
"EVG-2566","Task","app",1,"Github PR Testing Degraded Mode should not prevent status updates for running patches.","""Github status API updates should have their own degraded mode flag."""
"EVG-2565","Improvement","app",2,"Add Ability to Approve External Pull Request Patches","""WiredTiger would like the ability for an authorized internal user to approve patches from the community for running in evergreen."""
"EVG-2563","Bug","ui",2,"lobster search malfunctions for 1-hit searches","""If you type in a search in lobster for a search string that only has one hit, you cannot subsequently redo the search.  That is, after typing the search string and clicking """"Find"""", and then scrolling the window around, you cannot then click on """"Next"""" or """"Previous"""" (or even """"Find"""") and have the window re-center on the search term again.  Instead, you must edit the search string and search for something else, and then put the original search term back in and search again.  Ideally, clicking on """"Find"""" would re-do the search.    I've also on occasion managed to gum up the searcher such that the viewport on the webpage is no longer updated.  That is, when I scroll the web page, the only text visible is the original text in the viewport, and the rest of the webpage is blank.  I'm not sure what would cause this or how to diagnose the problem (I ended up reloading the entire page to fix it.)."""
"EVG-2581","Task","app",1,"Provide additional data dumps for perf visualization development","""In order for Ruslan to get a representative set of data to validate his changes, we need to get him some additional workloads. Here are the ones that are unique and currently generate bugs:    Sys Perf Core Workloads:  https://evergreen.mongodb.com/task/sys_perf_linux_3_node_replSet_core_workloads_WT_852ff9f97b6b92f5c3a88d0e070fe9c0f90ef175_17_11_30_16_44_10    Mongo Perf:  https://evergreen.mongodb.com/task/performance_linux_mmap_standalone_insert_37cb7ea09393e88662e3139bd20fa29e59f2a1a3_18_01_11_00_01_36"""
"EVG-2575","Build Failure","app",1,"race-agent failure","""h2. [race-agent failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_agent_0bbb82ca2a64b921cf851aefdd213dbe6e401f7b_18_01_10_22_53_43/0]     Host: [ec2-54-163-164-130.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-1ji8764j]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~john.liu]~  """
"EVG-2589","New Feature","ui",2,"Add way to see intersection of filters, rather than union in lobster","""Currently if you have one filter active and then add another, the set of log lines returned grows - you see logs that match *any* of your active filters.  It'd be nice to add a toggle so that you could only see lines that match *all* of your active filters."""
"EVG-2586","Bug","app",1,"GitHub PR testing does not appear to unschedule patches after PR is merged","""https://github.com/evergreen-ci/evergreen/pull/577"""
"EVG-2585","Bug","app",1,"Host reachability check should not return error if context is canceled","""error:  error checking if host sir-z6fr7rxh is reachable: reachability command encountered error for sir-z6fr7rxh: signal: killed       extended:  signal: killed  github.com/evergreen-ci/evergreen/subprocess.(*remoteCmd).Run   /Users/brian/go/src/github.com/evergreen-ci/evergreen/subprocess/remote_command.go:66  github.com/evergreen-ci/evergreen/hostutil.CheckSSHResponse   /Users/brian/go/src/github.com/evergreen-ci/evergreen/hostutil/host_status.go:61  github.com/evergreen-ci/evergreen/cloud.(*ec2SpotManager).IsSSHReachable   /Users/brian/go/src/github.com/evergreen-ci/evergreen/cloud/ec2_spot.go:174  github.com/evergreen-ci/evergreen/cloud.(*CloudHost).IsSSHReachable   /Users/brian/go/src/github.com/evergreen-ci/evergreen/cloud/cloud_host.go:45  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).IsHostReady   /Users/brian/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:367  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).setupReadyHosts.func1   /Users/brian/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:223  runtime.goexit   /usr/local/Cellar/go/1.9.2/libexec/src/runtime/asm_amd64.s:2337  reachability command encountered error for sir-z6fr7rxh  github.com/evergreen-ci/evergreen/hostutil.CheckSSHResponse   /Users/brian/go/src/github.com/evergreen-ci/evergreen/hostutil/host_status.go:71  github.com/evergreen-ci/evergreen/cloud.(*ec2SpotManager).IsSSHReachable   /Users/brian/go/src/github.com/evergreen-ci/evergreen/cloud/ec2_spot.go:174  github.com/evergreen-ci/evergreen/cloud.(*CloudHost).IsSSHReachable   /Users/brian/go/src/github.com/evergreen-ci/evergreen/cloud/cloud_host.go:45  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).IsHostReady   /Users/brian/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:367  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).setupReadyHosts.func1   /Users/brian/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:223  runtime.goexit   /usr/local/Cellar/go/1.9.2/libexec/src/runtime/asm_amd64.s:2337  github.com/evergreen-ci/evergreen/cloud.(*ec2SpotManager).IsSSHReachable   /Users/brian/go/src/github.com/evergreen-ci/evergreen/cloud/ec2_spot.go:182  github.com/evergreen-ci/evergreen/cloud.(*CloudHost).IsSSHReachable   /Users/brian/go/src/github.com/evergreen-ci/evergreen/cloud/cloud_host.go:45  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).IsHostReady   /Users/brian/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:367  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).setupReadyHosts.func1   /Users/brian/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:223  runtime.goexit   /usr/local/Cellar/go/1.9.2/libexec/src/runtime/asm_amd64.s:2337  error checking if host sir-z6fr7rxh is reachable  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).IsHostReady   /Users/brian/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:369  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).setupReadyHosts.func1   /Users/brian/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:223  runtime.goexit   /usr/local/Cellar/go/1.9.2/libexec/src/runtime/asm_amd64.s:2337 """
"EVG-2597","Task","app",1,"Unscheduled task not in queue shows itself as 1st in queue on task page","""https://evergreen.mongodb.com/task/bson_ruby_tests_special_os__special_os~rhel55_32_latest_stable_rubies~ruby_2.4.2_test_4233ec5714033dffd901b3e9dc6645aa95b2705a_18_01_16_10_00_28"""
"EVG-2596","Bug","app",0,"Clean up Evergreen CLI update routes/data structures","""Don't do this before EVG-2461 has been deployed to production for around a month. Evergreen users need enough time to update to new version, with the new api.    # Remove json metadata from evergreen.ClientConfig and it's substructures  # Remove """"/update/"""" route (as.getUpdate) from service/api.go"""
"EVG-2594","Build Failure","app",1,"test-agent failure","""h2. [test-agent failed on osx|https://evergreen.mongodb.com/task/mci_osx_test_agent_2ee67df2bf21df26b8529b12ebd700c14bd39564_18_01_12_21_50_43/0]     Host: [macos-1012-30.macstadium.build.10gen.cc|https://evergreen.mongodb.com/host/macos-1012-30.macstadium.build.10gen.cc]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2593","Build Failure","app",1,"test-cloud failure","""h2. [test-cloud failed on osx|https://evergreen.mongodb.com/task/mci_osx_test_cloud_2ee67df2bf21df26b8529b12ebd700c14bd39564_18_01_12_21_50_43/0]     Host: [macos-1012-46.macstadium.build.10gen.cc|https://evergreen.mongodb.com/host/macos-1012-46.macstadium.build.10gen.cc]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2592","Task","app",1,"Increase number of system failures required to quarantine hosts from 3 to 6","""Per in-person conversation."""
"EVG-2590","Improvement","app",1,"Log manual host status changes in the event log","""I think just add usernames to log """
"EVG-2604","Bug","app",1,"Spawn hosts have bad behavior when provisioning fails","""There are two problematic cases:  1. If a spawn host fails to provision, it will simply disappear from the user's page.  2. If the binary fails to fetch artifacts, the user will still receive the spawn host with missing artifacts.    Hosts fail to provision 3-5% of the time. However, with build hosts, if a host fails, we simply start another one. For spawn hosts we either do not give the user a spawn host or we give them one in a bad state. We should fix this. We could, for example, not give the user a spawn host until we are sure it is in a good state, and keep the UI element in the in progress state until then, even if we need to throw away a host that failed to provision."""
"EVG-2602","Task","app",2,"Project aliases should use own collection","""We have code in project_aliases.go to do this already."""
"EVG-2601","Bug","app",2,"Patch alias does not support display tasks","""- You can select part of a display task with an alias  - Selecting all tasks in a display task with an alias does not select the display task"""
"EVG-2599","Bug","legacy-ui|perf-tools",2,"Dates displayed in the performance waterfall as the run time dates.","""The new date functionality displays the run rather than the commit date.    As a result, the date labels can be out of order (although the order of commits is still correct). """
"EVG-2612","Bug","app",1,"Taskrunner puts agent on host even though setup script failed to run","""https://evergreen.mongodb.com/host/sir-f4d86fzg"""
"EVG-2618","Improvement","ui",1,"The Lobster ""Details"" toolbar dropdown should be hidden by default","""In my workflow I find that I rarely use the tools exposed in the details drop down but have to click """"Hide Details"""" every time I launch as it is overlays log content."""
"EVG-2617","Bug","ui",2,"Lobster mis-colors sharded passthroughs and mongos","""All primaries are given the same color, regardless of which shard/configsvr they're from.  Ex: https://logkeeper.mongodb.org/lobster/build/657b16b8eac8676156b6eb494e1fac5a/test/5a610b6fbe07c42d9b0ce29b?bookmarks=0%2C24011"""
"EVG-2613","Improvement","app",2,"Add individual task execution data support in the REST v2 API ","""Current Behavior: When requesting task data via the /tasks or /build/xyz/tasks endpoint - only the latest task execution is provided.    Requested Behavior: When requesting task data via the /tasks or /build/xyz/tasks endpoint - either all task executions are provided or by default only the latest is provided with some option to get the whole list.    This is necessary when trying to analyze historical results from New Relic and other data ingestion frameworks."""
"EVG-2624","Bug","legacy-ui",1,"Sorting test results by ""sequence"" causes them to display in reverse execution order","""Sorting test results by """"sequence"""" previously would sort with the first test executed by resmoke.py job #0, to the second test executed by resmoke.py job #0, ..., to the first test executed by resmoke.py job #1, etc. The test results are currently being displayed as the last test executed by resmoke.py's last job, etc.    https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_sharding_last_stable_mongos_and_mixed_shards_42c264630fa1e7d5924c291a9eeac6522d70f31e_18_01_20_02_50_28#/sort=Sequence    I suspect this is fallout from the changes from [1f09198|https://github.com/evergreen-ci/evergreen/commit/1f09198b40a03f62233ea382ff8836cc7d4dc359] as part of EVG-2453, where potentially sorting by the empty string previously wouldn't respect {{reverse=true}}. I suspect it is sufficient to change [the {{reverse=true}} line|https://github.com/evergreen-ci/evergreen/blob/3a9201a2c06f318cdffb068c02569a8c12c855ee/public/static/js/task.js#L343] to {{reverse=false}} in order to restore the old behavior."""
"EVG-2623","Bug","legacy-ui",2,"Task history page doesn't highlight boxes that match test filter","""The task history page used to make the boxes larger and a different color if they matched the test filter. This isn't happening anymore and the changes from EVG-2354 don't seem to have addressed this.    https://evergreen.mongodb.com/task_history/mongodb-mongo-master/sharding_last_stable_mongos_and_mixed_shards?revision=42c264630fa1e7d5924c291a9eeac6522d70f31e#/coll_epoch_test1.js=fail"""
"EVG-2622","Bug","legacy-ui",1,"Attached artifacts not associating links to task","""The evergreen command {{attach.artifacts}} is not displaying the associated artifacts.    This is because the artifacts are not being associated to task (in the DB)."""
"EVG-2634","Improvement","app",1,"New Cloud spot provider panics","""https://gist.github.com/bsamek/c46c94a89c76629cf97bc6d116d95816"""
"EVG-9514","New Feature","platform",2,"add time to amboy.Job","""for """"created"""" """"start after"""" time.    implementation entirely in Base.    pushed up to interchange. """
"EVG-2637","Bug","app",1,"Errors are logged for unreachable hosts",""""""
"EVG-2639","Task","app",1,"Do not run reachability checks over SSH for EC2 hosts","""We should verify that the reachability check is not essential for dynamic hosts to receive a new agent. If getting/starting an agent after first launch and after agents exit does not depend on the reachability check, and if dynamic hosts will be reaped if they are idle, then we may be able to restrict reachability checks for static hosts. This will prevent us from reaping dynamic hosts due to ephemeral networking problems."""
"EVG-2644","Improvement","app",1,"Use VPCs in cloud tests","""Switch to using VPC in cloud integration test and switch instance type to t2."""
"EVG-2642","Build Failure","legacy-ui",1,"js-test failure",""" h2. [js-test failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_js_test_f03f3cc35188c90c9bcbb8d086664023907acbf4_18_01_26_14_19_31/0]   Host: [ec2-34-228-162-89.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-9t187bbj]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]     ~BF Ticket Generated by [~john.liu]~ """
"EVG-2641","Bug","app",2,"Evergreen claims Github PR patches completed in negative times",""" ‚Äú31 succeeded, 1 failed, 7 other in -2562047h47m16.854775808s‚Äù    Steps:  1. Rerun failing task in a github PR patch  2. push another change.     I noticed that ubuntu1604 had several unfinished/unstarted tasks at this time, so the update for the evergreen context never should have been posted."""
"EVG-2651","Bug","legacy-ui",2,"Display tasks do not show color for previous execution in patches, task history drawer","""https://evergreen.mongodb.com/version/5a6e487ce3c3314e5c002a39  https://evergreen.mongodb.com/task/mci_race_detector_display_lint_caa84e43680cee15e7d6014f6a14eb6484c19ec6_18_01_26_22_18_28"""
"EVG-2670","Improvement","app",2,"Allow users to reconfigure tasks for patch builds created through GitHub PR testing","""Dependency: For Performance team, this would be useful if we can trigger sys-perf patch build (head of master) from a PR to 10gen/dsi.    In sys-perf, we have quite a few tasks and some of them run for a long time. We would like to add a couple smoke test tasks, like ycsb_short and mongoshell_short, and configure those to always be triggered automatically when one posts a PR.    But, if I know that my patch is in fact related to the initialsync_logkeeper_WT task, then I should be able to go into the patch build page and schedule that task in addition to the automatically scheduled ones. It should also be possible for a reviewer to do so. (Basically, any MongoDB Inc engineer.)    I'm torn on the question whether it should be allowed to unschedule the automatically added ones. A possible answer is that it should be allowed to do so in evergreen, but if a repo is configured to require certain tests to pass, then failing to run said tests would of course block ability to merge the PR."""
"EVG-2669","Build Failure","app",1,"test-cloud failure","""h2. [test-cloud failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_cloud_bcc0a55519c7a7d47898afdc344e71dd2aaf39fc_18_01_29_18_57_11/0]     Host: [ec2-52-91-111-249.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-zt6r7qdk]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2667","Bug","app",1,"Commit including a binary on GitHub fails to apply in patch","""We are beta testing the new GitHub PR to EVG patch feature, and I pushed a binary commit to an existing PR.    Unfortunately, every task that checks out our source fails with:    {{{+ git apply --stat /tmp/mcipatch_282431706  [2018/01/29 13:25:47.622] + git apply --binary --whitespace=fix --index  [2018/01/29 13:25:47.629] <stdin>:18: new blank line at EOF.  [2018/01/29 13:25:47.629] +  [2018/01/29 13:25:47.629] error: cannot apply binary patch to 'onprem-setup-setup-onprem_FAILURE.png' without full index line  [2018/01/29 13:25:47.630] error: onprem-setup-setup-onprem_FAILURE.png: patch does not apply}}    See https://evergreen.mongodb.com/version/5a6f6485c9ec447e020004f2"""
"EVG-2653","Build Failure","app",1,"dist-test failure","""h2. [dist-test failed on ubuntu1604-arm64|https://evergreen.mongodb.com/task/mci_ubuntu1604_arm64_dist_test_3ae4e4d120b090ad4e258863c72e207f501acdd3_18_01_29_03_14_42/1]     Host: [ec2-107-21-12-112.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-6x6g574h]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2691","Improvement","app",1,"periodically check to activate tasks if batchtime elapses ","""I think we need to:   - refactor out the code that checks to see if tasks need to be activated and run it in its own loop, reasonably regularly, every minute or two.)   - could do this with a very well formed amboy job. """
"EVG-2690","Bug","app",1,"cli host terminate ""panic: terminate flag redefined: h""","""  """
"EVG-2677","Improvement","app",1,"Log ""X-Cluster-Client-Ip"" header of API calls to Evergreen","""This came out of a discussion with [~cristopher.stauffer]. He had a script running against Evergreen but wasn't sure where it was running. There may be other cases where we would like the IP address of a host making API calls against Evergreen. The load balancer inserts this IP address as the """"X-Cluster-Client-Ip"""". We should include this IP address in the Splunk logs."""
"EVG-2676","Bug","app",1,"clean up middleware ","""we have dropped support for pre-go1.7 which means we can remove some code and do some clean up"""
"EVG-2675","Bug","app",1,"distro page should deco hosts option has incorrect query form ","""Fix issue introduced in EVG-1128"""
"EVG-2673","Bug","app",1,"prevent evergreen from running empty updatealls","""or try at least """
"EVG-2704","Improvement","app",1,"Ignore shouldExit if next task is in the same task group as previous","""This potentially should only apply to a task group with 1 host."""
"EVG-2703","Build Failure","app",1,"smoke-test-task failure","""h2. [smoke-test-task failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_smoke_test_task_e3402f013c5d431442436be3fb303b6a497c98f2_18_01_31_16_44_37/0]     Host: [ec2-54-91-92-164.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-1mar75nh]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2699","Build Failure","app",1,"Agent tests are panicking on Windows","""{{{""""message"""":""""hit panic; adding error"""",""""metadata"""":{""""level"""":90,""""hostname"""":""""WIN-LMHFULM2L27"""",""""time"""":""""2018-01-31T16:40:08.8624204Z"""",""""process"""":""""C:\\data\\mci\\95573c9ad530edf932b8b7f41c654bc2\\gopath\\src\\github.com\\evergreen-ci\\evergreen\\bin\\test.agent"""",""""pid"""":5740},""""operation"""":""""running task"""",""""panic"""":""""runtime error: invalid memory address or nil pointer dereference"""",""""stack"""":{""""context"""":{""""message"""":"""""""",""""metadata"""":{""""time"""":""""0001-01-01T00:00:00Z""""}},""""frames"""":[{""""function"""":""""github.com/evergreen-ci/evergreen/agent.(*Agent).runTask.func1"""",""""file"""":""""C:/data/mci/95573c9ad530edf932b8b7f41c654bc2/gopath/src/github.com/evergreen-ci/evergreen/agent/agent.go"""",""""line"""":170},{""""function"""":""""runtime.call32"""",""""file"""":""""c:/go1.8/go/src/runtime/asm_amd64.s"""",""""line"""":514},{""""function"""":""""runtime.gopanic"""",""""file"""":""""c:/go1.8/go/src/runtime/panic.go"""",""""line"""":489},{""""function"""":""""runtime.panicmem"""",""""file"""":""""c:/go1.8/go/src/runtime/panic.go"""",""""line"""":63},{""""function"""":""""runtime.sigpanic"""",""""file"""":""""c:/go1.8/go/src/runtime/signal_windows.go"""",""""line"""":161},{""""function"""":""""github.com/evergreen-ci/evergreen/agent.(*Agent).runPostTaskCommands"""",""""file"""":""""C:/data/mci/95573c9ad530edf932b8b7f41c654bc2/gopath/src/github.com/evergreen-ci/evergreen/agent/agent.go"""",""""line"""":319},{""""function"""":""""github.com/evergreen-ci/evergreen/agent.(*Agent).finishTask"""",""""file"""":""""C:/data/mci/95573c9ad530edf932b8b7f41c654bc2/gopath/src/github.com/evergreen-ci/evergreen/agent/agent.go"""",""""line"""":274},{""""function"""":""""github.com/evergreen-ci/evergreen/agent.(*Agent).runTask"""",""""file"""":""""C:/data/mci/95573c9ad530edf932b8b7f41c654bc2/gopath/src/github.com/evergreen-ci/evergreen/agent/agent.go"""",""""line"""":213},{""""function"""":""""github.com/evergreen-ci/evergreen/agent.(*Agent).loop"""",""""file"""":""""C:/data/mci/95573c9ad530edf932b8b7f41c654bc2/gopath/src/github.com/evergreen-ci/evergreen/agent/agent.go"""",""""line"""":118},{""""function"""":""""github.com/evergreen-ci/evergreen/agent.(*AgentSuite).TestAgentEndTaskShouldExit"""",""""file"""":""""C:/data/mci/95573c9ad530edf932b8b7f41c654bc2/gopath/src/github.com/evergreen-ci/evergreen/agent/agent_test.go"""",""""line"""":111},{""""function"""":""""runtime.call32"""",""""file"""":""""c:/go1.8/go/src/runtime/asm_amd64.s"""",""""line"""":514},{""""function"""":""""reflect.Value.call"""",""""file"""":""""c:/go1.8/go/src/reflect/value.go"""",""""line"""":434},{""""function"""":""""reflect.Value.Call"""",""""file"""":""""c:/go1.8/go/src/reflect/value.go"""",""""line"""":302},{""""function"""":""""github.com/evergreen-ci/evergreen/vendor/github.com/stretchr/testify/suite.Run.func2"""",""""file"""":""""C:/data/mci/95573c9ad530edf932b8b7f41c654bc2/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/stretchr/testify/suite/suite.go"""",""""line"""":102},{""""function"""":""""testing.tRunner"""",""""file"""":""""c:/go1.8/go/src/testing/testing.go"""",""""line"""":657},{""""function"""":""""runtime.goexit"""",""""file"""":""""c:/go1.8/go/src/runtime/asm_amd64.s"""",""""line"""":2197}]}}}}"""
"EVG-2698","Bug","ui",2,"Highlighted text in lobster moves when scrolling","""When you highlight text in lobster, then scroll, the highlighted selection changes."""
"EVG-2697","Task","app",1,"Allow tasks to log their post group","""I'm adding this as a placeholder for determining how/if we should log post group commands."""
"EVG-2693","Bug","app",2,"Finish Time is earlier than Start Time for a task","""For the given task, the finish time is before the start time. Additionally, the time taken field appears to have suffered from some rollover miscalculation and the UI does not display the time values.      https://evergreen.mongodb.com/api/rest/v2/tasks/mms_int_INT_JAVA_ATM_patch_5ea54aa42725ca59ac8952f55d54a6e41edf7c69_5a70f937e3c3317d9b001fae_18_01_30_23_01_12"""
"EVG-9593","Build Failure","platform",1,"lint failure","""h2. [lint failed on race-detector|https://evergreen.mongodb.com/task/amboy_race_detector_lint_06ba2f6774cb462f34131a041e60dafcedfccff8_18_02_01_18_21_25/0]     Host: [ec2-34-227-59-90.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-jkyg6qth]   Project: [amboy|https://evergreen.mongodb.com/waterfall/amboy]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-2708","Bug","app",1,"UnscheduleStaleUnderwaterTasks may blacklist old tasks recently scheduled by users","""Max scheduled https://evergreen.mongodb.com/task/mongodb_mongo_master_windows_64_2k8_ssl_noPassthrough_WT_77fbada9b93dfa474d41216baa19f556e75bc8ca_17_11_10_22_58_32, and it was blacklisted, potentially by UnscheduleStaleUnderwaterTasks, because this function only takes into account the task's create time. This means that users who wish to schedule tasks older than two weeks must also reset their priority.    We could potentially fix this by filtering out tasks with a non-empty """"activated_by"""" field."""
"EVG-2706","Bug","app",1,"Attach.artifacts always logs that it attaches 1 file","""https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_jsCore_patch_06b9e9ebf9778293b8425093ada0aa1eb83b594e_5a623652e3c331768300087f_18_01_19_18_18_06"""
"EVG-2711","Bug","app",0,"Uptime in decommissioned host jira text shows strangely formatted incorrect time","""For example, one ticket shows """"2562047h47m16.854775807s"""" for ubuntu1604-ppc-3.pic.build.10gen.cc. It would be nice if it could 1) use correct uptime (the host has been up for """"1 day,  1 hour and 2 minutes"""" right now, 2) not show so much precision for the seconds, and 3) include days, not just hours, so something like """"1d1h2m30s"""" or something similar. """
"EVG-2710","New Feature","app",1,"Add link to host page in decommissioned host jira description","""For example in a ticket associated with host ubuntu1604-ppc-3.pic.build.10gen.cc, it would be useful to include a link to https://evergreen.mongodb.com/host/ubuntu1604-ppc-3.pic.build.10gen.cc for quickly seeing what the host has been doing and to adjust its status.     Less obviously useful, and a separate request, but still perhaps worth doing, if it's easy, would be making the distro text in the description a link to the distro page (""""ubuntu1604-power8-test"""" could link to https://evergreen.mongodb.com/distros##ubuntu1604-power8-test)"""
"EVG-2722","Bug","app",1,"Display Task Behaviour around Execution tasks is wrong","""It's currently possible to  1. Create a patch with a single execution task of a display task  2. Create a tag which only contains part of an execution tag, that only activates the tagged tasks.       If a tag includes 1 or more execution tasks from a display the task, every task from the display task should be included.   In all other situations, execution tasks should be invisible to the user. (including aliases task regexes, and task requests from the command line."""
"EVG-2720","Bug","app",1,"avoid static host decomissioning loops","""- don't decommission static hosts for consistent system failures  - move from 6 consecutive failures back to 3  - continue to decomission for taskrunner errors  """
"EVG-2719","Bug","app",2,"Investigate whether we should apply patches with --whitespace=fix","""We found a case where the patch process fixing whitespace locally on the Evergreen host caused our linting task to miss whitespace errors that otherwise would have kept the code from being merged into master. What happens is that then the code can be merged, but the next person to open a PR off of that base will cause our linting task to fail because the whitespace issues won't have been fixed.    It would be better for the patch process to not fix whitespace so that we can catch it on our own in our lint tasks.    Re: https://mongodb.slack.com/archives/C0V896UV8/p1517849650000072  Example: https://evergreen.mongodb.com/task/mms_unit_js_UNIT_JS_LINT_patch_2d46f5d9caf3d38537766f163377eeb840dbcb82_5a720430e3c3317d9b004258_18_01_31_18_00_17"""
"EVG-2718","Bug","app",1,"Monitor attempted to terminate intent host","""Feb 05 16:31:34 evergreenapp-2.build.10gen.cc evergreen[23088]: [message='Error cleaning up hosts' runner='monitor']: error terminating host: error terminating host evg-rhel62-small-20180205161616-1618972814792567608: error terminating host evg-rhel62-small-20180205161616-1618972814792567608: after 10 retries, operation failed: InvalidInstanceID.Malformed: Invalid id: """"evg-rhel62-small-20180205161616-1618972814792567608"""" (expecting """"i-..."""")"""
"EVG-2717","New Feature","app",1,"remove patch.Intent type from the amboy job for patch intent creation","""You can't (easily) roundtrip a struct that has an field with an interface type, so if (when?) we ever move patchIntentProcessors to using the remote queue, we end up with a sticky situation.     It's not critical, but we should do this soon. """
"EVG-2715","New Feature","legacy-ui",1,"colapse ""task_scheduled"" events in event-log UI","""we run the scheduler often and it probably ends up obscuring lots of useful data. """
"EVG-2714","Bug","ui",1,"lobster is no longer usable in Firefox","""It used to look just like Chrome's rendering, but now it looks all wrong; the buttons are spaced incorrectly, the font is the wrong size, and the """"details"""" are always missing -- the pane vanishes immediately after you click """"Show Details""""."""
"EVG-9594","Build Failure","platform",2,"test-rest failure","""h2. [test-rest failed on ubuntu1604|https://evergreen.mongodb.com/task/amboy_ubuntu1604_test_rest_8f3592813cce537dd0fba0b61ecb3e85a3d0b38d_18_02_06_01_24_26/0]     Host: [ec2-34-228-185-201.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-9j2843pg]   Project: [amboy|https://evergreen.mongodb.com/waterfall/amboy]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-9345","Bug","platform",2,"store more concise errors in jobs, log more in pools","""- log errors in the pools so we can see when/where things go wrong.  - avoid pushing stack traces in job documents"""
"EVG-2737","Bug","app",2,"ensure isolation during task creation","""- derive date for version create time from github rather than system time   - sort tasks and builds before insertion so that we're always inserting in the same order """
"EVG-2734","Bug","app",1,"Evergreen cannot apply mailbox-style patches which create new files, and moves them in a later commit","""Maybe a bug maybe user error, although I don't think I did anything interesting with git here.    https://evergreen.mongodb.com/build/dsi_linux_runner_patch_c48251e93c6b82523444f689e276a1c1e9252487_5a7b67c7c9ec4420de328f67_18_02_07_20_55_35    From this PR:  https://github.com/10gen/dsi/pull/20    Filing in case it's interesting - I'm gonna try working around it in the mean-time."""
"EVG-2733","Improvement","ui",2,"Improve logkeeper logging","""There were a few changes made to logkeeper logging so we could send logs to splunk that turned out to make it more difficult to troubleshoot load related issues.  IIRC, we stopped logging good requests and only log errors.    Right now, logs look like this:      What would help us is:  * Have access logs (http method, path, status) for all requests  * Log client ip (I believe it's available as one of the header fields)  * Log some details for 'Internal Server Error'    Perhaps we can split access logs and logkeeper logs and don't send some of them to splunk?"""
"EVG-2732","Bug","app",2,"test_history REST endpoint does not return successful tasks info","""When retrieving task information from the {{/rest/v1/projects/<project_id>/test_history}} endpoint.  The results do not contain successful tasks when {{taskStatuses}} includes """"success"""".    Some additional tests showed a related issue: while timeout results are returned when {{taskStatuses='timeout'}} they are not returned when {{taskStatuses='timeout,failed'}}. Only the failed tasks results are returned."""
"EVG-2731","Bug","app",1,"manifest override for ""always fetch latest""","""be able to specify modules with """"always fetch latest"""" semantics to avoid the manifest pinning for things like the fuzzer/sysperf/etc."""
"EVG-2743","Bug","app",1,"remove cost reporting go routine in task end","""make it an amboy job!"""
"EVG-2742","Bug","app",1,"avoid creating tickets for successive build failures","""we're not decoing these hosts, but we are creating tickets, we shouldn't. """
"EVG-2739","Bug","app",1,"Create Report for Expected Duration versus Actual Duration ","""auto log to splunk/etc. """
"EVG-2738","Build Failure","app",1,"smoke-test-task failure","""h2. [smoke-test-task failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_smoke_test_task_66dd4be6aba9503f99316e5045378019eca86543_18_02_07_19_54_28/0]     Host: [ec2-34-226-193-185.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-xghg6pxj]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-9574","New Feature","platform",1,"Add flag to only print failed tests on greenbay run","""Currently the output is a bit too noisy for large projects. I really only care about failed tests."""
"EVG-2745","New Feature","app",2,"Command attach.artifacts should not error if the file is missing","""The behavior of {{attach.artifacts}} should either have an option to ignore missing files or not error if a file is missing from the {{files}} param."""
"EVG-2753","Improvement","app",2,"Combine Host Reachability and LastCommunication Time Values into ""LastContactTime""","""or similar, there's no meaningful difference between these values at the moment, but the monitor/hostinit/taskrunner handle them differently. """
"EVG-9590","Build Failure","platform",1,"lint failure","""h2. [lint failed on race-detector|https://evergreen.mongodb.com/task/amboy_race_detector_lint_d2da6d14e40c46ce82dc497c01301d6da8302010_18_02_12_16_06_14/0]     Host: [ec2-34-229-19-196.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-jc986kpj]   Project: [amboy|https://evergreen.mongodb.com/waterfall/amboy]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-2772","New Feature","app",2,"set content-length header in agent post requests","""so we can log better in the API server """
"EVG-2767","Bug","legacy-ui",2,"Restart Task in UI doesn't close restart window/can spawn duplicate tasks","""1. clicking yes doesn't close the window.  2. The user can click Yes multiple times and have it create multiple tasks."""
"EVG-2764","Improvement","app",1,"Move all documentation from repo into wiki","""./plugin/builtin/buildbaron/README.md  ./plugin/builtin/perfdash/README.md  ./service/REST_README.md  ./docs/using-degraded-mode.rst  ./rest/how_to.rst  ./rest/usage.rst"""
"EVG-2756","Bug","app",1,"deprecate and warn support for tasks that run on more than one distro","""In the medium term we would like to remove the ability to specify more than one distro. Historically it was useful in using static hosts and dynamic hosts in related pools, but that's not been a reality of our deployment recently.     At the same time the logic to support allowing tasks to appear in more than one task queue makes task dispatching and scheduling much more complicated than it might be.     In the future we can add a layer inbetween distros, which describe host configurations, and the distros which represent queues, using some sort of pooling or grouping system, which will provide more flexibility as it will be an application wide configuration, and not specific to task definitions.     This deprecation and warning is the first step in this process."""
"EVG-2755","Bug","app",1,"remove ""generic-linux-distors"" from self-tests.yml ","""differences in configuration between machines lead to build failures that are not needed.     pool sizes should be large enough on 16.04"""
"EVG-2786","Build Failure","app",1,"Fix Lint Errors in rest/model","""    The BuildFromService /ToService functions are copying the send.SlackOptions object from evergreen/SlackConfig. This means it's copying a mutex, and generating a mutex error. I can't reproduce this in evergreen, but both Brian and I can repro locally."""
"EVG-2783","Bug","app",1,"Panic in GetDNSName",""""""
"EVG-2782","Bug","app",1,"Passing --large to the patch command doesn't enable large patches","""because NewRequestReader has a 16MB limit. We should remove --large, or make a bigger reader."""
"EVG-2779","New Feature","app",1,"tune runner parallelism","""in the post reachability-check world, we should tune things up a bit:    - reexamine threads running taskrunner (as more of the retry waiting for a host to get ready is happening here)   - more threads running host provisioning in hostinit (because this ends up retrying)   - terminate hosts loop in the monitor.  - timeout for host termination operation  - timing of the interval for hostinit/taskrunner/monitor"""
"EVG-2775","Bug","legacy-ui",2,"Lobster given undefined url for all logs view","""From the """"job logs"""": https://logkeeper.mongodb.org/build/63b3fc51e56a2e15bc96d26685c0e020  If you click """"Complete logs for all"""" you get: https://logkeeper.mongodb.org/lobster/build/63b3fc51e56a2e15bc96d26685c0e020/test/undefined?bookmarks=0%2C11018  Which has """"undefined"""" as the test id. It should say """"all"""" instead of """"test/undefined"""": https://logkeeper.mongodb.org/lobster/build/63b3fc51e56a2e15bc96d26685c0e020/all?bookmarks=0%2C11018"""
"EVG-2774","New Feature","app",1,"log local queue stats on web servers ","""also drop local job listing in queue report"""
"EVG-2773","New Feature","app",1,"make sure repotracker catchup jobs respect the github api limit","""in the case that the queue gets backed up, we don't want to blow through limit when we start working the queue. """
"EVG-9526","New Feature","platform",2,"improve string format of stack traces ","""particularly for panics that we log to splunk"""
"EVG-2794","Bug","app",1,"Panic when running CLI commands that communicate with API with invalid key","""Johns-MacBook-Pro-2:evergreen johnliu$ ./evergreen host list --all  runtime error: invalid memory address or nil pointer dereference"""
"EVG-2789","Bug","app",1,"Panic in agent when enforcing callback timeouts","""{{https://evergreen.mongodb.com/host/sir-5v887hak}}"""
"EVG-2798","New Feature","app",0,"add TTL index on task event log ","""this log only has data for tasks, including system metrics data.     ttl to six months """
"EVG-2797","Task","app",2,"Fix zero dates in versions","""Perf depends on valid create_time in versions, so we should go back and correct these."""
"EVG-2796","Build Failure","app",2,"git checkout fails if the mongo diff is empty","""https://evergreen.mongodb.com/task/sys_perf_3.2_linux_standalone_compile_patch_ba20ef3dc5e82459f9c7ddbce4a055b3d32aab74_5a856c25e3c331600b270c14_18_02_15_11_21_56    * This is a common use case in performance, most of our diffs are against the modules  * This has happens from time to time, please consider adding a unit test for protecting this use case"""
"EVG-2802","Improvement","app",2,"move cloud status change detection ","""there is one """"hostMonitoringFunction"""" with the sole function of detecting when hosts are terminated externally (e.g. spot-host-termination) we should move this functionality out of the monitor and into an independent amboy job. """
"EVG-2801","Improvement","app",2,"time out tasks when heartbeats expire in amboy job","""there is only one task flagging function in the monitor which times out/ends tasks when the heartbeats expire. We should move this functionality into an amboy job, and remove it and it's complicated machinery from the monitor"""
"EVG-2800","New Feature","app",1,"remove excess monitor logging ","""it logs a lot, and very little of it is useful. """
"EVG-2799","New Feature","app",2,"report on host idle time upon termination. ","""just as we do for task-end-stats, we can and should collect host-termination-stats when we terminate a host.    long term, stats may include:  - total up time,   - total idle time.  - time for tasks,   - cost of host,  - number of tasks run  - """
"EVG-2816","Bug","app",2,"Don't Make Patches with no Build Variants or Tasks","""Like this one: https://evergreen-staging.corp.mongodb.com/version/5a8522cb9dbe327d22aec3c5"""
"EVG-2815","Bug","app",2,"`go test` failure shown when negative time printed","""`go test` sometimes mistakenly prints out a negative time. We recently got this output in our output:        We use the command `gotest.parse_files` to display which test cases succeed or fail for a given task. For the above test case, it showed this as a failure and therefore reported the task as a failure even though `go test` exited successfully. I assume this is due to the parsing logic doesn't expect a negative run time for a test.    Evergreen task: https://evergreen.mongodb.com/task/mongo_go_driver_tests__version~3.4_os~osx_test_standalone_noauth_nossl_patch_c0d49e37272a4a5a31ac5ce84e453d5c9a31415e_5a8c71e3e3c331479c35c023_18_02_20_19_07_34    Log file: https://evergreen.mongodb.com/test_log/5a8c79022fbabe102183dd6a?raw=1"""
"EVG-2826","Bug","app",1,"The `get-update` command fails due to version mismatch","""When running the {{evergreen.exe get-update}} command on Windows I am getting the following error:      My current version is:      If I run the file, which {{evergreen get-update}} downloaded I get this version:  """
"EVG-2823","Bug","app",1,"avoid negative values for cost","""validate time range to make sure its positive.    wrap the logic of CostForDuration"""
"EVG-9661","Task","platform",2,"driver should have an ID() and this should be propogated to the locker","""so that the """"owner"""" in a job reflects (somehow) the id of the machine/instance that is running it"""
"EVG-2829","Build Failure","app",1,"race-rest-client failure","""h2. [race-rest-client failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_rest_client_272f89c1db8467057a17bdb13eca2099dd6b0a7a_18_02_22_14_57_58/1]     Host: [ec2-54-87-242-248.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-76v87v8j]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2828","Task","app",1,"use continue on error semantics when canceling stale patches from PRs ","""e.g. when you close requests or push new builds just so things don't straggle. """
"EVG-9684","Task","platform",1,"add annotate method for message composer. ","""have method that we can use to add arbitrary (quasi structured data) to any message composer. We'll mostly add it to the base type, but may override (particularly for fieldsMessage) in some implementations.    The main use case, initially would be to be able to use existing messages but also write logging helpers that add request ids for better traceability in request logging. """
"EVG-2841","Improvement","app",1,"Agents that get 409s for task secrets should get another task, not exit","""Two hosts https://evergreen.mongodb.com/host/sir-xbpr7eek and https://evergreen.mongodb.com/host/sir-sfqr542j, got the same task from the next task endpoint. The latter got 409s, the agent exited, and then the host was reaped. Instead the latter should instead stop task execution and get another task. However, we may need to make a distinction between a 409 because the host secret is wrong (in which case getting a new agent is the right thing to do) versus if the task secret is wrong (in which case the agent should ask for another task)."""
"EVG-2837","Problem Ticket","app",2,"Timeout / error when getting history of the failures","""```https://evergreen.mongodb.com/rest/v1/projects/mongodb-mongo-master/test_history?sort=latest&tasks=sharding_auth&tests=jstests%2Fsharding%2Fconvert_to_and_from_sharded.js&taskStatuses=failed&limit=1```  returns  """"The service is temporarily unavailable. Please try again later."""" error  """
"EVG-2836","Task","legacy-ui",1,"Inactive display task has odd UI color","""CC [~john.liu]"""
"EVG-2854","New Feature","app",2,"Support aliases for groups of distros","""Users might have a task that can run on any Linux, for example. We should provide a way of specifying groups of distros which allows tasks to run on whichever queue they are at the head of first."""
"EVG-2853","Bug","app",1,"API V1 Task History fails to return correct results for various inputs","""Example: https://evergreen.mongodb.com/rest/v1/tasks/compile/history?project=mongodb-mongo-master    What am I doing wrong?"""
"EVG-2850","Bug","app",2,"enterprise module patch not always being applied.","""I have some work that has changes in both the community and enterprise repos.  I noticed that I was getting inconsistent results patch-building the them. Sometimes it appeared that while the enterprise module was added, the patch on it was not applied.    https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_compile_patch_9c65faa1ea24b92d86f846abd38909b4ef2fe5bc_5a90936be3c33134821ce592_18_02_23_22_19_55##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%25229c65faa1ea24b92d86f846abd38909b4ef2fe5bc%2522%257D%252C%257B%2522hash%2522%253A%25229c65faa1ea24b92d86f846abd38909b4ef2fe5bc%2522%257D%255D%257D    In this patch-build, on the first execution the enterprise patch was not applied and the compile failed, then later when I rescheduled it, the enterprise patch was applied and the compile succeeded."""
"EVG-2899","Bug","app",1,"Error when using ""Decommission hosts of this distro for this update"" checkbox in Distros UI","""error unmarshaling request: json: cannot unmarshal object into Go struct field Distro.user_data of type string"""
"EVG-2898","Bug","app",1,"Fetching Patched Project Configurations can Fail for Github PR Requests","""Fetching patch projects uses the Github diffs, instead reaching out the pulls ref."""
"EVG-2897","Bug","app",2,"Document commands missing in wiki","""https://github.com/evergreen-ci/evergreen/wiki/Project-Commands"""
"EVG-2879","Task","app",2,"Use github <-> crowd mapping to associate Github PR patches with the actual user that created it","""Refactor patch intents to use Github UID number"""
"EVG-2875","Task","app",2,"Add flag to patch/patch-file CLI commands to apply default subscriptions to patch","""Patch creation route should be modified to creation subscriptions at this time"""
"EVG-2858","Bug","legacy-ui",1,"When creating a new distro certain validators never return true","""https://github.com/evergreen-ci/evergreen/blob/master/public/static/js/distros.js#L374    When creating a new distro the settings key is not defined so the validators linked above throw 'is_vpc' is not defined essentially crashing the validation of the form. When this happens you are unable to click Save Configuration and thus cannot make a new distro.    Note that copying an existing distro works as expected."""
"EVG-2856","Improvement","legacy-ui",1,"Show more task/version history drawer commit text","""Problem:  Often I want to see the commit summaries to figure out which commits between a test passes and failing might be related to the issue I'm seeing. Currently, I hover over each commit to see the full text, which is slow and cumbersome.    Proposed Solution:  Could we add allow allow the commit side bar to take up more side space to it can display the complete commit summaries and then users could or change the size as they need? """
"EVG-2907","Bug","app",1,"Panic when retrieving config","""    error:  error retrieving admin settings: error populating section alerts: error retrieving section alerts: reflect: call of reflect.Value.Type on zero Value       extended:  error populating section alerts: error retrieving section alerts: reflect: call of reflect.Value.Type on zero Value  github.com/evergreen-ci/evergreen.GetConfig   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/config.go:935  github.com/evergreen-ci/evergreen/service.(*APIServer).NextTask   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/service/api_task.go:438  github.com/evergreen-ci/evergreen/service.(*APIServer).NextTask-fm   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/service/api.go:771  github.com/evergreen-ci/evergreen/service.(*APIServer).checkHost.func1   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/service/api.go:256  net/http.HandlerFunc.ServeHTTP   /opt/go1.8/go/src/net/http/server.go:1942  github.com/evergreen-ci/evergreen/vendor/github.com/gorilla/mux.(*Router).ServeHTTP   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/gorilla/mux/mux.go:114  github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.Wrap.func1   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go:46  github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.HandlerFunc.ServeHTTP   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go:29  github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.middleware.ServeHTTP   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go:38  github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.(middleware).ServeHTTP-fm   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go:38  github.com/evergreen-ci/evergreen/service.UserMiddleware.func1   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/service/middleware.go:401  github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.HandlerFunc.ServeHTTP   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go:29  github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.middleware.ServeHTTP   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go:38  github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.(middleware).ServeHTTP-fm   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go:38  github.com/evergreen-ci/evergreen/service.(*RecoveryLogger).ServeHTTP   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/service/middleware.go:478  github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.middleware.ServeHTTP   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go:38  github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni.(*Negroni).ServeHTTP   /data/mci/60739af262bc9d09b433b1c3b884b7cb/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/urfave/negroni/negroni.go:86"""
"EVG-2903","Bug","app",1,"Copying project copies git history","""This is a hard one to describe -     I copied one project to another, carefully not hitting the save button until the fields were all updated. The new project and old project have nothing to do with each other (they don't share repos). They do share admins.     As soon as I hit save, it popped up an error message saying it couldn't find the base commit, so I entered the latest one from the new project repo branch.     The waterfall page shows all the history from the old project with weird 404 errors when I click on the github links pointing to commit hashes from the old project but under the new project's repo. """
"EVG-2902","Build Failure","app",1,"test-rest-client failure","""h2. [test-rest-client failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_rest_client_b0b8a79ff37ba3d0e654ba4726b05b7dcd3aed52_18_02_28_18_26_31/0]     Host: [ec2-34-228-145-51.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-xsi84qrk]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2911","Build Failure","app",2,"smoke test fails if a commit is pushed to github during the test","""h2. [smoke-test-task failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_smoke_test_task_8906dca1975e308582f4604169998a715767f314_18_03_01_21_05_07/1]     Host: [ec2-54-221-34-35.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-4axr4ezk]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~richard.samuels]~  """
"EVG-2910","Bug","legacy-ui",1,"Private project variables are deleted on page save","""Repro steps:  1. Make a private project variable. Save the page.  2. Make another project variable, either private or not. Save the page.    What happens:  The private variable from the first step will be set to the empty string in the database."""
"EVG-2909","Bug","app",1,"json/tag and json/commit apis return different data for the same params","""For some reason, json/commit api does not return data for some versions. These two calls should be equivalent, however they doesn't:  This works: https://evergreen.mongodb.com/plugin/json/tag/performance-3.6/3.6.1-Baseline/linux-mmap-repl/misc/perf  This doesn't: https://evergreen.mongodb.com/plugin/json/commit/performance-3.6/025d4f4fe61efd1fb6f0005be20cb45a004093d1/linux-mmap-repl/misc/perf  The bug affects several pages of evergreen. At least performance discovery and task page (the page with trend charts). Going to use json/tag api for perf discovery right now, because it's critical.  CC: [~john.liu], [~sam.kleinman], [~jim.oleary]"""
"EVG-2913","Bug","app",2,"Code refactoring for REST V1 API: waterfall versions","""The waterfall versions API, which was written for perf. discovery, should be moved to rest api v2, which requires code refactoring and unit test writing."""
"EVG-2984","Bug","app",2,"Runner hangs indefinitely during deploys","""The runner has hung during several recent deploys, and we had to kill -9 it to continue the deploy. We should figure out why it is hanging."""
"EVG-2922","Improvement","app",2,"Cleanup UpdateBuildAndVersionStatusForTask Database interactions","""The bit of code makes a large number of unnecessary db fetches """
"EVG-2921","Bug","app",2,"s3.put with local_files_include_filter to non-existent bucket does not fail task","""in the following task:    https://evergreen.mongodb.com/task/cloud_automation_master_builddebian12deb_Automation_Agent_Generic_25348cb36b8d3bd3a0938fe6d1a73b0adeedddec_18_03_05_17_22_04    We are trying to upload files (with a filter, so that we can't use the optional as described in the docs - https://github.com/evergreen-ci/evergreen/wiki/Project-Commands#s3put) to a non existent s3 bucket. Since we know the bucket doesn't exist, we expected the task to fail.     Files failed to upload (as expected) but the task was not marked as failed."""
"EVG-2919","Bug","legacy-ui",2,"Test results exceeds maximum document size on grid page","""https://evergreen.mongodb.com/grid/mongodb-mongo-master:  """
"EVG-9364","Bug","platform",2,"Investigate Blockages with Amboy Remote Queues","""Amboy queues are occasionally getting blocked as in MCI-2772.    This is especially true on hard restarts of Evergreen."""
"EVG-2929","Task","app",1,"Attach generate.tasks json files as artifacts","""This will help a user debug their generated tasks and provide more visibility."""
"EVG-2926","Bug","app",2,"Enforce requirement for all projects to specify a branch","""Projects can omit branch, and parts of evergreen assume master. This breaks PR testing."""
"EVG-2925","Incident","app",1,"Small number of EC2 errors logged","""At around 10 am today           error:     error checking DNS name for host sir-r64847zh: spot instance does not yet have an instanceId             extended:     spot instance does not yet have an instanceId  github.com/evergreen-ci/evergreen/cloud.(*ec2Manager).GetDNSName      /Users/johnliu/go/src/github.com/evergreen-ci/evergreen/cloud/ec2.go:667  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).IsHostReady      /Users/johnliu/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:358  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).setupReadyHosts.func1      /Users/johnliu/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:220  runtime.goexit      /usr/local/Cellar/go/1.9.2/libexec/src/runtime/asm_amd64.s:2337  github.com/evergreen-ci/evergreen/cloud.(*ec2Manager).GetDNSName      /Users/johnliu/go/src/github.com/evergreen-ci/evergreen/cloud/ec2.go:667  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).IsHostReady      /Users/johnliu/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:358  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).setupReadyHosts.func1      /Users/johnliu/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:220  runtime.goexit      /usr/local/Cellar/go/1.9.2/libexec/src/runtime/asm_amd64.s:2337  error checking DNS name for host sir-r64847zh  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).IsHostReady      /Users/johnliu/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:360  github.com/evergreen-ci/evergreen/hostinit.(*HostInit).setupReadyHosts.func1      /Users/johnliu/go/src/github.com/evergreen-ci/evergreen/hostinit/setup.go:220  runtime.goexit      /usr/local/Cellar/go/1.9.2/libexec/src/runtime/asm_amd64.s:2337  """
"EVG-2924","Bug","legacy-ui",2,"Display tasks square is grey after completion ","""https://evergreen.mongodb.com/build/mci_race_detector_patch_3214a9f6e5553b626192ce15de72fd486398fbdb_5a99959f2a60ed0765bd4d58_18_03_02_18_19_17"""
"EVG-2936","Improvement","app",1,"Remove dead code for form data in submitPatch in api_patch.go","""I added a logging statement so we can verify in Splunk that the code is never hit."""
"EVG-2934","Bug","app",1,"Cannot use a macro expansion in s3.put optional parameter","""The following is not valid:      The {{optional}} parameter cannot use a macro expansion."""
"EVG-9555","New Feature","platform",2,"support autodetection of distribution ","""the {{artifacts}} subcommand currently detects what architecture we are on, but not the distribution (when run on linux). There are presently a number of varied approaches to doing this in drivers-specific code paths, most notably in the [download-mongodb.sh|https://github.com/mongodb-labs/drivers-evergreen-tools/blob/master/.evergreen/download-mongodb.sh#L8-L42] script used by most drivers running on evergreen. If this were handled by curator, we could _completely_ drop the {{download-mongodb.sh}} script. """
"EVG-2947","Bug","app",2,"Task failed but failure output was not logged","""https://evergreen.mongodb.com/task/mci_ubuntu1604_js_test_ff04b3c3a109e85b980a6430d64258345aaaebbd_18_03_08_21_59_10/0    should have   08 03 2018 17:41:28.366:INFO [karma]: Karma v2.0.0 server started at http://0.0.0.0:9876/  08 03 2018 17:41:28.370:INFO [launcher]: Launching browser PhantomJS with unlimited concurrency  08 03 2018 17:41:28.375:INFO [launcher]: Starting browser PhantomJS  08 03 2018 17:41:29.240:INFO [PhantomJS 2.1.1 (Mac OS X 0.0.0)]: Connected on socket DcdSb01aM2ON7l7aAAAA with id 21142958  PhantomJS 2.1.1 (Mac OS X 0.0.0) ERROR    {      """"message"""": """"SyntaxError: Expected an identifier but found 'url' instead\nat js/services/rest.js:358:0"""",      """"str"""": """"SyntaxError: Expected an identifier but found 'url' instead\nat js/services/rest.js:358:0""""    }      make: *** [js-test] Error 1"""
"EVG-2945","Bug","app",1,"numnewreporevisionstofetch not respected for new projects","""Instead of downloading 10 revisions for new projects (""""numnewreporevisionstofetch"""") Evergreen downloads 500 (""""maxreporevisionstosearch"""")."""
"EVG-2940","Task","app",1,"pass -i to go build to cache dependencies ","""also improve the clean target to clean GOPATH/pkg/"""
"EVG-2939","Task","app",1,"reduce frequency of process tree collection","""we currently collect proc tree info in the agent every 5 seconds for the first minute before dropping to once every 10 seconds. We should remove the special casing of the first period.     We might also consider dropping this to once every 15 seconds to reduce the data volume. """
"EVG-2949","Bug","app",2,"When many commits are pushed at once, run the latest one","""I pushed a batch of commits, but it chose to run one of the earlier ones, rather than the top of the stack."""
"EVG-2966","Improvement","app",2,"Cache versions in task groups in scheduler","""Large numbers of task groups in the queue can potentially slow the scheduler, since there will be n*log n calls to EarlierInTaskGroup per task group, where n is the number of tasks in the task group in the queue. EarlierInTaskGroup queries for a version and unmarshalls its yaml."""
"EVG-2980","Bug","legacy-ui",1,"Waterfall needs a color for system-* statuses","""https://evergreen.mongodb.com/task/mci_race_detector_display_lint_3083938e219bb79558affa23445b04be49554e85_18_03_14_20_00_18"""
"EVG-2979","Build Failure","app",1,"race-service failure","""h2. [race-service failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_service_3083938e219bb79558affa23445b04be49554e85_18_03_14_20_00_18/0]     Host: [ec2-52-201-88-193.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-85kr56vg]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-2978","Improvement","app",1,"Using aliases is overly verbose","""When I upload a patch using an alias, it logs every task it's going to run.  This doesn't happen when not using an alias, and floods my terminal with unuseful noise.        vs    """
"EVG-2986","Build Failure","app",2,"test-util failure","""h2. [test-util failed on windows|https://evergreen.mongodb.com/task/mci_windows_test_util_32b7ae3e8f4ab2da14c7ecfb333eb300dd772bd7_18_03_15_15_06_09/0]     Host: [ec2-54-221-3-232.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-3iai7f5g]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~richard.samuels]~  """
"EVG-2981","Bug","perf-tools",1,"Perf. discovery - ratio value representation and normalization","""Currently, ratio vaulue is calculated as Sa / Sb, where Sa and Sb are speeds of 'compare from/to' revisions. This approach produces abnormal values distribution. For example, ratio 1/3 is closer to 1 than ratio 3/1.  To fix this issue we could use different approaches:  * apply log function: log(Sa / Sb). In this case log(1/3) = -log(3/1) and also log(1/1) = 0 (I think it fits the best for charts, for example trend chart)  * or modify existing function, so we could keep percentages: (sign(Sa / Sb) * max(Sa. Sb) / min(Sa, Sb) -1. For example for 3 / 1 it will give 2 (or 200%), for 1 /3 it will give -2 (or -200%), for 1 / 1 it will give 0(%).    Both approaches will produce normal distribution with peak near 0."""
"EVG-2991","Bug","legacy-ui",1,"Links in Event log to JIRA use a hostname of ""undefined""","""See: https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_windows_64_2k8_aggregation_fuzzer_54dc55063a25fdcae65356c2515e55768181dc80_18_03_15_22_10_50#/log/EV    Under the event: Mar 15, 2018 7:08:50 pmCreated Jira Alert BFG-57288.    BFG-57288 links to:  https://undefined/browse/BFG-57288"""
"EVG-2995","Build Failure","app",2,"race-service failure","""h2. [race-service failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_service_c109c8d2ecaf550a05223cbcaaae5d96d4f158c7_18_03_16_15_28_32/1]     Host: [ec2-35-173-204-177.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-aj985ajk]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~richard.samuels]~  """
"EVG-3007","Improvement","app",1,"Include project id in the task resource of the REST API v2","""In the rest API v2, the task resource returned from the {{/tasks/<task_id>}} endpoint should contain the {{project_id}}."""
"EVG-3006","Improvement","app",1,"Add query parameter to retrieve test results for any task execution in REST API v2","""The {{/tasks/<task_id>/tests}} endpoint returns the test results for the latest execution.    A query parameter should be added to be able to request the results for a specific execution."""
"EVG-3005","Bug","app",2,"teardown_group did not run in task group","""Test results should be visible here https://evergreen.mongodb.com/task/mci_race_detector_display_lint_patch_ddf48e044c307e3f8734279be95f2d9d7134410f_5ab00b2e2a60ed6c7b037ac7_18_03_19_19_10_39."""
"EVG-3004","Bug","app",1,"error: no dispatchable task found in the queue",""""""
"EVG-2996","Improvement","app",2,"Add support for read preference to Evergreen settings","""During a primary failover, we received this error      We set write concern in the Evergreen settings but not read preference. We could set read preference to primaryPreferred to avoid this error."""
"EVG-3015","Bug","app",2,"Github PR testing erroring with 404 not founds from Github and not creating patch documents","""See [here|https://mongodb.splunkcloud.com/en-US/app/search/search?q=search%20source%3Dhttp%3Aevergreen%20%22patch-intent-processor-github-d3628430-2c68-11e8-9d11-9b2e5bd22849%22&display.page.search.mode=verbose&dispatch.sample_ratio=1&earliest=-24h%40h&latest=now&sid=1521569644.1325457] for an example of such a failure.    Github is returning 404 not found on the commits url, in the case of [this|https://github.com/evergreen-ci/evergreen/pull/899] PR the URL was https://api.github.com/repos/evergreen-ci/evergreen/pulls/899/commits.     We're not sure if this is a Github issue, but it seems to be associated with increase of 502 errors for github.    Possibilities:  1. Retry  2. small delay before initial request  3. -Creating patch documents anyway?-"""
"EVG-3014","New Feature","app",2,"Ability to have patch-only variants","""The opposite of {{patchable: false}} to have variants that will only run if specifically patched against."""
"EVG-3010","Bug","app",2,"CLI list aliases command does not list tags",""""""
"EVG-3024","Bug","app",2,"schedule tasks that have generate.tasks commands ahead of tasks that don't","""these tasks, in effect, have dependencies, but the scheduler won't necessarily put them at the head of the line, which will increase time-to-completion metrics. """
"EVG-3020","Improvement","app",1,"EC2 price caching should retry","""To avoid test failures like https://evergreen.mongodb.com/task/mci_ubuntu1604_test_cloud_patch_e8acfa358074c70be806067e192335f4142f5ab4_5ab289e82a60ed6c7b2a6519_18_03_21_16_35_53"""
"EVG-3028","Build Failure","app",1,"lint failure","""h2. [lint failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_display_lint_54f99531f11ad4784886294cfa45ff01fde0d154_18_03_22_17_51_02/0]      Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~richard.samuels]~  """
"EVG-3027","Bug","app",1,"pass contexts through validator. ","""remove some/all github context.TODO cases """
"EVG-3026","Bug","app",1,"reduce interface service for http client pool","""maybe maintain more than one pool. """
"EVG-3033","Build Failure","app",1,"race-util failure",""" h2. [race-util failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_util_eed9d34f04f673ba3e5b0b399754a6739bcb1f13_18_03_23_17_35_32/0]   Host: [ec2-18-232-114-219.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-1e3g54sg]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]     ~BF Ticket Generated by [~john.liu]~ """
"EVG-3031","Bug","app",2,"task restarts in dispatching state lead to stuck hosts. ","""I think we should just monitor for tasks that have been dispatched for more than ~2 minutes that haven't been restarted and if they're stuck in that state, we should undispatch them, and force the hosts to retry the next-task process.    This happened to [this host|https://evergreen.mongodb.com/host/sir-xmpi7gvj], and [this task|https://evergreen.mongodb.com/task/mci_race_detector_lint_model_alert_patch_54f99531f11ad4784886294cfa45ff01fde0d154_5ab3fd192fbabe3354bd9d23_18_03_22_18_59_38/0] which was restarted quickly by pull request testing, which probably has tighter timings that this aspect of the system can tolerate. """
"EVG-3035","Task","app",1,"Organize UI code","""so that adding a new test file doesn't require listing it in karma.conf.js"""
"EVG-3034","Bug","app",1,"incremental improvements to all config options.","""- in the admin command not the deploy command  - have the ability to exclude deactivated projects"""
"EVG-3038","Bug","legacy-ui",1,"Project page should not have .evergreen.yml as ghost text","""This implies that is the default, but there is no default"""
"EVG-3037","Bug","app",2,"remove notify runner.","""I don't believe that the runner as such is being used, but several runners use the {{notify.NotifyAdmins}} function to send error messages, but otherwise this package is entirely unused. I think we can provide a more reasonable interface for """"sending admin email"""" and remove most of this legacy code now. """
"EVG-3036","Build Failure","app",1,"lint failure","""h2. [lint failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_display_lint_5fa703014758d18a7fb7474cb88d50910061c861_18_03_26_18_03_02/0]      Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~richard.samuels]~  """
"EVG-3041","Improvement","app",1,"Have DescribeSpotInstanceRequests handle errors where spot instance doesn't exist anymore","""Don't retry for these        args: { [-]         DryRun:  null         Filters:  null         SpotInstanceRequestIds: [ [+]        ]      }       client:  *cloud.awsClientImpl       error:  InvalidSpotInstanceRequestID.NotFound: The spot instance request ID 'sir-gv6g5dvg' does not exist   status code: 400, request id: ae7051ba-ecef-47e6-8880-f9c61f1b9d5e       message:  error running DescribeSpotInstanceRequests       metadata: { [+] """
"EVG-3051","Bug","app",2,"move stats collection jobs to the remote queue","""more delicately, we should see if we can merge host-idle and task-start into a single job, to reduce the overhead.  """
"EVG-3050","Bug","app",1,"move repotracker jobs to remote queue","""as a safer, step towards using the local queues less, let's move all local queue operations related to the repotracker to the remote queue.     this will involve flattening some nested jobs in patch intent processing. """
"EVG-3049","Build Failure","app",1,"smoke-test-task failure","""h2. [smoke-test-task failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_smoke_test_task_patch_19955d487142d8a07cf9954d5c59b97ec66b7a2a_5abd13b3c9ec445137470d67_18_03_29_16_26_27/0]     Host: [ec2-54-91-51-128.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-ijwr6jwk]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-8818","Build Failure","platform",1,"test-queue failure","""h2. [test-queue failed on ubuntu1604|https://evergreen.mongodb.com/task/amboy_ubuntu1604_test_queue_96e18b98692c7576a3cce6b9b4281898e7ff558b_18_03_29_22_01_31/0]     Host: [ec2-54-158-142-207.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-yfcg7kfh]   Project: [amboy|https://evergreen.mongodb.com/waterfall/amboy]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-5518","Bug","perf-tools",1,"'Compare' delta calculations seem wrong for latency tests","""The delta calculations are actually correct but with small numbers, rounding is used and the scale is misleading. Precision makes a huge difference when numbers are as tiny as these. Look at the example below:    (0.003 - 0.002) / 0.002 = 0.5  (0.0034 - 0.0017) / 0.0017 = 1     \|(0.002 - 0.003)\| / 0.002 = .334  \|(0.0017 - 0.0034)\| / 0.0017 = 0.5    When I first looked at the graph below, I thought the calculations were wrong (since they are rounded and the rounded numbers' deltas are very different from the more precise numbers' delta that is used the actual calculation). I then zoomed in and realized the imprecision of the displayed numbers was causing my confusion."""
"EVG-3063","Bug","app",1,"nil pointer exception in build route",""""""
"EVG-3061","Task","app",1,"Remove legacy event unmarshaller","""Cannot be done until October 2018    Pipe the following into the mongo shell; if it returns nothing it is safe to do this ticket::      Search the repo for """"//TODO: EVG-3061"""" to find code blocks to remove"""
"EVG-3055","New Feature","app",1,"move project activation code out of repotracker","""it doesn't depend on any repotracker functionality, and should probably live in the models package. """
"EVG-3069","Bug","app",1,"getEBSCost calls getInstanceInfo with spot instance request id",""""""
"EVG-3068","Bug","app",1,"rest v2 metrics endpoint 400","""http://evergreen.mongodb.com/api/rest/v2/tasks/dsi_linux_runner_lint_python_scripts_823c7fd3d5881c2ebfe615e088512002593fde5d_18_04_02_16_04_17/metrics/system    """
"EVG-8828","Build Failure","platform",1,"test-queue failure","""h2. [test-queue failed on ubuntu1604|https://evergreen.mongodb.com/task/amboy_ubuntu1604_test_queue_3b410354187d914a8dca37ba4f95ec767b8b836c_18_04_03_21_04_27/0]     Host: [ec2-107-22-74-78.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-yksr59xj]   Project: [amboy|https://evergreen.mongodb.com/waterfall/amboy]          ~BF Ticket Generated by [~sam.kleinman]~  """
"EVG-8783","New Feature","platform",1,"Allow sending slack messages to users in Grip","""The slack sender currently only allows sending messages to channels."""
"EVG-8667","New Feature","platform",2,"configurable email message type ","""sufficent functionality to replace notify package in evergreen, needs configurable subjects and other features the current smtp settings don't permit. """
"EVG-3091","Task","app",0,"Increase Github status API timeout","""increasing to 60s due to recent timeouts."""
"EVG-3090","Task","app",2,"Add implicit patch subscriptions","""Create subscriptions to patches automatically based on the user's patch settings."""
"EVG-3089","Task","app",2,"Add build-break subscriptions","""Automatically create subscriptions on the outcome trigger to repotracker created versions based on the project's build-break notification configuration.    Search """"build-break"""" in design document for details"""
"EVG-3088","Task","app",2,"Write migration or script to populate Github <-> Crowd mapping ","""*carefully* iterate the users in the org, and populate their github uid numbers (see model/user.GithubUser)     -Given that we employ ~1000 people, throttle this operation over a couple of hours so we avoid exhausting our API limits.-    [Dashboard|https://mongodb.splunkcloud.com/en-US/app/search/evergreen_github_monitoring] shows we don't drop below 4k anymore, so don't worry about throttling"""
"EVG-3087","Task","app",2,"Convert existing Github PR Status API code to use event driven notifications","""Also, after finalizing a version, also create a subscription to the outcome of that version"""
"EVG-3074","Bug","app",1,"Better handle monitor flagging the same host for termination twice","""problem saving new job host-termination-job.sir-t9ng7mkk.2018-04-03.16-00-00: E11000 duplicate key error collection: amboy.evg.service.jobs index: _id_ dup key: { : """"host-termination-job.sir-t9ng7mkk.2018-04-03.16-00-00"""" }"""
"EVG-3099","Bug","legacy-ui",1,"Link to first execution of a display task 404s","""This URL https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_unittests!_patch_d1b3c0a0a4dd31e1d1b37ed21cf00a92e59f276e_5ac52230e3c3314977acedf2_18_04_04_19_07_23/0##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522d1b3c0a0a4dd31e1d1b37ed21cf00a92e59f276e%2522%257D%255D%257D links to this URL https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_compile_unittests_patch_d1b3c0a0a4dd31e1d1b37ed21cf00a92e59f276e_5ac52230e3c3314977acedf2_18_04_04_19_07_23_0 for compile_unittests, which 404s. I believe the task execution number is being passed incorrectly to the URL by the UI code."""
"EVG-3095","Bug","app",1,"write migration function+generator for perf data migrations","""the JS we used in the shell to do this is, we should also have a mode that does this, but sets from/to project and leaves variant alone.     """
"EVG-3094","Improvement","app",2,"Entire task group should be able to depend on a task outside the task group","""If a single task in a task group depends on a task outside the task group, this task may not be scheduled with the rest of the task group. We should support task group-level dependencies for the case where a user wishes a task group not to run until some task outside of the group runs."""
"EVG-3105","Bug","app",1,"No reservation found for instance id","""https://mongodb.slack.com/archives/C866SR2LR/p1522954408000535"""
"EVG-3104","Bug","app",1,"Panic in repotracker","""https://mongodb.slack.com/archives/C866SR2LR/p1522954349000579"""
"EVG-3103","Task","app",2,"Github PRs pushed in close succession result in unscheduled tasks in most recent patch","""https://evergreen.mongodb.com/version/5ac4e71ac9ec446bd998d117 was the most recent commit, but we had to manually schedule windows.    The previous commit, https://evergreen.mongodb.com/version/5ac4e788c9ec446bd998d66e, worked fine.    Note that both had the same patch time."""
"EVG-3102","Bug","legacy-ui",1,"UI shows an undefined error in certain host status changes","""Two cases this has been observed in:  - When trying to change a static host to `decommissioned`  - When trying to update the status with an invalid status"""
"EVG-3101","Bug","app",1,"Type must be on-demand or spot error",""""""
"EVG-3113","Bug","app",2,"Pagination of /rest/v2/tasks/<task_id>/tests isn't compatible with running tests multiple times","""In the {{mongodb\-mongo\-*}} Evergreen projects we run test suites using resmoke.py with {{\-\-repeat=10}} on [the Linux Repeated Execution builder|https://evergreen.mongodb.com/task/mongodb_mongo_master_linux_64_repeated_execution_jsCore_4644d79d8cc42f2dd343fbab2f1d54fe80e2e2ea_18_03_01_15_02_40]. This causes the {{report.json}} we upload to Evergreen to have the same JavaScript test mentioned multiple times. Attempting to use pagination to iterate over the test results leads to (1) certain results being returned multiple times, and more noticably (2) an infinite loop. I think the {{/rest/v2/tasks/<task_id>/tests}} endpoint should be changed to either (a) ignore the {{limit}} parameter and return all executions of a test in its response, or (b) paginate using a unique value - for example, the _id of the document in the {{mci.tests}} collection.    """
"EVG-3111","Bug","app",1,"Panic in host termination job","""pool/helpers.go:36 runtime/asm_amd64.s:515 runtime/panic.go:489 runtime/panic.go:63 runtime/signal_unix.go:290 units/host_termination.go:85 pool/helpers.go:23 pool/helpers.go:61 pool/local.go:84 runtime/asm_amd64.s:2197"""
"EVG-3107","Bug","app",1,"avoid terminating slow hosts that have provisioned","""currently we have an absolute cutoff for a host to go from started->running a task, and it leasds to some frustrating cases where we successfully provision hosts that then get killed before the host gets an agent.     We should:   - when flagging slow provisioning hosts for termination we should make sure that they're actually not-yet-provisioned.  - have the timer reset when the host gets provisioned so """"waiting for agent"""" is tracked separately rather than having a single timeout for everything.    - right now the """"is this host idle and should be terminated"""" is in 2 files and at 3-4 functions/statements, that should be centralized. It would be great if this could be expressed in a way that could be queried for from mongodb rather than filtered at the application level.   - for better traceability, we should log a reason for flagging a host for termination in the event log or at least in splunk when we terminate it. """
"EVG-3117","Bug","app",2,"Unable to run anser from a directory outside the clients directory if EVGHOME is unset","""john.liu@evergreenapp-1:/srv/evergreen/current/clients/linux_amd64$ ./evergreen service deploy anser --id admin_map_restructure --dry-run --url $DB  [evergreen] 2018/04/09 19:58:57 [p=info]: creating new remote job queue with 32 workers  [evergreen] 2018/04/09 19:58:57 [p=info]: job server running  [evergreen] 2018/04/09 19:58:57 [p=error]: EVGHOME is unset  [evergreen] 2018/04/09 19:58:57 [p=warning]: client directory 'clients' does not exist, creating empty directory and continuing with caution  [evergreen] 2018/04/09 19:58:57 [p=error]: mkdir clients: permission denied  [evergreen] 2018/04/09 19:58:57 [p=emergency]: problem configuring application environment: problem finding client binaries: lstat clients: no such file or directory"""
"EVG-3137","Bug","app",2,"Tasks with same task group but different build are out of order in queue","""https://evergreen.mongodb.com/build/mongodb_mongo_master_enterprise_windows_64_2k8_openssl_patch_d1b3c0a0a4dd31e1d1b37ed21cf00a92e59f276e_5acd1fe6c9ec443f0213179b_18_04_10_20_35_51"""
"EVG-3123","New Feature","legacy-ui",1,"Allow admins to add a reason when quarantining a host","""When I quarantine a host it should prompt to add a reason which should be free form text. This allows for someone else to go back to troubleshoot these hosts and they can see a clear reason why the host was manually quarantined. This message should be displayed in the event log under the """"Additional Details"""""""
"EVG-3122","Bug","app",1,"Finalizing a patch from the CLI fails if display task and task group are both present",""""""
"EVG-3120","Improvement","app",1,"ValidateHost should always validate host secret","""https://github.com/evergreen-ci/evergreen/blob/9c9ad23589805c8a7c8c6b327f014b341156d4a3/model/validate.go#L71-L74"""
"EVG-3134","Task","app",1,"remove configuration MergeToggle configuration ","""(doesn't make sense any more.) """
"EVG-3133","Bug","app",1,"Windows task restarts itself after completion","""This task ran to completion on windows, then restarted and ran again, 9 times.  It even finished uploading artifacts before restarting (though the upload portion is missing from the log).  The uploading of artifacts is a """"post"""", so the task finished successfully.     https://evergreen.mongodb.com/task/mongo_odbc_driver_win32_build_patch_a1013a7e247e05e347a03e04bdf146140bb4f720_5ace13f6e3c3311b1673eb37_18_04_11_13_56_37"""
"EVG-3129","Task","app",2,"admin rest route to clear a schedule for a specific distro","""should be able to clear a persisted schedule, effectively preventing new tasks from being dispatched on that distro (until the scheduler runs again.) """
"EVG-3128","Task","app",2,"add flag to disable distro without removing it.","""effect should be:   - do not generate new schedules for it.   - do not start new hosts for it.   - disable spawning.     should be ok to let existing hosts run and work through the existing queue. """
"EVG-9227","Task","platform",1,"Grip SMTP sender not sending correctly formatted RCPT command/not handling STARTTLS command","""Grip does this:  {code}    addr := target.String()    if err = o.client.Rcpt(addr); err != nil {  {code}  So addr is formatted like a RFC 5322, but the RFC says it should just be the (""""mailbox and domain"""" (that is addr.Address)    See quote from [here|https://tools.ietf.org/html/rfc5321]      """
"EVG-3136","Improvement","app",1,"Add more retries to the host provisioning step","""We're seeing problems with some hosts taking a bit longer than usual to start the ssh service so we run into provisioning problems (like https://evergreen.mongodb.com/host/sir-tbs87y1g).    It looks like ssh becomes available within the minute after we stop retrying, so adding more retries would help.    We'll also look into ways to make ssh start faster."""
"EVG-3141","Bug","legacy-ui",1,"lobster next/prev does not notice changes in search term","""If you start a search in lobster by typing a search term and then clicking Find, and then you change (edit) the search term, the Prev and Next buttons continue the former search, instead of searching for the new term."""
"EVG-3140","Improvement","legacy-ui",1,"Add Newer/Older buttons at bottom of patches list","""When searching through a list of patches for a specific patch run, my typical UX flow is to scan each entry from top to bottom to see if the one I want is on that page. If it's not, I have to scroll back to the top to click the """"Older"""" button to get to the next page. It would be useful to have the newer/older links additionally displayed at the bottom to avoid this inconvenience."""
"EVG-3143","New Feature","app",2,"Add Evergreen command to serialize all expansions into a YAML file","""One of the reasons that the Server team's {{etc/evergreen.yml}} project configuration file makes so much use of embedded {{shell.exec}} scripts is because the string substitution for expansions is syntactically convenient. There are many advantages (esp. around testability) to moving these embedded scripts out of the Evergreen project configuration but we'd like to be able to avoid a bunch of options processing boilerplate in Python when we'd go to convert them. Having an Evergreen command able to generate the YAML file so all the of the scripts could take the same command line inputs was an idea that came up between [~david.bradford] and myself as a way to address this."""
"EVG-3145","Problem Ticket","app",2,"Error restarting PyMongo build","""Clicking """"restart build"""" here fails:    https://evergreen.mongodb.com/version/mongo_python_driver_04de1697cb1f1d877023942f7ce620415ee08b60    Furthermore there's no error message, only """"undefined"""".    I hypothesize that Evergreen times out restarting a build with 1449 tasks, and there's a second bug that prevents it from displaying an informative error."""
"EVG-3158","Improvement","legacy-ui",1,"Make it possible for project admins to blacklist tasks/builds/versions for their projects","""Prior to EVG-913 this was possible by any authenticated user but is now something that can only be done by Evergreen admins."""
"EVG-3150","Bug","app",1,"Function names are not validated","""The following will pass {{evergreen validate}}:    """
"EVG-3148","Improvement","app",1,"Intra-task group dependencies should be a validation warning","""Tasks will not run serially if some tasks have dependencies while others do not, since the scheduler must run to schedule a task whose dependencies have just become satisfied."""
"EVG-3162","Bug","legacy-ui",2,"Duplicated/missing patch aliases in the UI","""The workloads project had two {{.* .*}} GitHub patch aliases.  The Evergreen project was missing its {{test.*}} alias."""
"EVG-3161","Bug","legacy-ui",1,"Display task shows date of ""Dec 31, 0000""","""https://evergreen.mongodb.com/task/mci_ubuntu1604_display_lint_9cc8da404f24023cd24e6a5e727cd37ed91565ec_18_04_18_14_41_08"""
"EVG-3159","Build Failure","app",1,"test-agent failure","""h2. [test-agent failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_agent_0ed622d13a7b0861c70f7a2e7942c8e6f5285521_18_04_17_21_32_26/0]     Host: [ec2-54-86-109-55.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-d9vg5qhj]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~john.liu]~  """
"EVG-3179","Bug","legacy-ui",2,"Link icons in HTML logs inoperative","""The """"link"""" icons at the beginning of each line of the HTML logs seem to not be working.     Example:  https://evergreen.mongodb.com/task/dot_net_driver_tests__version~2.6_os~windows_64_topology~replicaset_auth~auth_ssl~nossl_test_patch_b6a9c2675a5eeb887e8103b262e8f25d5a564d00_5ad8df43e3c33109168f2959_18_04_19_18_26_12    Possibly related to the following error message: """"Refused to execute script from 'https://evergreen.mongodb.com/static/js/jquery.js' because its MIME type ('text/plain') is not executable, and strict MIME type checking is enabled.""""    Visiting """"https://evergreen.mongodb.com/static/js/jquery.js"""" yields a 404 page."""
"EVG-3178","Task","app",1,"create host provisioning background job ","""with timeouts, and a sustainable periodicity.    this is half of the hostinit process. """
"EVG-3174","Bug","app",1,"Display tasks with multiple executions do not have previous_executions when requested via api","""Example:    https://evergreen.mongodb.com/api/rest/v2/builds/mci_race_detector_041f5d87b3d9609bef48a4a21e32606242e8638b_18_04_17_20_01_00/tasks?fetch_all_executions=1    Expected: In the above case where execution=1 for the latest run, there should be a previous_executions element with execution=0 data.    Actual: previous_executions is missing"""
"EVG-3171","Improvement","legacy-ui",1,"Waterfall - collapsed view for search","""Perf team wants to improve UX of waterfall when working with build variants that have different schedule. For example for sys-perf project 'Linux 3-Shard Cluster' variant executed on weekly basis and an performance engineer have to scroll several pages to see the run results.  As a good starting point it would be nice to have the same collapsed view when using search with variant name. Currently, the search doesn't show collapsed results, because it executed on UI.  This happens because search works on client side only. In order to implement new behavior we should send search term to backend and also modify DB query to use it.  Acceptance criteria:  * Users have similar UX (collapsed view) when looking at all results (currently done) and when looking at search results (todo)"""
"EVG-3191","Build Failure","app",1,"Intermittent TestAbort failures in test-agent","""h2. [test-agent failed on ubuntu1604|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_agent_patch_662c9afe7d4298a40dfe3ce43d1521699f76edd8_5ada419ac9ec441366fe38c8_18_04_20_19_38_06/0]     Host: [ec2-18-232-166-76.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-a8ar77rk]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-3189","Bug","app",1,"make smoke-start-server fails locally on OS X",""""""
"EVG-3186","Task","app",2,"run background job creation operation on multiple systems ","""but maybe not every system, use an environment variable to flag this on some systems. """
"EVG-3184","Task","app",2,"move host creation to background job","""this is the component that calls start-hosts in the cloud APIs"""
"EVG-3204","Improvement","perf-tools",2,"Build Failure Links for Performance Discovery","""Given a revision/patch is selected that contains tests with associated open Build Failures  When I scroll down the page  Then I see a list of BF's listed in a """"Failures"""" column that are open and that were created after the reference point (baseline tag, patch id, or revision)    Given a revision/patch is selected that contains tests with associated open Build Failures  When I click on a Build Failure Link  Then I'm taken to that build failure in JIRA"""
"EVG-3253","Bug","app",1,"REST /v1/tasks/task_id endpoint broken for split tasks","""In particular the test_results object is empty. I use this for a script that shows me all failing tests across all tasks in a patch build."""
"EVG-3252","Bug","app",2,"Windows task restarted, likely due to agent panic",""""""
"EVG-3270","Improvement","app",1,"SetupHost should not attempt to set up a host if another job is there first","""We saw a case where the queues were backed up, and many provisioning-setup-host jobs attempted to run on a single host, causing it to become decommissioned while it was running a task. It's also conceivable this could happen if a job has not finished by the time the job creation job runs."""
"EVG-3269","Task","app",1,"Log total queue length in a stats job","""For the historical dashboard, which currently has a graph with no data."""
"EVG-3267","Improvement","app",1,"Reduce API calls in collect-task-end-data and collect-host-idle-data jobs","""getEC2Cost seems to make an unnecessary call to GetInstanceInfo. This causes us to exceed our API limits when > 1000 tasks finish in < 10 minutes. I think the data we need from this API call can be cached and we may be able to drastically reduce the API calls we make for these jobs."""
"EVG-3266","Improvement","legacy-ui",1,"Display ""Files"" section for failed execution tasks on the display task's /task page","""This request came out of a Slack conversation [~milkie] would wishes to avoid needing to click through to the execution task when he wants to view the artifacts associated with the particular task failure.    https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_replica_sets_auth_patch_b57eee5a295ede1fd67299dc9990c272c1f66ea3_5ae08618e3c33152d0fc8b41_18_04_25_13_44_15"""
"EVG-3265","Bug","app",1,"Panic in ec2 host provider","""https://github.com/evergreen-ci/evergreen/blob/fede5eb386db11f5911149464c9f8d9dbbbdba28/cloud/ec2.go#L616    stack  pool/helpers.go:36 runtime/asm_amd64.s:515 runtime/panic.go:489 runtime/panic.go:63 runtime/signal_unix.go:290 cloud/ec2.go:616 hostinit/setup.go:121 hostinit/setup.go:277 hostinit/wrapper.go:64 units/provisioning_setup_host.go:78 pool/helpers.go:23 pool/helpers.go:61 pool/local.go:84 runtime/asm_amd64.s:2197"""
"EVG-3263","Improvement","legacy-ui",2,"Evergreen /build page should provide some way to expand display tasks in the ""Tasks"" sidebar into their constituent execution tasks","""The table below the """"This task contains 16 execution tasks"""" section that's shown on [this task page|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_sharding_db80e9fbd16df2ef3b357bad4c4c7d9212e57dcf_18_04_25_09_28_08] would be beneficial to be able to visualize inline on the /build page in the """"Tasks"""" sidebar as a way to compare across Evergreen tasks how long the execution units take to run."""
"EVG-3262","Improvement","legacy-ui",1,"Evergreen /build page should show wall-clock time for display tasks listed in the ""Tasks"" sidebar","""For example, the {{sharding}} task reports that it takes 1h25m but that is the cumulative time and not the wall-clock time after it has been subdivided into {{sharding_1}}, {{sharding_2}}, etc. I'd like to be able to use the """"Tasks"""" sidebar to identify the long-running Evergreen tasks so I think displaying the wall-clock time instead of the cumulative time would be more helpful.    [https://evergreen.mongodb.com/build/mongodb_mongo_master_enterprise_rhel_62_64_bit_db80e9fbd16df2ef3b357bad4c4c7d9212e57dcf_18_04_25_09_28_08]   [https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_sharding_db80e9fbd16df2ef3b357bad4c4c7d9212e57dcf_18_04_25_09_28_08]"""
"EVG-3261","Improvement","app",1,"Validate that execution tasks in a display task are not named display_*","""This may cause task IDs to collide."""
"EVG-3273","Improvement","app",1,"Run create host more, setup host less","""In this commit https://github.com/evergreen-ci/evergreen/commit/e4da95da76f03a2611e0226e966ec29b738e9ca4 we throttled hostinit on the theory that it is the cause of us hitting AWS API limits. However, from Splunk graphs from a period where we started 300 new hosts in 10 minutes, it's clear that the biggest user of the API is setup host. Since we pay up front for a minute, and since it may take that long for hosts to spawn, we should run setup host at the same rate that we run create host.    See link to graph in comment."""
"EVG-3281","Build Failure","app",1,"Populate 'Failing Tests' field in BFG/BF tickets with failing tests","""See summary."""
"EVG-3280","Build Failure","app",1,"race-agent failure","""h2. [race-agent failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_agent_df2949c03cd3c2af3af4f7c968ecaf8147095f1a_18_04_27_15_21_34/0]     Host: [ec2-54-152-68-147.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-anmi6qtk]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~richard.samuels]~  """
"EVG-3279","Bug","legacy-ui",1,"Task page from a task in a display_group needs a navigation back to the display_group","""When navigating from a display_group to a task there is no link on the task page back to the display group."""
"EVG-3278","Bug","app",1,"Goroutine leak in agent","""goroutine 146625 [chan send, 1370 minutes]:  github.com/evergreen-ci/evergreen/agent.(*Agent).runCommands.func2.1(0xc42084d380, 0xc420edc7c0)      /data/mci/2c983fd2b509e3982e50ec453047eecc/gopath/src/github.com/evergreen-ci/evergreen/agent/command.go:87 +0x160  github.com/evergreen-ci/evergreen/agent.(*Agent).runCommands.func2(0xc42084d380, 0xc420edc7c0, 0x29438e0, 0xc420ffa0c0, 0xc4203862a0, 0xc420adc9a0)      /data/mci/2c983fd2b509e3982e50ec453047eecc/gopath/src/github.com/evergreen-ci/evergreen/agent/command.go:91 +0xf2  created by github.com/evergreen-ci/evergreen/agent.(*Agent).runCommands      /data/mci/2c983fd2b509e3982e50ec453047eecc/gopath/src/github.com/evergreen-ci/evergreen/agent/command.go:91 +0x6e2"""
"EVG-3277","Problem Ticket","legacy-ui",1,"Error when restarting display task led to multiple restarts and some tasks with no task logs","""When I had click the restart button for https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_sharding_auth_patch_7cd83e5486cfb3383c2e4e5671ae9602be297547_5ae2b03c2fbabe28b01ee4db_18_04_27_05_08_24, there was some error that was reported (no screenshot, sorry). Refreshing the page shows that the task had actually restarted but clicking through to the execution tasks showed that the task had effectively been restarted multiple times.    https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_sharding_auth_patch_7cd83e5486cfb3383c2e4e5671ae9602be297547_5ae2b03c2fbabe28b01ee4db_18_04_27_05_08_24/3 is marked as """"System unresponsive"""" because some tasks (e.g. https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_sharding_auth_19_patch_7cd83e5486cfb3383c2e4e5671ae9602be297547_5ae2b03c2fbabe28b01ee4db_18_04_27_05_08_24/3) are saying that they are running when in fact [the host|https://evergreen.mongodb.com/host/sir-wn2r7dhg] has been terminated already."""
"EVG-3283","Bug","app",1,"Add files links to REST V2 /tasks/{task_id} endpoint for exec tasks in a display task","""https://evergreen.mongodb.com/rest/v1/tasks/mongodb_mongo_master_enterprise_rhel_62_64_bit_coverage_display_unittests!_5891912b5622eed300b11b05cd3269be580e086c_18_04_27_11_55_41 reports \{{""""files"""": null}}."""
"EVG-3282","Bug","app",1,"Cannot save project that has PR testing enabled","""The https://evergreen.mongodb.com/projects##stitch-cloud-prod project cannot be saved right now because the stitch-cloud-qa project also tracks master as it should but it does not have PR testing due to the restriction.    The error I get saving on stitch-cloud-prod is """"Couldn't save project: Cannot enable PR Testing in this repo, must disable in 'stitch-cloud-prod' first"""""""
"EVG-3291","Bug","app",2,"Host termination UI ran teardown script in infinite loop","""I terminated the host in the DB to stop it.    https://evergreen.mongodb.com/host/sir-bi2g7aph"""
"EVG-3290","Task","app",1,"fetchDiffFromGithub should retry","""We hit this error:  """
"EVG-3286","Task","legacy-ui",2,"Add support for force terminating multiple hosts","""EVG-68 added support for terminating one."""
"EVG-3284","Task","app",1,"Add pprof endpoint to agent","""In EVG-3276, in order to get the stack trace for a running agent, we had to attach to its stdout and then send it SIGQUIT. We currently have pprof on the runner and web service. It should also be exposed on the agent."""
"EVG-3296","Bug","app",1,"Tasks restart job panics at the end log statement","""pool/helpers.go:36 runtime/asm_amd64.s:515 runtime/panic.go:489 runtime/panic.go:63 runtime/signal_unix.go:290 units/tasks_restart.go:70 pool/helpers.go:23 pool/helpers.go:61 pool/local.go:84 runtime/asm_amd64.s:2197"""
"EVG-3309","Problem Ticket","app",1,"BFG tickets are not being created for some Evergreen failures","""This was first reported to me by [~esha.maharishi]. [Here|https://evergreen.mongodb.com/task/mongodb_mongo_master_ubuntu1604_debug_asan_sharding_ese_c50a57061af31f92c1c6aab09b1417ab127fed0c_18_04_25_19_45_49] is an example of a task that did not generate a BFG ticket. It's been failing on every commit, but only now has someone noticed the failure. I'm unsure if every one of those failures are missing a BFG, or if it's just some of them.    After speaking with [~robert.guo], I'm marking this as P1 because it's crunch time for the 4.0 release and we need clear visibility as to what is failing. It would be nice if we could run an analysis of  * all the failures in Evergreen  * all the tickets created in the BFG project  for the past 7 days or so, so we can correlate them and see what percentage of Evergreen failures are missing a BFG ticket. If the percentage is low, we can drop the priority."""
"EVG-3303","Task","app",1,"Eradicate IsNil from auth.User interface","""In rest/route/authenticator.go, the return values from GetUser need to be nil checked. This lets us remove the IsNil method."""
"EVG-3301","Improvement","app",2,"Cache expected task durations between scheduler runs","""Cache the results of [GetExpectedDurations|https://github.com/evergreen-ci/evergreen/blob/eca5f65b497c2b4325b6a71fe24d85ffde3a5629/scheduler/task_duration_estimator.go#L15]¬†between scheduler runs. Also, ensure this query is covered by an index."""
"EVG-3300","Bug","app",1,"UpdateRunningTask should check host health","""[UpdateRunningTask|https://github.com/evergreen-ci/evergreen/blob/eca5f65b497c2b4325b6a71fe24d85ffde3a5629/model/host/host.go#L406]¬†may attempt to assign a task to a host that has been decommissioned or terminated, because iterating over the queue can take some time, and while this is happening the host may change state. Before assigning a task to a host, we should check host health once more, like the beginning of¬†[NextTask|https://github.com/evergreen-ci/evergreen/blob/eca5f65b497c2b4325b6a71fe24d85ffde3a5629/service/api_task.go#L366] does."""
"EVG-3313","Problem Ticket","app",1,"An offline server shown as running","""I see https://evergreen.mongodb.com/host/sles12-z-3.maristisv.build.10gen.cc is in running state and claiming that Last Reachability Check ran a few seconds ago, but we know that it's down right now and not reachable."""
"EVG-8940","Task","platform",1,"Grip email sender cannot be long lived due to socket timeouts","""Must open a connection per send"""
"EVG-3324","Improvement","app",1,"Fold IsDispatchable into FindNextTask","""If a task is not dispatchable, we iterate over the queue again in FindNextTask."""
"EVG-3320","Task","app",1,"Task in task group incorrectly has build_id set to it's task id.","""Task mongodb_mongo_master_enterprise_rhel_62_64_bit_compile_patch_3d9ad8270139723593781ba980dd07c5c230b085_5aecb3f4e3c331265f754822_18_05_04_19_27_50 has a build id that is the same as it's task id"""
"EVG-3319","Bug","app",1,"Escape Jira reserved characters in build baron plugin","""[https://confluence.atlassian.com/jiracoreserver073/search-syntax-for-text-fields-861257223.html]    ¬†    [https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_67_s390x_display_unittests!_11d837751b0da2cf7948ee17e2f6438f38c93693_18_05_04_03_57_22]¬†"""
"EVG-3318","Bug","app",1,"Some task history queries do not return results","""https://evergreen.mongodb.com/task_history/mongodb-mongo-master/unittests?revision=11d837751b0da2cf7948ee17e2f6438f38c93693#/decorable_test=fail"""
"EVG-3316","Bug","legacy-ui",1,"Search is not being updated after changing case sensitive toggle","""Go here:  https://logkeeper.mongodb.org/lobster/build/6851102e2debb777c24bf4cc37f82461/test/5aebe84a54f24812c008f808?bookmarks=0%2C19723    Type """"numberLong"""" in the Search bar and click Find twice.  (should be at hit 2 of 891)  Now change the search to """"numberLong("""" and turn on Case Sensitive search, then click Next.  The browser will hang as the search script never returns."""
"EVG-3330","Bug","app",1,"fetch_all_executions tasks endpoint can be slow","""This takes 8-10 seconds.    [https://evergreen.mongodb.com/api/rest/v2/builds/mongodb_mongo_v3.6_enterprise_rhel_72_s390x_7715621883aee73cbf5c162db6d04578ba353f60_18_05_07_11_04_31/tasks?fetch_all_executions=1]    [~cristopher.stauffer] is using this endpoint in a script, so it should be faster than this."""
"EVG-3334","Build Failure","app",1,"coverage failure","""h2. [coverage failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_coverage_53781eaad5d372a2e3c90845e29c136320391afc_18_05_08_18_23_55/0]     Host: [ec2-107-22-128-18.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-gveg435h]   Project: [mci|https://evergreen.mongodb.com/waterfall/mci]          ~BF Ticket Generated by [~brian.samek]~  """
"EVG-3337","Task","legacy-ui",2,"Have to hit back button twice to get back to Evergreen from Lobster.","""# Go here: [https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_integration_tests_replset_07ae6a93bf517643adcf4098e369f49e28f0bf99_18_05_09_16_47_46]   # Click HTML next to any test   # It takes 2 clicks of the back button to get back to evergreen, I'd expect it to only take one."""
"EVG-3335","Bug","legacy-ui",1,"Panic when retrieving banner in UI route","""unable to retrieve admin settings: error populating section alerts: error retrieving section alerts: reflect: call of reflect.Value.Type on zero Value"""
"EVG-3347","Bug","app",2,"Hosts that have transitioned to running after agent deploy failures do not retry","""We quarantine a host if StartAgentOnHost fails at least 10 times. However, we do this with an aggregation on the event log, which means that we will still believe that the put job has failed 10 times if the host has been quarantined for some time and has just been set to running. We should ensure that newly running hosts get all 10 attempts.¬†*We should also create a ticket.*"""
"EVG-3346","Task","app",2,"Reduce calls to DescribeSpotPriceHistory","""We occasionally exceed our AWS API limits. The two most frequent calls are DescribeInstances, which EVG-3251 moved to a batch call, and DescribeSpotPriceHistory, which this ticket is meant to address. We call this function in two places, in describeHourlySpotPriceHistory, which is called by the task end and host idle jobs, and by getLatestLowestSpotCostForInstance, which is called each time we spawn an ec2 host with type auto, to determine if we should spawn an on-demand or a spot host.    I believe we should do two things:   # Query Splunk for the logging in¬†describeHourlySpotPriceHistory and¬†getLatestLowestSpotCostForInstance to determine if one of these functions represents the bulk of the calls to¬†DescribeSpotPriceHistory. They may both be used heavily, since the former is called each time we spawn a host, and the latter each time a task ends.   # Figure out how to cache these data. (The two cases use different parameters, but I think this is only because¬†getLatestLowestSpotCostForInstance passes a future date to only get the latest price, so we can make the calls identical). It might make sense to cache these data. We can use their granularity to determine our caching strategy, or use 1-minute granularity, since it's unlikely we care to make finer distinctions than that."""
"EVG-3348","Improvement","perf-tools",0,"Perf tools - number normalizations","""There are different types of numbers could be found on perf tools pages - some of them are usual, however there are also very big and very small numbers, which require some extra space to display. Moreover, currently, small numbers could be truncated to 0, which makes the number useless.    Goal: all numbers should be easily readable, comparable and informative.¬†    In order to improve this we should use number normalization, which I think should work like this:   * Consider the first three (TBD) non-zero (TBD) digits to be significant.   * Drop the rest part of the value   * Use short notation where possible, like k or M (TBD)    ¬†"""
"EVG-8573","New Feature","platform",2,"create evergreen project for gimlet","""- include threshold (95% ?) for coverage   - add pull-request testing  - single task"""
"EVG-3356","New Feature","app",1,"use gimlet helpers for reading/writing to request data","""remove similar functions from the util package"""
"EVG-3363","Bug","app",1,"Panic: nil cloud manager in setupHost()","""[https://github.com/evergreen-ci/evergreen/blob/bd044573930dcf571d8ec43a10670d38295c34a3/hostinit/setup.go?utf8=%E2%9C%93#L122]    ¬†    pool/helpers.go:36 runtime/asm_amd64.s:515 runtime/panic.go:489 runtime/panic.go:63 runtime/signal_unix.go:290 cloud/ec2.go:621 hostinit/setup.go:122 hostinit/setup.go:278 hostinit/wrapper.go:64 units/provisioning_setup_host.go:78 pool/helpers.go:23 pool/helpers.go:61 pool/local.go:84 runtime/asm_amd64.s:2197    ¬†    5/11/18 10:28PM EST from a Slack alert"""
"EVG-3366","Bug","legacy-ui|ui",1,"No longer able to view all logs unless you know the url","""You can't get to [https://logkeeper.mongodb.org/build/657a8889982a404882c60eb73acff101/all?raw=1]¬†or [https://logkeeper.mongodb.org/build/657a8889982a404882c60eb73acff101/all?html=1]¬†from lobster"""
"EVG-3365","Task","app",1,"Lint Generate tasks is linting vendored projects","""See here:    [https://evergreen.mongodb.com/task/mci_ubuntu1604_display_lint_patch_47d843b228453688b321f23ce50948dec658f936_5af9d04f2fbabe33902316b7_18_05_14_18_07_30]    ¬†    [lint-vendor-github.com-mongodb-grip-send|https://evergreen.mongodb.com/task/mci_ubuntu1604_lint_vendor_github.com_mongodb_grip_send_patch_47d843b228453688b321f23ce50948dec658f936_5af9d04f2fbabe33902316b7_18_05_14_18_07_30]¬†is unexpected"""
"EVG-3364","Bug","app",1,"Do not disable PR testing when disabling a project","""Instead, check if the project is disabled when determining whether or not to create a patch build from a github webhook. We shouldn't change any project data when disabling a project other than the disabled field."""
"EVG-3369","Bug","app",1,"BB plugin not able to do searches","""After [https://github.com/evergreen-ci/evergreen/commit/825cbc94aee285a77e21900086a33671f26ff214,]¬†the BB plugin reported that searching Jira failed."""
"EVG-3373","New Feature","app",1,"delegate all mux dependency on gimlet ","""* impacts agent status server,   * pprof   * mostly need to use gimlet.GetVars rather than mux.Vars"""
"EVG-3388","Bug","app",1,"EC2 panic","""pool/helpers.go:67 runtime/asm_amd64.s:515 runtime/panic.go:489 runtime/panic.go:63 runtime/signal_unix.go:290 cloud/ec2.go:685 hostinit/setup.go:77 hostinit/setup.go:233 hostinit/wrapper.go:49 units/provisioning_setup_host.go:78 pool/helpers.go:23 pool/helpers.go:32 pool/helpers.go:87 runtime/asm_amd64.s:2197"""
"EVG-3386","New Feature","legacy-ui",1,"Show tooltip of test full name on hover","""Test names can be very long. An example is [fuzzer test|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_jstestfuzz_replication_initsync_0a4f7b1ebf173984883d6e018ae88350015dfeb3_18_05_16_19_19_11/0]. It's hard to see the full name of the failed test right now."""
"EVG-3385","Bug","app",1,"Restarting tasks in a Pull Request patch leads to a Github Status with no ""Details"" link for ""evergreen"" context","""https://github.com/10gen/mms/pull/14229    There was an individual task that failed on the first run (https://evergreen.mongodb.com/task/mms_int_INT_JAVA_BRS_36_patch_4c58337b9ba0f80de594910678a76c908015ae52_5aff0f59c9ec44191d660fbe_18_05_18_17_37_31/0) and passed when it was re-run, but it appears that the top-level """"evergreen"""" task hasn't had its state updated to match, and there's no """"details"""" link for me to look closer"""
"EVG-3382","Bug","app",1,"GitHub status API is updated for builds but not for patches","""e.g, https://evergreen.mongodb.com/build/mci_ubuntu1604_patch_6935cf29e9d5141e16a83924f886f6b46ad5d3f1_5aff23a0c9ec44191d68cb50_18_05_18_19_04_01"""
"EVG-3379","New Feature","app",1,"imrpove CSRF. ","""It should be implemented as a negorni middleware, and we should be able to attach to (some?) UI routes but not others.     This is important for being able to combine/reduce our services and simplify our load balancing configuration.     I think that we currently have it turned off. """
"EVG-3390","Improvement","app",1,"Run fewer iterations on the race variants","""We have moved multithreading out of many packages and into amboy. We run enough tests that occasionally we exceed our GitHub API limits. We should only run the race detector on packages that use multithreading."""
"EVG-3389","Improvement","app",1,"s3Copy.copy command should accept a permissions argument","""It currently always copies with public-read permissions, which is surprising, given the behavior of s3.put, which accepts a permissions argument. If possible, it should copy with the same permissions as the source file, if a permissions argument is not provided."""
"EVG-9002","Task","platform",0,"Github Status API Sender sets wrong field for URLs","""Should set TargetURL, not URL"""
"EVG-3392","Task","app",1,"Structured logging for all events","""Most events in model/event are just strings that are logged, let's give them a common structure    ¬†    ¬†"""
"EVG-3396","Bug","app",2,"Group setup did not run before restart of patch build task in task group","""Executions 2, 3, and 4 of this task were system failures, because the directory was missing¬†https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_ubuntu1604_64_compile_all_patch_6ab1592260c9b21d802aa65a11d268c0a97b11a7_5b042b95e3c3310342a53aab_18_05_22_14_46_14."""
"EVG-8353","Bug","platform",1,"Panic in slack sender when using slackMessage","""Slack sender is indexing into Attachments on error, but can't do this when message.Slack is used.    ¬†    pool/rate_limiting_average.go:145 runtime/asm_amd64.s:515 runtime/panic.go:489 runtime/panic.go:28 send/slack.go:95 logger/job_single.go:52 pool/helpers.go:23 pool/rate_limiting_average.go:181 pool/rate_limiting_average.go:166 runtime/asm_amd64.s:2197"""
"EVG-3412","Bug","app",2,"Move mongodb-specific jira constants to configuration options","""in alerts/jira.go and¬†ui_plugin_build_baron_tickets.go"""
"EVG-3410","Task","app",2,"Restrict delivery method configuration","""Creating tickets in a JIRA project and EVG webhooks should be restricted to the project admin page only. Comments should remain available to users"""
"EVG-3408","Task","app",2,"Remove legacy notifications","""Grep codebase for EVG-3408    The¬†_entire_ alerts package will be removable at this point."""
"EVG-3407","Task","app",1,"Investigate how it's possible for TaskTransitionToFailure alert records to have an empty task id","""It's possible that porting this to Event driven notifications fixed this weirdness, but we should still have a look. Grep codebase for """"EVG-3407"""" to find relevant area"""
"EVG-3403","Bug","app",2,"BB plugin fallback search is not returning expected results","""[https://evergreen.mongodb.com/task/mci_race_detector_race_agent_503d660cd7293890a15999c2e8a898cdabeab151_18_05_22_21_41_11]    ¬†    should have found https://jira.mongodb.org/browse/EVG-3395¬†at least but did not"""
"EVG-3402","Build Failure","app",1,"race-service failure",""" h2. [race-service failed on race-detector|https://evergreen.mongodb.com/task/mci_race_detector_race_service_503d660cd7293890a15999c2e8a898cdabeab151_18_05_22_21_41_11/0]   Host: [ec2-54-152-99-180.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-an2i4pxj]  Project: [mci|https://evergreen.mongodb.com/waterfall/mci]     ~BF Ticket Generated by [~john.liu]~ """
"EVG-3427","Improvement","app",1,"Refactor notification triggers to be an interface","""And remove circular dependency of trigger function <-> fetching subscriptions"""
"EVG-3424","Task","app",8,"Support starting containers in scheduler","""# Add a maximum containers field to the distro document.   # The scheduler, when inserting a host document for a distro that has maximum containers set, should set the containers fields in the host document.   # After inserting host documents for containers, the scheduler should also insert host documents for parents."""
"EVG-3417","Bug","app",1,"""updating status for incomplete build"" error in logs","""from model/trigger/build.go"""
"EVG-8482","Bug","platform",1,"Panics when sending slack alerts","""pool/rate_limiting_average.go:145 runtime/asm_amd64.s:515 runtime/panic.go:489 runtime/panic.go:28 send/slack.go:95 logger/job_single.go:52 pool/helpers.go:23 pool/rate_limiting_average.go:181 pool/rate_limiting_average.go:166 runtime/asm_amd64.s:2197"""
"EVG-3432","Bug","app",1,"Unable to create BF tickets in EVG from plugin","""error filing ticket: error creating JIRA ticket: HTTP request returned unexpected status `400 `: \{""""errorMessages"""":[],""""errors"""":{""""customfield_15756"""":""""Field 'customfield_15756' cannot be set. It is not on the appropriate screen, or unknown.""""}}"""
"EVG-3431","Bug","app",1,"Github Status API messages not being posted for external patches","""This PR: [https://github.com/mongodb/mongoid/pull/4499]  Created this build: [https://evergreen.mongodb.com/version/5b0733ffc9ec4405c1abefbb]    ¬†    Despite the build succeeding, evergreen check status in PR still shows """"Pending - preparing to run tasks""""."""
"EVG-3430","Problem Ticket","app",2,"Spawn host with data files did not have all data files","""It only included the source directory: {{source-mongodb-mongo-v4.0-e87f98}}. Note, I have since moved more data files there (I have a script that copies the pieces I need out of {{/data/mci}})."""
"EVG-3429","Bug","app",1,"Failing tests in created jira tickets show most (all?) tests","""{quote}  @John Liu, there are a lot more """"Failing Tests"""" populated in https://jira.mongodb.org/browse/BF-9314 than I would have expected, considering only that 1 test failed    https://mongodb.slack.com/archives/C0V896UV8/p1527261366000109  {quote}"""
"EVG-3435","Task","legacy-ui",1,"Fix Lobster Lint & Build","""I've recently added lobster into Evergreen as it's own project, but we need to get the build and lint working.    Don't do this manually, do configure your editor of choice to do it for you automatically."""
"EVG-3433","Improvement","app",1,"Make s3.put output full s3 url","""In the s3.put post-task command, the output is of the form:    Putting src/ec2_artifacts.tgz into path mongodb-mongo-master/enterprise-rhel-62-64-bit/2e6989e2744726f66289aca955cbc661539b6814/remote_ec2/remote_ec2_artifacts-mongodb_mongo_master_enterprise_rhel_62_64_bit_sharding_op_query_1_2e6989e2744726f66289aca955cbc661539b6814_18_05_28_04_25_48-0.tgz in s3 bucket mciuploads    I've gotten feedback that it would be more useful to concatenate these together to be the actual bucket url, rather than having the user do that manually."""
"EVG-3445","Improvement","app",2,"s3Copy.copy and s3.put should log when they noop","""in a number of cases, s3.copy doesn't do anything and the desired behavior is to continue without erroring. However, the current behavior only logs this activities in the agent log and not the task log. We should clarify and provide a higher-level report of what the s3.copy command did in the task logs that includes things like:     - number of files copied   - file(s) skipped because they didn't exist  - file(s) skipped because their target existed. """
"EVG-3443","Improvement","app",1,"Allow github patch definitions to use tags","""Currently this is only implemented for patch aliases."""
"EVG-3440","New Feature","legacy-ui|perf-tools",1,"Update List of Changepoints to use list with BF removed","""Build on EVG-3439 to display the updated list of changepoints from new endpoint. No other changes needed.¬†"""
"EVG-3438","Task","legacy-ui|perf-tools",2,"Create a top level Perf change point page","""Should be accessible like perf discovery.   * The page will be the starting point for the performance build baron.   * This ticket is to just create the web page.   * Should be under the plugins drop down."""
"EVG-3561","New Feature","app",5,"Update the Build Baron plugin to allow user feedback","""This should include adding the buttons for collecting feedback on ticket suggestions."""
"EVG-3447","Improvement","app",1,"Use activated time in task latency stats","""Currently, the task latency stats are incorrect when tasks are activated by batch time or by users. We should take this into account. The current graphs have very long task latencies, but this is because tasks have been activated long after they are created."""
"EVG-3455","Task","app",2,"Successful patch issued a failure notification to a user.","""A user got a notification saying """"Evergreen patch 5b118ede2a60ed326b9a4e8f in 'mms' has failed!"""", but the patch succeeded.    `db.event_log.find(\{r_id: """"5b118ede2a60ed326b9a4e8f""""})` shows that the corresponding patch and version failed and succeeded with in the span of a minute. There is likely a bug in the task lifecycle/event logging that is causing this."""
"EVG-3449","Task","app",1,"Generate tasks retries on invalid payloads and doesn't output an error message","""Example here:¬†[https://evergreen.mongodb.com/task/lobster_ubuntu1604_generate_tasks_patch_1d067be3f946b69fba9400902da52e972984b580_5b10e2b80305b914de9bad59_18_06_01_06_08_03/1|https://evergreen.mongodb.com/task/lobster_ubuntu1604_generate_tasks_patch_1d067be3f946b69fba9400902da52e972984b580_5b10e2b80305b914de9bad59_18_06_01_06_08_03/0]    [Splunk error|https://mongodb.splunkcloud.com/en-US/app/search/search?q=search%20source%3D%22http%3Aevergreen%22%20lobster_ubuntu1604_generate_tasks_patch_1d067be3f946b69fba9400902da52e972984b580_5b10e2b80305b914de9bad59_18_06_01_06_08_03%7C%20spath%20error%20%7C%20search%20error%3D%22error%20reading%20project%20yaml%3A%20project%20errors%3A%20%0A%09lint-src-actions%3A%20nothing%20named%20%27lint-src-actions%27%0A%09lint-src-components-about%3A%20nothing%20named%20%27lint-src-components-about%27%0A%09lint-src-components-app%3A%20nothing%20named%20%27lint-src-components-app%27%0A%09lint-src-components-connectedfetch%3A%20nothing%20named%20%27lint-src-components-connectedfetch%27%0A%09lint-src-components-fetch%3A%20nothing%20named%20%27lint-src-components-fetch%27%0A%09lint-src-components-logview%3A%20nothing%20named%20%27lint-src-components-logview%27%0A%09lint-src-components-notfound%3A%20nothing%20named%20%27lint-src-components-notfound%27%0A%09lint-src-stores%3A%20nothing%20named%20%27lint-src-stores%27%0A%09lint-server%3A%20nothing%20named%20%27lint-server%27%0A%09lint-src%3A%20nothing%20named%20%27lint-src%27%0A%09lint-.%3A%20nothing%20named%20%27lint-.%27%22&display.page.search.mode=verbose&dispatch.sample_ratio=1&earliest=1527865792.000&latest=1527865792.001&sid=1527868105.13768078]"""
"EVG-3448","Improvement","app",1,"Log provision failures in host provision job","""so that failure volume can be easily graphed in splunk"""
"EVG-3462","Bug","app",2,"Docker provider panics on a log line if no mix/max port are set in distro","""Stack trace:  """
"EVG-3459","Task","app",1,"Investigate Slack sender errors","""We were hitting several panics in the slack grip sender (see MAKE-410). We need to look into why these errors were happening in the first place. Logging shows no errors since then, but we can probably look deeper into the notifications collection to confirm that."""
"EVG-3470","Bug","legacy-ui",2,"Baseline comparison disappears when assign thread level","""On a task page, when assigning a thread level after clicking """"All"""" the comparison disappears. There is no way to do choose a comparison for assigned thread levels, only for """"All or """"Max"""".    ¬†    ¬†"""
"EVG-3464","Problem Ticket","app",1,"V1 API returning empty task set unexpectedly","""Given this task page: https://evergreen.mongodb.com/task/mongodb_mongo_master_debian92_concurrency_replication_causal_consistency_27b080da5ab09b324514a62ab38a3e6463e0d1c1_18_06_04_21_57_34/0    I'm hitting this end point to collect 'recent failure date': https://evergreen.mongodb.com/rest/v1/tasks/concurrency_replication_causal_consistency/history?project_id=mongodb-mongo-master    But that endpoint is returning the Tasks key as null.  The task and project_id values seem to be correct.  Any idea what's going on?    Note that whatever the problem is here (might totally be my fault!), we are under-scoring test failures because we're seeing all failures as """"failing zero of zero recent executions""""."""
"EVG-3542","Bug","app",2,"Evergreen is attempting to copy the binary in multiple threads simultaneously","""When spawning via https://evergreen.mongodb.com/spawn, the hosts go through a provisioning stage and then disappear."""
"EVG-3488","Improvement","app",1,"Admin restart tasks should be able to restart setup-failed tasks","""Currently there are checkboxes only for red and purple tasks."""
"EVG-3487","Bug","app",2,"It's not possible to patch a project that doesn't have a config yaml committed to its repo","""Even if the patch adds the yaml"""
"EVG-3485","Task","ui",1,"Assess gitRef in Lobster","""gitRef is in the lobster codebase in many places, but it seems like this path is never git, so none of those code paths are being hit. We should assess what this was for, and either get it working, or remove it."""
"EVG-3483","Bug","legacy-ui",1,"When creating new SSH public key in spawn hosts, should not let you ""save the key"" without entering a name","""When spawning a spawn host if you select """"new key..."""" enter your key then check """"save key"""" you can then hit spawn without entering a name. It should instead force you to enter a name if you have checked save key"""
"EVG-3494","Task","legacy-ui",1,"Setting priority on a display task doesn't set priority on its execution tasks","""Example: [https://evergreen.mongodb.com/task/mci_ubuntu1604_display_lint_patch_09b809283c45bd044d42451d873afa90e83807c2_5b1abfdd0305b93cbb59168c_18_06_08_17_41_50]    Display task was set to priority 55, but execution tasks had no priority in UI and were deep in the queues"""
"EVG-3493","Task","legacy-ui",2,"Add a way to delete all existing subscriptions on notifications page","""Also, for deleting individual notifications, it seems like we should display more than just the selector type, since the user can't determine what task/build/version it refers to without clicking."""
"EVG-3500","Task","app",1,"Remove existing gotest output before running test in Evergreen self-tests","""Otherwise, subsequent tasks in a task group may appear to fail due to an earlier failure. See¬†https://evergreen.mongodb.com/task/mci_ubuntu1604_display_lint_patch_78fe3206570729465d3df6f87209fe93d0dc41d1_5b1bdee42a60ed67bab381f6_18_06_09_14_06_29."""
"EVG-3505","Task","legacy-ui",2,"Case-insensitive Lobster search is actually case sensitive","""In master load [http://localhost:3000/lobster/build/4191390ec6c7ee9bdea4e45f9cc94d31/test/5af32dbbf84ae86d1e01e964?bookmarks=0%2C1129]    Search """"integration_Test"""". This should match, because it's case insensitive by default, but has no matches. The hilighter works as expected. Toggling the case sensitive toggle under Hide Details makes it work, until the search is rerun."""
"EVG-3504","Bug","app",1,"BB plugin search still doesn't escape things correctly","""Error searching jira for ticket: HTTP request returned unexpected status `400 `, (project in (BF, WT, SERVER, BFG)) and ( text~""""capped\:CheckReplOplogs"""" or text~""""indexv\:CheckReplOplogs"""" ) order by updatedDate desc"""
"EVG-3502","Improvement","app",1,"Log mark end details","""Each minute we log an aggregate of task end statuses. We should also log MarkEnd, so that we can analyze this data by project or task."""
"EVG-3501","Improvement","app",2,"Ensure that we handle changing parent IDs in child documents","""A parent intent document may have a different ID than the ultimate host document. We should ensure that children can keep track of their parents across this change."""
"EVG-3510","Task","legacy-ui",2,"Remove Deprecated React Methods from Lobster","""componentWillReceiveProps from Fetch component"""
"EVG-3525","Task","app",2,"Restrict parent hosts from spawning, running agents","""If a distro is a container pool, it should not be useable for tasks or spawnable by users. One approach is to add a checkbox to the distro UI which sets a field which prevents the distro from being spawned in tasks. Then we add validation that only those distros may be saved in the pool mapping in the admin collection.    In addition, we should not start agents on these hosts."""
"EVG-3524","Task","legacy-ui",2,"Display pool mapping info in distro UI","""Users may wish to see, in the distro UI, information from the pool mapping."""
"EVG-3512","Bug","legacy-ui",2,"Individual names in ""Files"" section for display tasks.","""See EVG-3266"""
"EVG-5532","Improvement","app",1,"add failure timestamp to BFG template","""I frequently find it helpful to know the push time for a commit that triggered a build with a failure, in order to correlate it to a timeline in my head of when things were pushed and when failures occurred.  """
"EVG-3538","Bug","app",2,"ZSeries and ARM tests are failing immediately","""Here's a task: [https://evergreen.mongodb.com/task/mci_ubuntu1604_arm64_xc_subprocess_2c36b9184a7ca6556eb1a77655cd0336ef08246e_18_06_18_16_03_54/0#/log/T]    And its log:¬†https://evergreen.mongodb.com/task_log_raw/mci_ubuntu1604_arm64_xc_subprocess_2c36b9184a7ca6556eb1a77655cd0336ef08246e_18_06_18_16_03_54/0?type=T"""
"EVG-3536","Bug","legacy-ui",1,"Restarting failed tasks appears to hang","""When restarting a small number of failed tasks (31) in a version, this hangs for almost a minute."""
"EVG-3636","Bug","legacy-ui",2,"Discrepancies between tasks status on a buildvariant view and task view.","""I was looking at the rhel71-ppc queue and found that tasks that are scheduled and have # in the queue show up as unscheduled on the buildvariant view. For example, everything but green says unscheduled - https://evergreen.mongodb.com/build/mongodb_mongo_master_enterprise_rhel_71_ppc64le_6d8b7f90fe0ae5251bfab98279d22ef705fae603_18_05_13_18_49_43 while this task https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_71_ppc64le_concurrency_replication_6d8b7f90fe0ae5251bfab98279d22ef705fae603_18_05_13_18_49_43 is scheduled    This build is opposite - https://evergreen.mongodb.com/build/mongodb_mongo_master_enterprise_rhel_71_ppc64le_d12afa4fdda9c6b113e7be3b4d67d757b07b50b5_18_05_14_13_46_06  Push task for it says scheduled on that view but the task view says not scheduled https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_71_ppc64le_push_d12afa4fdda9c6b113e7be3b4d67d757b07b50b5_18_05_14_13_46_06  And some unscheduled tasks on https://evergreen.mongodb.com/build/mongodb_mongo_master_enterprise_rhel_71_ppc64le_9482d5a32e100ce7f939ea5789b1862fc98e9924_18_05_14_22_56_00 are actually successfully completed https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_71_ppc64le_gle_auth_basics_passthrough_9482d5a32e100ce7f939ea5789b1862fc98e9924_18_05_14_22_56_00    I see the same situation on other """"large queue"""" distros like Enterprise Ubuntu 16.04 s390x and Enterprise SLES 12 s390x    One example is here - https://evergreen.mongodb.com/build/mongodb_mongo_master_enterprise_suse12_s390x_9482d5a32e100ce7f939ea5789b1862fc98e9924_18_05_14_22_56_00  and another here - https://evergreen.mongodb.com/build/mongodb_mongo_master_enterprise_ubuntu1604_s390x_cf339b8a8d8708e8b28747fe0cafee7cc79fe9a6_18_05_16_00_03_26 (compile task is scheduled but shows up as not scheduled on that view)    If it's a UI problem, it's annoying but less critical than if this is a bug with the way old tasks are being unscheduled.  I see tasks about a month old still in the queue while we should we unscheduling ones older than 1 (2?) week."""
"EVG-3549","Task","app",2,"Speed up task_queue page","""The task_queue page takes about 40 seconds to load."""
"EVG-3545","Task","app",2,"Validate slack usernames at settings save","""Similarly to how we validate github usernames, let's validate slack user names."""
"EVG-3550","Task","app",2,"Add validation in distro model to ensure that container pools specify a valid distro","""Ensure that for each distro with a ContainerPool key, that ContainerPool specifies a valid parent distro (which cannot have its own ContainerPool key)."""
"EVG-3555","Bug","app",1,"Panic in scheduler","""Stack trace at revision c30ae459ada04bddf27a878c80354386249b9de2    """
"EVG-3551","Bug","legacy-ui",1,"task history page for compiles not working","""https://evergreen.mongodb.com/task_history/mongodb-mongo-master/compile is returning blank?"""
"EVG-3566","Bug","app",2,"Updating 'Default VPC Subnet Id' in distros settings page has no effect","""The {{Default VPC Subnet Id}} setting was originally set to subnet B in the VPC.  Trying to update this to another subnet has no effect.  Requests continue to be launched in Subnet B."""
"EVG-3562","Bug","app",2,"No notifications for 100% consistent OS X openssl unittests failures","""https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_osx_1010_openssl_unittests_d520be0814492c262515cf0a5d62a127ace70dce_18_06_22_16_32_29    https://jira.mongodb.org/issues/?filter=24306&jql=%22Failing%20Buildvariants%22%20%3D%20enterprise-osx-1010-openssl%20and%20%22Failing%20Tasks%22%20%3D%20%22unittests!%22%20"""
"EVG-3589","Improvement","perf-tools",8,"Update the display and grouping of items in the signal processing lists","""Each list should only contain the items for the project being viewed (that is 'https://evergreen.mongodb.com/signal-processing/sys-perf' should only display sys-perf master, 'https://evergreen.mongodb.com/signal-processing/sys-perf-4.0' should display change points from sys-perf-4.0).    Since the project is implicit depending on the plugin page, it should no longer be necessary to display it. (EVG-3737)    The lists contain warnings, or change points (processed or unprocessed EVG-5147) grouped by revision.   Each line item in this list contains further component change points or warnings.    Line items are displayed:   * revision in the first (left most) column.   * hazard value in the second column.   * create time in the third column.   * one per revision per line item   * sorted by max hazard value and create time.    A grouped line item is a list of component items:   * sort by internal hazard value by default.   * it should be possible to view the component items as a sub-list .   * it should be possible to sort by internal properties (variant/ task / test in this sub list)"""
"EVG-3588","Bug","app",1,"Running migrations should not run other amboy jobs","""john.liu@evergreenapp-1:/srv/evergreen/current/clients/linux_amd64$ ./evergreen service deploy anser spawnhost-expiration-preference --conf /etc/mci_settings.yml    [evergreen] 2018/06/27 19:41:36 [p=info]: creating new remote job queue with 4 workers    [evergreen] 2018/06/27 19:41:36 [p=info]: job server running    [evergreen] 2018/06/27 19:41:36 [p=info]: job server running    [evergreen] 2018/06/27 19:41:36 [p=info]: starting queue job server for remote queue    [evergreen] 2018/06/27 19:41:36 [p=error]: [api_name='DescribeSpotPriceHistory' args='{    ¬† AvailabilityZone: """"us-east-1b"""",    ¬† EndTime: 2018-06-27 20:41:35.898 +0000 UTC,    ¬† InstanceTypes: [""""c3.4xlarge""""],    ¬† ProductDescriptions: [""""Windows""""],    ¬† StartTime: 2018-06-27 13:07:14 +0000 UTC    }' client='*cloud.awsClientImpl' message='AWS API call']: RequestCanceled: request context canceled    caused by: context canceled"""
"EVG-3587","Improvement","legacy-ui|perf-tools",1,"Change the current signal processing page to display multiple lists","""The lists / views we wish to display are:     * *warnings*: system failures, post run checks and threshold failures from evergreen (see EVG-3586 for more detail).     * *unprocessed change points*: this is the current list (done in EVG-3440 and EVG-3439).     * *processed change points*: the contents of the *perf.processed_change_points* collection."""
"EVG-3600","Bug","app",2,"Dynamic tasks must support depends_on for static ones","""Repro:    This [dynamic task|https://evergreen.mongodb.com/task/mms_e2e_local_new_e2e_Local_ATM_Import_Automation_patch_14b2d0c90a023dbd4501b62e1d9b1e0861d548ca_5b353ea9e3c3315d3eca92d1_18_06_28_20_01_46] was generated from [this patch|https://evergreen.mongodb.com/version/5b353ea9e3c3315d3eca92d1]. You can see that it doesn't activate the requisite static tasks IVY_DEPENDENCIES and NPM_DEPENDENCIES (and the UI doesn't render the dependencies correctly in the task page)¬†"""
"EVG-3597","Improvement","app",1,"move queries to the models package from service","""{{getVersionHistory}} and {{getHostData}} in the service package should really be in the models package (and arguably the entire {{models.go}} should be elsewhere, but maybe it makes sense to hold off until we move things to a restv2 style situation.)"""
"EVG-3594","Improvement","app",1,"Degraded mode should not mark events as processed.","""This risks swallowing BFGs"""
"EVG-3593","Bug","legacy-ui",1,"rest v2 routes that require authentication 404 with correct api token","""https://evergreen.mongodb.com/api/rest/v2/builds/mongodb_mongo_master_linux_64_duroff_mmapv1_9482d5a32e100ce7f939ea5789b1862fc98e9924_18_05_14_22_56_00/tasks"""
"EVG-8463","Bug","platform",2,"jobs stay locked after they stop running","""either because of early returns, db errors in unlocking, or panics the jobs stay locked (and then run later after a restart)"""
"EVG-3605","Bug","legacy-ui",2,"Lobster not scrolling horizontally when searching","""[https://logkeeper.mongodb.org/lobster/build/5fd863fe3a97fef224b4ee0f4efd2d14/test/5a300a7cbe07c47ae7144c94#bookmarks=0%2C2295]    Search for """"connection attempt"""""""
"EVG-3604","Bug","app",1,"keys CLI operations do not work","""    After removing file validation:  """
"EVG-3607","Bug","app",2,"Single machine task groups should admit/imply explicit dependencies","""The mobile project needs to be able to run several steps on the same machine in sequence. Additionally, we need to use task group for this, so that other builders can depend on the results of particular tasks within the group.    However, if one task fails, the subsequent tasks still execute, which is not what we want.    Additionally, in the GUI, selecting one task to execute for a patch doesn't auto-select any of the others, even though they are dependencies.    We need a way to declare dependencies."""
"EVG-3606","Bug","app",2,"Tasks in group ran in wrong order","""This task group should run the tasks in order: https://github.com/mongodb/mongo/blob/821f9f69916da51f97e001b1c45dff6e49533f81/etc/evergreen.yml#L6891-L6896    However, here it didn't happen that way: https://evergreen.mongodb.com/build/mongodb_mongo_master_embedded_sdk_iphonesimulator_10.2_14730a1d7515716a420603c2bfd6c48874791242_18_06_28_23_23_53    The embedded_sdk_s3_put task did not run immediately after embedded_sdk_install_dev as required."""
"EVG-3608","Improvement","legacy-ui",2,"Improve Waterfall performance","""If we change the waterfall to download the waterfall data (window.serverData) asynchronously, instead of embedding it into the page via templates, we can cut the waterfall load/render time in half."""
"EVG-8417","Bug","platform",1,"Gimlet's panic handler should write errors using rest.APIError","""The front end expects errors to have the structure defined by the the rest.APIError struct, but when a restv2 route panics, the """"error"""" field is unset"""
"EVG-3611","Task","legacy-ui",2,"Pre-populate variables, including user data for spawn host UI","""Would it be practical to populate project expansions for these as well? We should probably do this if we can, so users can pass secrets."""
"EVG-3616","Bug","app",2,"BFGs created for display tasks do not include failed tests information","""The BFG tickets created when a display task fails do not include the section containing the test names and links to the logs and history."""
"EVG-3613","Bug","app",2,"Investigate double notifications","""I received two notifications for¬†5b3bad480305b9400b342cc5, the first one failed, the second one succeeded. All tasks in this patch succeeded.    ¬†    This is possibly a dupe of¬†EVG-3455"""
"EVG-3612","Task","app",1,"Always send evergreen build results from a commit to the committer","""Evergreen, for every build done upon commit, should send the results to the committer. There have been many failures lately due to mutually affecting commits being committed in too close a timeframe for either pre-commit builds to include the other; or just simply poor test coverage pre-commit because the committer didn't expect the changes to be so widely affecting.    More immediate feedback would be very helpful because it can take a while for the resulting BFGs to be sorted out, triaged to the correct team, the severity determined, assigned and inspected. Especially when the system experiences a lot of failures.    We have more developers these days, so the probability of conflicting changes is much higher than it used to be. A more immediate turnaround by notifying the committer ASAP will keep the build greener for everyone -- and give less work to Build Barons, who, once they notice the severity, usually have to manually ping offending committers or revert simple mistakes themselves."""
"EVG-8483","Bug","platform",2,"AbortableRunner.Abort doesn't call Queue.Complete()","""First of all, thanks a lot for an awesome library. It is strange, but¬†Amboy is the only local queue for Go that has all needed features.    ¬†    Problem ‚Äî if you call `AbortableRunner.Abort` and then query queue stat, stat is not correct. In my case job is still running. As far I see,¬†AbortableRunner doesn't call `Queue.Complete()`    ¬†    And workaround not easy because implementation of¬†`Queue.Complete()` in case of `priorityLocalQueue` is not reliable ‚Äî counter is simply decrementing, so, anyone can easily break stats if call ¬†`Queue.Complete` several times. So, in my code I wrap it to check is `buildJob.Status().Completed`."""
"EVG-3617","Bug","legacy-ui",1,"Task page for display tasks always show task status and link to latest execution","""They should instead show the task status and link to the execution selected for the display task.    https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_windows_64_2k8_wtdevelop_display_replica_sets_auth_b76457d9aa0188e1d2369851506b9d4d927024cb_18_07_03_02_07_37/0"""
"EVG-3630","Bug","legacy-ui",1,"Wrong raw link on lobster","""The raw link button points to the all log messages of the job, which is useful in some cases, but a user would expect the raw link to the specific test.    Here's an example.  https://logkeeper.mongodb.org/lobster/build/888d60ec4c67a6e88a62271495561bc6/test/5b365c4af84ae86783002eba#bookmarks=0%2C3996"""
"EVG-3623","Improvement","app",2,"Estimated time to start exposed in API","""I would like to have some way of judging how much progress a task has made, and when it is likely to start executing, using the API.    Presently there is a field called position in queue that is exposed in evergreen UI. This field can be tracked on a per task basis to see if the task is making progress toward being built, and to roughly estimate when it will start building, assuming a steady load on the system.    The API does not expose this field and doesn't provide any data as far as I can tell to perform similar estimation."""
"EVG-3621","Improvement","app",1,"Set content-length header in requests to crowd","""Scarecrowd's WSGI can't handle chunked encoding, which go sets by default if ContentLength isn't set."""
"EVG-3620","New Feature","app",2,"remove rest.APIError in favor of gimlet.ErrorResponse","""this should, I think, involve a more serious refactor of how errors get passed to the API code. It's currently the case that the rest/data package and some areas of the model (generated tasks) return API errors which I think is wrong (and we wouldn't want to have the models package depend on gimlet."""
"EVG-8626","New Feature","platform",1,"add abortable pool features to rate limiting pool","""to support terminating notification jobs (for example). """
"EVG-3631","New Feature","app",1,"add deploy management configuration to CLI config file ","""I want to be able to add direct connection operations to EVG app servers in the evergreen CLI, and to do this we would want to have some configuration in the cli config file that would let us store this information.     perhaps eventually we can make the evergreen CLI itself manage the build/deployment cycle for the evergreen application, but for now a section in the CLI config file to store the locations of the app servers (to start) will make it possible to add administrative options to manage the service from the cli. """
"EVG-3641","New Feature","app",2,"Access task results by display task Id in the API","""As an Evergreen user, I'd like to access task metadata and test results of a display task by its id.    Currently the API only gives access to execution tasks."""
"EVG-3640","Improvement","app",2,"Retrieve project via version id via API","""Travis PR statuses link to Evergreen version URLs. As far as I can tell there's no way to figure out, given a version, what project this version is in."""
"EVG-3635","Bug","app",2,"Static hosts removed from a distro config are still in the pool","""We've removed 2 servers from ubuntu1604-arm64-large on 5/21:  ubuntu1604-arm64-1.linaro.build.10gen.cc  ubuntu1604-arm64-8.linaro.build.10gen.cc    The server were in quarantined status prior to that and remained in the pool in the same state even after we removed them.    Today, 7/09, I set them to the running state to let evergreen do its thing and properly decommission them, but it started to run tasks on them instead.    Things that need to be fixed:  * Evergreen should decommission hosts that are removed from the distro config when there are no tasks running on them, even if they are in a quarantined state.  * Evergreen should not run tasks on hosts that are not part of any distros  * If a host is removed from the distro config and set to the running state, evergreen should decommission it."""
"EVG-3634","New Feature","app",2,"reorganize app server administration port","""expose the abortable pool management interface (depends on EVG-3633), add a prefix for the pprof endpoints, """
"EVG-3633","New Feature","app",1,"switch all existing production amboy pools to use the abortable pool.","""we might want to wait until the notification pools can be backed by an abortable pool, because they use a rate limiting pool (MAKE-427), or we can move the other two worker pools to be abortable first.     The work to expose the management interface is separate. """
"EVG-3632","New Feature","app",1,"log reporting queries to splunk","""use amboy's reporting package to log more data in the amboystatus jobs."""
"EVG-3649","Improvement","app",2,"Build break notifications should notify when the first task regresses, not when version is done","""Currently build break notifications will almost never get sent because versions almost never completely finish"""
"EVG-3646","Task","app",1,"Ability to subscribe to failures of a specific test","""CC [~spencer]"""
"EVG-3651","Bug","app",2,"Must HTML Entities encode some characters in JIRA markup in BF/BFG tickets","""[~matthew.saltz] pointed out that some BF and BFG tickets have broken links/JIRA markup. For example:  https://jira.mongodb.org/browse/BF-9901?page=com.atlassian.jira.plugin.system.issuetabpanels%3Aall-tabpanel      I believe the cause is that an ! is included in the """"text"""" portion of the link. Examples:    Broken JIRA markup:  [unittests! failed on * Enterprise Windows 2008R2 compile_all|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_windows_64_2k8_compile_all_display_unittests!_a7f2cf99a1ab6548eff63d3eddafab1134fe6b84_18_07_10_17_50_03/0]      Working JIRA markup:  [unittests (no exclamation) failed on * Enterprise Windows 2008R2 compile_all|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_windows_64_2k8_compile_all_display_unittests!_a7f2cf99a1ab6548eff63d3eddafab1134fe6b84_18_07_10_17_50_03/0]  """
"EVG-3656","Bug","app",2,"Cannot create JIRA tickets because of unset Issue type","""(this only affects event driven notifications, not the existing BFG logic)"""
"EVG-3654","Improvement","app",2,"Project admins should be able to opt in all committers to build break notifications","""By default, turning on build break notifications should only notify users who have opted into them. However, project admins should have the option to opt in all users to build break notifications for that project. This is to support differing use cases for server (users can opt in) and cloud (everyone should get build break notifications, and it shouldn't require individual user action to get them)."""
"EVG-3664","New Feature","app",1,"scheduler should insert host intent documents in a bulk operation","""currently there's a forloop around insert one. """
"EVG-3663","Task","app",2,"Some hosts stuck indefinitely being prepped for agents","""This occurred after the outage yesterday where AWS was terminating spot hosts Example host: sir-4zei5ghk. These hosts were terminated in AWS, but Evergreen continued in a loop attempting to prep them. From the host page they appeared to be running a task, but the task they appeared to be running, from the task page, was purple. I decommissioned all of the hosts (~ 80 of them) in the UI and then terminated them in the DB."""
"EVG-3674","Bug","app",2,"Dynamic tasks must allow cross-variant task addition","""When I kicked of [this patch|https://evergreen.mongodb.com/version/5b4f9902e3c3316b5de38ee8] via    {{evergreen patch -p mms -v e2e_local -t Setup_E2E_Local -y -f}}    It should have added a new task """"new_e2e_Local_ATM_Import_Automation"""" to a separate static variant {{e2e_local_win}} yet it did not.¬†    I also tried including the {{e2e_local_win}} variant in the patch but to no avail."""
"EVG-3680","Improvement","app",1,"S3 integration tests should generate unique names","""The S3 integration test should generate a unique name each time it is run. As it is currently written, it's possible for a previous successful run of the test to cause a subsequent test to succeed, even though it should have failed: https://github.com/evergreen-ci/evergreen/blob/414a2b6371ac0712153316792c13115e433d1a54/thirdparty/s3_test.go#L14-L15."""
"EVG-3682","Bug","app",2,"Evergreen is generating BFG tickets for fail->fail transitions when only pass->fail transitions configured","""I realized that consecutive commits had BFG tickets created for them while going through the BFG tickets linked to BF-9759. I wouldn't ordinarily expect stepback to lead to the generation of BFG tickets but maybe there's some weird interaction with EVG-3645 going on?    * BFG-81063  ** https://evergreen.mongodb.com/task/mongodb_mongo_master_ubuntu1604_arm64_mobile_jstestfuzz_211b5c3006f89e8235dd6d795d0c64defc77030d_18_06_08_22_18_23  * BFG-81067  ** https://evergreen.mongodb.com/task/mongodb_mongo_master_ubuntu1604_arm64_mobile_jstestfuzz_8fae595c44b14aa61951ba413e293449c2b49866_18_06_08_21_11_33  * BFG-81072  ** https://evergreen.mongodb.com/task/mongodb_mongo_master_ubuntu1604_arm64_mobile_jstestfuzz_72784578190b44abe381e3a181adc309a1bd4cb1_18_06_08_20_52_08  * BFG-81074  ** https://evergreen.mongodb.com/task/mongodb_mongo_master_ubuntu1604_arm64_mobile_jstestfuzz_c68e6339eac6228e97f7eb3af7bcac506ce3d9e3_18_06_08_20_49_16  * BFG-81078  ** https://evergreen.mongodb.com/task/mongodb_mongo_master_ubuntu1604_arm64_mobile_jstestfuzz_e88605e272251362d16c416791434d56acfadfa9_18_06_08_20_45_51"""
"EVG-3693","Bug","legacy-ui",1,"Cannot delete subscriptions from UI","""I get a """"Subscription not found"""" error. This only applies to subs which have bson.ObjectIds as their type."""
"EVG-3691","Bug","app",1,"Tasks by project route doesn't pass task ID correctly","""tasksByProjectPaginator"""
"EVG-3689","Task","ui",1,"Clearly document how to use Lobster to serve local log files","""Improve the documentation in the Lobster README about how to serve local log files using the Lobster server."""
"EVG-3686","Bug","app",1,"Stranded tasks query doesn't work","""¬†¬† duration_secs: 0.013528195   ¬†¬† error: problem finding terminated hosts: unknown operator: $and   ¬†¬† job: task-stranded-cleanup.2018-07-23.18-18-00   ¬†¬† job_type: task-stranded-cleanup   ¬†¬† metadata: { [[+]|https://mongodb.splunkcloud.com/en-US/app/search/search?earliest=-60m%40m&latest=now&q=search%20index%3Devergreen%20metadata.level%20%3E%3D%2070%20AND%20NOT%20job_type%3D%22agent-deploy%22&display.page.search.mode=fast&dispatch.sample_ratio=1&display.general.type=events&sid=1532370174.2062849]   ¬†¬† }   ¬†¬† queue_type: *queue.remoteUnordered"""
"EVG-3712","Bug","app",1,"v2 tasks subresource of build has null artifacts","""Example: https://evergreen.mongodb.com/rest/v2/builds/mongodb_mongo_master_enterprise_rhel_70_64_bit_9d87df4b3ba2e611870893b8a83529a9311719d6_18_07_23_19_29_28/tasks  Array index: 7"""
"EVG-3697","Bug","app",2,"Spawn host expiration message received too early","""I was sent the following:       at 7/24/18 @ 08:12 eastern time, which is much earlier than expected."""
"EVG-3716","Task","app",1,"Log provisioning retries at info","""These currently are logged at error because we log them in the job. However, they are expected, so we should log them at a lower level."""
"EVG-3715","Task","app",1,"Exclude gosec","""This linter was renamed from gas to gosec, so we need to change the exclusion in the makefile."""
"EVG-3714","Task","app",1,"Panic if project has no functions but generator does","""Stack:  """
"EVG-8465","Bug","platform",2,"Amboy can't update stats/status document","""""""problem saving stat: problem updating status document for event-send:5b5b64e9c9ec445913aa8eaa-regression-jira-issue-BFG-Build Failure: not found""""    not found  problem updating status document for event-send:5b5b64e62fbabe103eb18f4b-regression-jira-issue-BFG-Build Failure  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*mongoDB).SaveStatus   /data/mci/e0a0a6d6230b1a3fa7afe162eb264533/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue/driver_mongodb.go:315  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*lockManager).Lock   /data/mci/e0a0a6d6230b1a3fa7afe162eb264533/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue/driver_locker.go:224  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*mongoDB).Lock   <autogenerated>:25  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*remoteUnordered).Next   /data/mci/e0a0a6d6230b1a3fa7afe162eb264533/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue/remote.go:84  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.startWorkerServer.func1   /data/mci/e0a0a6d6230b1a3fa7afe162eb264533/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:123  runtime.goexit   /opt/go1.8/go/src/runtime/asm_amd64.s:2197  problem saving stat  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*lockManager).Lock   /data/mci/e0a0a6d6230b1a3fa7afe162eb264533/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue/driver_locker.go:225  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*mongoDB).Lock   <autogenerated>:25  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*remoteUnordered).Next   /data/mci/e0a0a6d6230b1a3fa7afe162eb264533/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue/remote.go:84  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.startWorkerServer.func1   /data/mci/e0a0a6d6230b1a3fa7afe162eb264533/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:123  runtime.goexit   /opt/go1.8/go/src/runtime/asm_amd64.s:2197"""
"EVG-8351","Bug","platform",2,"buffered session inserter fails to insert some documents","""We occasionally saw errors that notifications couldn't be found by ID. EVG-3614 stopped using the bulk inserter, and we no longer see these errors."""
"EVG-3732","Bug","app",1,"JIRA Ticket description length limit exceeded","""Failed to send alert: error creating JIRA ticket: HTTP request returned unexpected status `400 `: {""""errorMessages"""":[],""""errors"""":{""""description"""":""""The entered text is too long. It exceeds the allowed limit of 32,767 characters.""""}}       extended:  HTTP request returned unexpected status `400 `: {""""errorMessages"""":[],""""errors"""":{""""description"""":""""The entered text is too long. It exceeds the allowed limit of 32,767 characters.""""}}"""
"EVG-8535","New Feature","platform",1,"curator logging agent should be able to watch a file","""if the current modes are """"pipe"""" and """"exec"""" this should be """"tail"""""""
"EVG-3749","Bug","app",2,"patch command line args not overriding default","""I'm runningbut regardless, all the other buildvariants (and their tasks) are scheduled. However, on the buildvariant I'm interested in - {{benchmark}} - only the task I want scheduld - {{benchmark-tpch-micro}} is scheduled.    See version at https://evergreen.mongodb.com/version/5b5f7d9be3c331561bf724cf for the result of the invocation above.    My {{~/.evergreen.yml}} file looks like:"""
"EVG-3747","New Feature","perf-tools",2,"console errors on task page for perfplugin ","""this causes graphs to not render, we think.     e.g. https://evergreen.mongodb.com/task/mongo_go_driver_perf_perf_0a84d587c4836909f1d89c43665e96ecb14fad46_18_07_27_18_33_15"""
"EVG-3738","New Feature","ui",1,"logkeeper app should have reasonable socket timeout","""90s to match evergreen?"""
"EVG-3737","Sub-task","perf-tools",1,"Implicit project","""Project id is implicit. Query should be adjusted. The column should be removed."""
"EVG-3753","Task","app",2,"Schedule task dependencies for scheduled task, even if dependency doesn't satisfy batch time","""We have a high batch time on our project (24 hours). Fairly often recently, most of the tasks will get on one period, but the depended on task (compile) has run more recently than 24 hours, and doesn't get scheduled. This leads to none of the other tasks running.     Instead, the compile task (dependency) should be scheduled whenever something that is dependent on it is scheduled, regardless of the compile tasks' own batch time. """
"EVG-8366","Bug","platform",2,"Amboy keeps retrying some errored jobs",""""""
"EVG-3769","Build Failure","app",2,"Setup Failure: xc-subprocess on RHEL 7.2 zLinux [Evergreen Self-Tests @ 4e4310d2] ","""h2. [xc-subprocess failed on RHEL 7.2 zLinux|https://evergreen.mongodb.com/task/mci_rhel72_s390x_xc_subprocess_4e4310d23ea0d0d7da2606cfdc5c647b04974123_18_08_01_17_51_19/0]  Host: [rhel72-z-10.maristisv.build.10gen.cc|https://evergreen.mongodb.com/host/rhel72-z-10.maristisv.build.10gen.cc]  Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/4e4310d23ea0d0d7da2606cfdc5c647b04974123]: EVG-3866: use correct selector for terminated hosts    """
"EVG-3817","Bug","legacy-ui",2,"Setup failures not colored properly in patch results sidebar","""These failures would show up in pale purple on the grid and on individual results pages, but would still be colored gray in the results section on the right-hand side of the patch page.     Reference patch:   https://evergreen.mongodb.com/version/5b631dffe3c3316f9aecd40d"""
"EVG-3816","Improvement","app",1,"Generated tasks should inherit the priority from the task that generated them","""Unless overridden in the task definition JSON"""
"EVG-5117","Bug","app",1,"last_green endpoint does not exclude patch builds",""""""
"EVG-3822","Task","app",2,"Create new status after initializing and before starting","""The SpawnHost function call can take much longer to return for containers than for conventional hosts, since Docker may need to import and build new images before actually creating and running new containers. This currently means that containers can be stuck in initializing for a while, and end up getting reaped by the scheduler after 3 minutes. By adding the HostSpawning (""""spawning"""") status, we are able to distinguish between uninitialized hosts and ones that have already called SpawnHost. """
"EVG-3821","Bug","app",1,"Panic: concurrent map iteration and map write","""Stack is attached."""
"EVG-5126","Bug","app",2,"Cannot restart setup-failed display tasks","""I tried to restart the {{replica_sets_auth}} task in [my patch build|https://evergreen.mongodb.com/task/mongodb_mongo_v4.0_enterprise_rhel_62_64_bit_display_replica_sets_auth_patch_ad5ca4f9f516d575dc247ba12b2c054ed8d2544f_5b6665c2e3c33156e42cbf57_18_08_05_02_50_19] and got the following error: """"Error restarting: Error restarting task mongodb_mongo_v4.0_enterprise_rhel_62_64_bit_display_replica_sets_auth_patch_ad5ca4f9f516d575dc247ba12b2c054ed8d2544f_5b6665c2e3c33156e42cbf57_18_08_05_02_50_19: Task 'mongodb_mongo_v4.0_enterprise_rhel_62_64_bit_display_replica_sets_auth_patch_ad5ca4f9f516d575dc247ba12b2c054ed8d2544f_5b6665c2e3c33156e42cbf57_18_08_05_02_50_19' is currently 'setup-failed' - cannot reset task in this status"""".    It'd be great if fixing this also made it possible so selecting """"Setup Failures"""" from the """"Restart"""" on the version and build pages could restart display tasks as well."""
"EVG-5125","Bug","app",0,"Cannot get links to artifacts for execution tasks from project and githash","""I spiraled a bit here trying to come up with different options. It's possible I've overlooked something.    https://evergreen.mongodb.com/rest/v1/versions/mongodb_mongo_master_bc880e13829b89ee46c0715c5534c8ef1ac387f3/status lists the task ids for the """"unittests!"""" display task and not the """"unittests"""" execution task.    https://evergreen.mongodb.com/rest/v1/tasks/mongodb_mongo_master_enterprise_rhel_62_64_bit_coverage_display_unittests!_bc880e13829b89ee46c0715c5534c8ef1ac387f3_18_08_02_18_14_03 reports {{""""files"""": null}} as EVG-3283 originally described.    https://evergreen.mongodb.com/rest/v2/tasks/mongodb_mongo_master_enterprise_rhel_62_64_bit_coverage_display_unittests!_bc880e13829b89ee46c0715c5534c8ef1ac387f3_18_08_02_18_14_03 reports {{""""artifacts"""": null}} despite the changes from EVG-3283. It appears the artifacts are only listed in https://evergreen.mongodb.com/rest/v2/tasks/mongodb_mongo_master_enterprise_rhel_62_64_bit_coverage_unittests_bc880e13829b89ee46c0715c5534c8ef1ac387f3_18_08_02_18_14_03, which isn't listed by the {{/rest/v1/versions/<version_id>/status}} endpoint.    I tried to use the {{/rest/v2/projects/<project_id>/revisions/<commit_hash>/tasks}} endpoint, but it didn't work for me. https://evergreen.mongodb.com/rest/v2/projects/mongodb-mongo-master/revisions/bc880e13829b89ee46c0715c5534c8ef1ac387f3/tasks returns        as does https://evergreen.mongodb.com/rest/v2/projects/mongodb_mongo_master/revisions/bc880e13829b89ee46c0715c5534c8ef1ac387f3/tasks    """
"EVG-8831","Build Failure","platform",1,"make curator sync files more reliably ","""don't run threads inside of the job  avoid skipping copying for dev builds. """
"EVG-5143","Problem Ticket","app",2,"Servers getting auto-quarantined without a notice","""I see a few servers that were put into quarantine by mci user without creating a jira ticket today:    https://evergreen.mongodb.com/host/rhel67-z-5.maristisv.build.10gen.cc  https://evergreen.mongodb.com/host/rhel67-z-12.maristisv.build.10gen.cc  https://evergreen.mongodb.com/host/rhel67-z-13.maristisv.build.10gen.cc  https://evergreen.mongodb.com/host/rhel72-z-4.maristisv.build.10gen.cc  https://evergreen.mongodb.com/host/rhel72-z-5.maristisv.build.10gen.cc  https://evergreen.mongodb.com/host/sles12-z-1.maristisv.build.10gen.cc  https://evergreen.mongodb.com/host/ubuntu1604-arm64-2.packet.build.10gen.cc (3 days ago)  https://evergreen.mongodb.com/host/macos-1012-112.macstadium.build.10gen.cc    Last time we saw a jira ticket for this was on 8/02"""
"EVG-5140","Bug","app",1,"Panic in gimlet route","""panic: project context not attached to request    gimlet/middleware_grip.go:184 runtime/asm_amd64.s:515 runtime/panic.go:489 route/prefetch.go:78 route/task_restart.go:37 gimlet/framework.go:42 http/server.go:1942 negroni/negroni.go:46 negroni/negroni.go:29 negroni/negroni.go:38 negroni/negroni.go:38 gimlet/middleware_auth.go:192 negroni/negroni.go:38 negroni/negroni.go:86 mux/mux.go:114 negroni/negroni.go:46 negroni/negroni.go:29 negroni/negroni.go:38 negroni/negroni.go:38 negroni/static.go:34 negroni/negroni.go:38 negroni/negroni.go:38 negroni/static.go:34 negroni/negroni.go:38 negroni/negroni.go:38 gimlet/middleware_auth.go:37 negroni/negroni.go:38 negroni/negroni.go:38 gimlet/middleware_auth_user.go:142 negroni/negroni.go:38 negroni/negroni.go:38 gimlet/middleware_grip.go:192 negroni/negroni.go:38 negroni/negroni.go:86 http/server.go:2568 http/server.go:1825 runtime/asm_amd64.s:2197"""
"EVG-5149","Bug","app",2,"Need to check if a host is up before adding a host provisioning job for it","""I think the correct course of action here is to edit {{DescribeSpotRequestsAndSave}} in {{cloud/ec2_client.go}} so that it updates host's status' to running if they are running, and then change the host provisioning query so that it *doesn't* check IsUp for ec2 instances but also doesn't try to start hosts that aren't yet up. """
"EVG-5147","Sub-task","legacy-ui|perf-tools",2,"Create switch for processed/unprocessed CP modes","""Add a switch to the perf BB / signal processing page which allow to change mode: """"processed change points"""" and """"unprocessed change points"""""""
"EVG-5146","Bug","app",2,"Host expiration warnings aren't getting sent?","""¬†¬† error: unknown trigger: 'expiration'   ¬†¬† event_id: 5b6858f1b237365acdb40bea   ¬†¬† event_type: HOST   ¬†¬† job: event-metajob   ¬†¬† message: errors processing triggers for event   ¬†¬† metadata: { [[+]|https://mongodb.splunkcloud.com/en-US/app/search/search?earliest=-60m%40m&latest=now&q=search%20index%3Devergreen-staging%20metadata.level%20%3E%3D%2070&display.page.search.mode=fast&dispatch.sample_ratio=1&display.general.type=events&sid=1533648416.7279320]   ¬†¬† }   ¬†¬† source: events-processing"""
"EVG-5144","Build Failure","ui",2,"Setup Failure: e2e-chrome on Ubuntu 18.04 (e2e) [Lobster @ d04f7d15] ",""" h2. [e2e-chrome failed on Ubuntu 18.04 (e2e)|https://evergreen-staging.corp.mongodb.com//task/lobster_ubuntu1804_e2e_chrome_d04f7d15900d2de0f7f24b2030d67f8e6bde67f5_18_08_05_17_06_36/0] Host: [ec2-54-164-127-144.compute-1.amazonaws.com|https://evergreen-staging.corp.mongodb.com//host/sir-1ck85bmh] Project: [Lobster|https://evergreen-staging.corp.mongodb.com//waterfall/lobster] Commit: [diff|https://github.com/evergreen-ci/lobster/commit/d04f7d15900d2de0f7f24b2030d67f8e6bde67f5]: Update to React 16, Eslint 5 (#48)  """
"EVG-5162","New Feature","app",1,"Build Baron Plugin: Include link to extracted features","""The Build Baron Tool now has an endpoint to display the extracted features from the BF Suggestion Server.    The Plugin should include a link to this page.    Link should appear on all the page regardless of whether the suggestion is coming from JIRA or the suggestion server. """
"EVG-5154","Bug","legacy-ui|perf-tools",1,"Signal Processing: Revision column is empty","""As the revision column is empty, I can see a list of change points, but can't know where that change point is.     !image-2018-08-08-14-21-23-517.png|width=600!     (What I really want is a clickable link to the task page, to the specific revision. I assume there's already a separate ticket for that.)"""
"EVG-5170","Bug","app",1,"/projects/:project/patches endpoint broken","""Ex: https://evergreen.mongodb.com/api/rest/v2/projects/mongo-ruby-driver/patches    Yields:        https://github.com/evergreen-ci/evergreen/wiki/REST-V2-Usage#fetch-patches-by-project states that start_at defaults to now.    Curiously, the following URL:    https://evergreen.mongodb.com/api/rest/v2/projects/mongo-ruby-driver/patches?start_at=2006-01-02T15:04:05.000Z    Yields:    """
"EVG-5169","Bug","app",1,"Double forward slash in link header causes a 301","""This URL:    https://evergreen.mongodb.com/api/rest/v2/projects    If it has enough projects, returns a link header which contains a double forward slash:        When I request this URL I get a 301 from evergreen redirecting to this url with one of the double slashes taken out.    Evergreen should generate single slash URLs in the link header."""
"EVG-5164","Bug","app",1,"Parsing time failure for REST V2 ""patches by user"" endpoint","""Recently I got below 400 errors while accessing patches by user REST V2 endpoint.¬†    The body of the response indicates it's time parsing related:¬†    ¬†"""
"EVG-5163","Improvement","app",1,"Allow time-based notifications to be configured based on pass/fail","""Correct me if I'm wrong, but based on discussion with brian right now the notifications seem to be implemented so that they only generate if the first commit is passing and the next is either passing or failing.  That seems to mean that if something times out and thus takes a long time, it will still generate a notification.  that seems less useful, since mostly what I care about is """"this task passed before, still passes, but now it takes 50% longer"""".    I also wouldn't hold up the resolution of the event-driven notifications on this since I haven't seen evidence of it going haywire yet.  this just seems like it would improve the signal:noise ratio on these.    (also, while I'm at it, can someone tell me if I should be saying """"150%"""" or """"50%"""" to get notified of things taking 1.5x their usual time?)"""
"EVG-5174","Bug","app",1,"Lack of patches should return an empty array, not 400","""For example, api  v2 GET projects/mongo-tools-v4.0/patches?start_at=""""2020-01-01T00:00:00.000Z"""" produces:    400: no patches found    If there are no patches the return should be an empty array with a success HTTP status code."""
"EVG-5172","Bug","app",1,"start_at values are required to be quoted","""The source specifies this:        As a result, the following request fails:        And this succeeds:        The quotes should probably not be required."""
"EVG-5171","Bug","legacy-ui",1,"Waterfall resets to first page on filtering","""Repro:  * Go to [the second page of the 4.0 waterfall|https://evergreen.mongodb.com/waterfall/mongodb-mongo-v4.0?skip=5] for example  * Type something in the """"Filter Variant"""" page  * Watch the page go to the first waterfall page of that project    Impact: this is super annoying when trying to track down past history.    Interestingly enough this bug doesn't appear if I type in the """"Filter Task"""" box instead."""
"EVG-9256","Task","platform",1,"maintence pass at sink application","""- disable background jobs that aren't going to be useful,   - cleanup and isolate cost reporting code.  - update vendored libs  - fix tests as needed. """
"EVG-5181","Bug","app",2,"Task in task_group on single host ran despite failure of previous task","""The following task group is defined as:        It was [observed in a build|https://evergreen.mongodb.com/build/mongodb_mongo_master_amazon_ec6f2a54d8b901e95e556d53647944be8ce441d5_18_08_13_05_46_37] in that {{compile}} & {{compile_unittests}} ran successfully and then {{unittests}} failed on this [host|https://evergreen.mongodb.com/host/sir-pqei7j7j]. The tasks {{compile_dbtest}} and {{compile_all}} were marked as blocked (and unscheduled). However {{dbtest}} ran on a [different host|https://evergreen.mongodb.com/host/sir-pip84bbj] (and failed since the artifacts did not exist)."""
"EVG-5179","Task","legacy-ui",1,"Remove poolSize and always use maxContainers when scheduling archlinux-docker hosts","""poolSize is redundant because it's the same as maxContainers in the pool settings.¬†"""
"EVG-5178","Sub-task","legacy-ui|perf-tools",2,"Date column","""Each CP has a timestamp. We should add this column to the grid, also add default filter to query CPs for the last two weeks only. User should be able to change it.    (This requires to write change filtering query parser/compiler)"""
"EVG-5177","Sub-task","legacy-ui|perf-tools",2,"Aggregation options for grouped items","""Add aggregation for folded rows. Max on value, and count. Maybe, we could make it configurable by the user."""
"EVG-5195","Improvement","app",0,"Put task status into a custom field in JIRA notifications","""Right now it's in the summary of a BFG and that means we have to regex search on it, which is insanely slow.  Using a custom field would be much faster."""
"EVG-5193","Task","app",1,"Log time taken by scheduler operations","""With many tasks in the queue the scheduler takes a long time to complete. We have seen ~5 minute durations. We should log how long various operations take, especially how long it takes to run the sorting setup, how long it takes to run the sort, and how long the host allocator takes. We can use this information to make a faster scheduler."""
"EVG-5190","Build Failure","app",2,"Allow users to alert on subsets of failure types","""Not sure how deeply-impacting this is in Evergreen, but we're seeing a lot of Setup Failures hitting the BFG project that don't need to.  Would be great if there was some way to ignore them.    And while I'm at it, it's unclear that System Failure BFGs are very useful either, so I assume any solution should include the option to disable those too."""
"EVG-5206","Improvement","app",2,"Re-notify after 2 days for 'test fails in task' trigger","""John Liu [3:57 PM]  eh    the task regression notification will re-notify of a failing task every 2 days  I believe this is to preserve the behavior of the previous BFGs    Ian Whalen [3:57 PM]  yup    John Liu [3:57 PM]  the task regression by test does not have this check  but we could definitely add it"""
"EVG-5198","Improvement","app",2,"add flag to distro to exclude a distro from running tasks in projects","""(e.g. docker hosts, used for parents and should be spawnable, but not for task execution...)     should also be in the validator to prevent versions that use these distros from running"""
"EVG-5210","Bug","app",2,"ActivateElapsedBuilds does not schedule cross-variant dependencies","""It appears that tasks activate their dependencies in certain special cases (patch builds, stepback, patch builds), but I don't see that this happens in commit builds. It should happen there too for consistency, and to ensure that all activated tasks' dependencies are scheduled.    It appears that \{{ActivateElapsedBuilds}} activates all tasks in a given build, but it doesn't activate their dependencies, so if the dependencies are cross-variant, it will not activate them."""
"EVG-5226","Bug","app",0,"Evergreen returns 404 for certain inactive display tasks","""I think something may be misconfigured with how the {{benchrun_embedded*}} tasks are set up.  * https://evergreen.mongodb.com/task/mongodb_mongo_master_rhel_62_64_bit_mobile_display_benchrun_embedded_9fd731be471c3d0f40bf5208f2bdd3923c9ea3e8_18_08_17_17_26_44 is an inactive display task which returns a 404.  * https://evergreen.mongodb.com/task/mongodb_mongo_master_rhel_62_64_bit_mobile_benchrun_embedded_aggregation_5e461534b339c957d2e6dcf16015949a496a1110_18_08_16_22_58_49 is an execution task which doesn't have a """"Parent display task"""" link.  * https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_sharding_59d4d78a68ef6347120c6dfcd6da6ec3d325722f_18_08_17_20_06_11 is a different inactive display task for the sharding tests which works completely fine.    References for the {{benchrun_embedded*}} tasks in the {{etc/evergreen.yml}} project configuration file.  * https://github.com/mongodb/mongo/blob/d0b0d782a14e9c0ac5724e35fb0bc2e20abcca67/etc/evergreen.yml#L178-L188  * https://github.com/mongodb/mongo/blob/d0b0d782a14e9c0ac5724e35fb0bc2e20abcca67/etc/evergreen.yml#L12789-L12825"""
"EVG-5225","Bug","app",2,"Evergreen isn't consistent about failing task when creating BFG tickets","""BFG tickets appear to sometimes be created with the failing task as the execution task and sometimes created with the failing task as the display task.    For example, in BF-10282 the original title was """"Failures: sharding_6 on ! Linux DEBUG [MongoDB (master) @ 801fb6ac] (addshard2.js, find_and_modify_after_multi_write.js, authCommands.js, auto_rebalance_parallel_replica_sets.js, change_stream_update_lookup_read_concern.js +10 more)"""" and in BFG-87625 the original title was """"Failed: sharding on ! Linux DEBUG [MongoDB (master) @ 801fb6ac]"""".    I think ideally the links within a BFG ticket would go directly to the execution which caused the display task to be marked as a failure. However, I would want the title and custom JIRA fields to still refer to the name of the display task though."""
"EVG-5222","Bug","app",1,"Batch describe instances makes API call with empty list",""""""
"EVG-5218","Bug","app",2,"Agent deploys fail immediately after deploy","""Investigate why¬†BUILD-5992 happened"""
"EVG-5216","Improvement","app",1,"Change agent heartbeat failure to N times in a row from N times during a task","""Currently, the agent will fail a task if more than 10 heartbeats fail during task execution. This ticket is to change this behavior to more than 10 times in a row."""
"EVG-5215","Build Failure","app",1,"Setup Failure: e2e-chrome on Ubuntu 18.04 (e2e) [Lobster @ 418607b0] ",""" h2. [e2e-chrome failed on Ubuntu 18.04 (e2e)|https://evergreen-staging.corp.mongodb.com//task/lobster_ubuntu1804_e2e_chrome_418607b0f5d77c08c60db6b29ac9f6810960d4a1_18_08_15_14_03_00/0] Host: [ec2-34-230-66-20.compute-1.amazonaws.com|https://evergreen-staging.corp.mongodb.com//host/sir-97ti57eh] Project: [Lobster|https://evergreen-staging.corp.mongodb.com//waterfall/lobster] Commit: [diff|https://github.com/evergreen-ci/lobster/commit/418607b0f5d77c08c60db6b29ac9f6810960d4a1]: Allow user to change log file via 'Show Details' menu's input box when server is set (#54)  """
"EVG-5232","Bug","app",1,"Spawn hosts for tasks fails to retrieve generated key",""""""
"EVG-5229","Bug","app",1,"Do not run teardown scripts on task-spawned hosts",""""""
"EVG-5227","Bug","app",2,"Container changed from running back to building","""https://evergreen-staging.corp.mongodb.com/host/container-6564627122112293016"""
"EVG-5241","Bug","app",1,"Gimlet middleware: Runtime error: invalid memory address or nil pointer dereference ",""""""
"EVG-5237","Improvement","app",1,"avoid/log termination jobs for terminated hosts","""seems like there are a couple of cases in the host termination job where we don't handle hosts that are already terminated very well. This is a small ticket to return early when it's clear we should and log a bit more in other cases.    derives from MAKE-437 work"""
"EVG-5236","Bug","app",2,"avoid cross compiling zap tests ","""these are almost entirely test harness assumptions about testdata and config files.    after some thought, we decided to ditch the cross compile method and just compile these tests directly on these platforms.¬†"""
"EVG-9299","Task","platform",0,"Revendor latest version of github.com/bluele/slack","""github.com/bluele/slack has been updated to properly escape slack messages"""
"EVG-5254","Improvement","app",0,"Include task name and whether it was a task failure or test failure in email subject","""Not having this information makes it hard to skim your inbox for specific tasks and whether it's a task or system failure or if it's JUnit test failures only"""
"EVG-5249","Bug","app",1,"attach.xunit_results does not indicate failure","""I tried passing it different file paths to upload and it always says:    [2018/08/22 19:31:55.274] Running command 'attach.xunit_results' in """"upload test results"""" (step 2 of 4)  [2018/08/22 19:31:55.274] Attach test results succeeded    However nothing appears in the test results in evergreen UI.    The task should indicate failure if it fails e.g. due to being passed a nonexistent path to upload."""
"EVG-5261","Bug","app",2,"Created ticket not displayed in the Build Baron Plugin","""On¬†[this task page|https://evergreen.mongodb.com/task/mongodb_mongo_v3.6_enterprise_rhel_72_s390x_jstestfuzz_concurrent_replication_WT_14681d89a9093802a8b29455c8a361ccd36b42c9_18_08_23_17_20_52/0], the Build Baron Plugin does not display the BFG ticket that was automatically created.    The ticket information is retrieved through an API call ({{plugin/buildbaron/created_tickets/)}} that returns a 500 error with a¬†""""HTTP request returned unexpected status `404 `"""" error message.    The message appears to come from the¬† [{{GetJIRATicket()}}|https://github.com/evergreen-ci/evergreen/blob/0f46336c89adc07fd5e0ca28834c111fbc3cb88c/thirdparty/jira.go#L166] function.   A 404 for the JIRA API call could happen if the ticket key is invalid.   This key is retrieved from Evergreen events by the Build Baron Plugin [here|https://github.com/evergreen-ci/evergreen/blob/0f46336c89adc07fd5e0ca28834c111fbc3cb88c/service/ui_plugin_build_baron.go#L113-L126]."""
"EVG-5259","Task","app",2,"Investigate how builds are marked failed with no failing tasks","""I put some logging inside of the task model to figure out when/where builds are getting marked failed. If you search splunk with """"source=http:evergreen  evg-3455"""" you'll find that builds that ultimately succeed, and are marked as Status: evergreen.BuildSucceeded at some point prior have their status in the DB set to failed."""
"EVG-5258","Task","app",1,"Can't restart display task with blocked execution task","""https://evergreen.mongodb.com/task/mci_ubuntu1604_display_lint_patch_3f997083ebbeb03548604f1f299d075733cf2252_5b80304c2a60ed5f8609e3a6_18_08_24_16_20_29"""
"EVG-5256","Task","app",2,"Allow renotification interval to be configurable for task-regression{,-by-test}","""task-regression{,-by-test} renotify after 48 hours, but we should make these configurable using the extra data fields"""
"EVG-5264","Improvement","ui",2,"Editing text in Lobster search bar is sluggish for very large logs","""The current behavior of the Lobster search bar is such that whenever you edit the current search term (delete/insert/replace a character), the search terms highlighted in the log are automatically updated. There seems to be a negative consequence to this, which is that for very large logs, editing the current search term becomes quite laggy. That is, trying to quickly type a term or delete a few characters becomes much slower than you would expect from a responsive text input box. Here is one [example log|https://logkeeper.mongodb.org/lobster/build/834158c1a5f92af0f569f178be004413/test/5b809f89c2ab68145a00ea9d#bookmarks=0%2C183196] that exhibits this behavior. It is a bit over 180,000 lines.     Depending on user's preferences, one fix would be to consider _not_ updating the highlighted search terms until a user presses """"Enter"""" again. Only then would the highlighted search terms update to reflect the current text value in the search bar. Personally, I prefer this behavior since it ensures that the current context is not changed while entering a new search term i.e. if I am focused on one particular log line while entering a new search term, I know that the logs won't be scrolled to a different position until I actually press """"Enter"""". """
"EVG-5268","Bug","app",1,"Container name not displayed on some container tasks","""https://evergreen.mongodb.com/task/mci_archlinux_docker_test_agent_917220c726028ea2ba8d4f618778812321e011e8_18_08_27_15_59_27"""
"EVG-5267","Bug","legacy-ui",1,"Display task doesn't show system-failures correctly","""The task there shows as having no build host and no logs. It is unclear from the task page why this was a system failure."""
"EVG-5266","Bug","app",1,"race-agent failure (TestAbort)","""https://evergreen.mongodb.com/task/mci_race_detector_race_agent_ae9b15165d12b22d7020fdb6f1d83e485f50cc09_18_08_24_21_13_32"""
"EVG-5272","Improvement","legacy-ui",2,"For task failures, display failing command on task page","""We record the name of the command that failed in the task document, but don't expose that anywhere. We should expose this in the UI to help users debug"""
"EVG-5271","Bug","legacy-ui",2,"Inability to log in under FF","""Whenever an user clicks over password field it instantly loses the focus, so the user cannot type password and log in. The second problem is console warning (""""An empty string cannot be an argument of getElementById()""""), which logged to console whenever user clicks anywhere.    Both of this are FF related and couldn't be reproduced on Chrome (due to different implementation of getElementById function and other differences)"""
"EVG-5270","Bug","app",1,"Build on MSFT with a compile-failure didn't list compiler output for failing code","""[https://evergreen.mongodb.com/task_log_raw/mongodb_mongo_master_windows_64_2k8_debug_compile_patch_078d6b49548d90880556af6f55e3baf8b4709917_5b845e6de3c3314a2daee887_18_08_27_20_26_22/0?type=T&text=true]    [https://evergreen.mongodb.com/host/sir-xzzr53qh]    It looks like something might have gone wrong with the agent installation."""
"EVG-5275","Improvement","legacy-ui",2,"Overridden task shows up as ""Blocked""","""Happened after the task completed successfully (sign depends on compile), see:    sign:¬†[https://evergreen.mongodb.com/task/sqlproxy_single_variant__os_single_variant~rhel70_sign_patch_9ff2d3c3c76471e68cc50903aa63bdd80a41a421_5b8704aee3c331672b83600a_18_08_29_20_40_15]    and    compile:¬†[https://evergreen.mongodb.com/task/sqlproxy_single_variant__os_single_variant~rhel70_compile_patch_9ff2d3c3c76471e68cc50903aa63bdd80a41a421_5b8704aee3c331672b83600a_18_08_29_20_40_15]"""
"EVG-5274","Improvement","app",2,"Agent deploy jobs should requeue themselves","""Currently agent deploy jobs are generated every 15 seconds. This means that, if an agent deploy job doesn't finish quickly, another agent job can run at the same time. We should:  1. Round the timestamp to the nearest 10-minute or similar in the generator.  2. Requeue agent deploy jobs in the job itself, in a defer, only if it fails, and increment the attempt there."""
"EVG-5279","Improvement","legacy-ui",2,"Make the selection of 'start at origin' on perf graphs sticky by account","""It would be great if I could select the wrench and 'origin' once and then have it stick until changed."""
"EVG-5278","Improvement","app",1,"Add TTL index to notifications collection","""We presently store notifications indefinitely, but we never reuse them after sending. It's probably a good call to TTL this collection."""
"EVG-5277","Improvement","app",1,"Add TTL indexes for subscriptions with an ID selector","""For subscriptions which contain a selector whose key is ID, we should add a TTL index to prevent the event-metajob from being hit too hard in the future.    Biggest one is pull requests which create (num builds + 1) subscriptions per commit we receive via the webhooks."""
"EVG-5276","Improvement","legacy-ui",1,"Show what containers a parent contains, what parent a container belongs to","""on the host page"""
"EVG-5287","Bug","app",2,"Many version finished notifications received for same version","""mci:SECONDARY> db.event_log.find({r_id: """"mci_d7795888f24f737e355d037f989ea43203add13f"""", """"data.status"""": """"failed""""}).count()  60"""
"EVG-5286","Bug","legacy-ui",2,"Restarting a task doesn't update the build cache","""This leads to rogue/incorrect notifications when restarting a task"""
"EVG-5285","Bug","app",1,"Link for tasks in email return not found","""I believe this is EVG-5211 but with email instead of jira. We should also check slack."""
"EVG-5289","Improvement","legacy-ui",1,"Move perf tools to the app","""Currently, perf tools are living at /static/plugins/perf. Since it's not a plugin anymore, the code should be migrated to /app/perf/."""
"EVG-8644","New Feature","platform",2,"write more rigerous integration tests for jasper","""* larger numbers of processes. (like 50 or 100)   * processes that have to be terminated.   * processes that resemble mongodb.   * use the send.InternalSender to verify that managers respect output options."""
"EVG-8621","New Feature","platform",2,"implement a better in-memory send.Sender","""for use in the jasper interface to tee logs to a buffer that we can return in a rest/etc interface."""
"EVG-5303","Bug","app",1,"Github webhook not working","""Initially, we had the repo at [https://github.com/mongodb/mongo-odbc-driver/]¬†configured with the following webhooks:  !image-2018-09-05-17-39-10-283.png!    The evergreen logs indicated the following error:  even after deleting   ¬†"""
"EVG-5305","New Feature","app",2,"simplify test compilation and execution. ","""using the ftdc/jasper makefiles as models (already upgraded sink, which is substantially similar to the evergreen makefile). This gets much easier after EVG-5246."""
"EVG-5308","Problem Ticket","legacy-ui",1,"Panic due to missing execution task",""""""
"EVG-5307","Bug","app",0,"patchable=false tasks cannot be used in a display task with patchable=true tasks","""Since I'm using the {{s3Copy.copy}} command in the {{upload_benchrun_embedded_files}} task, I wanted to make it not run as part of a patch build in order to avoid confusing [the {{model.FindPushLogAfter(copyToLocation, v.RevisionOrderNumber)}} check|https://github.com/evergreen-ci/evergreen/blob/c17b8ca247e17800de7304c778c5af350a6c63d5/service/api_plugin_s3copy.go#L59] when it'd run as part of a mainline commit. I tried to include the {{upload_benchrun_embedded_files}} task in the existing {{benchrun_embedded}} display task but am getting an error message when navigating to its task page after scheduling the patch build. EVG-5226 describes some other weirdness around the {{benchrun_embedded*}} tasks that I wasn't sure if it is related given that I've based my changes on top of [660fb03|https://github.com/mongodb/mongo/commit/660fb03fe223cacc1c35d3c0e7b266ab5679f31d] from SERVER-37060.        * Task: https://evergreen.mongodb.com/task/mongodb_mongo_master_rhel_62_64_bit_mobile_display_benchrun_embedded_patch_660fb03fe223cacc1c35d3c0e7b266ab5679f31d_5b95e6522a60ed2c27bc10d7_18_09_10_03_35_01  * Patch build: https://evergreen.mongodb.com/version/5b95e6522a60ed2c27bc10d7"""
"EVG-5314","Improvement","app",2,"Expose image ID in rest v2 host API endpoint","""We currently do this in the distros endpoint. We should do it in the hosts endpoint also so that people can reason about which image changes were present when their task ran."""
"EVG-5313","Improvement","app",2,"Restart all tasks in a single-host task group if one task is restarted","""There are a number of cases where a task in a single-host task group might be restarted. If this task depends on previous tasks in a task group having run, then this task will fail in a way that might be mysterious to the user. Furthermore, there is not an indication in the UI of which tasks belong to a particular task group. Even if there were, selectively restarting each task in the group would require some painstaking clicking.    We should, in cases where Evergreen restarts a task (the system-unresponsive case, when for example AWS has reaped a host) and when a user restarts a task, if that task is part of a single-host task group, Evergreen should restart all tasks in the group. Unlike multi-host task groups, users assume that single-host task groups have dependencies between the tasks."""
"EVG-8715","New Feature","platform",2,"unify ""hashing"" and document parsing codepaths","""in order to identify schema changes in documents, we hash the bson values (including traversal) for all inputs and then we read the documents again to store the values again.    the code paths for traversal and hashing are separate, so this ticket is to unify these code paths. It would be nice if we could also avoid the double traversal, however, that's a lower priority."""
"EVG-5320","Build Failure","app",1,"Panic in external termination job","""pool/abortable.go:121 runtime/asm_amd64.s:523 runtime/panic.go:513 runtime/panic.go:82 runtime/signal_unix.go:390 cloud/cloud_host.go:37 units/host_monitoring_external_termination.go:94 pool/helpers.go:28 pool/helpers.go:37 pool/abortable.go:174 pool/abortable.go:148 runtime/asm_amd64.s:1333    The query that inserts the jobs should filter out host intents"""
"EVG-5315","Bug","app",1,"Attempting to schedule display task returns 500 HTTP error about not being able to find distro","""This might be the first time we've attempted to have execution tasks within a display task run on different distros. [The {{generate_benchrun_embedded_files}} task is meant to run on the {{rhel62\-small}} distro|https://github.com/mongodb/mongo/blob/4592bf741ed8a7492e31a1e0a8ad997fcd0a2704/etc/evergreen.yml#L12948], and [the {{benchrun_embedded*}} tasks are meant to run on the {{centos6\-perf}} distro|https://github.com/mongodb/mongo/blob/4592bf741ed8a7492e31a1e0a8ad997fcd0a2704/etc/evergreen.yml#L12921-L12944].    https://evergreen.mongodb.com/task/mongodb_mongo_master_rhel_62_64_bit_mobile_display_benchrun_embedded_4592bf741ed8a7492e31a1e0a8ad997fcd0a2704_18_09_12_02_05_52    {quote}      Error activating task mongodb_mongo_master_rhel_62_64_bit_mobile_display_benchrun_embedded_4592bf741ed8a7492e31a1e0a8ad997fcd0a2704_18_09_12_02_05_52: problem finding distro for activating task 'mongodb_mongo_master_rhel_62_64_bit_mobile_display_benchrun_embedded_4592bf741ed8a7492e31a1e0a8ad997fcd0a2704_18_09_12_02_05_52': problem finding buildvarianttask for task 'mongodb_mongo_master_rhel_62_64_bit_mobile_display_benchrun_embedded_4592bf741ed8a7492e31a1e0a8ad997fcd0a2704_18_09_12_02_05_52': could not find task benchrun_embedded in build variant rhel-62-64-bit-mobile  {quote}"""
"EVG-5327","Bug","app",1,"Next task endpoint panic for nonexistent task group","""gimlet/middleware_grip.go:184 runtime/asm_amd64.s:515 runtime/panic.go:489 runtime/panic.go:63 runtime/signal_unix.go:290 model/task_queue.go:173 service/api_task.go:266 service/api_task.go:519 service/api.go:573 http/server.go:1942 negroni/negroni.go:46 negroni/negroni.go:29 negroni/negroni.go:38 negroni/negroni.go:38 service/api.go:166 gimlet/middleware_wrapper.go:16 negroni/negroni.go:38 negroni/negroni.go:86 mux/mux.go:114 negroni/negroni.go:46 negroni/negroni.go:29 negroni/negroni.go:38 negroni/negroni.go:38 negroni/static.go:41 negroni/negroni.go:38 negroni/negroni.go:38 negroni/static.go:53 negroni/negroni.go:38 negroni/negroni.go:38 gimlet/middleware_auth.go:37 negroni/negroni.go:38 negroni/negroni.go:38 gimlet/middleware_auth_user.go:142 negroni/negroni.go:38 negroni/negroni.go:38 gimlet/middleware_grip.go:192 negroni/negroni.go:38 negroni/negroni.go:86 http/server.go:2568 http/server.go:1825 runtime/asm_amd64.s:2197"""
"EVG-5325","Improvement","app",1,"Create a REST endpoint to allow sending custom notifications","""The Cloud team needs the ability to send custom notifications to evergreen users.     We will be running a script periodically against the Evergreen Stats Summary endpoints.   If it determines that a particular commit caused a flakiness regression, or a consistent failure, we want to be able to send email / slack notifications to that user.   Ideally, we'd be able to send these to Slack rooms also. """
"EVG-5323","Bug","app",2,"Stack returned to agent from 400 is a list of integers",""""""
"EVG-5322","Bug","app",1,"Decommissioned intent hosts should be terminated without calling into a cloud manager","""Currently, if intent hosts are decommissioned, we attempt to terminate them by calling the cloud manager. This fails in the ec2 case, since the documents don't have enough metadata to be processed by the cloud manager. (They are neither on-demand nor spot.) The job errors, and another job is generated, which tries to terminate it again. We should instead check to see if the document is an intent and set it to terminated immediately."""
"EVG-5330","Bug","app",1,"task-execution-timeout job should mark execution tasks as sys-timed-out","""Currently it asks the display task to restart when it finishes, but it probably will never finish if we're in this state"""
"EVG-5337","Improvement","app",0,"s3 put should log that it uploaded no files when optional is set","""It is unclear to the user when optional is set if the command uploaded a file or nooped."""
"EVG-5335","Bug","legacy-ui",2,"combining lobster filters doesn't work","""I feel like this used to work but I can't get it to work with the new interface:    https://logkeeper.mongodb.org/lobster/build/ba88d756f0698281c9999f9a7e793432/test/5b9be0a8f84ae82e18086488#bookmarks=0%2C8241&f=11ELECTION&f=11REPL_HB&f=10d20271    I expect this filter to be able to exclude all lines with ELECTION or REPL_HB, and to also exclude all lines *without* """"d20271"""".  The first two filters work correctly, but I can't figure out how to make the third filter work.  When I click on """"inverse"""" it does behave properly, but when I click on """"match"""" it doesn't seem to do anything -- the display is the same as if I didn't have the third filter at all."""
"EVG-5334","Improvement","legacy-ui",2,"Allow restarting setup-failed tasks from the build page","""EVG-3248 added the ability to restart setup failures from the version page. We should also add the same feature to the build page."""
"EVG-5332","Bug","perf-tools",1,"Current class is only applied to 'all' thread levels view in the trend graphs ","""The 'current' css class is only applied t points on the 'All threads view'. See the following images for [mixed_workloads|https://evergreen.mongodb.com/task/sys_perf_linux_3_node_replSet_mixed_workloads_ec6f2a54d8b901e95e556d53647944be8ce441d5_18_08_13_05_46_37]:     !max-only.png|width=50%!    !all-thread-levels.png|width=50%! """
"EVG-5344","Improvement","app",2,"Mechanism to send users to templated Spawn Hosts configs","""To replace the functionality of https://mci.mms-build.10gen.cc/spawn, without exposing undue implementation detail to Cloud engineers, I would like to be able to send them links to specific Spawn Host configs.     On """"Cloud MCI"""", these appear as separate Distros (ie. one item specifies an AMI _and_ an Ops Manager config to run inside it)    Some ideas for Evergreen Spawn Hosts:   * Templates ability to save per-team 'templates' for 'run Userdata at start'.   ** Distro=ubuntu18 UserDataTemplate=Ops Manager 4.1.0-LDAP  ** Admins could create these / manage them in git, or evg's MDB. They should be update-able via automation, not requiring human intervention.   ** Ideally, I could target these distro/template combinations by url - https://evergreen.mongodb.com/spawn?distro=foo&template=bar would pre-populate the Spawn Hosts UI     * (alternative workaround, not ideal) ability to fill the 'Userdata' box from the URI.   ** this would let us build a web service which could construct these URIs       Something like the functionality described above is necessary for Cloud to move off our custom MCI instance.     cc: [~brian.samek] may have other ideas"""
"EVG-5343","Problem Ticket","app",1,"> 1000 ""error clearing running task"" error in 10-minute period","""I believe we have seen this a couple times now. It leads to CPU spikes on the app servers. We should find out why this is and prevent it from happening.    https://github.com/evergreen-ci/evergreen/blob/5e893fd7aeb172a034dce2c851d415745552daad/service/api_task.go#L184"""
"EVG-5341","Bug","app",1,"Project route with non-existent project causes panic","""E.g., /project/asdf"""
"EVG-5348","Bug","legacy-ui",1,"Submitting a buildvariant filter auto-adds a skip","""*Steps to repro:*   1) Go to [https://evergreen.mongodb.com/waterfall/mongodb-mongo-master]   2) Put 'Enterprise Ubuntu 18.04' in the filter variant box.    *Actual result:*   Land on [https://evergreen.mongodb.com/waterfall/mongodb-mongo-master?bv_filter=Enterprise%20Ubuntu%2018.04&skip=5]    *Expexted result:*   Land on¬†[https://evergreen.mongodb.com/waterfall/mongodb-mongo-master?bv_filter=Enterprise%20Ubuntu%2018.04]"""
"EVG-5347","Improvement","app",1,"Move lint task to go 1.11","""There are small differences between go 1.11 and go 1.8 gofmt. Since we tend to develop locally with go 1.11, we cause lint errors when linting in Evergreen with go 1.8 gofmt. We should move the lint task to go 1.11, presumably on archlinux container."""
"EVG-5346","Bug","legacy-ui|perf-tools",2,"Perf. discovery - wrong ratio formula","""There is a mistake in ratio formula - it's calculated by using log2, which is good for charts, but doesn't make that much sense for numbers. Correct formula should be linear."""
"EVG-8635","New Feature","platform",2,"benchmark throughput (bytes per ms) of output in various configurations","""using the yes command and a number of different logging configurations, see what the maximum possible throughput is for a process running in jasper.    it's also interesting to us to see what the latency (mostly in a, """"are there pauses in collection."""") but the test of that is not obvious how to do correctly.    should be possible to implement this using go test, though we'll need to add an additional task to evergreen and some makefile glue to run benchmarks."""
"EVG-8528","New Feature","platform",2,"implement sender bencharmking ","""implement throughput (messages/<time>, as well as size/<time>) measurements of logging ability for various grip senders.    Look at the mongodb-go-driver benchmarking tool/framework and see if you can steal some/all of that for evergreen integration.    This will require some change to the evergreen configuration and the makefile, which can be spun off onto its own ticket if the scope grows too much."""
"EVG-5354","Improvement","app",0,"Remove unused routes","""The home (""""/"""") and """"/token"""" routes are unused. We should remove them."""
"EVG-5351","Improvement","legacy-ui|perf-tools",2,"Leverage new props of change points collection","""Perf team added few new properties to change points collection (in Atlas). For instance, task_id, hazard values. This might simplify queries and improve performance and display more consistent hazard values."""
"EVG-5355","Bug","legacy-ui|perf-tools",2,"Trendchart - BF ticket links are broken","""For some reason, the host is `undefined`, despite `jiraHost` variable is set."""
"EVG-8414","Bug","platform",1,"Make DevNullAppender able to write","""DevNullAppender currently errors when Send is called because /dev/null is opened in read-only mode."""
"EVG-5384","Improvement","app",1,"Turn off host provision failure emails","""We have an alert for this."""
"EVG-5382","Improvement","app",1,"Patch validation should ensure required tasks exist","""I submitted¬†[this patch build|https://evergreen.mongodb.com/version/5ba8f412c9ec44521903461b], which introduced an evergreen variant """"Enterprise RHEL 6.2 (majority read concern off)"""" on 4.0. I incorrectly included the {{burn_in_tests}} and {{lint}} as requirements of {{compile_all_run_unittests_TG}}, even though {{burn_in_tests}} and {{lint}} were not included as tasks for this variant. This should have failed patch validation. Instead, my patch was uploaded, but when I tried to run all tasks for the variant, only the """"display tasks"""" were scheduled."""
"EVG-5391","Bug","app",2,"Stats collector can sometimes not run","""Neither task on this host has system logs: https://evergreen.mongodb.com/host/sir-cprg5aih    And no requests received a non-200 status, so I think the stats collector thread either didn't start, errored, or got blocked"""
"EVG-5385","Improvement","app",1,"Support multiple paths in LDAP","""LDAP authentication should support users residing in different LDAP paths. For example, ordinary users may be in one path, while services may reside in another."""
"EVG-8759","New Feature","platform",1,"add logging options to process creation to control log buffering","""number of messages to buffer and time to wait to buffer. Use the buffered sender from grip, to be careful about flushing and closing those senders.     also don't buffer if people don't ask for it. """
"EVG-8707","New Feature","platform",2,"consttructor for Pail types, based on some global sink configuration/system defaults","""we need to add configuration to the sink application globally that defines what we want our defaults to be (e.g. which blob storage we use, and also credentials,) from this (+ a prefix, passed in by the caller) generate a bucket instance that we can use to write data. """
"EVG-8642","New Feature","platform",2,"improve support for storage types and data associated with performance","""I think this means that what's currently a path will become a list of structs, with values for: """"key name, bucket name, results format)    results format will always be FTDC (for now,)   so that it's clear how to save data and produce readers for them. """
"EVG-8612","New Feature","platform",1,"collector interface should allow writing to io.Writer/io.WriteCloser for streaming","""[here|https://github.com/mongodb/ftdc/blob/master/collector.go]    as a flavor of Resolve() that just writes the data to a writer interface. can then refactor resolve in these terms. """
"EVG-5399","Task","app",2,"Handle build break notifications for triggered builds","""- add the right implicit subscriptions (search for places using evergreen.RepotrackerVersionRequester)  - send to project admins and not the committer"""
"EVG-5396","Bug","app",1,"LDAP implementation logs user out after expire_after_minutes","""In staging I periodically am logged out, presumably after expire_after_minutes. The behavior should be to reauthenticate the user, but not to log them out."""
"EVG-5395","Bug","legacy-ui",1,"Deleting a github patch tag doesn't work correctly","""If I erase the tag and save, the tag is still there"""
"EVG-5394","Bug","app",1,"validatePushEvent does not handle branches with slashes in them correctly","""{{validatePushEvent}} splits on a slash and then returns the third item. This works fine if the branch does not contain a slash. If the branch does contain a slash, we return an error, since we can't trust the split we've performed. We should handle branches with slashes in them."""
"EVG-5393","Bug","ui",1,"Build logs are not included with test logs if the first build log is after the test_id creation","""If no build logs were sent to the build endpoint before a test_id is created, then when viewing the test logs the build logs that occur during the test executions do not show.    Example:   * [test_logs|https://logkeeper.mongodb.org/lobster/build/54e4e5c9d941645c3f2b3eba1edc85b5/test/5baa3e8ac2ab682ba000f61a] with only the test logs   * [build_logs|https://logkeeper.mongodb.org/lobster/build/54e4e5c9d941645c3f2b3eba1edc85b5/all] show that there were build logs during the test execution    ¬†    The function responsible for including the build logs in the test view is [here|https://github.com/evergreen-ci/logkeeper/blob/master/views.go#L600]. The code looks for build logs before the test_id creation [here|https://github.com/evergreen-ci/logkeeper/blob/master/views.go#L613] and if none are found returns nothing [here|https://github.com/evergreen-ci/logkeeper/blob/master/views.go#L649]."""
"EVG-8648","New Feature","platform",2,"Command line tool to convert bson-dump metrics to FTDC","""separate way to specify metadata separately from the stream  toggle use of the dynamic allocator (when we expect schema to change)   configure batchsize for chunks. """
"EVG-5417","Improvement","app",1,"Add additional TTL to login cache to log user out after period of time","""This should be separate from the TTL which causes Evergreen to silently re-auth the user against LDAP."""
"EVG-5416","Improvement","app",1,"Add button to admin settings page to log out all users","""This should delete all user login cache tokens."""
"EVG-5415","Improvement","app",1,"Add button to user settings page to log user out everywhere","""This should delete their login cache token."""
"EVG-5411","New Feature","app",5,"Write job to update test and task execution statistics for a project","""The job should be run at configurable time intervals and update the test and task execution statistics that are impacted by the tasks that have finished since the last time the job ran.    One job is run per project."""
"EVG-5410","Task","app",5,"Write component to store and query test and task execution statistics","""Write API in front of database to handle (generate, store and query) cached collections data. The API will be in a new package in {{model/.}}    The API is meant to be used by a job that triggers the pre-computations (EVG-5411) and by REST API endpoints that allow users to query the statistics (EVG-5412, EVG-5413).    ¬†In order to pre-compute and store the statistics, the following functions will be provided:   - get the stats status for a project (contains the time of the last successful job run and the time before which all finished tasks were processed)   - set the stats status for a project   - find which statistics need to be updated after tasks finished in a given time interval (contains project, requester, hour, day and task list)   - generate the hourly test statistics for a project, requester, hour and task list   - generate the daily test statistics for a project, requester, day and task list   - generate the daily task statistics for a project, requester, day and task list    ¬†    In order to query the statistics, two functions will be provided:   * aggregate and return test statistics according to a provided set of parameters (see design document)   * aggregate and return task statistics according to a provided set of parameters (see design document)    ¬†"""
"EVG-5409","Task","app",5,"Write migration hook to update task create_time values for patch builds","""Work on EVG-5407 will change the semantic of the task field {{create_time}} for patch builds. A migration hook should be written to update the values in the database to reflect this change for all the tasks."""
"EVG-5407","Task","app",3,"Change semantic of create_time task field for patch builds","""The semantic of the task field¬†{{create_time}} for patch builds should be changed to match the semantic for the mainline, i.e. be the push time for the base commit.    Currently the {{create_time}} is based on the {{create_time}} value for the corresponding Version, which is the push time for the mainline but the finalization time for the patch builds.    Current usage of the {{create_time}} for patch builds can be replaced with the {{ingest_time}}."""
"EVG-5405","Improvement","app",1,"Modifying project page should save an event in the event log","""We could do something like the distros page, where we present a history of project page changes. Note that this should probably be superusers-only, or admin only. If it includes redacted variables, then it has to be superusers-only."""
"EVG-5404","Improvement","legacy-ui|perf-tools",1,"EVG UI: change the fields rendered on the Performance Baron page","""Remove (or hide them by default):    * Value    * Value To Avg    * Probability    Add thread level. """
"EVG-5403","Improvement","legacy-ui|perf-tools",1,"EVG UI: The Performance Baron plugin list items should contain links ","""The change points now contain task_ids, this information should be used to link to the evergreen task pages.     It would also be good to provide links to the project page and the variant page (if possible)."""
"EVG-5401","Bug","legacy-ui|perf-tools",1,"PerfBB - inverted hazard values","""All calculations for hazard value are incorrect (inverted). It means, that 'Recovery' item might actually¬† be a 'Moderate' performance drop. And item which displays +10% is actually -10%.  Absolute values are correct, the issue is with the sign."""
"EVG-5400","Bug","app",2,"Error when loading task data onto spawnhost","""github.com/evergreen-ci/evergreen/subprocess.(*remoteCmd).Run   /data/mci/5eef55b7b4277de70684b14a3dac9a9e/gopath/src/github.com/evergreen-ci/evergreen/subprocess/remote_command.go:66  github.com/evergreen-ci/evergreen/units.(*setupHostJob).fetchRemoteTaskData   /data/mci/5eef55b7b4277de70684b14a3dac9a9e/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:757  github.com/evergreen-ci/evergreen/units.(*setupHostJob).provisionHost   /data/mci/5eef55b7b4277de70684b14a3dac9a9e/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:492  github.com/evergreen-ci/evergreen/units.(*setupHostJob).setupHost   /data/mci/5eef55b7b4277de70684b14a3dac9a9e/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:134  github.com/evergreen-ci/evergreen/units.(*setupHostJob).Run   /data/mci/5eef55b7b4277de70684b14a3dac9a9e/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:106  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.runJob   /data/mci/5eef55b7b4277de70684b14a3dac9a9e/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:28  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.executeJob   /data/mci/5eef55b7b4277de70684b14a3dac9a9e/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:37  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).runJob   /data/mci/5eef55b7b4277de70684b14a3dac9a9e/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:174  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).worker   /data/mci/5eef55b7b4277de70684b14a3dac9a9e/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:148  runtime.goexit   /opt/go1.8/go/src/runtime/asm_amd64.s:2197 """
"EVG-8576","New Feature","platform",2,"ftdc server->library encoding/decoding round trip test ","""We should time-box this ticket, as there may be diminishing returns after a sudden point.     The idea is to take the metrics chunk that we currently use to test the read-path, round-trip the content through our own implementation and ensure that the results match (via hashing/etc.) of the total payload.     This might not be possible in the literal case, at least because our implementation flattens the structure of the reference document. We may have to be satisfied with asserting that our decoded version of the ftdc test data from the server is the same after round-tripping it once through the our implementation. """
"EVG-5420","Improvement","legacy-ui",2,"EVG UI: Processed list visibility","""It should  be possible to view:     # only the acknowledged processed change points       # only the hidden processed change points       # both the acknowledged and hidden processed change points      By default, only the acknowledged Processed change point list should shown.    Acknowledged Processed change point have  processed_type field is set to acknowledged.  Hidden Processed change point have  processed_type field is set to hidden.    """
"EVG-5419","New Feature","app",2,"Evergreen agent should check for processes killed by OOM killer","""The TIG team has [maintained logic|https://github.com/mongodb/mongo/blob/b0844bec953b9e014ebb6c1d04f0ba8da54b736e/etc/evergreen.yml#L2811-L2853] which runs as part of all the {{mongodb\-mongo\-*}} Evergreen projects to invoke {{dmesg}} in (very) platform-specific ways to determine if a process has been killed by the OOM killer. It would be beneficial for all Evergreen projects if this functionality was instead integrated into the Evergreen agent and reported to the """"system logs"""" in a similar way to the {{ps}} and {{df}} output.    # I think the Evergreen agent should check for processes killed by the OOM killer any time it would run the {{subprocess.KillSpawnedProcs()}} function.  # I don't think it is necessary for the Evergreen agent to system fail the task if the OOM killer killed a process, although that would be another way to achieve EVG-1134.  # I would find it useful if the {{evergreen}} binary exposed a way to run the check from the command line so it would be possible to trigger manually on a {{host.create}}-spawned machine though I'd understand if the {{sudo}} permissions required made this too complicated to deal with.    """
"EVG-8788","New Feature","platform",1,"the betterCollector should report payload size more accurately","""an earlier implementation of the collector, wrote contents to a buffer as data is collected, which made it possible to report on the size of the payload, making it possible to limit batches based on size rather than just the number of samples.     This is a reasonable feature and one that I think we'll want to take advantage of, but I'm not sure how easy this would be. This is a small ticket to evaluate and scope the problem, and see how disruptive to the current architecture of the library it would be to add this feature, and based on that examination we can repoint and reporioritize as needed."""
"EVG-8770","New Feature","platform",1,"add FTDC data format as a sysinfo collector in curator","""as part of developing the FTDC library, I added a method for collecting system metrics into FTDC streams, and wrote a very simple command line utility.     As part of tying up loose ends we should vendor this library into curator, and expose it as an option in the existing system metrics collection facility in curator as an alternate output format. """
"EVG-8684","New Feature","platform",1,"ftdc2json cli tools","""We should take our FTDC library and provide a suite of basic command line tools for working with this data. The first of these was developed for testing the FTDC library (ftdcdump) and is committed to that repository but we should expand upon this and provide:     - the ability to read a mongodump-formated bson file and write an FTDC file with this data  - the ability to read a line-seperated json file and write an FTDC file with this data  - the ability to tail either of the above files for """"line seperated"""" (this might only make sense for JSON) content and generate ftdc content.   - read ftdc data chunks and write the output to either JSON or BSON (i.e. reverse compression for easier local use.) If possible and straightforward, consider making it possible to make HTTP requests to get these files, to avoid writing the compressed data to disk when we have no need of that. """
"EVG-5427","Bug","app",2,"Agent deploy happened during a task","""https://evergreen.mongodb.com/host/sir-985i7qnj"""
"EVG-5426","Improvement","app",2,"Create endpoint to show all tasks in a project in a given time period","""GET /project/<project_name>/versions/tasks    This endpoint should default to some same value, like a day, if start and end are not provided. If only start is provided, end should be now.    params:   * start: starting date and time   * end: ending date and time   * status: task status to filter. If not provided, return all statuses."""
"EVG-5448","Improvement","app",1,"System Unresponsive BFGs generated with no logs should generate system failure, not timed out BFs","""During my build baron shift, there was an evergreen-side database slow down that produced a large amount of failures (e.g., BFG-92946) that were marked as system unresponsive and had no logs. The associated build ticket, BUILD-6211, seems to have addressed the underlying issue with the database, but I believe it would be desirable from the build baron's perspective to limit the amount of BFGs generated for tickets that have no logs and thus don't seem to have much use."""
"EVG-5433","Improvement","app",2,"Add a delay before deploying an agent to a server if previous agent deployment failed.","""I see that sometimes we exhaust all 10 retries within less than a minute    Oct 2, 2018 2:45:57 pm Status changed from running to quarantined by mci.  Oct 2, 2018 2:45:57 pm New agent deploy failed  Oct 2, 2018 2:45:52 pm New agent deploy failed  Oct 2, 2018 2:45:46 pm New agent deploy failed  Oct 2, 2018 2:45:45 pm New agent deploy failed  Oct 2, 2018 2:45:41 pm New agent deploy failed  Oct 2, 2018 2:45:38 pm New agent deploy failed  Oct 2, 2018 2:45:31 pm New agent deploy failed  Oct 2, 2018 2:45:27 pm New agent deploy failed  Oct 2, 2018 2:45:22 pm New agent deploy failed  Oct 2, 2018 2:45:16 pm New agent deploy failed  Oct 2, 2018 2:45:12 pm Status changed from quarantined to running by ******.    Can we a delay between the attempts?    It's possible for hosts to have short intermittent networking problems, having longer retries will help prevent some of them from getting quarantined and requiring manual intervention.    At the same time, we recognize that some vendors are more prone to those types of problems and that needs to be addressed separately and we're working on that."""
"EVG-5432","Bug","app",2,"num_hosts parameter to host.create should accept string expansions","""https://github.com/evergreen-ci/evergreen/wiki/Project-Files#usage says to report"""
"EVG-5428","Bug","app",1,"task-execution-timeout job does not correctly clean up task groups","""https://evergreen.mongodb.com/task/mongodb_mongo_master_ubuntu1604_debug_aubsan_lite_unittests_patch_7ff69910209132acaa6abf6237f0f2d36ce518c2_5b998305e3c331399c3db19d_18_09_12_21_21_32##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%25227ff69910209132acaa6abf6237f0f2d36ce518c2%2522%257D%255D%257D has been in a status of started for a long time"""
"EVG-5497","Bug","app",1,"Error spawning hosts from task with task spawned hosts","""Even with only one additional host.    It started spawning i-026328f7b927bc416 though    Task link: https://evergreen.mongodb.com/task/mms_e2e_local_spawnhost_E2E_Local_ATM_Deployment_Item_Creation_MultiServer_patch_5cc1b4da184b0c36b13c36d8d61fa07f53b6d235_5bb5325b0305b979b0afb708_18_10_03_21_19_23"""
"EVG-5444","Bug","app",2,"Investigate host provisioning errors on debian and amazon linux","""attempts:  16       distro:  debian92-test       error:  error initializing host sir-7hbi4gch: error settings DNS name: error checking DNS name for host sir-7hbi4gch: spot instance does not yet have an instanceId       extended:  spot instance does not yet have an instanceId  github.com/evergreen-ci/evergreen/cloud.(*ec2Manager).GetDNSName   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/cloud/ec2.go:885  github.com/evergreen-ci/evergreen/units.(*setupHostJob).setDNSName   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:181  github.com/evergreen-ci/evergreen/units.(*setupHostJob).runHostSetup   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:211  github.com/evergreen-ci/evergreen/units.(*setupHostJob).provisionHost   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:387  github.com/evergreen-ci/evergreen/units.(*setupHostJob).setupHost   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:134  github.com/evergreen-ci/evergreen/units.(*setupHostJob).Run   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:106  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.runJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:28  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.executeJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:37  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).runJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:174  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).worker   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:148  runtime.goexit   /opt/go1.8/go/src/runtime/asm_amd64.s:2197  github.com/evergreen-ci/evergreen/cloud.(*ec2Manager).GetDNSName   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/cloud/ec2.go:885  github.com/evergreen-ci/evergreen/units.(*setupHostJob).setDNSName   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:181  github.com/evergreen-ci/evergreen/units.(*setupHostJob).runHostSetup   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:211  github.com/evergreen-ci/evergreen/units.(*setupHostJob).provisionHost   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:387  github.com/evergreen-ci/evergreen/units.(*setupHostJob).setupHost   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:134  github.com/evergreen-ci/evergreen/units.(*setupHostJob).Run   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:106  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.runJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:28  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.executeJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:37  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).runJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:174  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).worker   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:148  runtime.goexit   /opt/go1.8/go/src/runtime/asm_amd64.s:2197  error checking DNS name for host sir-7hbi4gch  github.com/evergreen-ci/evergreen/units.(*setupHostJob).setDNSName   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:183  github.com/evergreen-ci/evergreen/units.(*setupHostJob).runHostSetup   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:211  github.com/evergreen-ci/evergreen/units.(*setupHostJob).provisionHost   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:387  github.com/evergreen-ci/evergreen/units.(*setupHostJob).setupHost   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:134  github.com/evergreen-ci/evergreen/units.(*setupHostJob).Run   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:106  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.runJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:28  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.executeJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:37  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).runJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:174  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).worker   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:148  runtime.goexit   /opt/go1.8/go/src/runtime/asm_amd64.s:2197  error settings DNS name  github.com/evergreen-ci/evergreen/units.(*setupHostJob).runHostSetup   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:212  github.com/evergreen-ci/evergreen/units.(*setupHostJob).provisionHost   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:387  github.com/evergreen-ci/evergreen/units.(*setupHostJob).setupHost   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:134  github.com/evergreen-ci/evergreen/units.(*setupHostJob).Run   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:106  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.runJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:28  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.executeJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:37  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).runJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:174  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).worker   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:148  runtime.goexit   /opt/go1.8/go/src/runtime/asm_amd64.s:2197  error initializing host sir-7hbi4gch  github.com/evergreen-ci/evergreen/units.(*setupHostJob).provisionHost   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:412  github.com/evergreen-ci/evergreen/units.(*setupHostJob).setupHost   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:134  github.com/evergreen-ci/evergreen/units.(*setupHostJob).Run   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/units/provisioning_setup_host.go:106  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.runJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:28  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.executeJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:37  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).runJob   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:174  github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.(*abortablePool).worker   /data/mci/4d14af84559797a4e4ec739d43bd3e20/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/abortable.go:148  runtime.goexit   /opt/go1.8/go/src/runtime/asm_amd64.s:2197 """
"EVG-5439","Build Failure","app",2,"Test history endpoint times out","""https://evergreen.mongodb.com/rest/v1/projects/mongodb-mongo-master/test_history?sort=latest&taskStatuses=success%2Cfailed%2Ctimeout%2Csysfail&tests=jstests%2Fcore%2Ftxns%2Frepeatable_reads_in_transaction.js%2Cjstests%5Ccore%5Ctxns%5Crepeatable_reads_in_transaction.js%2Cjstests%2Fcore%2Fgeoa.js%2Cjstests%5Ccore%5Cgeoa.js%2Cjstests%2Fcore%2Fgeo_mapreduce2.js%2Cjstests%5Ccore%5Cgeo_mapreduce2.js%2Cjstests%2Fcore%2Ftailable_cursor_invalidation.js%2Cjstests%5Ccore%5Ctailable_cursor_invalidation.js%2Cjstests%2Fcore%2Fprofile_insert.js%2Cjstests%5Ccore%5Cprofile_insert.js%2Cjstests%2Fcore%2Fgeo2.js%2Cjstests%5Ccore%5Cgeo2.js%2Cjstests%2Fcore%2Fcapped_max1.js%2Cjstests%5Ccore%5Ccapped_max1.js%2Cjstests%2Fcore%2Fstages_or.js%2Cjstests%5Ccore%5Cstages_or.js%2Cjstests%2Fcore%2Faggregation_getmore_batchsize.js%2Cjstests%5Ccore%5Caggregation_getmore_batchsize.js%2Cjstests%2Fcore%2Fmr_killop.js%2Cjstests%5Ccore%5Cmr_killop.js%2Cjstests%2Fcore%2Fregex4.js%2Cjstests%5Ccore%5Cregex4.js%2Cjstests%2Fcore%2Fupdate_blank1.js%2Cjstests%5Ccore%5Cupdate_blank1.js%2Cjstests%2Fcore%2Fdiagdata.js%2Cjstests%5Ccore%5Cdiagdata.js%2Cjstests%2Fcore%2Fgeo_circle1.js%2Cjstests%5Ccore%5Cgeo_circle1.js%2Cjstests%2Fcore%2Fgeoe.js%2Cjstests%5Ccore%5Cgeoe.js%2Cjstests%2Fcore%2Fslice1.js%2Cjstests%5Ccore%5Cslice1.js%2Cjstests%2Fcore%2Findex_create_too_many.js%2Cjstests%5Ccore%5Cindex_create_too_many.js%2Cjstests%2Fcore%2Fverify_update_mods.js%2Cjstests%5Ccore%5Cverify_update_mods.js%2Cjstests%2Fcore%2Ffind6.js%2Cjstests%5Ccore%5Cfind6.js%2Cjstests%2Fcore%2Findex_check5.js%2Cjstests%5Ccore%5Cindex_check5.js&tasks=replica_sets_jscore_passthrough&beforeRevision=ba38c66d9483d2fb8a644772fa5dd0fff78a3cc9&variants=&afterRevision=fbf57dfc196c3e4d6b0313cadb71f10138b9c018&testStatuses=pass%2Cfail%2Csilentfail&distros="""
"EVG-5438","Bug","legacy-ui",1,"Unable to add mount point for distro","""When adding a mount point for a distro, """"Save Configuration"""" becomes inactive.¬† Also, only one mount point is allowed.¬† After the first is added the """"+Add Mount Point"""" button becomes inactive as well."""
"EVG-5435","Bug","legacy-ui|perf-tools",1,"The change point tool tip in the perf plugin obstructs the graph","""It would be nice if the change point tool tip was displayed either to the left or right of the change point line.    As it is currently rendered, it obstructs the change point, see the following image:    !popup.png|width=50%!"""
"EVG-5452","Bug","app",1,"Can't Set RDP password for host created with Evergeen","""After creating a windows machine with evergreen, the RDP password can't be set. The response from evergreen is """"Invalid Password"""".    I have tried with multiple combinations."""
"EVG-5441","Bug","app",2,"Evergreen spawnhost creates the source directory with the wrong enterprise module","""I spawned a host in order to debug a failing task and the produced environment contains the mongo repository cloned as enterprise instead of the actual enterprise repository.    I.e.:      This is also visible when trying to compile mongodb:  """
"EVG-5451","Bug","app",2,"Evergreen is not able to deploy the agent to static boxes if distro has 'Disable scheduling this distro' set","""I was trying to figure out why evergreen was unable to deploy the agent on boxes in -test distro while -build boxes for the same static platform where ok.    Moving a box from -test to -build confirmed my theory of distro config differences.    The only difference I was able to find was the checkbox 'Disable scheduling this distro. Tasks already in the schedule will be dispatched.' that was set for -test. Unchecking it seems to have resolved the problem.    Failing to deploy the agent 10 times results in quarantining the host. If the connection between disabling scheduling tasks and quarantining the hosts in the distro can make some sense in theory, it doesn't seem right that it's intentional because it requires 10 failed agent deploys. Also, unchecking that box doesn't automatically unquarantine the servers in that distro, so this logic seems incorrect.    Is this behavior intentional?"""
"EVG-5449","Improvement","app",1,"Evergreen agent should set TMPDIR environment variable for all processes it spawns","""The Build team introduced logic back in SERVER-32772 for all {{mongodb\-mongo\-*}} Evergreen projects to avoid having {{dbtest}} write to {{/tmp}} as it isn't cleared by the Evergreen agent between tasks. It would be beneficial for all Evergreen projects if this functionality was instead integrated into the Evergreen agent so individual teams need not concern themselves with triggering problems on static machines that are rarely rebooted. I'll leave it to the Evergreen team to decide whether it should live within the task's {{$\{workdir\}}} or be a well-known location off to the side.        The Evergreen agent may as well set {{TEMP}} and {{TMP}} just in case the executable consults one of the other names instead of {{TMPDIR}}."""
"EVG-5445","Improvement","app",1,"Log agent exits at a lower level","""    error:  error in agent loop, exiting: error getting next task: Next task response indicates agent should exit       extended:  Next task response indicates agent should exit  github.com/evergreen-ci/evergreen/rest/client.(*communicatorImpl).GetNextTask   /data/mci/050df4f24c4332fe6f8b513d0dc0d50e/gopath/src/github.com/evergreen-ci/evergreen/rest/client/methods.go:270  github.com/evergreen-ci/evergreen/agent.(*Agent).loop   /data/mci/050df4f24c4332fe6f8b513d0dc0d50e/gopath/src/github.com/evergreen-ci/evergreen/agent/agent.go:112  github.com/evergreen-ci/evergreen/agent.(*Agent).Start   /data/mci/050df4f24c4332fe6f8b513d0dc0d50e/gopath/src/github.com/evergreen-ci/evergreen/agent/agent.go:77  github.com/evergreen-ci/evergreen/operations.Agent.func2   /data/mci/050df4f24c4332fe6f8b513d0dc0d50e/gopath/src/github.com/evergreen-ci/evergreen/operations/agent.go:114"""
"EVG-8558","New Feature","platform",1,"Clean up async_test","""Rewrite TestSetupDownloadJobsAsync to not use recall.NewDownloadJob    Clean up async_test logic    ¬†"""
"EVG-8665","New Feature","platform",2,"propogate buildlogger urls to REST/jRPC responses ","""we should make sure users who use buildlogger/logkeeper can figure out from the API where the logs ended up. """
"EVG-5456","Bug","app",1,"Repotracker panic","""pool/abortable.go:121 runtime/asm_amd64.s:515 runtime/panic.go:489 runtime/panic.go:63 runtime/signal_unix.go:290 repotracker/repotracker.go:171 repotracker/wrappers.go:57 units/repotracker.go:109 pool/helpers.go:28 pool/helpers.go:37 pool/abortable.go:174 pool/abortable.go:148 runtime/asm_amd64.s:2197"""
"EVG-5459","Sub-task","legacy-ui|perf-tools",2,"Trendchart actions","""Implement hide/acknowledge actions for the trend chart."""
"EVG-5462","New Feature","app",1,"Add an is_patch field to the task status list return from the /projects/{project}/versions/tasks REST API","""EVG-5426 added a new [REST endpoint|https://evergreen.mongodb.com/rest/v2/projects/sys-perf/versions/tasks].    This call returns all task statuses including patches.    There is no way to determine if the task status is for a patch without pattern matching on the task_id.     This approach is brittle and likely to fail in the future.     It would be better if an is_patch field was added to the status .    """
"EVG-5464","Bug","app",1,"Automatic and manual termination of static hosts does nothing","""https://evergreen.mongodb.com/host/ubuntu1604-arm64-1.linaro.build.10gen.cc"""
"EVG-5463","Bug","app",2,"Evergreen appears to be overdelivering notifications for persistent failures","""There's a number of BFG tickets linked to BF-10910 that are for the same (test name, task name, build variant) combination.    * [15 BFG tickets|https://jira.mongodb.org/issues/?jql=project%20%3D%20BFG%20AND%20issueFunction%20IN%20linkedIssuesOf(%22key%20%3D%20BF-10910%22)%20AND%20%22Failing%20Buildvariants%22%20%3D%20enterprise-windows-64-2k8-wtdevelop] for the Enterprise Windows 2008R2 WiredTiger develop builder  * [15 BFG tickets|https://jira.mongodb.org/issues/?jql=project%20%3D%20BFG%20AND%20issueFunction%20IN%20linkedIssuesOf(%22key%20%3D%20BF-10910%22)%20AND%20%22Failing%20Buildvariants%22%20%3D%20enterprise-windows-64-2k8-openssl] for the Enterprise Windows 2008R2 OpenSSL builder"""
"EVG-5466","Bug","app",0,"Task timeout job doesn't work for execution tasks","""It tries to reset the display task when completed, but it will never complete"""
"EVG-5465","Task","app",2,"Turn cyclic dependency detection back on","""We see high CPU time in cyclic dependency detection during CPU spikes, so we speculate this part of the code has contributed to recent database slowdowns, though we do not know what the mechanism has been. We should take a look at this part of the code and figure out if there is a problematic query and turn the dependency check back on once we understand what has been happening and fix it."""
"EVG-8735","New Feature","platform",2,"support direct message storage for small samples.","""sometimes we'll get a small number of events and it won't make sense to store them in s3 and we should be able to support storing/caching <10 points in the perf model"""
"EVG-5472","Bug","app",1,"PUT patches/ returns camelcased keys","""Upon a successful patch submission, the keys in the response are:        These should be in lowercase w/underscores methinks."""
"EVG-5471","Bug","app",1,"Segfault when PUTting patches and not specifying project id","""api_patch.go:64 has this code:        If a project id is not given in the API request (v1 put projects/), data.Project is (I take it) an empty string, FindOneProjectRef then returns (nil, nil) and pref.Enabled segfaults.    To reproduce: PUT to patches/ with a valid request with project id taken out."""
"EVG-5470","Bug","app",2,"Authorizing PR via API does not work","""I attempted to authorize a PR via the API:    https://gist.github.com/p-mongo/e02dee88b98c2ca9a7ec5e7606162fba    The response contains activated: true and status: created, however when I go to patch page (https://evergreen.mongodb.com/patch/5b59e99e0305b9555d71cfc5) there is still the """"authorize patch"""" button on it.    Note also that on the API response the evergreen version is returned as an empty string.    I had this same exact issue on another PR. Clicking the UI button authorized the PR correctly and started building it (hence this bug appears to be unrelated to the ongoing github outage)."""
"EVG-5474","Improvement","legacy-ui",1,"Clearly label commands/tasks/builds killed due to timeouts","""This task was killed due to timeout I am told:    https://evergreen.mongodb.com/task/mongoid_jruby_new__mongodb_version~4.0_topology~replica_set_jruby~jruby_9.2_driver~latest_test_patch_54faca700b0fd17953a8d317abb6c5c4b2b6bf44_5bce83d60305b937a435a3bf_18_10_23_02_13_44    It has the following output:        To an engineer who has not experienced evergreen killing their tasks, """"Command canceled"""" does not automatically imply a timeout kill. Moreover, the """"nil"""" in that message is confusing because Ruby uses nil, hence I was wondering if this was some kind of a Ruby-triggered cancellation.    Additionally, there is a multitude of timeouts that can be set throughout evergreen configuration. One has to go through the docs to identify the appropriate timeout for each case.    To provide a better developer experience, evergreen should:    1. Clearly state that a task/build/process/etc. was killed due to a timeout.  2. Clearly state which timeout was exceeded.    It was pointed out that the agent log contains the following:        Duplicating this exact message into task logs would be an improvement over the current timeout reporting, as then a user wouldn't need to go through multiple logs to figure out what happened (as well as know whether they should be looking in agent logs, system logs, event logs, task logs or all 4).    https://github.com/evergreen-ci/evergreen/wiki/Project-Files does mention """"exec_timeout_secs"""". A really awesome rendering of the timeout message would be something like this in the task log instead of the current message:      """
"EVG-8560","New Feature","platform",2,"rate limiting pools use different execution patterns ","""they use runJob and should use executeJob (runJob should be removed) """
"EVG-5476","Build Failure","app",1,"Failures: test-command on Ubuntu 16.04 (Docker) [Evergreen Self-Tests @ c29587e7] (TestGitGetProjectSuite, TestValidateGitCommands)",""" h2. [test-command failed on Ubuntu 16.04 (Docker)|https://evergreen.mongodb.com/task/mci_ubuntu1604_docker_test_command_c29587e7fbd0bc497cad163a7d39dcffd8d61ecf_18_10_12_13_15_43/0] Host: [|https://evergreen.mongodb.com/host/container-4012700820423740125] Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/c29587e7fbd0bc497cad163a7d39dcffd8d61ecf]: EVG-5453 better HTTPS support in git.get_project (#1706) Evergreen Subscription: ; Evergreen Event:  *TestGitGetProjectSuite* - [Logs|https://evergreen.mongodb.com/test_log/5bc0a8062fbabe5e0916a104] | [History|https://evergreen.mongodb.com/task_history/mci/mci_ubuntu1604_docker_test_command_c29587e7fbd0bc497cad163a7d39dcffd8d61ecf_18_10_12_13_15_43#TestGitGetProjectSuite=fail] *TestValidateGitCommands* - [Logs|https://evergreen.mongodb.com/test_log/5bc0a8062fbabe5e0916a104] | [History|https://evergreen.mongodb.com/task_history/mci/mci_ubuntu1604_docker_test_command_c29587e7fbd0bc497cad163a7d39dcffd8d61ecf_18_10_12_13_15_43#TestValidateGitCommands=fail]  """
"EVG-5489","Build Failure","app",2,"Failures: test-cloud on Ubuntu 16.04 [Evergreen Self-Tests @ 91a48d5c] (TestCostIntegrationSuite, TestGetProviderAuto)","""h2. [test-cloud failed on Ubuntu 16.04|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_cloud_91a48d5ce71263ae152240830f36de1a164ab084_18_10_26_14_23_16/1]  Host: [ec2-54-157-34-240.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-7n2i56yj]  Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/91a48d5ce71263ae152240830f36de1a164ab084]: EVG-5334 (feat) Build - restart build options (#1725)  Evergreen Subscription: ; Evergreen Event:   *TestCostIntegrationSuite* - [Logs|https://evergreen.mongodb.com/test_log/5bd35c762a60ed1b09ad3161] | [History|https://evergreen.mongodb.com/task_history/mci/mci_ubuntu1604_test_cloud_91a48d5ce71263ae152240830f36de1a164ab084_18_10_26_14_23_16#TestCostIntegrationSuite=fail]  *TestGetProviderAuto* - [Logs|https://evergreen.mongodb.com/test_log/5bd35c762a60ed1b09ad3161] | [History|https://evergreen.mongodb.com/task_history/mci/mci_ubuntu1604_test_cloud_91a48d5ce71263ae152240830f36de1a164ab084_18_10_26_14_23_16#TestGetProviderAuto=fail]    """
"EVG-5485","Bug","perf-tools",0,"PerfBB: duplicate key errors from stitch","""I was able to get the UI into a state where the PerfBB sort and filter stopped working.    ¬†    The chromium console was displaying a message like:    ¬†    ¬†    But there were no duplicate documents in the¬†perf.processed_change_points collection.    I'm not 100% sure of the steps to reproduce but it involved ACK'ing a change point from both the task page and the CLI.    ¬†    ¬†"""
"EVG-5484","Bug","perf-tools",2,"Perf BB: The hazard sorting and calculation of % change in the UI is different to the CLI","""The CLI and UI should use the same default sort (and where possible allow the same alternate sort methods) and display the same values.    Ruslan and I will need to work together on this to agree what makes sense.    This issue is minor but slightly more important than the issues listed in EVG-5483."""
"EVG-8669","New Feature","platform",1,"avoid omitempty in grip sysinfo types","""also revendor to curator and fix ftdc buildsystem"""
"EVG-5490","New Feature","ui",2,"Add support for Lobster to source plain-text logs from an arbitrary URL","""EVG-3271 added support for being able to upload a plain-text version of a log file and uses the greatness that is Lobster to do filtering, etc. with it. There are cases where I need to download the """"task logs"""" or """"system logs"""" because my browser is unable to render them. It would be incredibly useful to be able to provide a URL to Lobster via https://logkeeper.mongodb.org/lobster where it'd fetch a plain-text version of the logs and render them via Lobster's HTML format. A bonus would be to provide a URL to a compressed tarball (say in S3) that contains plain-text log files and view them with Lobster as well."""
"EVG-8745","New Feature","platform",2,"Database method to find all perf test results","""The perf data structure allows tests to declare that they are subtests by referencing a """"parent"""" test in the """"info"""" document. We want to write a method that can, given a test, find and return all sub tests of this test. This should support recursive lookup, though obviously with some kind of limit.     This is somewhat similar to the task-finder in the evergreen scheduler. We should see if we can make the method plug-able so that we can try using $graphLookup or a parallel approach.  """
"EVG-8711","New Feature","platform",2,"add default rollups","""after implementing the rollup type and the rollup storage we should add back in support for default rollups, including:     - total duration  - total ops (if populated)  - total bytes (if populated)  - average throughput ops  - average throguhput size  - p90 throughput  - p50 throughput"""
"EVG-8552","New Feature","platform",1,"add grpc method to have user-submitted rollups","""this is a bit of an exploratory ticket. people have talked about having test harnesses compute some data and submit it to the service. one form of that would just be to have tests record their results not a sequence of events but rather as a single (total) event. Another form would be an API to insert something into the rollup map implemented as part of MAKE-505.     We might want to have another arbitrary map for """"user_rollups"""" using the same basic scheme as our rollup map, but without the versioning (as that lacks meaning in this context,) having said that, this ticket is all about the user interface (e.g. GRPC) that we'd implement to support allowing this functionality from users.  """
"EVG-8653","New Feature","platform",2,"add job management endpoints","""add endpoints/methods to the management interface to:     - mark pending ({inprog false, complete false}) completed, by type  - mark in progress jobs complete by type (a less kind, less gentle, abort.) """
"EVG-8606","New Feature","platform",1,"cleanup jasper service loging ","""this might mostly be in bond.     maybe also make it easy to set logging to splunk/systemd """
"EVG-5505","Bug","app",2,"Auto-quarantined static host produced multiple JIRA tickets","""We see that a single static host that got auto quarantined due to failed agent deployments produced 6 jira tickets. """
"EVG-5507","Bug","app",1,"Build page panics for nonexistent patch","""gimlet/middleware_grip.go:184 runtime/asm_amd64.s:515 runtime/panic.go:489 runtime/panic.go:63 runtime/signal_unix.go:290 service/build.go:87 service/ui.go:251 http/server.go:1942 negroni/negroni.go:46 negroni/negroni.go:29 negroni/negroni.go:38 negroni/negroni.go:38 service/middleware.go:239 gimlet/middleware_wrapper.go:16 negroni/negroni.go:38 negroni/negroni.go:86 mux/mux.go:114 negroni/negroni.go:46 negroni/negroni.go:29 negroni/negroni.go:38 negroni/negroni.go:38 negroni/static.go:41 negroni/negroni.go:38 negroni/negroni.go:38 negroni/static.go:53 negroni/negroni.go:38 negroni/negroni.go:38 gimlet/middleware_auth.go:37 negroni/negroni.go:38 negroni/negroni.go:38"""
"EVG-5513","Improvement","app",1,"Relax restriction on number of `generate.tasks` tasks per variant","""Currently only one task can run {{generate.tasks}} per variant. However, a use case has emerged in which a large task should be able to dynamically generate sub-tasks as buckets of this task. Although this could be done with a single {{generate.tasks}} task, allowing many such tasks means that users will still be able to meaningfully select tasks by passing the {{-t}} and {{-v}} flags to the {{evergreen patch}} commands. We should therefore relax this restriction."""
"EVG-5510","Bug","app",2,"Task timeout job errors","""[https://evergreen.mongodb.com/host/sir-krbi531h]    ¬†    ¬†¬† error: problem saving stat: problem updating status document for host-alerting.sir-krbi531h.2018-11-05.15-20-00: not found   ¬†¬† extended: not found problem updating status document for host-alerting.sir-krbi531h.2018-11-05.15-20-00 github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*mongoDB).SaveStatus /data/mci/918f2c2a4b1115740cb602f5323b847e/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue/driver_mongodb.go:316 github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*lockManager).Lock /data/mci/918f2c2a4b1115740cb602f5323b847e/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue/driver_locker.go:224 github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*mongoDB).Lock <autogenerated>:25 github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*remoteUnordered).Next /data/mci/918f2c2a4b1115740cb602f5323b847e/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue/remote.go:89 github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.startWorkerServer.func1 /data/mci/918f2c2a4b1115740cb602f5323b847e/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:123 runtime.goexit /opt/go1.8/go/src/runtime/asm_amd64.s:2197 problem saving stat github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*lockManager).Lock /data/mci/918f2c2a4b1115740cb602f5323b847e/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue/driver_locker.go:225 github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*mongoDB).Lock <autogenerated>:25 github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue.(*remoteUnordered).Next /data/mci/918f2c2a4b1115740cb602f5323b847e/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/queue/remote.go:89 github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool.startWorkerServer.func1 /data/mci/918f2c2a4b1115740cb602f5323b847e/gopath/src/github.com/evergreen-ci/evergreen/vendor/github.com/mongodb/amboy/pool/helpers.go:123 runtime.goexit /opt/go1.8/go/src/runtime/asm_amd64.s:2197"""
"EVG-9039","Task","platform",1,"Specify which network interface jasper should listen on","""Currently, jasper only listens on the local loopback network interface. We should add an option to explicitly specify the interface so jasper can be accessed from non-localhost machines. """
"EVG-5520","Bug","perf-tools",1,"Performance Baron Page -- bad links","""In the table here: [https://evergreen.mongodb.com/perf-bb/change-points/sys-perf]    The links in the variant page are broken for me. For one I get:¬†        Instead of   """
"EVG-5527","Improvement","app",1,"cache historic test results should only filter test data not task data","""The caching job currently filters out tasks which produce different testcase names every run, since they won't produce a consistent history. However, the task names do stay the same, so we should only filter for test results, not for task results."""
"EVG-5523","Improvement","legacy-ui",2,"Support display tasks with task history pages.","""As an engineer I would like to be able to see the history for a display task like I currently can for a task. So that I can treat display tasks as normal tasks.    [Sample Task History Page|https://www.google.com/url?q=https://evergreen.mongodb.com/task_history/mongodb-mongo-master/replica_sets_ese_0?revision%3D28418b385fdb72f69447a53f4a320853e6c20592%23/slavedelay1.js%3Dpass&sa=D&ust=1541673930628000&usg=AFQjCNFbYZqUDVnVYazZKgBjAnbq_AtvSg]"""
"EVG-5734","Bug","app",1,"Task logs are truncated but other logs appear complete","""The """"task logs"""" for the following Evergreen failures are truncated; however, the """"agent logs"""" and """"system logs"""" appear to be complete.    * https://evergreen.mongodb.com/task/mongodb_mongo_v4.0_linux_64_repeated_execution_logical_session_cache_replication_100ms_refresh_jscore_passthrough_3f7235ad61a16702e2a5200a912e3e02dd89a44e_18_11_09_16_23_18  * https://evergreen.mongodb.com/task/mongodb_mongo_v4.0_linux_64_repeated_execution_logical_session_cache_replication_100ms_refresh_jscore_passthrough_826c8b47c283749bb6f751d57729c6c3ac160a75_18_10_22_17_04_15  * https://evergreen.mongodb.com/task/mongodb_mongo_v4.0_linux_64_repeated_execution_logical_session_cache_replication_100ms_refresh_jscore_passthrough_41c04c12572154180b95a29b2eb1b42db45c4e38_18_10_16_13_06_23    The above links are for Evergreen failures because this issue was only noticed while investigating BF/BFG tickets. It is also an issue that's present with [passing Evergreen tasks|https://evergreen.mongodb.com/task/mongodb_mongo_v4.0_linux_64_repeated_execution_logical_session_cache_replication_100ms_refresh_jscore_passthrough_67d87f1f63c398407d9c083ce1cccbe242571059_18_11_10_00_52_17]."""
"EVG-9084","Task","platform",2,"computed interval event format","""basically send rollups (or subtle variant on that) in time sequence format and ftdc compress them. """
"EVG-8820","Build Failure","platform",2,"add read-path benchmarks for FTDC operations ","""focus on the underlying functions in the bson.go function, particularly in """"rehydrate"""" methods.     I think eventually we want to see if we can move off of the bson.Document structure (which is a type designed to support mutation,) and see if we can get better performance for the byte-slice wrappers (e.g. Raw) which are good for reading/append operations, and may be more ideal for our use cases. Having good benchmarks will be useful."""
"EVG-8466","Bug","platform",2,"Curator deadlock issue with Wait() and Terminate()","""h2. [Evergreen Link|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_replica_sets_kill_secondaries_jscore_passthrough_patch_04141490b2d5cc66be2457d3090292526dc37e4c_5beb429f2fbabe719c2ff46a_18_11_13_21_32_08]  """
"EVG-5540","Build Failure","app",1,"Failure: test-agent on Ubuntu 16.04 (Docker) [Evergreen Self-Tests @ 898611af] (TestDirectoryCleanup)",""" h2. [test-agent failed on Ubuntu 16.04 (Docker)|https://evergreen.mongodb.com/task/mci_ubuntu1604_docker_test_agent_898611afc51ba83555ef9d002c0e3fdc04203c6b_18_11_14_17_03_49/0] Host: [|https://evergreen.mongodb.com/host/container-9216666983216868440] Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/898611afc51ba83555ef9d002c0e3fdc04203c6b]: EVG-5527: Only filter test data when caching stats (#1779) Evergreen Subscription: ; Evergreen Event:  *TestDirectoryCleanup* - [Logs|https://evergreen.mongodb.com/test_log/5bec57f4c9ec443487f17bf4] | [History|https://evergreen.mongodb.com/task_history/mci/mci_ubuntu1604_docker_test_agent_898611afc51ba83555ef9d002c0e3fdc04203c6b_18_11_14_17_03_49#TestDirectoryCleanup=fail]  """
"EVG-5534","Bug","app",1,"Rename ""first task failure"" to ""first failure in a version""","""In mongo-c-driver on Evergreen we have """"Subscriptions"""" configured so that """"When the first task failure occurs"""", Evergreen should """"Send an email to driver-c-evergreen-alerts@10gen.com"""". However, there are tasks that have been failing for dozens of builds over the course of weeks, yet we're still getting new emails about them. For example, we got an email at¬†Nov 13, 8:22 PM about this task:    [https://evergreen.mongodb.com/task/mongo_c_driver_clang37_debug_compile_sasl_openssl_c70ed7bbaa33f123d156d35001f6ba8a3ec11d21_18_11_12_13_38_13/0]    It's just one in a long and distinguished lineage of failures for that task, not the first."""
"EVG-5544","Bug","legacy-ui",1,"Commit link on task page for triggered build should link triggering commit","""Get the commit hash from the triggering version, not the created version"""
"EVG-9257","Task","platform",1,"methods for FTDC chunks to calculate rollups/means/totals from the chunks ","""just add methods to chunks so that we can process data from chunks directly without needing to unwind and populate json   """
"EVG-9215","Task","platform",1,"investigate deadlock around sending signals and terminted processes","""the TIG team has found a couple of situations where jasper deadlocks in tests that are signaling processes over GRPC, and also doing Get calls of the terminated processes. This reproduces pretty consistently in evergreen and happens on Linux.    We don't have a unit test that covers this kind of workload, and I think that's the place to start this investigation. """
"EVG-9170","Task","platform",1,"use modern bsoncore constructors for building flat documents","""the new (new) bson library doesn't yet have support for the kind of nested document construction that we want to do, but it should be fine for the flat iterator, and it should be a good experiment to see if there's a performance boost. """
"EVG-9113","Task","platform",2,"add methods to clean up/clear terminated processes ","""currently there's a hashmap of all processes in jasper storage, which means, if we start/stop processes regularly and the service never terminates, eventually we'll overload memory. We should have methods on the manager for purging these objects. """
"EVG-8978","Task","platform",1,"create pail evergreen project/config/make system ","""following MAKE-469, there's a separate repository for pail. We should spend a couple of points doing some more project-setup things:     - write a basic readme   - write a basic makefile cribbing from jasper/ftdc  - write a basic evergreen test  - create the evergreen project (cribbing/duplicating sink, there's a button.)   - set up pull request testing."""
"EVG-5551","Improvement","app",1,"Remove util.StringOrBool in favor of unmarshaling into string","""Since the yaml unmarshaler supports unmarshaling bools into strings, we do not need the complexity of util.StringOrBool. Furthermore, unit testing while solving EVG-5432 shows that the custom marshaling logic in util.StringOrBool does not work. It would be better to remove it than to fix it."""
"EVG-5549","Improvement","app",1,"Run cache stats job every 6 hours.","""The cache stats job is currently set to run every 3 hours, and at most once every 15 minutes (in case of restarts).  It should be set to run at most once every 6 hours."""
"EVG-5548","Improvement","app",1,"Check degraded mode flag at beginning of cache stats job","""The degraded mode flag is currently checked before scheduling jobs.  We should also check it at the beginning of the job to be able to turn already queued up jobs into no-ops."""
"EVG-5547","Task","app",1,"Add index on execution_tasks for the old_tasks collection","""The index is used for lookup in some stats pre-computing aggregations.  """
"EVG-8803","New Feature","platform",1,"Begin to keep track of what indexes we need to build/maintain","""As a starting point, probably something like evergreen‚Äôs indexes.js, but it might make more sense to have something in go using bson.D‚Äôs that checks for indeses on deploys (via some sort of {{sink admin index-check}}, or maybe {{sink service index-check}} that just warns on missing indexes.)"""
"EVG-8778","New Feature","platform",2,"Get perf results by task_id","""Write a function on [PerformanceResults struct|https://github.com/evergreen-ci/sink/blob/master/model/perf.go#L195] to find performance results by task_id. """
"EVG-8721","New Feature","platform",2,"Implement a gimlet.RouteHandler for getting perf results by task_id and version","""This should implement the functions defined in [gimlet.RouteHandler interface|https://github.com/evergreen-ci/gimlet/blob/eee2e53245290e991b0e30b8f6a788d77dc0fa4a/framework.go#L10] for perf results. Example implementation [here|https://github.com/evergreen-ci/evergreen/blob/master/rest/route/distro.go#L24]. """
"EVG-8682","New Feature","platform",2,"Implement a gimlet.RouteHandler for getting perf results by taskname","""This should implement the functions defined in [gimlet.RouteHandler interface|https://github.com/evergreen-ci/gimlet/blob/eee2e53245290e991b0e30b8f6a788d77dc0fa4a/framework.go#L10] for perf results. Example implementation [here|https://github.com/evergreen-ci/evergreen/blob/master/rest/route/distro.go#L24]. """
"EVG-8668","New Feature","platform",1,"Add ability to filter by tags","""Now that we have functions to get performance results by id, task_id, version, project+taskname, and get recursively get child tasks, write a add the ability to all of these to filter by tags."""
"EVG-8581","New Feature","platform",2,"Get perf results by project + taskname","""Write a function on [PerformanceResults struct|https://github.com/evergreen-ci/sink/blob/master/model/perf.go#L195] to find performance results by project+taskname We may also decide to write a function to get performance results by project+taskname+testname."""
"EVG-8571","New Feature","platform",2,"Implement Connector for Perf Results","""In order to write the rest routes for perf results, we need to have a Connector interface that will act as the intermediary between the rest service and the database. The [Connector interface|https://github.com/evergreen-ci/evergreen/blob/master/rest/data/interface.go] in Evergreen is a good place to start. This should include both a db implementation, and a mock implementation for testing.   """
"EVG-8553","New Feature","platform",2,"Get perf results by version","""Write a function on [PerformanceResults struct|https://github.com/evergreen-ci/sink/blob/master/model/perf.go#L195] to find performance results by version."""
"EVG-8543","New Feature","platform",2," Implement a gimlet.RouteHandler for getting perf results by id with children","""This should implement the functions defined in [gimlet.RouteHandler interface|https://github.com/evergreen-ci/gimlet/blob/eee2e53245290e991b0e30b8f6a788d77dc0fa4a/framework.go#L10] for perf results. Example implementation [here|https://github.com/evergreen-ci/evergreen/blob/master/rest/route/distro.go#L24]. """
"EVG-8534","New Feature","platform",2,"Implement a gimlet.RouteHandler for getting perf results by version, filtered by tags","""This should implement the functions defined in [gimlet.RouteHandler interface|https://github.com/evergreen-ci/gimlet/blob/eee2e53245290e991b0e30b8f6a788d77dc0fa4a/framework.go#L10] for perf results. Example implementation [here|https://github.com/evergreen-ci/evergreen/blob/master/rest/route/distro.go#L24]. """
"EVG-8525","New Feature","platform",2,"Implement a gimlet.RouteHandler for getting perf results by id","""This should implement the functions defined in [gimlet.RouteHandler interface|https://github.com/evergreen-ci/gimlet/blob/eee2e53245290e991b0e30b8f6a788d77dc0fa4a/framework.go#L10] for perf results. Example implementation [here|https://github.com/evergreen-ci/evergreen/blob/master/rest/route/distro.go#L24]. """
"EVG-5558","Bug","legacy-ui",1,"""Re-notify after how many hours"" doesn't really have a default","""When defining a notification trigger with """"When a previously passing task fails"""", the dialog says that the default number of hours is 48, but in fact there is no default, I have to specify a number. See screenshot."""
"EVG-5555","New Feature","app",2,"Add project level configuration parameter to disable stats caching","""By default all the projects will have their test and tasks statistics pre-computed.  We should add a project level configuration parameter to disable it."""
"EVG-5553","Improvement","legacy-ui|perf-tools",1,"Inefficient vertical space usage","""The table should fill the browser window. The number of rows is currently quite small."""
"EVG-5552","Improvement","legacy-ui|perf-tools",1,"Rename Warnings tab to Failures","""This page should be called Failures (both the label on the page and the URI)"""
"EVG-5559","New Feature","app",2,"Admin switch to turn on logging of request bodies","""We currently log all web requests but not the body; having a way to also log the body would be useful"""
"EVG-5560","Bug","app",2,"Patch builds should be able to override entries in the manifest","""After the changes from EVG-727 / EVG-5379, patch builds always use the manifest from their corresponding base commit. That is pretty great and likely what users expected/wanted most of the time. However, it should be possible to use the {{set\-module}} command to override the revision for an entry in the manifest, to add new entries to the manifest, or remove entries from the manifest in order to simulate what would happen if those changes were actually pushed."""
"EVG-5561","Build Failure","app",1,"Failures: test-cloud on OSX [Evergreen Self-Tests @ 6ec04848] (TestCostIntegrationSuite, TestEBSPriceCaching, TestFetchEBSPricing, TestFetchOnDemandPricingCached, TestFetchOnDemandPricingUncached)",""" h2. [test-cloud failed on OSX|https://evergreen.mongodb.com/task/mci_osx_test_cloud_6ec0484823935a3ed9e492fcb54892f6e2d7ac76_18_11_21_13_53_56/0] Host: [macos-1012-19.macstadium.build.10gen.cc|https://evergreen.mongodb.com/host/macos-1012-19.macstadium.build.10gen.cc] Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/6ec0484823935a3ed9e492fcb54892f6e2d7ac76]: EVG-5555 Add project parameter to disable stats caching (#1805) Evergreen Subscription: ; Evergreen Event:  *TestCostIntegrationSuite* - [Logs|https://evergreen.mongodb.com/test_log/5bf6c8012a60ed72f37c19d7] | [History|https://evergreen.mongodb.com/task_history/mci/mci_osx_test_cloud_6ec0484823935a3ed9e492fcb54892f6e2d7ac76_18_11_21_13_53_56#TestCostIntegrationSuite=fail] *TestEBSPriceCaching* - [Logs|https://evergreen.mongodb.com/test_log/5bf6c8012a60ed72f37c19d7] | [History|https://evergreen.mongodb.com/task_history/mci/mci_osx_test_cloud_6ec0484823935a3ed9e492fcb54892f6e2d7ac76_18_11_21_13_53_56#TestEBSPriceCaching=fail] *TestFetchEBSPricing* - [Logs|https://evergreen.mongodb.com/test_log/5bf6c8012a60ed72f37c19d7] | [History|https://evergreen.mongodb.com/task_history/mci/mci_osx_test_cloud_6ec0484823935a3ed9e492fcb54892f6e2d7ac76_18_11_21_13_53_56#TestFetchEBSPricing=fail] *TestFetchOnDemandPricingCached* - [Logs|https://evergreen.mongodb.com/test_log/5bf6c8012a60ed72f37c19d7] | [History|https://evergreen.mongodb.com/task_history/mci/mci_osx_test_cloud_6ec0484823935a3ed9e492fcb54892f6e2d7ac76_18_11_21_13_53_56#TestFetchOnDemandPricingCached=fail] *TestFetchOnDemandPricingUncached* - [Logs|https://evergreen.mongodb.com/test_log/5bf6c8012a60ed72f37c19d7] | [History|https://evergreen.mongodb.com/task_history/mci/mci_osx_test_cloud_6ec0484823935a3ed9e492fcb54892f6e2d7ac76_18_11_21_13_53_56#TestFetchOnDemandPricingUncached=fail]  """
"EVG-5562","Improvement","legacy-ui|perf-tools",1,"PerfBB buttons should be green","""The Hide / Ack and Unmark buttons should use the same green colour(s) as the equivalent buttons on the task page."""
"EVG-9010","Task","platform",2,"GRPC reporter interface for the ftdc library ","""probably in the metrics api new package, should put it into curator. """
"EVG-8567","New Feature","platform",2,"Create a merge rollups function on model.PerformanceResult","""Don't forget to replace [this code|https://github.com/evergreen-ci/sink/blob/master/rpc/internal/service.go#L211]."""
"EVG-5569","Build Failure","app",1,"Failures: test-rest-model on Ubuntu 16.04 [Evergreen Self-Tests @ 23319c01] (TestMetricsSuite, TestSysInfoConverterOverwritesExistingData)","""h2. [test-rest-model failed on Ubuntu 16.04|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_rest_model_23319c0163951ca4c9a0773678f25e46d94843d8_18_11_26_21_10_19/0]  Host: [ec2-52-72-5-30.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-gye84pgh]  Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/23319c0163951ca4c9a0773678f25e46d94843d8]: EVG-5515: support expansion and globbing for generate tasks (#1809)  Evergreen Subscription: ; Evergreen Event:   *TestMetricsSuite* - [Logs|https://evergreen.mongodb.com/test_log/5bfc72232fbabe06f5227ede] | [History|https://evergreen.mongodb.com/task_history/mci/mci_ubuntu1604_test_rest_model_23319c0163951ca4c9a0773678f25e46d94843d8_18_11_26_21_10_19#TestMetricsSuite=fail]  *TestSysInfoConverterOverwritesExistingData* - [Logs|https://evergreen.mongodb.com/test_log/5bfc72232fbabe06f5227ede] | [History|https://evergreen.mongodb.com/task_history/mci/mci_ubuntu1604_test_rest_model_23319c0163951ca4c9a0773678f25e46d94843d8_18_11_26_21_10_19#TestSysInfoConverterOverwritesExistingData=fail]    """
"EVG-5568","Improvement","app",1,"Improve indexes for test and task execution stats","""On {{daily_test_stats}}:   - add:     - remove:      On {{daily_task_stats}}:   - add     - remove  """
"EVG-5567","Improvement","app",2,"Create API v2 endpoints to get and set project variables","""This came out of discussions with [~zakhar.kleyman], who mentioned that rotating keys would have been much easier with this endpoint. I had expected that EVG-1730 would accomplish this, but that ticket only handled editing the project model. I think this probably should have been in scope for that ticket, so I'm going to add it to the Complete API v2 epic.    Note that since this allows getting project variables, it should be superuser-only."""
"EVG-5565","Improvement","app",1,"Increase default and maximum limit size for test and task execution stats","""The current default and limit is 100, it should be increased to 1000 to reduce the need for pagination and improve performance."""
"EVG-8539","New Feature","platform",1,"gimlet pagination links should include the query parameters","""The links that are created for pagination should include the query parameters that were present in the request."""
"EVG-5598","Improvement","app",1,"Create delete all from all commit queues admin UI","""Create delete all from all commit queues admin UI (1)"""
"EVG-5597","Improvement","app",1,"Create delete all from all commit queues back end for admin UI","""Create delete all from all commit queues back end for admin UI (1)"""
"EVG-5596","Improvement","app",1,"Create degraded mode UI","""Create degraded mode UI (1)"""
"EVG-5595","Improvement","app",1,"Create degraded mode back end","""Create degraded mode back end (1)"""
"EVG-5594","Improvement","app",2,"Implement amboy job to process queue","""Implement amboy job to process queue (4)"""
"EVG-5593","Improvement","app",2,"Write amboy job to populate amboy jobs","""Write amboy job to populate amboy jobs (2)"""
"EVG-5592","Improvement","app",2,"Implement REST API to remove commits from queue","""Implement REST API to remove commits from queue (2)"""
"EVG-5591","Improvement","app",1,"Implement REST API to list tasks in queue","""Implement REST API to list tasks in queue (2)"""
"EVG-5590","Improvement","app",1,"Implement CLI to remove tasks from queue","""Implement UI to remove tasks from queue (1)"""
"EVG-5589","Improvement","app",1,"Implement CLI to list tasks in queue","""Implement UI to list tasks in queue (1)"""
"EVG-5588","Improvement","app",1,"Implement API for UI to list tasks in queue","""Implement API for UI to list tasks in queue (1)"""
"EVG-5587","Improvement","app",1,"Implement regexes and tags API for UI","""Implement regexes and tags API for UI (1)"""
"EVG-5586","Improvement","app",1,"Implement regexes and tags UI element","""Implement regexes and tags UI element (1)"""
"EVG-5585","Improvement","app",1,"Write opt in API for UI","""Write opt in API for UI (1)"""
"EVG-5584","Improvement","app",1,"Write opt in UI","""Write opt in UI (1)"""
"EVG-5583","Improvement","app",2,"Write status API call","""Write status API call (2)"""
"EVG-5581","Improvement","app",2,"Implement GitHub merge API call","""Implement GitHub merge API call(2)"""
"EVG-5579","Improvement","app",2,"Implement parsing for ‚Äúevergreen merge‚Äù messages","""Implement parsing for ‚Äúevergreen merge‚Äù messages (2)"""
"EVG-5577","Improvement","app",2,"Implement set-module for commit queue","""Implement set-module for commit queue (8)"""
"EVG-5576","Improvement","app",2,"Write add, remove, and remove all methods on commit queue","""Write add, remove, and remove all methods on commit queue (2)"""
"EVG-5575","Improvement","app",1,"Implement db persistence for commit queue type","""Implement db persistence for commit queue type (1)"""
"EVG-5574","Improvement","app",1,"Create status action function registry","""Create StatusAction type and interface (1)"""
"EVG-5573","Improvement","app",1,"Create merge action function registry","""Create MergeAction type and interface (1)"""
"EVG-5572","Improvement","app",2,"Create commit queue type","""Create commit queue type (2)"""
"EVG-5570","Bug","app",1,"Pagination header only contains path and query parameters","""The header link should contain the full URL but only contains the path and query parameters.    The framework should be able to add the query parameters automatically so the work on this ticket will be to revert to using the Connector URL as baseURL.  A separate ticket will be created to have gimlet include the query parameters that were present in the request URL in the link."""
"EVG-5601","Bug","app",2,"Stats pagination is incorrect when grouping by days","""When querying the test/task execution stats, if grouping by days (group_by > 1), the match stage computed to from the start_at key for pagination is incorrect.  The stage should compute the date for the next time range before comparing values."""
"EVG-5608","Bug","legacy-ui",2,"Do not display execution tasks on task timing page","""We should display only display tasks and ordinary tasks, not the constituent execution tasks that are part of a display task."""
"EVG-5607","Improvement","app",2,"evergreen fetch --source takes much longer than a CLI git clone of mongodb repository","""Running a git clone of mongodb (a full clone) on my machine takes 1 minute and maxes up to 3 cores:      Running an evergreen fetch for a specific task with {{`--source`}} should be comparable (and possibly faster because it does not need to clone all of the git history). However it takes 13 minutes and maxes between 1 and 2 cores:      One of the SIGQUITs I did showed this stacktrace:      Obvious questions that may lead to optimizations are:  # Is it possible to use more goroutines for decompression  # Is there a surprisingly small buffer of bytes being used resulting in a lack of efficiency"""
"EVG-5606","Task","legacy-ui",1,"github patch alias doesn't allow tags with empty regex","""ui bug. """
"EVG-5605","Bug","app",2,"problem sending `generate.tasks` request: Failed to make request after 10 attempts","""I switched over fuzzer tasks in mongodb_mongo_master to use generate.tasks yesterday. Looking over the last few results, it mostly looks good. However, it looks like it is occasionally failing with a message like the following:       [https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_inmem_aggregation_multiversion_fuzzer_gen_03e13f90426a82a97cbb0f926385e09904519259_18_11_29_02_41_55]"""
"EVG-5604","Improvement","legacy-ui|perf-tools",2,"Revision filter improvements","""The revision filter should accept both short and long versions. For example, if I paste e5c39e225effd4a28937c32c84ac3dc0c1ceb355 or e5c39e225e for a revision, this should match correctly like (e5c39e2).  - e5c39e225effd4a28937c32c84ac3dc0c1ceb355 can come from the task URL or the CLI  - e5c39e225e can come from the bread crumb navigation at the top of a task page  - the filtering should continue to work as is (ie¬†e5c3 should still partial match) """
"EVG-8825","Build Failure","platform",2,"modify cedar service for local demo mode ","""attach grpc """
"EVG-5618","Bug","perf-tools",2,"Empty sys-perf charts despite table-view data","""This occurred in the following patch: [https://evergreen.mongodb.com/task/sys_perf_linux_shard_lite_bestbuy_query_patch_82fce7bd6f6e2838ce3ccc72474ff8b8ebe325a0_5c0173f22a60ed1355e7491f_18_11_30_17_31_47##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%252282fce7bd6f6e2838ce3ccc72474ff8b8ebe325a0%2522%257D%252C%257B%2522hash%2522%253A%252282fce7bd6f6e2838ce3ccc72474ff8b8ebe325a0%2522%257D%255D%257D]    It is worth noting that¬†[resource_sanity_checks|https://evergreen.mongodb.com/task_history/sys-perf/bestbuy_query?revision=82fce7bd6f6e2838ce3ccc72474ff8b8ebe325a0#resource_sanity_checks=fail]¬†failed"""
"EVG-5615","Bug","app",2,"Evergreen logs truncated","""Sometimes an Evergreen task has not posted all of its logs to the API server. For example, [these logs|https://evergreen.mongodb.com/task/mongo_node_driver_core_tests_os_requires_32__node_version~Argon_os_requires_32~ubuntu_16.04_test_3.4_standalone_patch_a8f8e4ce41936babc3b9112bf42d609779f03b39_5bfefd49e3c33123cb993da3_18_11_28_20_40_59/0?type=T&text=true] stop.    Running the same task with these commands in the main body of the task instead of pre contains all of the expected logs.    There are a few different things that might cause this:   # A context may be canceled before the log can be flushed. If that's the case, we need to ensure that the function running pre flushes logs before returning.   # There may be a bug in the grip logger in which a buffer is not flushed before closing.   # The API server may have rejected the logs. This is not possible in the above case, since later logs from the task are present, but I am including it here for completeness, since it may cause logs at the very end of a task to be missing. This ticket need not address this possibility unless we find this symptom in some other task."""
"EVG-5614","Bug","app",1,"Client IP address not present in Evergreen logs","""gimlet should pass the value of the X-Cluster-Client-Ip header through as the remote address. However, in the Splunk logs, only the load balancer IP is present. I believe this worked at some point, and Techops has said that the load balancer behavior has not changed."""
"EVG-5613","Bug","legacy-ui|perf-tools",2,"Trendchart - base line might not be visible due to scale","""We should took baseline into account for Y scale domain calculation. At the screeshot, baseline isn't visible because it high above the chart.    --    Changing estimation from 1 to 2 sp due to refactoring of legacy reference lines rendering code. Now it's possible to redraw ref. lines without redrawing whole chart - however this wasn't implemented in terms of this ticket."""
"EVG-5612","Bug","legacy-ui",1,"System-unresponsive display task should be purple","""This one is not highlighted correctly.¬†https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_windows_64_2k8_display_sharding_ese_99c9d211f7faed59f31b3d1733c63b64af668f80_18_11_29_19_51_48/0"""
"EVG-5611","Improvement","legacy-ui|perf-tools",1,"Default filtering for variant","""Original requirements:   # wiretiger variants should not be shown by default. This might be accomplished by pre-populating the variant filter with '^((?!wtdevelop).)*$'. It would be nice if¬†'(?!wtdevelop).)' also worked.   # canary tests should not be shown by default. This might be accomplished by pre-populating the variant filter with '^((?!canary_|fio_|NetworkBandwidth).)*$'    I going prepopulate filter with described default values. Other requirements are not easiest thing to do so I created a separate feature request ticket EVG-5610"""
"EVG-8363","Bug","platform",1,"Spell gauge correctly","""This is really bothering me."""
"EVG-5627","Incident","app",1,"Use higher cardinality indices for stats jobs","""We're seeing intensive aggregations like this cause write latency to spike:    Performance advisor suggests having test name first"""
"EVG-5626","Improvement","app",2,"Add max execution timeouts to all amboy jobs in Evergreen","""We have seen several outages where jobs appear to spin and never time out after some event. Recovering requires manual intervention: marking in-progress jobs complete and then restarting the app servers. Instead, all jobs should have a timeout as a back stop. This should be long enough that we never hit it except when there is a problem."""
"EVG-5633","Improvement","app",1,"Cache historical test endpoint should have a degraded mode","""DAG team is planning on using the cache historical test endpoints to determine how to split up resmoke suites. Since there are concerns about performance of the endpoints and the impact that calls could have on overall evergreen performance, we should have a degraded mode that the DAG scripts could detect if needed.    Having the endpoints return an http response of 503 (Service Unavailable) might be a good option."""
"EVG-5632","New Feature","app",2,"Project config invalid on PR testing","""Getting `evergreen ‚Äî project config was invalid` error on PR testing.  Ran `evergreen validate evergreen.yaml` and it returned that it was valid.    [PR|https://github.com/evergreen-ci/cedar/pull/29]"""
"EVG-5630","Improvement","app",1,"Cache last task group in FindNextTask","""We currently run {{shouldRunTaskGroup}} for every task in a group. However, once we've run it once, we don't need to rerun it, and since task group tasks are in order, we can skip all tasks in a group once we've checked on."""
"EVG-5637","Bug","app",2,"generate.tasks client retries race with server-side retries, causing system failures","""E.g., https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_jstestfuzz_sharded_gen_28e38550525a1e338ea2882da3ddce518771627f_18_12_06_20_13_22/0    I believe the order of operations here is:  1. Client makes generate.tasks request.  2. Client times out.  3. Server succeeds in processing request.  4. Client retries.  5. Server returns validation error, because tasks already exist."""
"EVG-5636","Bug","app",2,"Restructure/rename degraded mode flags","""Each flag should correspond to a job/group of jobs or APIs"""
"EVG-5642","Bug","app",2,"MissingParameter: The request must contain the parameter InstanceId","""There were hundreds of these errors. Evergreen should never pass a malformed request to DescribeInstances."""
"EVG-5641","Bug","legacy-ui",2,"Stats page contains no data","""The stats tab is currently completely non-functional: https://evergreen.mongodb.com/task_timing/mongodb-mongo-master#    - Most variants have all tasks greyed out  - Variants list tasks that aren't associated with that variant  - You can't seem to get any data on even the few that aren't greyed out.    CC' [~cristopher.stauffer]    """
"EVG-5644","Bug","app",2,"Tasks stuck in 'started' state with sub-tasks 'dispatched' or 'system-unresponsive'","""A few tasks ([here|https://evergreen.mongodb.com/task/mongodb_mongo_master_linux_64_debug_display_replica_sets_auth_patch_a1442e88e77fff49dd20a11953a6012be66d4b79_5c0d86902fbabe335d3b6272_18_12_09_21_18_09##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522a1442e88e77fff49dd20a11953a6012be66d4b79%2522%257D%252C%257B%2522hash%2522%253A%2522a1442e88e77fff49dd20a11953a6012be66d4b79%2522%257D%252C%257B%2522hash%2522%253A%2522a1442e88e77fff49dd20a11953a6012be66d4b79%2522%257D%255D%257D]¬†¬†and [there|https://evergreen.mongodb.com/task/mongodb_mongo_master_linux_64_debug_display_sharding_patch_a1442e88e77fff49dd20a11953a6012be66d4b79_5c0d86902fbabe335d3b6272_18_12_09_21_18_09##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522a1442e88e77fff49dd20a11953a6012be66d4b79%2522%257D%252C%257B%2522hash%2522%253A%2522a1442e88e77fff49dd20a11953a6012be66d4b79%2522%257D%255D%257D]) in my patch [build|https://evergreen.mongodb.com/version/5c0d86902fbabe335d3b6272]¬†stuck in 'started' state for long with '>= 1 day (wall clock)' waiting time. Their sub/execution tasks stayed under 'dispatched' or 'system-responsive' state. Attempts of 'abort' the tasks failed with no effect of turning them to aborted state.¬†"""
"EVG-9011","Task","platform",1,"Add Restart() to Process","""Currently, Jasper processes do not have a {{Restart()}} (or similar) functionality. We should add this."""
"EVG-5649","Bug","app",2,"Evergreen fetch seemed to hang for a task fetching artifacts","""The task: {{mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_replica_sets_kill_secondaries_jscore_passthrough_patch_6f23d1a20a7669396efab06bf26b3ee76553fd9b_5c0ee9b50305b96482de19ad_18_12_10_22_33_53}}    Running by hand gives the following output:      Noting the {{file name too long}} errors."""
"EVG-5648","Improvement","app",1,"Error if teardown script does not exist","""We only run the teardown script if one is configured for the distro. Therefore, it is an error if one does not exist. We should return an error we don't find one, not noop."""
"EVG-5646","Improvement","app",1,"Adjust priority for amboy jobs","""Review to make sure they look right, change if they need changing."""
"EVG-5645","Bug","app",1,"cannot restart a display task","""If you choose Restart in the Gear menu for any Display task, you receive this error:    I think it still works however?  The state of the task after hitting this error is """"Started"""", so I think it really does attempt to rerun all the execution tasks?"""
"EVG-8410","Bug","platform",2,"Figure out why pail's local impl is failing on windows.","""See [here|https://evergreen.mongodb.com/task/pail_windows_test_patch_1df85beb6afca4560131e9a65fccfaac91af944a_5c1031b32a60ed719ff9e033_18_12_11_21_52_53] for more details on the failure."""
"EVG-5661","Improvement","legacy-ui",1,"Lobster feature request: allow ""click to expand"" that shows log lines in between two bookmarked lines","""This would be a nice feature because often, I first bookmark the lines I'm interested in, then I want to explore more deeply what's happening around and between those lines.    Currently, the only way to see¬†*any*¬†non-bookmarked lines is to:   * add some additional filters for the additional lines you're interested in   * turn off all filters    However, *both of these have the drawback*¬†that they'll show the matching lines throughout the entire test, when I only care about those lines inside a small window.    I attached two examples (from GitHub and mongodbcr.appspot) of what the """"click to expand"""" UI could look like:"""
"EVG-5658","Improvement","legacy-ui|perf-tools",2,"Persistent filter settings","""It would be nice if your filters were cached and reused the next time you view the page. _(This is a very minor feature request)_"""
"EVG-5657","Improvement","legacy-ui|perf-tools",1,"More comprehensive date filter","""The Create Time filter on this page looks like it only uses string matching, so '2018-10-12' but '>=2018-10-12',¬† '=2018-10-12' does not. This behaviour is inconsistent with the change points list filtering    ALSO    The Create Time filter uses numeric comparisons. So '=2018-10-12' will never match anything where as '>=2018-10-12' will. This behaviour is correct if you understand the matching but it is not what you would expect. Maybe string based matching would be better, although >= and <= should continue to work as expected"""
"EVG-5656","Improvement","legacy-ui|perf-tools",1,"Warnings - colour coding","""It would be nice if the failures were colour coded link they are in the waterfall page (red for test failures, purple for system failures etc)"""
"EVG-5655","Improvement","legacy-ui|perf-tools",0,"Warnings - hide status column by default","""I'm not sure the status column is useful. It appears to only be 'failed'"""
"EVG-5654","Improvement","legacy-ui|perf-tools",1,"Warnings - links","""The rows in the table should contain links to the task pages and probably the version page"""
"EVG-5652","Improvement","legacy-ui|perf-tools",1,"Warnings - Variant / test name grouping","""The issues should be grouped by (variant and test name). The Create time of this grouping should be the most recent create time of the grouped failed tasks"""
"EVG-9038","Task","platform",2,"Fix maxdepth in model/perf.go","""Want:  MaxDepth < 0 -> search recursively without limit on depth  MaxDepth == 0 -> do not search recursively  MaxDepth > 0 -> search recursively until reach depth of MaxDepth"""
"EVG-8763","New Feature","platform",1,"add types to shrub or poplar for the result.json format ","""to support easily building/generating this type"""
"EVG-8714","New Feature","platform",2,"PoplarBenchmark function type ","""    need a wrapper to convert to/from func(*testing.B) and a manual harness with min iterations/ and min/max time """
"EVG-8663","New Feature","platform",2,"write TestMain function for poplar ","""autoconvert testing.B to poplar benchmarks for easier reporting. """
"EVG-5674","Bug","app",1,"Lint tasks fail","""  ¬†"""
"EVG-5672","Improvement","app",1,"Do not retry for ""InvalidSpotInstanceRequestID.NotFound""","""If the spot request ID is not found once, it will not be found on every retry. We should retry."""
"EVG-5667","Task","app",1,"Remove test_history code","""We are now using the cache historical test execution statistics project for this data. The old endpoint is deprecated."""
"EVG-5666","Bug","app",1,"Intent host ID sent to DescribeInstances","""I see many errors of the form    associated with DescribeInstances API calls. We should not sent intent host IDs to AWS."""
"EVG-5697","Improvement","app",1,"Add Minimum Hosts Per Distro","""Requirements:  - Add a field to the distro that is minimum pool size (to complement current maxhosts).  - Add UI/REST interfaces to this value  - Change the idle-host termination query to not terminate idle hosts if it would mean putting a host pool below the minimum number of hosts."""
"EVG-5693","Improvement","app",2,"Produce Task Queue Items from task.Task items","""This process should create task queue items from the tasks that we get out of the task finder. This is also probably the right place to assign point values and do any additional look ups or preparation. This includes building the groups.'"""
"EVG-5692","Improvement","app",2,"New TaskFinder implementation to find all pending tasks for scheduling.","""We have multiple parallel implementations of this query/operation in the legacy system. The current task finders need to be changed to not filter out blocked dependent tasks.    It may also be useful to do something iterative here rather than our usual All() approach, so that we can have a more streaming approach between the task prioritizer and the task finder."""
"EVG-5691","Improvement","app",2,"Implement New Task Planner Process","""This is mostly just scaffolding:  - new package  - basic tests   - interfaces     The idea is that we need to tie together the logic that"""
"EVG-5690","Improvement","app",2,"Add Distro Configuration for Scheduler Options not Associated With Weights","""Assignee: StuDescribed in the design document this includes things like interleaving strategy, target duration. These aren‚Äôt related to the weightings, and are more similar to maxhosts.    Requirements:  - additional UI/REST/DB support for a collection of options.  - changes to distro.Distro"""
"EVG-5689","Improvement","app",1,"Add Method for Resolving Distro Scheduler Configuration from global defaults and local","""Requirements:  - A function that takes an *evergreen.Settings and *distor.Distro and returns a document that describes the weights."""
"EVG-5688","Improvement","app",2,"Add Default Distro Configuration to Site Admin","""Depends on ‚ÄúAdd Distro Configuration for Weighting Factor,‚Äù or at least we‚Äôll probably need to move the document that describes the weights to ‚Äúevergreen‚Äù rather than have it live in distro    Work with John to figure out if there‚Äôs a way to reduce the duplication here.    Requirements:  - Accessible from the global configuration"""
"EVG-5687","Improvement","app",2,"Add Distro Configuration for Weighting Factors","""The design document lists a number of different parameters that have ‚Äúweights‚Äù in the scheduling process. We need to expose this as part of the distro configuration, I imagine that we‚Äôll have a number of values describe the relative value (or ordering?) of a list of possible priorities.    Requirements:  - UI, REST and DB handlers for this structure  - Determine what the list of properties are.  - Probably need to define a  - Possibly hidden unless users explicitly say that they want to override the defaults."""
"EVG-5686","Improvement","app",2,"Implement container.Heap for slices of Container items","""Depends on all of the ‚ÄúQueue Item Type‚Äù tickets.    See: [https://github.com/mongodb/amboy/blob/master/queue/priority_storage.go#L156|https://github.com/mongodb/amboy/blob/master/queue/priority_storage.go#L156]      Requirements:   - should be able to sort based on the point value of a queue."""
"EVG-5685","Improvement","app",1,"Create New Host Allocation Job","""Depends on ‚ÄúRefactor inputs to Host Allocation.‚Äù    Requirements:  - respect the distro scheduler flag (per distro toggle)  - respect the respect the top level host allocator flag  - scheduler.GetHostAllocator(ctx, scheduler.HostAllocatorData) (int, err) -> bulk insert intents    Probably can be disabled to start, as this depends on the scheduler part."""
"EVG-5684","Improvement","app",2,"Refactor Inputs to Host Allocation to Be Public","""Requirements:   - Make Fields in HostAllocatorData public (or constructable?)  - Reduce/Remove dependency on legacy model.TaskQueueItem"""
"EVG-5683","Improvement","app",1,"Add New Degraded Mode Flags","""Requirements:  - For all new flags add them to the UI/DB/REST  - Add one top level flag to totally disable the new scheduler (let‚Äôs call it the planner)  - Add one top level flag to disable the new host allocator"""
"EVG-5682","Improvement","app",1,"Add Scheduler Version Flag","""This shouldn‚Äôt include any logic, just crud methods to persist it from the DB and access it from the rest api (with UI for the same.)    Requirements:  - UI on the distro page  - API in rest for toggling-persistence to the db"""
"EVG-5680","Improvement","app",2,"Implement Queue Item Type for a Group of Unordered Dependencies (Multi-Host Task Group)","""Requirements:  - mgobson SetBSON/GetBSON  - bson MarshalBSON UnmarshalBSON  - Implement interface for HasEligableTask and GetNextTask(hostInfo)"""
"EVG-5679","Improvement","app",2,"Implement Queue Item Type for a Group of Ordered Dependencies (Single Host Task Group)","""Requirements:  - mgobson SetBSON/GetBSON  - bson MarshalBSON UnmarshalBSON  - Implement interface for HasEligableTask and GetNextTask(hostInfo)"""
"EVG-5678","Improvement","app",2,"Implement Queue Item Type for a Task and its dependencies","""Implement Queue Item Type for a Task and its dependencies"""
"EVG-5677","Improvement","app",2,"Implement Queue Item Type for Single Tasks","""Implement Queue Item Type for Single Tasks"""
"EVG-5676","Improvement","app",1,"Cache ec2 cost in more places","""Currently we only cache in getProvider, which we only call in the auto case. We should cache in more places (the host idle job, in particular) so that we handle the pure spot and pure on-demand cases."""
"EVG-5703","Bug","app",2,"Triggering based on command doesn't work","""https://evergreen.mongodb.com/task/mci_generate_generate_config_45ee6f1e790a2fdf28a7d6acaf61c2ffc1da9629_b3ee817a9733cdca55b20fbbd77c41e6_18_12_17_15_58_20"""
"EVG-5702","Bug","app",1,"Build page not rendering correctly in Ops Manager Kubernetes project","""It seems none of the build pages render correctly in the Ops Manager Kubernetes Project: [https://evergreen.mongodb.com/waterfall/ops-manager-kubernetes.]    For instance, on the following page I get multitudinous Javascript errors, variables aren't all substituted correctly and I can't restart tasks.    [https://evergreen.mongodb.com/version/ops_manager_kubernetes_b56d20a949830c3b2530a396594817a991a3ea9b]    !image-2018-12-18-19-10-55-317.png|width=1137,height=660!"""
"EVG-5707","Task","ui",2,"Increase rate at which we delete logkeeper data to match TTL","""Currently we delete 5 per second. This will cause us to delete the backlog in 115 days. We should target something faster this than, perhaps on the order of a few weeks."""
"EVG-5706","Bug","app",2,"Display Task with 'setup-failed' children still show success","""I'm seeing an issue where I have some tasks under a display task, several of the tasks have failed with """"setup-failed"""", but the display task as a whole shows """"success"""".    https://evergreen.mongodb.com/task/mongodb_mongo_master_hot_backups_rhel_70_64_bit_display_noPassthrough_patch_c70f14205a0cf7de5cfd48e6138c48a9c8f1aa72_5c1a744e2a60ed3e8c7c300a_18_12_19_16_40_00"""
"EVG-5712","Bug","app",2,"Task page links to incorrect patch (but seemingly runs with correct one)","""[This Evergreen task|https://evergreen.mongodb.com/task/genny_archlinux_t_integration_test_standalone_patch_3ce75fabfb135c519955daf72e1df28619c60397_5c1bc3d5c9ec4427483ce69b_18_12_20_16_31_19] links to following {{/filediff}} endpoints:    * https://evergreen.mongodb.com/filediff/5c1bc3d5c9ec4427483ce69b?patch_number=0  * https://evergreen.mongodb.com/filediff/5c1bc3d5c9ec4427483ce69b/?file_name=src%2Fresmokeconfig%2Fgenny_standalone.yml&patch_number=0    The changes to {{resmokeconfig/genny_standalone.yml}} are blank because the diff being displayed is actually from [10gen/genny#68|https://github.com/10gen/genny/pull/68] rather than [10gen/genny#64|https://github.com/10gen/genny/pull/64]."""
"EVG-5711","Bug","legacy-ui",2,"Patch is missing base tasks for some tasks","""https://evergreen.mongodb.com/version/5c1be2c6e3c3312b34ac86c8"""
"EVG-5708","Task","app",1,"Comment out the task create_time migration hook","""The migration hook to update task create_time values for patch builds (EVG-5409) should be commented out.    While running it again would not modify documents, it would iterate over all the tasks in the database."""
"EVG-5716","Bug","app",2,"History drawer takes many seconds to load","""The /history/tasks/<task_id>/surround endpoint is returning data very slowly. Tasks I've checked from the mci and mongodb-mongo-master projects returned data in between 4 and 12 seconds."""
"EVG-5714","New Feature","app",2,"testResults start and end types should be time.Time and not floats","""should include unsetting this data, (writing a migration,) and removing it from the model. """
"EVG-5719","Improvement","app",2,"Retries from running generate.tasks command may cause system failures","""The {{generate.tasks}} command sent by https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_aggregation_expression_multiversion_fuzzer_gen_c6cfa0ce672fc10ac571b40f74502dcab2d0138e_18_12_27_20_23_32/0 failed due to the generated tasks already existing (likely as a result of racing with an earlier {{generate.tasks}} attempt). This leads to an unfortunate behavior where the display task we use to represent the combination of the task running the {{generate.tasks}} command the generated tasks to show up as purple despite all of the generated task succeeding. It would be nice if the retries could know that they failed as a result of an earlier attempt succeeding and suppressing this error.    """
"EVG-5722","Build Failure","app",1,"Failed: coverage on Coverage [Evergreen Self-Tests @ 10447745] ",""" h2. [coverage failed on Coverage|https://evergreen.mongodb.com/task/mci_coverage_coverage_104477457d4f8e3b63285a70df65f512dca6047e_18_12_28_15_09_31/0] Host: [ec2-3-84-93-49.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-f9ti662h] Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/104477457d4f8e3b63285a70df65f512dca6047e]: EVG-5669 Fix lint Evergreen Subscription: ; Evergreen Event:   """
"EVG-8784","New Feature","platform",2,"improve shell job for amboy","""the current shell job is adequate, but difficult to use in more complicated situations:  would be nice to have support for: - run group with continue on error - abort on error (but ignore error) - parallel run group  as well as with configuration for output (e. g. write to file, pass to logger, etc.) """
"EVG-8760","New Feature","platform",2,"add support for multi-function/multi-actor benchmarks","""should support: - run one function many times concurrently per iteration - run mixed groups of benchmark functions concurrently """
"EVG-8730","New Feature","platform",1,"{amboy.RunJob(context.Context) error} helper function","""- to make it easier to run jobs outside of a queue. - add logging about runtime """
"EVG-8691","New Feature","platform",2,"dependency with callback style checks","""the current dependency system in amboy doesn't provide any basic way to have a dependency that's blocked until specified jobs are complete.  there should be single-system queue (where in-memory approaches work), and more function-object-ish approaches can work """
"EVG-8650","New Feature","platform",1,"small fixes for the xmpp sender","""- make the xmpp sender's reset method not override the sender. - ensure xmpp (and no other sender) uses s.formater directly and instead calls the Formater public method. - the tls/ssl fallback doesn't work. """
"EVG-8601","New Feature","platform",1,"add conditional Add method to grip.Catcher interface","""just like grip methods have When methods for conditional logging, the Catcher interface should have additional conditional methods so that we can have more sophisticated add-error logic """
"EVG-8575","New Feature","platform",1,"direct error creation methods on catcher interface","""add methods/wrappers to support error creation in the catcher.  New(string) Errorf(string, ...interface{}) Wrap(err, string) Wrapf(err, string) """
"EVG-8530","New Feature","platform",1,"streaming collector interfaces for writing json and bson","""this is just to support using the collector interface to create uncompressed payloads to support easier client-side post-processing methods. """
"EVG-5727","Bug","app",1,"Cannot restart tasks with version restart modal","""The validator says """"Select at least one task to restart"""", and I cannot click the button."""
"EVG-5724","Improvement","app",1,"mci-token should set expiration date in the future","""[~jonathan.brill] is logged out of Evergreen daily, and we're not sure why. We noticed that the authentication token cookie sets an expiration date in the past, and this potentially could be deleted by something (an extension?). We should set an expiration for the token in the future."""
"EVG-5723","Incident","app",2,"Some OS X machines appear to always be system-unresponsive","""See, for example, the machines for the purple tasks in this build https://evergreen.mongodb.com/build/mci_osx_f952af4fa5aa2c9ac0bb5b8e2aac265110b4a984_18_12_31_20_13_59, among them, macos-1012-93.macstadium.build.10gen.cc,  macos-1012-38.macstadium.build.10gen.cc, macos-1012-78.macstadium.build.10gen.cc."""
"EVG-5731","Bug","legacy-ui",1,"Layout of the degraded mode flags is messed up",""" !image-2019-01-03-10-24-44-624.png|thumbnail! """
"EVG-5735","Bug","legacy-ui",2,"Timed out task should display as red, not lavender","""https://evergreen.mongodb.com/task/mongosql_auth_c_full_matrix__os~windows_32_integration_tests_plain_6909fd596edb18a1f66b168d2ccabbc21ca48396_f7da0b94ad16d13746871917c6addb76_19_01_03_22_52_31"""
"EVG-5738","Bug","legacy-ui",2,"Link on build-spawned host doesn't work","""https://evergreen.mongodb.com/host/i-0d764010b961b97b2"""
"EVG-5751","New Feature","app",2,"Link to Logkeeper logs in UI","""Link to Logkeeper logs in UI"""
"EVG-5750","New Feature","app",0,"Link to file logs in UI","""Link to file logs in UI"""
"EVG-5749","New Feature","app",1,"Dogfood all 4 loggers with Evergreen","""Dogfood all 4 loggers with Evergreen"""
"EVG-5748","New Feature","app",2,"Connect sender implementations to agent","""Connect sender implementations to agent"""
"EVG-5747","New Feature","app",2,"Upload file logs to S3","""Upload file logs to S3"""
"EVG-5743","New Feature","app",2,"Add configuration for senders","""Add configuration for senders"""
"EVG-5742","New Feature","app",1,"Remove logger from REST interface","""Remove logger from REST interface"""
"EVG-5741","Bug","app",1,"Skipped tests are counted as failed tests in the test stats API","""Currently the background job that pre-computes the historical test stats does not handle the skip status and treats all the test results with a status different from 'pass' as being failed.    At minima the results shouldn't be counted as failed tests.    We might also want to include the count of skipped tests in the stats.    ¬†    Similarly we don't handle the silentfail status but since we currently only use it to display the failure differently in the UI, counting them as failures makes sense."""
"EVG-8339","Bug","platform",1,"Check for s3 bucket should not require bucket ownership","""Currently, the [Check|https://github.com/evergreen-ci/pail/blob/master/s3_bucket.go#L177] method for the s3 bucket implementation does a GetBucketLocation request which requires bucket ownership. """
"EVG-5754","Improvement","legacy-ui",2,"Restart task modal should give some indication that it's doing work when restart button is clicked","""When restarting a task if there is a delay in response it's unclear to a user if their action was registered or not. Sometimes waiting for multiple seconds and only then getting feedback once the request to restart tasks was successfully completed.    When I press restart the UI should provide a loading spinner or some other obvious animation that indicates that my click was registered and it's waiting on response from the server. As it stands since it does nothing sometimes a user will assume the click was not registered and hit restart multiple times. This leads to weird errors and states where some tasks have 3 - 4 multiple executions despite user intent to only restart once."""
"EVG-5757","Bug","legacy-ui",2,"Unable to view compile task on task timing page","""The changes from EVG-5522 and EVG-5608 addressed the shortcomings of [the task timing page|https://evergreen.mongodb.com/task_timing/mongodb-mongo-master#/project=mongodb-mongo-master&buildVariant=enterprise-rhel-62-64-bit&taskName=compile&requester=gitter_request&limit=50&onlySuccessful=false] after the introduction of display tasks; however, it appears there are still issues when the task is part of a task group. I'd like to be able to select the {{compile}} task and see how long it takes over time."""
"EVG-8434","Bug","platform",2,"reexamine gprc vendoring situation","""update probably makes it possible to drop some/all of x/net?     also make cedar and curator match in terms of grpc versions.     also jasper.    """
"EVG-8344","Bug","platform",2,"refactor and write tests for aviation","""use gimlet as a guide, feel free to refactor a bunch    also import/steal chain_test.go from https://github.com/grpc-ecosystem/go-grpc-middleware"""
"EVG-5762","Improvement","app",0,"Support jira oauth","""See linked tickets for more info."""
"EVG-5761","Bug","app",1,"The BB plugin is not displayed on a display task page with status 'test-timed-out'","""The BB plugin is only shown for tasks that have a status set to {{'failed'}}. See check [here|https://github.com/evergreen-ci/evergreen/blob/887f2a477cb2556a8c59cdbcb26ab6503ccedb32/public/static/plugins/buildbaron/partials/task_build_baron.html#L3].    But display tasks that have an execution task that has failed because of a test timeout have a status set to '{{test-timed-out}}' so the plugin does not appear.    The execution task itself has a status set to '{{failed}}' and its page shows the plugin.    Note: There are other places where the task status is compared to '{{failed}}' in the UI so other features could be similarly impacted."""
"EVG-5759","Bug","app",1,"Add configuration option to setup_group to fail task if setup_group fails","""https://evergreen.mongodb.com/task/mongodb_mongo_v4.0_enterprise_osx_1010_mmapv1_compile_58d80a26224da882cbe30d301ed295c302515c9b_19_01_12_23_59_30 kept running after failing to clone the enterprise module. I'm not sure if this is a misbehavior of the {{git.get_project}} command itself, or related to how the command is [called during the {{setup_group}} phase of a task group|https://github.com/mongodb/mongo/blob/58d80a26224da882cbe30d301ed295c302515c9b/etc/evergreen.yml#L254].    """
"EVG-9177","Task","platform",1,"Test cedar service send","""Use poplar to test cedar service, write a test that gets a curator binary and runs poplar send with yaml file of arguments. """
"EVG-9089","Task","platform",2,"Improve testing in cedar","""Look through tests and make them more thorough and robust."""
"EVG-5764","Bug","app",1,"error inserting task for build, apparently related to triggers","""  ¬†"""
"EVG-8509","Bug","platform",1,"add cookie attaching middlware to gimlet","""this component is currently in evergreen, but should be generic. """
"EVG-8433","Bug","platform",2,"move certificates into the database","""- include the ability to import certs from files if they've changed from the one in the database. - send alerts if the cert changes and needs to be reloaded - generate certs if none exist. - add configuration about the common name, expiration, etc to the config in the database. """
"EVG-8430","Bug","platform",1,"support for cookie authentication in cedar application","""- allow user settable token (to share evergreen cookie?) - add cookies to requests using the mechanism from evergreen """
"EVG-8345","Bug","platform",1,"rest endpoints for generating client certificates","""vendor cert strap, and use it to generate a client cert for a user, as in the api key generation"""
"EVG-5769","Bug","app",1,"Host that failed to provision ran a task anyway","""A host (https://evergreen.mongodb.com/host/sir-k7f87rnh)  1. failed to provision  2. then the status changed to decommissioned by mci  3. 3 seconds later the status changed from decommissioned to running by mci again  4. then an agent was deployed and a task started    The task may have failed because the setup script ran twice.    """
"EVG-9264","Task","platform",1,"Add a method for creating Commands on Manager","""We should add a method to the {{Manager}} interface that lets us create {{Command}}'s, similar to the pre-existing {{Create()}} method."""
"EVG-5771","Bug","app",2,"New project was not set up with webhooks installed","""A new project was added to Evergreen, genny-toolchain, but it did not have """"Enable Github Webhooks"""" checked. Since this is not visible by project admins, we should have a mechanism for enabling GitHub webhooks for a new project. We could, for example, install the webhook secret if the repository name changes. Or we could display the button if a webhook is not set up for the project, and allow a user to check it. In general though it is a problem if projects are set up by default without webhooks installed, since this means that commits will be slow to be picked up by Evergreen."""
"EVG-5780","Task","ui",2,"Delete logkeeper logs by build instead of by test","""Currently, although we [delete|https://github.com/evergreen-ci/logkeeper/blob/6223635e82a033d52287d1023b5be5b936c428cc/schema.go#L194] data by build, we [find|https://github.com/evergreen-ci/logkeeper/blob/6223635e82a033d52287d1023b5be5b936c428cc/schema.go#L135] it by test, which may be a bottleneck in the logkeeper delete job. We should instead find by build, and [set|https://github.com/evergreen-ci/logkeeper/blob/6223635e82a033d52287d1023b5be5b936c428cc/schema.go#L122] the failed field on the build document instead."""
"EVG-5776","Bug","app",1,"""no entry found for host"" errors in logs","""Every few hours there is a burst of hundreds of these errors, which makes the notification for increased error rate noisy."""
"EVG-5773","Improvement","app",1,"shell.exec silent should suppress stdout and stderr","""If you set {{silent: true}} in {{shell.exec}}, Evergreen will not print the script it is executing. However, it will also not suppress standard output and standard error. {{subprocess.exec}} handles this correctly. {{shell.exec}} should as well, probably by setting the ignore stdout and ignore stderr variables."""
"EVG-8337","Bug","platform",1,"Gimlet LDAP returning error even if user is authenticated in service group","""Small bug in gimlet LDAP where if a user is in the service group but not the user group, it returns an error.    [code here|https://github.com/evergreen-ci/gimlet/blob/223d02e0354561f1500f12d7b1239c65fb03e2ec/ldap/ldap.go#L349-L353]"""
"EVG-9190","Task","platform",1,"Include .exe extension for Windows binary","""The [Jasper integration into resmoke.py|https://jira.mongodb.org/browse/SERVER-38136] requires the curator binary to be named curator.exe for Windows compatibility due to [this line which expects a .exe extension|https://github.com/mongodb/mongo/blob/9c83ead9257d0d41d7b7ec92adf441bf34b0c3a8/buildscripts/resmokelib/core/process.py#L98-L99]."""
"EVG-5785","Bug","app",1,"Requesting a build's tasks, when that build has no tasks, returns 404","""Build:    https://evergreen.mongodb.com/api/rest/v2/builds/ops_manager_kubernetes_release_operator_e58808157491c7cf963d3e4406cbe82da53b6f57_19_01_29_11_17_24    Tasks:  https://evergreen.mongodb.com/api/rest/v2/builds/ops_manager_kubernetes_release_operator_e58808157491c7cf963d3e4406cbe82da53b6f57_19_01_29_11_17_24/tasks    Acceptance Criteria:  The above tasks request returns a success code and empty list. """
"EVG-8829","Build Failure","platform",1,"Failures: lint on Race Detector (Arch Linux) [Curator @ f94301ba] (lint-curator, lint-operations)","""h2. [lint failed on Race Detector (Arch Linux)|https://evergreen.mongodb.com/task/curator_race_detector_lint_f94301ba7c73460c15321d62f21262d098241726_19_01_30_21_54_34/0]  Host: [ec2-54-158-164-127.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-a9cg6h2g]  Project: [Curator|https://evergreen.mongodb.com/waterfall/curator]  Commit: [diff|https://github.com/mongodb/curator/commit/f94301ba7c73460c15321d62f21262d098241726]: MAKE-627: certificate cleanup (#32) | 30 Jan 19 21:54 UTC  Evergreen Subscription: ; Evergreen Event:   *lint-curator* - [Logs|https://evergreen.mongodb.com/test_log/5c5220319ccd4e450db552b4] | [History|https://evergreen.mongodb.com/task_history/curator/curator_race_detector_lint_f94301ba7c73460c15321d62f21262d098241726_19_01_30_21_54_34#lint-curator=fail]  *lint-operations* - [Logs|https://evergreen.mongodb.com/test_log/5c5220319ccd4e450db552b4] | [History|https://evergreen.mongodb.com/task_history/curator/curator_race_detector_lint_f94301ba7c73460c15321d62f21262d098241726_19_01_30_21_54_34#lint-operations=fail]    """
"EVG-9250","Task","platform",2,"Support Windows job objects","""resmoke has special logic for Windows process management using job objects (e.g. [process initialization|https://github.com/mongodb/mongo/blob/8d23154ed3e086213c5bd59b3e2fcba96a3cca41/buildscripts/resmokelib/core/process.py#L53-L85] and [process termination|https://github.com/mongodb/mongo/blob/8d23154ed3e086213c5bd59b3e2fcba96a3cca41/buildscripts/resmokelib/core/process.py#L156-L201]). In order for Jasper to be used on Windows machines and ensure it terminates all processes, it needs logic to handle job objects as well."""
"EVG-9315","Task","platform",1,"Write tests for Depot interface","""Now that we have a mongo backed implementation of certstrap's Depot interface, we should write a generic test for the interface and test it against both mongo and certstrap's file system backed implementation."""
"EVG-9063","Task","platform",2,"add hook for pre-termination","""maybe specifically pre-signal? to support being able to do windows event object and/or clean shut down. probably should resemble triggers?"""
"EVG-8931","Task","platform",1,"provide common implementation for http.Server creation","""currently we don't create a special web server, and should probably move the http server creation out of evergreen and into gimlet. """
"EVG-8498","Bug","platform",1,"handle certificate revocation and validation","""we currently have no mechanism in our GRPC/cedar application stack to validate that users associated with a certificate are valid users of the system.  it seems possible that we would have a user that would be deactivated in ldap that would have a valid certificate, so we'd want to check in sometimes. """
"EVG-8492","Bug","platform",2,"python library for cedar interaction","""may make sense to put this up as evergreen-ci/cedar.py and include some kind of easy wrapper around the poplar metrics rpc api as well as cedar directly.  should also include getting certificates without needing the cedar binary. """
"EVG-8420","Bug","platform",2,"tests for client side TLS configuration","""the poplar client in curator has some TLS configuration. It might be nice to package this up in a form that could be reusable externally, and also it would be good to add some testing. """
"EVG-8381","Bug","platform",2,"add additional queue infrastructure to cedar application","""we should have a message buffering queue for sending messages to slack and use the queue to buffer those messages  we should also have a local queue for process local operations (machine stats mostly,)  worker pools should be abortable unless they need to be ratelimited.   additionally if we can add reporter and management interfaces.  """
"EVG-8359","Bug","platform",2,"create grpc server infrastructure","""wrap server creation currently in use in the cedar/rpc package into generally reusable functions in aviation.  """
"EVG-5793","Task","app",2,"use pprof from gimlet","""recently we moved some of the pprof handling infrastructure into gimlet, so we should use that in evergreen and remove the legacy copy of this code. """
"EVG-5797","Problem Ticket","app",2,"Multiple instances of curl running when deploying evergreen agent to hosts ","""I found this happening on one of the static s390x boxes        Running curl in parallel to get the same file slows down the already slow network even more and can potentially corrupt the agent."""
"EVG-5800","Bug","app",2,"Patch command hangs for a specific diff","""If you try to patch the attached diff to mongodb-4.0 with the following command, we time out querying the github API              """
"EVG-8972","Task","platform",2,"write generic local authentication implementation ","""something in memory, like the native auth, or perhaps something that hits the database internally, but that doesn't depend on an external service. should be good for testing as well as basic experiences. """
"EVG-5806","New Feature","app",1,"Add endpoint to see processes killed by OOM killer","""Take the business logic of EVG-5419 and create a usable API endpoint that will track OOM killer information on applicable systems."""
"EVG-8899","Task","platform",2,"Add pre-signal trigger for Windows events","""A pre-signal trigger must be written to indicate to a Windows mongod process that it is about to be signaled for termination (e.g. SIGTERM, SIGKILL). This is necessary to support clean termination in resmoke."""
"EVG-5810","Bug","app",1,"Fix Final GitHub Status","""GItHub doesn't show the final status for the merge (merge succeeded/failed) event though the API shows it.    e.g. [https://github.com/evergreen-ci/evergreen/pull/2003]¬†and    curl -H """"Authorization: token xxxxxxxxxxxxx"""" https://api.github.com/repos/evergreen-ci/evergreen/commits/c7df04ff574f6958516802c54310392dd55fb785/statuses"""
"EVG-5809","Bug","app",1,"Duplicate Notifications on Patch Completion","""I signed up for Slack alerts when my patches complete. Sometimes I get duplicate alerts for the same patch.    Judging from the notification, it seems there are two events generated for the same patch completion."""
"EVG-5817","Improvement","legacy-ui",1,"System unresponsive tasks are colored incorrectly","""It looks like they are not colored and so get the default. On the build page, this makes them blue. On the task page, this makes them gray.    Example build https://evergreen.mongodb.com/build/mongodb_mongo_master_linux_64_debug_691ab6da0c38f52f32c1028a8fa7447997ced255_19_02_11_19_59_38  Example task https://evergreen.mongodb.com/task/mongodb_mongo_master_linux_64_debug_display_noPassthrough_691ab6da0c38f52f32c1028a8fa7447997ced255_19_02_11_19_59_38"""
"EVG-5815","Improvement","app",2,"Indicate in Jira tickets that a task is a system timeout","""This will allow the server team to better be able to route BFs."""
"EVG-5813","Improvement","app",2,"Check the SHA being merged","""Ensure the SHA being merged matches the SHA of the commit that was tested.    If a new commit is pushed to the PR while after the commit queue has started testing the PR the merge should be aborted."""
"EVG-5812","Improvement","app",2,"Monitor Commit Queue progress","""If a merge gets stuck remove it from the queue so the queue doesn't block."""
"EVG-5811","Improvement","app",2,"Check user's GitHub permissions","""Before kicking off the commit queue in response to a user's comment, check the user's permissions to make sure they're authorized to:   # run a patch on Evergreen   # merge a commit    See [https://help.github.com/articles/repository-permission-levels-for-an-organization/]    and¬†https://developer.github.com/v3/repos/collaborators/#review-a-users-permission-level"""
"EVG-8953","Task","platform",1,"Fix duplicate symbol error due to gopsutil vendor","""Duplicate symbol error: https://github.com/mongodb/grip/blob/8b8accd7a3ec9b31a2d3eea610d5bf906bddfd11/vendor/github.com/shirou/gopsutil/disk/disk_darwin_cgo.go#L6-L25"""
"EVG-5822","Bug","legacy-ui",1,"Javascript error editing an existing subscription","""When editing a subscription in project settings    TypeError: """"$scope.extraData is undefined""""      closeDialog subscriptions.js:109  fn7Angular angular.js:14700:15"""
"EVG-8438","Bug","platform",2,"Download tests can race","""The failing test is DownloadMongoDBPassesWithValidOptions: https://github.com/mongodb/jasper/blob/00087cb560867641fb26ac672c93ef75181ac787/rest_test.go#L617-L629    Example failing test: https://evergreen.mongodb.com/task/jasper_race_detector_race_patch_00087cb560867641fb26ac672c93ef75181ac787_5c64365132f417543a336a3a_19_02_13_15_22_58/0    Logs: https://evergreen.mongodb.com/test_log/5c643805850e61491d386a2c#L1172    This seems to be an issue in Amboy, but will need investigation."""
"EVG-5916","Bug","app",2,"System failed tasks not automatically restarting","""(no logs)  Examples:  https://evergreen.mongodb.com/task/mms_int_INT_JAVA_MMS_f2617606cc8712a1b504c48d55da4362bb3d9f08_19_02_13_07_05_36/0  https://evergreen.mongodb.com/task/mms_e2e_local_E2E_Local_ATM_Import_Automation_f2617606cc8712a1b504c48d55da4362bb3d9f08_19_02_13_07_05_36/0  https://evergreen.mongodb.com/task/mms_qa_unit_js_UNIT_JS_LINT_0e2bb63df97f3cdb3d8a9266959641d0abd6628e_19_02_13_22_49_27/0  https://evergreen.mongodb.com/task/mms_int_INT_JAVA_MMS_dea07a34958161b894578690fab38fa955214d64_19_02_22_20_37_18/0"""
"EVG-5828","Improvement","app",1,"Regular ""task failure"" subscription even type should allow failure type filter","""Currently this filter is only available on """"a previously passing test fails""""."""
"EVG-5827","Bug","legacy-ui",1,"lobster button is cut off by window border","""It appears that the """"Clear Cache"""" button positioning is using the window size to position the center of the button instead of the right edge of the button, which causes half the button to be off the side of the browser window, no matter how you size it."""
"EVG-5826","Bug","app",1,"Task Failure Emails Contain Broken Log Links","""All the links to """"view logs"""" in our evergreen task failure emails start with {{http://test_log/...}}, which understandably doesn't resolve. Interestingly, the """"view task"""" link does correctly point to {{https://evergreen.mongodb.com/task/...}}. Example email attached."""
"EVG-5825","Bug","legacy-ui",2,"Can't restart tasks in ops manager kubernetes project","""On any given commit, e.g. [https://evergreen.mongodb.com/version/ops_manager_kubernetes_f8d64ec6838a36a3a25b1c9382d07ee0c15474b0], restarting tasks doesn't appear to work. The restart button does nothing when clicked aside from causing a console error of the form 'TypeError: """"x.Build.tasks is undefined""""'‚Äîscreenshot attached. Current config available on github:¬†[https://github.com/10gen/ops-manager-kubernetes/blob/f8d64ec6838a36a3a25b1c9382d07ee0c15474b0/.evergreen.yml]"""
"EVG-8493","Bug","platform",1,"Add mainline flag to Cedar model","""We should be able to distinguish a mainline build performance result and a path build performance result in the cedar database. In order to to do this we need to add a flag in the cedar performance result model and make sure that DSI is sending that information over (readily accessible via the `is_patch` expansion in DSI's runtime.yml).    ¬†    ¬†"""
"EVG-8415","Bug","platform",1,"Propagate rollup type in poplar","""Rollup type should be exported [here|https://github.com/evergreen-ci/poplar/blob/master/rpc/internal/cedar.ext.go#L49-L70]."""
"EVG-8389","Bug","platform",2,"Tests' created_at time and completed_at time ignored.","""DSI and poplar allow for passing in the created_at and completed_at time of a test, but cedar's data model does not store this information. This would probably be useful to store, I am assuming it would go [here|https://github.com/evergreen-ci/cedar/blob/master/model/perf.go#L174-L187]. We would also need to make sure the data is exported via rpc and propagated in poplar."""
"EVG-5835","Task","legacy-ui",1,"Error when attempting to add ""previously passing task fails"" subscription","""I believe that the re-notify period should default to a value, but it is not set on the front end. Perhaps we should just pre-populate this value?"""
"EVG-8405","Bug","platform",1,"Gimlet PPROF routes invalid","""The failing tests in cedar are caused by a bug in gimlet, I ran the service locally and got the following error messages:  {quote}{{julianedwards$ ../../build/cedar service --dbName grpc_test}}{{[cedar] 2019/02/15 00:07:10 [p=info]: configured local queue with 2 workers}}{{[cedar] 2019/02/15 00:07:10 [p=info]: creating new remote job queue with 2 workers}}{{[cedar] 2019/02/15 00:07:10 [p=info]: [db='grpc_test' message='configured a remote mongodb-backed queue' prefix='ceder.service' priority='true']}}{{[cedar] 2019/02/15 00:07:10 [p=info]: [message='starting background cron jobs' opts='\{true false false}' started='map[remote:false local:false]' state='not populated' stats='map[remote:running='0', completed='0', pending='0', blocked='0', total='0' local:running='0', completed='0', pending='0', blocked='0', total='0']']}}{{[cedar] 2019/02/15 00:07:10 [p=debug]: [id='ceder.service.Julians-MacBook-Pro-2.local.7073d386-a4f8-4287-8379-01dab202c941' name='amboy-stats-collector-2019-02-15.00-07-00' operation='put job' service='amboy.queue.mgo']}}{{[cedar] 2019/02/15 00:07:10 [p=debug]: [change='&\{0 0 0 test-root}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:07:10 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:07:10 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:07:10 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:07:10 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:07:11 [p=debug]: [change='&\{0 0 0 localhost}' coll='depot' db='certDepot' id='localhost' op='put']}}{{[cedar] 2019/02/15 00:07:11 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='localhost' op='put']}}{{[cedar] 2019/02/15 00:07:11 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='localhost' op='put']}}{{[cedar] 2019/02/15 00:07:11 [p=warning]: port is already set to 3000}}{{[cedar] 2019/02/15 00:07:11 [p=info]: [message='detected local rpc services' service='[]']}}{{[cedar] 2019/02/15 00:07:11 [p=debug]: running 2 workers}}{{[cedar] 2019/02/15 00:07:11 [p=debug]: started worker 1 of 2 waiting for jobs}}{{[cedar] 2019/02/15 00:07:11 [p=debug]: started worker 2 of 2 waiting for jobs}}{{[cedar] 2019/02/15 00:07:11 [p=info]: starting queue job server for remote queue}}{{[cedar] 2019/02/15 00:07:11 [p=warning]: -1 is not a valid version}}{{[cedar] 2019/02/15 00:07:11 [p=notice]: starting /rest on: :3000}}{{[cedar] 2019/02/15 00:07:11 [p=warning]: -1 is not a valid version}}{{[cedar] 2019/02/15 00:07:11 [p=warning]: -1 is not a valid version}}{{[cedar] 2019/02/15 00:07:11 [p=warning]: -1 is not a valid version}}{{[cedar] 2019/02/15 00:07:11 [p=warning]: -1 is not a valid version}}{{[cedar] 2019/02/15 00:07:11 [p=warning]: -1 is not a valid version}}{{[cedar] 2019/02/15 00:07:11 [p=warning]: -1 is not a valid version}}{{[cedar] 2019/02/15 00:07:11 [p=warning]: -1 is not a valid version}}{{[cedar] 2019/02/15 00:07:11 [p=warning]: -1 is not a valid version}}{{[cedar] 2019/02/15 00:07:11 [p=warning]: -1 is not a valid version}}{{[cedar] 2019/02/15 00:07:11 [p=emergency]: problem starting admin rest service: r='/debug/pprof/', v='-1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/heap', v='-1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/block', v='-1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/goroutine', v='-1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/mutex', v='-1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/threadcreate', v='-1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/cmdline', v='-1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/profile', v='-1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/symbol', v='-1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/trace', v='-1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{quote}  I went into the vendored gimlet code and set the version to 1 for all the pprof routes and it seemed to fix the version errors:  {quote}{{julianedwards$ ../../build/cedar service --dbName grpc_test}}{{[cedar] 2019/02/15 00:47:37 [p=info]: configured local queue with 2 workers}}{{[cedar] 2019/02/15 00:47:37 [p=info]: creating new remote job queue with 2 workers}}{{[cedar] 2019/02/15 00:47:37 [p=info]: [db='grpc_test' message='configured a remote mongodb-backed queue' prefix='ceder.service' priority='true']}}{{[cedar] 2019/02/15 00:47:37 [p=info]: [message='starting background cron jobs' opts='\{true false false}' started='map[remote:false local:false]' state='not populated' stats='map[remote:running='0', completed='0', pending='1', blocked='0', total='1' local:running='0', completed='0', pending='0', blocked='0', total='0']']}}{{[cedar] 2019/02/15 00:47:37 [p=debug]: [id='ceder.service.Julians-MacBook-Pro-2.local.b44151bd-3b40-451d-8933-3528d57cea5a' name='amboy-stats-collector-2019-02-15.00-47-00' operation='put job' service='amboy.queue.mgo']}}{{[cedar] 2019/02/15 00:47:37 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:47:37 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:47:37 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:47:37 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:47:37 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:47:37 [p=emergency]: problem setting up the certificate depot: certificate request has existed!}}{{julianedwards$ ../../build/cedar service --dbName grpc_test}}{{[cedar] 2019/02/15 00:48:02 [p=info]: configured local queue with 2 workers}}{{[cedar] 2019/02/15 00:48:02 [p=info]: creating new remote job queue with 2 workers}}{{[cedar] 2019/02/15 00:48:02 [p=info]: [db='grpc_test' message='configured a remote mongodb-backed queue' prefix='ceder.service' priority='true']}}{{[cedar] 2019/02/15 00:48:02 [p=info]: [message='starting background cron jobs' opts='\{true false false}' started='map[remote:false local:false]' state='not populated' stats='map[local:running='0', completed='0', pending='0', blocked='0', total='0' remote:running='0', completed='0', pending='2', blocked='0', total='2']']}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: [id='ceder.service.Julians-MacBook-Pro-2.local.8493997e-70e9-4b4e-a1fb-0b82d0c4cd26' name='amboy-stats-collector-2019-02-15.00-48-00' operation='put job' service='amboy.queue.mgo']}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: [change='&\{0 0 0 test-root}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='test-root' op='put']}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: [change='&\{0 0 0 localhost}' coll='depot' db='certDepot' id='localhost' op='put']}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='localhost' op='put']}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: [change='&\{1 0 1 <nil>}' coll='depot' db='certDepot' id='localhost' op='put']}}{{[cedar] 2019/02/15 00:48:02 [p=warning]: port is already set to 3000}}{{[cedar] 2019/02/15 00:48:02 [p=info]: [message='detected local rpc services' service='[]']}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: running 2 workers}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: started worker 1 of 2 waiting for jobs}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: started worker 2 of 2 waiting for jobs}}{{[cedar] 2019/02/15 00:48:02 [p=info]: starting queue job server for remote queue}}{{[cedar] 2019/02/15 00:48:02 [p=notice]: starting /rest on: :3000}}{{[cedar] 2019/02/15 00:48:02 [p=emergency]: problem starting admin rest service: r='/debug/pprof/', v='1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/heap', v='1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/block', v='1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/goroutine', v='1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/mutex', v='1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/threadcreate', v='1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/cmdline', v='1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/profile', v='1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/symbol', v='1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{r='/debug/pprof/trace', v='1', methods=[GET], defined=false, prefixOverride=false is not a valid route, skipping}}{{[cedar] 2019/02/15 00:48:02 [p=debug]: context canceled}}  {quote}"""
"EVG-8399","Bug","platform",1,"Fix context deadline exceeded in TestRunParallelRunsInParallel","""Failure: [https://evergreen.mongodb.com/task/jasper_windows_test_7661d4568700a16f93117bbeaf5f34fb6b056466_19_02_13_20_54_35]    Logs: [https://evergreen.mongodb.com/test_log/5c6485fee3c3312e624c0430#L153]    I suspect this is probably because Windows and Race Detector Linux are slower and need a higher timeout, but will investigate further.    Update: test still times out context occasionally on Ubuntu 16.04."""
"EVG-5839","Bug","app",1,"Merged PR blocks Commit Queue","""When a PR that has already been merged reaches the head of the queue the queue blocks.    It appears the Mergeable field returned from GitHub is nil for an already merged PR so the queue never processes is, assuming GitHub hasn't yet created the merge commit."""
"EVG-5838","Improvement","app",1,"Post status message that commit queue merge request has been received by Evergreen","""In the case of GitHub PR patches, there is no need for letting the user know that the patch has been received, because we create a patch immediately. However, in the case of the commit queue, the user has no feedback that the patch was received, because it is not created immediately. We should post a message to the user letting them know the commit queue has received their merge request."""
"EVG-5837","Improvement","legacy-ui",1,"Commit queue patch link should include full URL","""GitHub PR patches have the full URL. The commit queue should look like those."""
"EVG-5843","Bug","app",2,"Pagination of /rest/v2/builds/<build_id>/tasks endpoint returns duplicate tasks or omits them entirely","""There are 912 tasks (found by setting {{limit=1000000}}) for [this Evergreen build|https://evergreen.mongodb.com/build/mongodb_mongo_master_enterprise_rhel_62_64_bit_1d246814a058073f0c26981fff5fe67c16af3593_19_02_15_16_48_50] but  * pagination by 100 only returns 395 of them  * pagination by 10 only returns 208 of them  * pagination by 2 only returns 177 of them        I also manually inspected some of the {{limit=10}} pages and found that https://evergreen.mongodb.com/api/rest/v2/builds/mongodb_mongo_master_enterprise_rhel_62_64_bit_1d246814a058073f0c26981fff5fe67c16af3593_19_02_15_16_48_50/tasks?limit=10&start_at=mongodb_mongo_master_enterprise_rhel_62_64_bit_update_fuzzer_3_enterprise_rhel_62_64_bit_1d246814a058073f0c26981fff5fe67c16af3593_19_02_15_16_48_50 actually lists {{mongodb_mongo_master_enterprise_rhel_62_64_bit_update_fuzzer_gen_1d246814a058073f0c26981fff5fe67c16af3593_19_02_15_16_48_50}} first, which is a task that had already returned by a previous page."""
"EVG-5980","New Feature","perf-tools",2,"UI: It must be possible to mark / unmark task data as outliers","""The UI should allow revision / project/ variant/ task / task / test / thread level performance data to be marked or unmarked as an outlier.    It must be possible to mark / unmark results on:  # The task page  # The Performance BB page     It would be good to be able to mark / unmark results on:   # The Performance discovery page  """
"EVG-5913","New Feature","perf-tools",3,"UI: The Performance Baron page must list outliers","""A new outliers Tab needs to be added to the Performance Baron page.    This new page should list all:  # detected outliers  # suspicious outliers  # marks  #  mutes        """
"EVG-5912","New Feature","perf-tools",3,"UI: The Performance Discovery view should highlight outlier status","""The Performance discovery view should highlight all detected and marked outliers.    It should be possible to view suspicious outliers but this status should not be shown by default unless it is possible to also view a confidence figure.    The manner in which the GESD algorithm works generally ensures that a fixed percentage (currently ~10%) of the data will always be highlighted as suspicious.  Only suspicious points close to the last detected outlier should be actually reviewed."""
"EVG-5846","Bug","legacy-ui",2,"Task history not showing all commits","""Filing per slack discussion with [~brian.samek]: https://mongodb.slack.com/archives/C0V896UV8/p1550591752071500    {quote}  acm [10:55]   I don‚Äôt know what you call this part of the UI, but the history shown here on the left does not seem to be showing every commit: https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_71_ppc64le_compile_a285618a35742923e9e21fa2df4434406b121a4e_19_01_31_02_10_29    acm [10:59]   In my view of it for Jan 31st, it lists `c065d`, then `a2856`, then `d3e18`. However, it has skipped `9ac90` which happened between `a2856` and `d3e18`.  {quote}    """
"EVG-5845","Improvement","app",1,"Don't concatenate commit message and description","""It makes commits merged by the commit queue have unwieldy descriptions  https://evergreen.mongodb.com/version/mci_5a3e547273477f9718463cd406cc440865ae1b13"""
"EVG-5844","Bug","app",2,"Agent sends log after task ends","""For https://evergreen.mongodb.com/host/sir-me7r7vxk, we see the following order of operations.        There are many more examples in the linked BF. I believe these are triggered by deploys and are a bug in synchronizing the closing of the logger in the agent with getting the next task."""
"EVG-9208","Task","platform",1,"make it possible to bootstrap a certdepo from an empty config","""if everything's zero'd out then you can't start the app, because the filedepot will be the empty string and the cert depo options will be nil.     I think we need to have some omitempty to fix it, this might be an issue only for existing services that are adding SSL.     Relatedly, I'd like to make sure that the configuration in the database """"looks reasonable"""" (this probably means putting a lot of omit emptys and then cleaning up the database) because currently (particularly for the cert depot) we set a bunch of zero values in the database and then override them in memory, so you can't really see what things are set to."""
"EVG-8855","Task","platform",1,"ensure rest interface properly filters mainline tasks out","""I added a mainline flag to tasks to support easy filtering of patches, and I fixed tests until they passed, but I want to make sure that we have the correct semantics and capabilities for the rest interface """
"EVG-5848","Bug","legacy-ui",1,"Incorrect display task links","""Links in https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_ubuntu1804_ppc64le_display_unittests!_patch_1d246814a058073f0c26981fff5fe67c16af3593_5c6c8a030ae6063e49545641_19_02_19_22_58_25##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%25221d246814a058073f0c26981fff5fe67c16af3593%2522%257D%255D%257D are incorrect  compile_unittests points to https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_ubuntu1804_ppc64le_compile_unittests_patch_1d246814a058073f0c26981fff5fe67c16af3593_5c6c8a030ae6063e49545641_19_02_19_22_58_25_0/1 that returns not found.  Same for unittests link.    Link for the compile_unittests found on the page of the host running it was https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_ubuntu1804_ppc64le_compile_unittests_patch_1d246814a058073f0c26981fff5fe67c16af3593_5c6c8a030ae6063e49545641_19_02_19_22_58_25##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%25221d246814a058073f0c26981fff5fe67c16af3593%2522%257D%255D%257D    Also, parent unittests! task was showing """"Scheduled"""" and didn't switch to """"Started"""" till ~30 minutes after compile_unittests started."""
"EVG-5847","Improvement","legacy-ui",1,"For tasks >500 spots deep in their queue, display that on the task page","""Currently that spot is blank"""
"EVG-8927","Task","platform",1,"Make (*CreateOptions) Close consistent","""closers on CreateOptions were changed to return errors in MAKE-624. (*CreateOptions) Close should return an error to be consistent with other Close() functions."""
"EVG-8954","Task","platform",1,"Make general clean terminate signal trigger for Windows","""mongos expects exit code 0 in resmoke sharding tests, so we need another signal trigger that can be registered to handle the expectation of exit code 0 from sending SIGTERM in general."""
"EVG-5963","Bug","app",1,"evergreen validator command should return non-zero for errors",""""""
"EVG-5872","New Feature","app",0,"Dogfood with Evergreen","""Dogfood with Evergreen"""
"EVG-5871","New Feature","app",1,"Implement obtaining logs, background in host.create","""Implement obtaining logs, background in host.create"""
"EVG-5869","New Feature","app",1,"Add new params and validation to host.create","""Add new params and validation to host.create (probably already done, just check over it)"""
"EVG-5867","New Feature","app",2,"Support starting containers without agent in provisioning-create-host job ","""Support starting containers without agent in provisioning-create-host job. What this entails:   * Finding parent from host.create and from scheduler   * Incorporating docker options with scheduler   * Differentiating downloading/building image   * Handling URL or registry for images"""
"EVG-5865","New Feature","app",2,"Modify host.list route to list containers","""Modify host.list route to list containers"""
"EVG-5860","Task","legacy-ui",1,"Unable to scroll on history sidebar","""Example task https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_coverage_concurrency_sharded_causal_consistency_3_enterprise_rhel_62_64_bit_coverage_731e7a0cf8b427a0d6197ab7b114dcdfa31b46bd_19_02_16_20_30_12. This appears to be fine on the version page. I'm able to load the task page down once, but not past 2/13. This might be related to EVG-5846, thought curiously there I _can_ scroll."""
"EVG-5858","Improvement","app",1,"Commit queue shouldn't strip PR numbers from commit message","""like https://github.com/evergreen-ci/evergreen/commit/4907bd3e5f4d53ce2412e1af264ecfea7a856320"""
"EVG-5857","Bug","app",2,"Commit queue patch doesn't contain diff","""The diff shows as 0 lines."""
"EVG-5878","Bug","legacy-ui",2,"Aliases missing after project copy","""The aliases on the mongo-c-driver project went missing (though I'm adding them back manually), and I strongly suspect this happened after BUILD-7789.    BUILD-7789 should have copied from mongo-c-driver to mongo-c-driver-r1.14.0, so it seems odd that mongo-c-driver would have been modified at all."""
"EVG-5877","New Feature","app",2,"Expansion that tells whether a build is a Commit Queue Merge","""When doing a patch build, there is a """"is_patch"""" expansion that a projects configuration can use to customize configuration based on whether the build is a patch build or a mainline build. This would be really useful to have for Commit Queue Merge builds as well. I could picture a generate.tasks task that customized what is generated based on whether the build is a patch build, commit queue merge, or a mainline build."""
"EVG-5887","Bug","app",2,"Running generate.tasks command sometimes takes 20 minutes","""I noticed this when looking at the task timing page and filing EVG-5886.    https://evergreen.mongodb.com/task/mongodb_mongo_master_linux_64_repeated_execution_logical_session_cache_replication_default_refresh_jscore_passthrough_gen_069187003e2d083afea12ec401bcfc8d899ec6c6_19_02_18_18_08_57        https://evergreen.mongodb.com/task/mongodb_mongo_master_linux_64_repeated_execution_logical_session_cache_replication_default_refresh_jscore_passthrough_gen_e932fa2b7af46ddc924f9dcc295b46bdef3e45e2_19_02_25_14_44_10        https://evergreen.mongodb.com/task/mongodb_mongo_master_linux_64_repeated_execution_logical_session_cache_replication_default_refresh_jscore_passthrough_gen_d4cfa2877d4aa8dd3f3e5da91e38507c02d300eb_19_02_25_14_44_10    """
"EVG-5885","Bug","legacy-ui",1,"Handle ""unstarted"" status in display task UI","""https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_70_64_bit_display_dbtest!_24c08a88060a8f86e3c0af2022c853e845996eee_19_02_27_20_06_19"""
"EVG-5883","Improvement","legacy-ui",1,"Do not allow turning on PR testing if no PR definitions are provided","""It is currently possible to save a project config in a state where PR testing is enabled but no PR testing definitions are specified. This is confusing. Evergreen should prevent this and return an error to the user."""
"EVG-5882","Problem Ticket","app",2,"mongod running from previous task appears not to have been stopped by the Evergreen agent","""In https://evergreen.mongodb.com/task/mms_e2e_local_win_E2E_Local_Monitoring_Import_3006ac90d82a056ff2171f2736c51c154eab36f2_19_02_22_20_57_36/ it looks like there is a mongod running from the task that ran immediately before it that should have been killed by the agent when it cleaned up processes at the end of that task."""
"EVG-5890","Bug","app",1,"Notification endpoint does not send ","""The notifications endpoint returns 200 OK, but the sender does not seem to actually send the notification."""
"EVG-8334","Bug","platform",1,"CreateWithLogFile fails on RPC with blocking process","""Failing task: https://evergreen.mongodb.com/task/jasper_macos_test_f5c86bbf86862547b9928e8b2fc1884ffa89374a_19_02_26_21_22_32    Logs: https://evergreen.mongodb.com/test_log/5c78cdd69ccd4e72ab5878f7#L2749"""
"EVG-5901","Bug","app",2,"Generate tasks causes failure when yml includes task groups","""[https://evergreen.mongodb.com/task/mms_evg_foliage_stat_check_init_patch_fb8a11cd45a4087f4ebb29a78c364120c351c092_5c798e8356234379c45b3031_19_03_01_19_56_52]    ¬†    this task should add a single task per variant, but suddenly causes an issue with parsing the yml file with the following warning:    Command failed: 400 (Bad Request): project semantics is invalid: task group int-external-group has max number of hosts 5 greater than half the number of tasks 7  task INT_JAVA_EXTERNAL_GCP in task group int-external-group has a dependency on another task ([IVY_DEPENDENCIES]), which can cause task group tasks to be scheduled out of order  task INT_JAVA_EXTERNAL_AZURE_SNAPSHOT in task group int-external-group has a dependency on another task ([IVY_DEPENDENCIES]), which can cause task group tasks to be scheduled out of order  task INT_JAVA_EXTERNAL_COMMON in task group int-external-group has a dependency on another task ([IVY_DEPENDENCIES]), which can cause task group tasks to be scheduled out of order  task INT_JAVA_EXTERNAL_AWS in task group int-external-group has a dependency on another task ([IVY_DEPENDENCIES]), which can cause task group tasks to be scheduled out of order  task INT_JAVA_EXTERNAL_AWS_SNAPSHOT in task group int-external-group has a dependency on another task ([IVY_DEPENDENCIES]), which can cause task group tasks to be scheduled out of order  task INT_JAVA_EXTERNAL_AZURE in task group int-external-group has a dependency on another task ([IVY_DEPENDENCIES]), which can cause task group tasks to be scheduled out of order  task INT_JAVA_EXTERNAL_FREE in task group int-external-group has a dependency on another task ([IVY_DEPENDENCIES]), which can cause task group tasks to be scheduled out of order    ¬†"""
"EVG-5898","Bug","legacy-ui",2,"Lobster not initially loading all log lines","""When I open Lobster in Chrome (72.0.3626.119), all the log lines of a file are not initially loaded. When I start scrolling down it appears that more lines are added, and then I can scroll back up to see the previously loaded lines, but this is not the expected behavior. The scrollbar upon load should reflect the full length of the log file. [Example log|https://logkeeper.mongodb.org/lobster/build/c4b0548443ba9ca452c3ac7303557fb1/test/5c6f0bb3be07c4262d02bed6#bookmarks=0%2C1910]     Screencast showing the issue:   !2jX14GBJ5l.gif!    """
"EVG-5895","Task","app",2,"Move inserting parent hosts out of scheduler into new job","""Not convinced we're actually going to do this... look into it."""
"EVG-5893","Improvement","perf-tools",2,"Performance Baron list should have links on the test column","""For example the following image should link to [here|https://evergreen.mongodb.com/task/performance_linux_wt_standalone_agg_query_comparison_04882fa7f5210cfb14918ecddbbc5acbd88e86b6_19_02_21_01_49_10##%257B%2522hiddenGraphs%2522%253A%255B%2522Aggregation.IntNonIdFindOneProjectionCovered%2522%252C%2522Aggregation.UnindexedLargeInUnsortedNonMatching%2522%252C%2522Aggregation.UnindexedLargeInNonMatching%2522%252C%2522Aggregation.UnindexedVeryLargeInUnsortedMatching%2522%252C%2522Aggregation.UnindexedVeryLargeInSortedMatching%2522%252C%2522Aggregation.UnindexedLargeInUnsortedMatching%2522%252C%2522Aggregation.UnindexedLargeInMatching%2522%252C%2522Aggregation.StringUnindexedInPredWithSimpleCollation%2522%252C%2522Aggregation.StringUnindexedInPredWithNonSimpleCollation%2522%252C%2522Aggregation.TwoInts%2522%252C%2522Aggregation.RegexPrefixFindOne%2522%252C%2522Aggregation.IntIDRange%2522%252C%2522Aggregation.IntNonIdFindOne%2522%252C%2522Aggregation.IntIdFindOne%2522%252C%2522Aggregation.Empty%2522%252C%2522Aggregation.NoMatch%2522%252C%2522Aggregation.DistinctWithoutIndexAndQuery%2522%252C%2522Aggregation.DistinctWithoutIndex%2522%252C%2522Aggregation.DistinctWithIndexAndQuery%2522%252C%2522Aggregation.DistinctWithIndex%2522%252C%2522Aggregation.CountsIntIDRange%2522%252C%2522Aggregation.CountsFullCollection%2522%252C%2522Aggregation.IntNonIdFindProjectionCovered%2522%252C%2522Aggregation.FindProjection%2522%252C%2522Aggregation.FindWideDocProjection%2522%252C%2522Aggregation.FindProjectionThreeFieldsCovered%2522%252C%2522Aggregation.FindProjectionThreeFields%2522%252C%2522Aggregation.FindProjectionDottedField%2522%252C%2522Aggregation.FindProjectionDottedField.Indexed%2522%255D%257D]      !image-2019-03-01-13-44-16-480.png|width=90%!    In this case there is only a single change point, when there are multiple change points / task, it should show all change point tests and hide the rest."""
"EVG-5906","Improvement","app",1,"Passing an alias hides the CLI's message that project does not exist","""If you pass an alias to the evergreen CLI patch command with an invalid project, instead of reporting that the project does not exist, it reports that the alias does not exist. This is confusing for users, as it suggests that the problem is updating the list of aliases in the project config instead of fixing the CLI invocation.    """
"EVG-5905","Improvement","app",2,"generate.task taking a long time to complete in Patch Build","""I had a patch build and noticed that the generate.task command took around 8 minutes to complete. This is long enough that I was concerned something was wrong. I think it is worth exploring if there is something possible to do for patch build (I don't think this is as much of a problem on mainline builds).    Here is a link to the task I was watching: https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_sharding_gen_patch_7e771db35d742333eeb53fb790c4f152fab9ff71_5c7d8cd632f4177bea4c0086_19_03_04_20_39_15##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%25227e771db35d742333eeb53fb790c4f152fab9ff71%2522%257D%255D%257D"""
"EVG-5908","Task","app",2,"Want to be able to patch projects with the repotracker disabled","""Currently getting: Unexpected reply from server (401 Unauthorized): 400 (Bad Request): patching is disabled    ¬†    Even though the box to disable patching is not checked (although the repo tracker is disabled)"""
"EVG-8975","Task","platform",2,"load ftdc data to mongodb from files","""This is basically the same as the current operation that reads the files and turns them into bson, except that we'd insert those documents to a mongodb collection...     (probably using a bulk operation, using the new driver, etc.) """
"EVG-8731","New Feature","platform",2,"support multiple certificate authority in a chain","""so that we can have new/old and create new certificates with new (but still accept old) for a period to support live rotation of CA without needing to stop the world """
"EVG-8698","New Feature","platform",1,"Revendor gimlet into cedar","""There is new logic in gimlet in the ldap library that checks a TTL and reauthorizes the user if the TTL has expired. This is invisible to the user, but may be useful to automatically check if someone is no longer authorized in ldap.     https://github.com/evergreen-ci/gimlet/commit/e4d488310cb0e4e016efa9e5552a2d34861b8094#diff-0f5bcbd669b5eb1ac514214bbe7dabfaL66"""
"EVG-5917","Bug","app",0,"Fix error message returned from CLI from git diff",""""""
"EVG-5915","Task","app",2,"remove dependency on local SSH key ","""This is follow on work from EVG-3678, which we had to abandon because of the state of libcurl/git on the build hosts.     the current system requires that either: hosts have their own SSH key to clone projects *or* users specify a token in their project configs (using content, presumably from project expansions.)     The goal of this ticket is to make it possible for *no* hosts to have any SSH key installed by default, and evergreen to have a way of injecting tokens or ssh keys into the operations to support git.get_project operation on evergreen so that we don't have to put set up scripts on hosts...    I think this can build upon the work for EVG-3678, but probably needs to include some additional work including a flag in the distros to say """"fallback to ssh clones"""" and a way to inject an SSH key into these hosts on a per-task method?"""
"EVG-5914","Bug","app",2,"a generated task with dependancies - does not wait for them","""example:        [https://evergreen.mongodb.com/version/5c8001cbe3c3312c8717695d]    ¬†    the task named """"foliage"""" (which exists in all build variants) is generated by the evergreen foliage build variant.    ¬†    the task itself is defined in the yml file with:    depends_on:    ¬† - name: """"*""""  ¬† ¬† status: """"*""""    in the¬†Dependencies variant, the task is created and does depend on one of the other tasks in the variant, but not both. In the other - it depends on nothing."""
"EVG-8423","Bug","platform",1,"blockingProcess can hang after process is done","""If Info or Running, reach [the select block|https://github.com/mongodb/jasper/blob/2fa6f5db03bc4308977d099772d29b4612510e00/process_blocking.go#L222-L227] and the underlying process finishes, the operation may never be processed since reactor returns."""
"EVG-8387","Bug","platform",1,"CreateOptions is not safe for concurrent access","""Since CreateOptions can be passed around in ProcessInfo or in Respawn, it must either be cloned or locked."""
"EVG-5927","Improvement","app",1,"Parallelize event dispatch loop","""It currently takes us a couple minutes to run the event dispatch loop, and on 3/7/19 we were pinned at processing 1000 events per loop iteration for several hours, which means that we were behind in processing events. We should  # Parallelize the loop. https://github.com/evergreen-ci/evergreen/blob/02c7b0e2d9305c8afab331b730693665b02731d6/units/event_metajob.go#L157  # Add logging for the number of tasks remaining. Currently the query gets 1000 tasks. We should have an additional query for the total number of tasks remaining so that if we get behind we can measure how behind we are."""
"EVG-5925","Bug","app",2,"Apparent increase in system unresponsive tasks","""Task: https://evergreen.mongodb.com/task/mongodb_mongo_master_linux_64_debug_display_auth_patch_884ac2862eda54e15d99e4db253b822cb4a90f1d_5c815ec3d1fe071bd3d40a27_19_03_07_18_11_16/0##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522884ac2862eda54e15d99e4db253b822cb4a90f1d%2522%257D%255D%257D"""
"EVG-5922","Bug","app",1,"Commit queue not posting received status to GitHub","""When the commit queue receives a PR it immediately posts to GitHub a status """"added to queue""""¬†but GitHub is not displaying this status on the PR.¬†    The problem may be that the status is not being sent on the correct SHA."""
"EVG-5919","Bug","legacy-ui",2,"External task logs are missing new lines","""E.g., here https://evergreen.mongodb.com/task/mci_ubuntu1604_test_model_stats_660bb906e0814d573934d444d1744f4c95d20085_19_03_06_22_43_42/0. Screenshot is attached."""
"EVG-5946","Improvement","app",0,"Depending on all tasks across multiple variants should only depend on tasks actually present in those variants","""Consider a case where there are variants A, B, C, and tasks 1, 2, 3, 4, 5. Tasks are assigned to variants like this:    A: 1, 2   B: 3, 4   C: 5    There isn't an easy way for a new, generated task in a new variant to depend on all tasks in A and B. Depending on {{*}}¬†in A, B would mean depending on tasks 1, 2, 3, 4, 5, yet these tasks do not exist across all variants. There should be some way of depending on all tasks in a set of variants, not all tasks in a project."""
"EVG-5945","Bug","legacy-ui",2,"Show system-unresponsive errors as system failures for restart","""system-unresponsive errors don't get counted as system failures when trying to restart tasks (see [https://evergreen.mongodb.com/version/5c829611e3c33157bbcdeacb]¬†for an example). Can we change this so there's an easy way to restart all system-unresponsive tasks?"""
"EVG-5943","Improvement","app",2,"Define merge task","""call the git.get_project and merge.commit commands."""
"EVG-5942","Improvement","app",1,"merge.commit: Push commit to GitHub","""Push the commit created from the patch to GitHub."""
"EVG-5941","Improvement","app",1,"merge.commit: Commit a patch","""Create a commit from a patch and commit as a particular user (git am)."""
"EVG-5940","Improvement","app",2,"merge.commit: new command","""Add command for applying patches"""
"EVG-5939","Improvement","app",2,"Notification: Merge status","""Notify user when their merge fails/succeeds"""
"EVG-5938","Improvement","app",1,"Notification: Merge test begun","""Notify user when their item is pulled off the queue and a patch is created"""
"EVG-5937","Improvement","app",2,"Notification: configure method","""Add configuration option on the user level for commit queue milestones"""
"EVG-5936","Improvement","app",1,"Commit Queue: Dequeue when item is finished","""Refactor the commit queue sender to dequeue the item without talking to GitHub"""
"EVG-5935","Improvement","app",0,"Commit Queue: Add patch execution path","""Add configuration option for applying patches. Refactor code to treat patch items differently from GitHub PRs."""
"EVG-5934","Improvement","app",2,"Commit Queue: Generalize item","""Generalize commit queue item to store information about the patch and user. Alternatively, a new collection."""
"EVG-5932","Improvement","app",2,"CLI: set-module and finalize subcommands","""Add module to a merge. Finalize when the merge is finished"""
"EVG-5931","Improvement","app",1,"CLI: merge command","""Get project information from REST API. Post the patch to REST API. Print pertinent information from response to stdout. Option to not finalize"""
"EVG-5930","Improvement","app",0,"CLI: generate patch from feature branch onto project's tracked branch","""Get the patch to the project branch representing the changes of a feature branch (git format-patch) Assume local branch tracking project branch exists. Should also allow a diff with the user's working directory."""
"EVG-5929","Improvement","app",1,"CLI: add option to patch for only committed changes","""Let the user supply a ref. Default to the tip of the current branch"""
"EVG-5928","Bug","app",1,"fix setup_group_can_fail_task","""[~max.hirschhorn] has run a task with setup_group_can_fail_task set to true where the task still continues even though setup_group does fail ([see here|https://evergreen.mongodb.com/task/mongodb_mongo_master_embedded_sdk_iphoneos_embedded_sdk_build_cdriver_patch_5a7ccd5f073341f5f98e0ced39a80416869c181b_5c81b2591e2d171c9b21f724_19_03_08_00_08_28/0?type=T#]).¬†"""
"EVG-5952","Bug","app",1,"Blocking task group tasks does not remove them from the queue","""I suspect this is the source of the bug where tasks are blocked but still run."""
"EVG-5949","Bug","app",1,"""log when killProcs is cleaning up"" causing agent to panic","""Reverted¬†EVG-5882 because of¬†the panic‚Äìyou can see details of it [in Splunk|https://mongodb.splunkcloud.com/en-US/app/search/search?earliest=1552226400&latest=1552315205&q=search%20index%3Devergreen-staging%20metadata.level%3E%3D80&display.page.search.mode=smart&dispatch.sample_ratio=1&sid=1552316113.35205120]."""
"EVG-5947","Task","app",1,"panic in production",""""""
"EVG-5959","Build Failure","app",2,"Failure: test-repotracker on Race Detector [Evergreen Self-Tests @ d3b07a5c] (TestGetRevisionsSince)","""h2. [test-repotracker failed on Race Detector|https://evergreen.mongodb.com/task/mci_race_detector_test_repotracker_d3b07a5c8c1e3e8904fd6416c537ab199984abd3_19_03_11_14_45_04/0]  Host: [ec2-54-242-246-152.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-mnpi78ch]  Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/d3b07a5c8c1e3e8904fd6416c537ab199984abd3]: Revert """"EVG-5882: log when killProcs is cleaning up (#2082)"""" (#2092)    This reverts commit 206d9881caea648b26724ed9bc23ae9956787f5e. | 11 Mar 19 14:45 UTC  Evergreen Subscription: ; Evergreen Event:   *TestGetRevisionsSince* - [Logs|https://evergreen.mongodb.com/test_log/5c86883f1e2d177b5890be89] | [History|https://evergreen.mongodb.com/task_history/mci/mci_race_detector_test_repotracker_d3b07a5c8c1e3e8904fd6416c537ab199984abd3_19_03_11_14_45_04#TestGetRevisionsSince=fail]    """
"EVG-5958","Build Failure","app",2,"Failures: test-cloud on Race Detector [Evergreen Self-Tests @ d3b07a5c] (TestDockerIntegrationSuite, TestImagePull)","""h2. [test-cloud failed on Race Detector|https://evergreen.mongodb.com/task/mci_race_detector_test_cloud_d3b07a5c8c1e3e8904fd6416c537ab199984abd3_19_03_11_14_45_04/0]  Host: [ec2-52-91-84-43.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-j5bi4ayk]  Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/d3b07a5c8c1e3e8904fd6416c537ab199984abd3]: Revert """"EVG-5882: log when killProcs is cleaning up (#2082)"""" (#2092)    This reverts commit 206d9881caea648b26724ed9bc23ae9956787f5e. | 11 Mar 19 14:45 UTC  Evergreen Subscription: ; Evergreen Event:   *TestDockerIntegrationSuite* - [Logs|https://evergreen.mongodb.com/test_log/5c868bbe3066157ceeee73ac] | [History|https://evergreen.mongodb.com/task_history/mci/mci_race_detector_test_cloud_d3b07a5c8c1e3e8904fd6416c537ab199984abd3_19_03_11_14_45_04#TestDockerIntegrationSuite=fail]  *TestImagePull* - [Logs|https://evergreen.mongodb.com/test_log/5c868bbe3066157ceeee73ac] | [History|https://evergreen.mongodb.com/task_history/mci/mci_race_detector_test_cloud_d3b07a5c8c1e3e8904fd6416c537ab199984abd3_19_03_11_14_45_04#TestImagePull=fail]    """
"EVG-5957","Build Failure","app",2,"Failures: test-thirdparty on Windows [Evergreen Self-Tests @ 08d36fef] (TestGithubSuite, TestGetGithubAPIStatus)","""h2. [test-thirdparty failed on Windows|https://evergreen.mongodb.com/task/mci_windows_test_thirdparty_patch_08d36fef89a1e449b2cba11bee0a83fcb24041b1_5c86b2ae0ae606492613cf49_19_03_11_19_10_43/1]  Host: [ec2-3-81-56-237.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-wrir6iyh]  Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/08d36fef89a1e449b2cba11bee0a83fcb24041b1]: 'evergreen-ci/evergreen' pull request #2096 by tychoish: EVG-5927: event/notification dispatch speed improvements (https://github.com/evergreen-ci/evergreen/pull/2096) | 25 Feb 19 15:27 UTC  Evergreen Subscription: ; Evergreen Event:   *TestGithubSuite* - [Logs|https://evergreen.mongodb.com/test_log/5c86b80857e85a62412db174] | [History|https://evergreen.mongodb.com/task_history/mci/mci_windows_test_thirdparty_patch_08d36fef89a1e449b2cba11bee0a83fcb24041b1_5c86b2ae0ae606492613cf49_19_03_11_19_10_43#TestGithubSuite=fail]  *TestGetGithubAPIStatus* - [Logs|https://evergreen.mongodb.com/test_log/5c86b80857e85a62412db174] | [History|https://evergreen.mongodb.com/task_history/mci/mci_windows_test_thirdparty_patch_08d36fef89a1e449b2cba11bee0a83fcb24041b1_5c86b2ae0ae606492613cf49_19_03_11_19_10_43#TestGetGithubAPIStatus=fail]    """
"EVG-5955","Bug","legacy-ui",1,"Incorrect Task Color on Version Page","""For this [task|https://evergreen.mongodb.com/task/mci_lint_generate_lint_patch_92d046bf202bfbe1bc972b1bac6cb02f388d2a83_5c86d21ce3c3310aed4538e3_19_03_11_21_24_45/0]¬†the task Lint shows up as """"Started"""" on the versions page, but on the actual task page it shows as a system failure."""
"EVG-5960","Improvement","app",0,"Blocked tasks should not be blocked forever","""We believe that there should be either a timeout or a different status (especially when a dependency it relies on fails) the denotes that this task will not run."""
"EVG-5965","Bug","app",1,"Task status is mismatched between host and task page","""rollback_fuzzer_clean_shutdowns is yellow: https://evergreen.mongodb.com/version/5c8915e69ccd4e676237c494     But on the task page it's green: https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_rollback_fuzzer_clean_shutdowns_patch_884ac2862eda54e15d99e4db253b822cb4a90f1d_5c8915e69ccd4e676237c494_19_03_13_14_40_03##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522884ac2862eda54e15d99e4db253b822cb4a90f1d%2522%257D%255D%257D"""
"EVG-5967","Bug","app",2,"Host and task assignments are getting out of sync, leading to stranded tasks","""https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_rollback_fuzzer_66_enterprise_rhel_62_64_bit_majority_read_concern_off_patch_0cfc32589d5f6436e83d6d0d290849cf3798cbae_5c8b3db456234308b157173a_19_03_15_05_59_11/1  https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_rollback_fuzzer_87_enterprise_rhel_62_64_bit_majority_read_concern_off_patch_0cfc32589d5f6436e83d6d0d290849cf3798cbae_5c8b3db456234308b157173a_19_03_15_05_59_11/1  https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_rollback_fuzzer_95_enterprise_rhel_62_64_bit_majority_read_concern_off_patch_0cfc32589d5f6436e83d6d0d290849cf3798cbae_5c8b3db456234308b157173a_19_03_15_05_59_11/1  https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_rollback_fuzzer_clean_shutdowns_12_enterprise_rhel_62_64_bit_majority_read_concern_off_patch_0cfc32589d5f6436e83d6d0d290849cf3798cbae_5c8b3db456234308b157173a_19_03_15_05_59_11/3  https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_rollback_fuzzer_unclean_shutdowns_15_enterprise_rhel_62_64_bit_majority_read_concern_off_patch_0cfc32589d5f6436e83d6d0d290849cf3798cbae_5c8b3db456234308b157173a_19_03_15_05_59_11/3  """
"EVG-5966","Bug","perf-tools",3,"performance plugin raises a null pointer exception in max only mode","""Steps to reproduce:    # Go [here|https://evergreen.mongodb.com/task/sys_perf_linux_standalone_big_update_71bb13f2885036a229882ebb41ac4a0640ac2800_19_03_08_15_09_51##%257B%2522hiddenGraphs%2522%253A%255B%2522BigUpdate.Loader.IndividualBulkInsert_timer%2522%255D%257D]    # Select *'Max Only'* Thread level    so it does not render a graph        The issue is being caused as [maxLevelIdx|https://github.com/evergreen-ci/evergreen/blob/bf8b89727cc2690951e6d8ffd67c32f0dd286f88/public/static/app/perf/trend_chart.js#L98]  is invalid for the data in question."""
"EVG-5974","Bug","app",0,"CLI commands don't correctly accept conf file from options","""Some Evergreen CLI commands don't accept a custom {{--conf}} (e.g. {{evergreen --conf custom_evergreen.yml host create}} will still use default {{~/.evergreen.yml}})."""
"EVG-5973","Bug","app",2,"generate.tasks fails if no tasks are specified with a display_task","""When implementing the new task {{burn_in_tasks_gen}} there are cases where no new tasks will be generated. If a null JSON file is provided ({{}}), then {{generate.tasks}}   will successfully not do anything.    However the requirement is to have on the main build a display task name of {{burn_in_tests}}. This is accomplished inside the JSON file as follows (when there are tasks to generate):  {code}{      """"tasks"""": [          {              """"depends_on"""": [                  {                      """"name"""": """"compile""""                  }              ],               """"commands"""": [                  {                      """"func"""": """"do setup""""                  },                   {                      """"func"""": """"run tests"""",                       """"vars"""": {                          """"resmoke_args"""": """"--suites=causally_consistent_jscore_passthrough --storageEngine=wiredTiger --repeatTestsSecs=600.0 --repeatTestsMin=2 --repeatTestsMax=1000 jstests/core/all2.js""""                      }                  }              ],               """"name"""": """"burn_in:enterprise-rhel-62-64-bit_causally_consistent_jscore_passthrough_0""""          },           {              ],               """"display_tasks"""": [                  {                      """"name"""": """"burn_in_tests"""",                       """"execution_tasks"""": [                          """"burn_in_tests_gen"""",                           """"burn_in:enterprise-rhel-62-64-bit_causally_consistent_jscore_passthrough_0"""",                       ]                  }              ],               """"name"""": """"enterprise-rhel-62-64-bit""""          }      ]  }  {code}  When trying an similar construct with no tasks:  {code}{      """"buildvariants"""": [          {              """"display_tasks"""": [                  {                      """"name"""": """"burn_in_tests"""",                       """"execution_tasks"""": [                          """"burn_in_tests_gen""""                      ]                  }              ],               """"name"""": """"enterprise-rhel-62-64-bit""""          }      ]  }  {code}  The following error is generated:  """
"EVG-5972","Bug","app",2,"Evergreen host teardown failing due to agent deployment (impacting DSI teardown)","""DSI clusters are being stranded due to teardown failures. These failures are occuring because of the following error (s)                  Example host: https://evergreen.mongodb.com/host/i-09849449b7efe5fcf    This was previously reported here:   https://jira.mongodb.org/browse/EVG-2010"""
"EVG-5968","Improvement","app",1,"Add a tooltip explaining Slack username on notifications page","""Both Geoff Mishkin and I had the same question, so it seems there's room for clarification/simplification.  Easiest thing seems to be a tooltip with something like:    """"Your Slack username should be your default Google account (firstname.lastname) but you can confirm here: https://mongodb.slack.com/account/settings#username."""""""
"EVG-9248","Task","platform",2,"make pail bucket type configurable in cedar app","""I added a hack in the rpc service to populate the bucket type field as """"s3"""" but we should make this  configurable at some level, either by adding to the API so that clients could tell us where to save things (which seems like a lot of work with marginal benefits) or as some sort of global application configuration (e.g. a field in model.CedarConfig).     We should consider if/how we want to expose bucket type information to users via the api. """
"EVG-8881","Task","platform",1,"pail/cedar should have default s3 region","""need default s3 region, otherwise we get errors. """
"EVG-5977","Bug","app",2,"Task posted multiple times to mark end, causing agent to exit","""The agent in this task https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_compile_dbtest_7f620154e595d2c1e6c7af79fc62070ced3bb941_19_03_08_16_01_46/0 posted to /end and did not hear back within the timeout, so it posted again. The first of those requests ultimately succeeded, so the second one failed. This causes the agent to exit, which caused the next task to run on a different host. We should add logging to see how common this is, and if it happens regularly we should try to mitigate this problem."""
"EVG-5976","Bug","app",1,"Panic in prod in cloud provider",""""""
"EVG-5983","Bug","app",2,"Spot instance requests canceled but instance is running","""It looks like Evergreen is cancelling some spot instance requests but not correctly terminating the hosts, which means that the hosts may be left running.        For some of the cases I checked, the host was in fact running in Evergreen, but for one case I checked, the host did not exist. This case may have been created by the integration test:        Since it's a t2.micro, the cost leaked is probably very small, but we should still review all the """"request-canceled-and-instance-running"""" and make sure all are either running in Evergreen or part of the test, and we should fix the test to actually terminate the host, which at the moment will not be terminated until the reaper terminates it."""
"EVG-5982","Improvement","perf-tools",2,"Add ability to mute/unmute outliers from perf-bb page","""As a performance build baron  I would like to be able to mute/unmute outliers from the perf-bb page  So that I can control outliers from that page.    ----"""
"EVG-5993","Bug","app",2,"distro.planner_settings.version returns empty from API","""From the API    """
"EVG-5992","Bug","legacy-ui",2,"Some failed test tasks are not sorted before successful ones in Patch Status","""In [this patch build|https://evergreen.mongodb.com/version/5c92bfd0e3c33108e41aec63], some failed tests are not sorted correctly in¬†Patch Status on the right."""
"EVG-5991","Problem Ticket","legacy-ui",1,"500 response returned when trying to create build-break notification","""This is the subscription I'm trying to create:   !Screen Shot 2019-03-21 at 2.23.51 PM.png|thumbnail!       And this is the response I get when clicking save:    """
"EVG-5989","Task","app",1,"Re-add export to CLI","""The `Export()` command was removed in a¬†[previous refactor|https://github.com/evergreen-ci/evergreen/pull/481] and never hooked back into the. CLI. It seems like the command also will return """"Service Unavailable"""" if it's added to the CLI, so that will need to be fixed."""
"EVG-6000","Task","app",2,"Put Jasper CLI on host via SSH","""The CLI used to start Jasper RPC must be put on the host. This does not include actually starting the service."""
"EVG-5999","Task","legacy-ui",2,"Add settings to UI distro page","""Default should be SSH for now. Choosing any of the other options should not actually change the setup/deployment behavior until implemented."""
"EVG-5996","Task","app",0,"Implement monitor","""The runner needs to be able to curl the latest agent, spawn the new agent, and detect when it terminates."""
"EVG-5995","Improvement","perf-tools",3,"UI: The outliers list should always display high confidence outliers, but it should be possible to show /hide low confidence outliers.","""They list of points identified by GESD are divided into high confidence outliers and low confidence outliers.    We should always display the points that identified as high confidence outliers. It should be possible to to toggle the display of low confidence outliers.    The default is to not show low confidence outliers.    The current view allows you to toggle between 'high confidence' outliers and 'low confidence' outliers."""
"EVG-5994","Bug","legacy-ui",2,"Version time spent is not the sum of build time spent","""For example, [this patch|https://evergreen.mongodb.com/version/5c941023d6d80a4356130c66] reports its time spent as """"33h 58m 21s"""", while the """"! Enterprise RHEL 6.2"""" [variant|https://evergreen.mongodb.com/build/mongodb_mongo_master_enterprise_rhel_62_64_bit_patch_3789c3e4f1721e4ebd9cd076339a77d505051857_5c941023d6d80a4356130c66_19_03_21_22_29_39] reports time spent of """"78h 28m 16s"""". Is it possible we're summing the wall clock times of the display tasks, instead of their execution tasks? """
"EVG-8347","Bug","platform",1,"Fix Jasper benchmarks","""Some of the previous changes to basic and blocking process make the benchmarks error."""
"EVG-6010","Bug","legacy-ui",2,"First character of test names are cut off in Test Results pane","""Apparently my 13-inch MacBook Pro at 1280 pixels is in the sweet spot for this to happen. Making the window width larger than 1485 pixels appears to adjust the spacing so it isn't an issue."""
"EVG-6009","Improvement","app",0,"If ""pre"" fails, the task should fail","""Currently both """"pre"""" and """"post"""" do not affect task outcomes. """"pre"""" should always fail a task, because it is a sign that test setup has failed. We should make a failing step in """"pre"""" fail tasks.    Arguably """"post"""" should cause the task to fail too, to maintain the symmetry between """"pre"""" and """"post"""", and because users may wish to know that """"post"""" has failed. However, users currently rely on this behavior, e.g., """"post to process files that might not exist. No one should rely on """"pre""""'s behavior. This ticket therefore is only about """"pre"""".    We should make a failing step in """"pre"""" fail a task. We should also add an option for users to keep the current behavior of """"pre"""", but this option should be opt in, and the default behavior should be that a failing command in """"pre"""" causes the task to fail.    We should also send an email a few days before we deploy this change so that people are aware their tasks may fail if they are relying on the behavior of pre."""
"EVG-6006","Bug","legacy-ui",2,"Project page doesn't load correctly (if the project ID has a . in it?)","""https://evergreen.mongodb.com/projects##evergreen.js is displaying some settings from https://evergreen.mongodb.com/projects##evergreen.py"""
"EVG-6004","Task","app",1,"Set up Jasper service via user data","""Functionality should be the same as EVG-6167¬†but done with a user data script when cloud host is spawned rather than in the host setup job."""
"EVG-6003","Improvement","app",1,"task-end-stats and task-start-stats should use activated time for latency","""Currently task stats uses the task's creation time. This leads to bad data, because a task may have been originally unscheduled, and scheduled by batch time or by a person. The waiting period we care about is the difference between when someone or something has requested that the task enter the scheduler's queue and the time when the task has started or finished."""
"EVG-6002","New Feature","app",8,"Provide a way to tag specific build variants of a public project as private","""It is currently possible to download the enterprise binaries and debug symbols from evergreen without logging in. That is enough to probably fully recover the enterprise source code from the debug info.    Additionally, it would be inconvenient to add the mqlrun builder to the main server project since we don't want that to be made available outside the walls. But if we don't add it to the main server project, then we need to re-iterate all the server build instructions some other project.    I don't think we need a whole ACL system here, but something that lets us tag specific build variants as non-public within a public project would be useful.  """
"EVG-8523","Bug","platform",1,"attach artifacts after creating tests","""this will support top level test-id creation and have the artifacts in the bucket keep more uniform and easily traceble"""
"EVG-6017","Bug","app",2,"Host Allocator Job removing stale uninitialized hosts","""It's possible that [RemoveStaleInitializing|https://github.com/evergreen-ci/evergreen/blob/37dbd10f5aa1784aac6d5511e781e7e1b209ea6b/model/host/db.go#L528]¬†shouldn't be removing host intents that were spawned by a task, because tasks could end up hanging on them. Should investigate."""
"EVG-6016","Bug","app",2,"replace all bare exec.Command use with jasper","""there are a handful of direct command utilizations in the legacy command-line tools as well as in util/subtree and command/git_test.go  some of the adhoc/build tools in cmd use exec directly as well, which we might have to look at in a case by case basis. """
"EVG-6015","Bug","app",1,"add jasper rest interface to admin handler","""operations/service_web.go getAdminService """
"EVG-6022","Bug","legacy-ui",2,"Commits Out of Order in Task History","""When clicking through the commits in task history, commits with the same create_time are reordered.    For example,¬†when¬†[https://evergreen.mongodb.com/task/sys_perf_linux_1_node_replSet_snapshot_reads_e1f404b1f27b4ef2c38162fbee8b49853fc9f79d_19_03_21_13_20_16]¬†is selected the githash is out of order.¬†"""
"EVG-6019","Task","app",1,"set TEMPDIR vars during evergreen self-tests tests ","""something in build/ (or similar?) and clean it up regularly. """
"EVG-6018","Bug","app",2,"Errors cloning","""Happens occasionally, seems to be mostly on Windows.    """"Command failed: problem running fetch command: exit status 128"""""""
"EVG-9193","Task","platform",2,"rollup versions should append (by default) rather than replacing ","""not just """
"EVG-9133","Task","platform",2,"key and value names for rollups should be lower case in rollup value","""write a migration as well"""
"EVG-6024","Improvement","perf-tools",2,"UI: Add a control to allow rejected outlier data to be displayed","""It might be nice to be able to see performance data for rejected tasks.    ¬†    This could be implemented by adding a new toggle to the spanner."""
"EVG-6031","Problem Ticket","app",2,"Host terminated externally, but task was not restarted","""I see a number of server tasks which finished system-unresponsive because they were terminated externally, but they do not appear to have been restarted, e.g.,¬†[https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_windows_64_2k8_sharding_auth_02_enterprise_windows_64_2k8_83b3ca680119f3bfd991233ddf8b546b9c655949_19_04_01_18_24_00]."""
"EVG-6030","Bug","app",1,"/rest/v1/projects/mms/versions?limit=xx doesn't work","""the end point always returns the last 10 versions and with no pagination link"""
"EVG-9094","Task","platform",1,"Add interface to access all RPC functionality","""There are several implemented RPC functions that are not visible to RPC clients in external projects. Since this functionality is in an internal package, it has to be exported so that they can be called outside of the rpc package."""
"EVG-6036","Bug","legacy-ui",1,"Most randomly generated RDP passwords are invalid","""In the UI for a spawn host, the """"Set RDP Password"""" dialog has a helpful random password generation button. Unfortunately, most passwords it generates will not be accepted by the host. Rapidly clicking it and the clipboard button will produce quite a few errors.    ¬†    !image-2019-04-02-18-37-45-128.png!"""
"EVG-6033","Build Failure","app",1,"Failure: test-model-event on Ubuntu 16.04 [Evergreen Self-Tests @ c4163122] (TestRecentHostStatusFinder)","""h2. [test-model-event failed on Ubuntu 16.04|https://evergreen.mongodb.com/task/mci_ubuntu1604_test_model_event_c4163122ee17a01be3caa45f0e5b90aadd26400f_19_04_01_21_55_26/1]  Host: [ec2-100-26-182-205.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-25qr7t9g]  Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/c4163122ee17a01be3caa45f0e5b90aadd26400f]: EVG-5928: pass script to standard input for shell.exec (#2165) | 01 Apr 19 21:55 UTC  Evergreen Subscription: ; Evergreen Event:   *TestRecentHostStatusFinder* - [Logs|https://evergreen.mongodb.com/test_log/5ca3625461837d499d458465] | [History|https://evergreen.mongodb.com/task_history/mci/mci_ubuntu1604_test_model_event_c4163122ee17a01be3caa45f0e5b90aadd26400f_19_04_01_21_55_26#TestRecentHostStatusFinder=fail]    """
"EVG-6032","Bug","perf-tools",1,"UI: Outliers list doesn't apply any default sort order","""The outliers list doesn't have a default sort so the items in the list can vary and won't necessarily include the latest outliers.    In the absence of any other sorting, we should probably default to sort on the 'order' field."""
"EVG-9006","Task","platform",1,"Make it easier to set up RPC service/client","""The goal is to make it easier to create servers and clients without asking the user to vendor all gRPC dependencies to start an RPC service."""
"EVG-8548","New Feature","platform",1,"Investigate why gRPC logs not logging to splunk","""Aviation middleware, know it is working for TLS authentication.    Once solved, don't forget to add dashboard to splunk."""
"EVG-8350","Bug","platform",1,"SaveStatus not finding job in db","""Also add job type in unlock method logging and add owner to stats when saving  """
"EVG-6046","Bug","app",1,"Gimlet not parsing errors correctly","""Build was getting a very weird stack trace in their [host.create task¬†|https://evergreen.mongodb.com/task/buildhost_configuration_windows64_2012_test_patch_775968df14c9fcf78103c0a9637f9f55875060b5_5ca24daed6d80a45709a5d00_19_04_01_17_43_13/0]which was tracked down to an error [here|https://github.com/evergreen-ci/evergreen/blob/b497b857abe52ab77602fb68999314905f92939d/rest/route/host_create.go#L77]. The underlying error has since been fixed, but the problem with how the error was sent still exists."""
"EVG-6045","Problem Ticket","legacy-ui",1,"Task page correctly shows task as blocked, but on waterfall the box is yellow","""In this version https://evergreen.mongodb.com/version/5ca4c56de3c33122e77d2918, displays tasks' generators have run, but the execution tasks they created are blocked, because compile failed. The task pages correctly show that these tasks are blocked, but the waterfall displays them as yellow. This is confusing, because it suggests that these tasks are still doing work."""
"EVG-6043","Problem Ticket","app",2,"git clone command's output is not logged","""https://github.com/evergreen-ci/evergreen/commit/f84583c326528615c3623c09c0f21372f4b7f695 caused us to stop logging clone commands. We appear to log when we clone with a token, but not when we clone over SSH. As a result, the mongodb-mongo-master project does not log its clone command, which makes it difficult to verify that they are correct. For example, a recent problem reported by a user could be explained by Evergreen checking out the wrong enterprise module, but there is not a way to check that from the task logs. We should at a minimum make sure that we are logging the command before we execute it. If it is safe (i.e., not in the token case, where we pass a secret on the command line), we should also continue to log git's output."""
"EVG-6042","Problem Ticket","app",2,"Race between idle host job and task dispatching causes tasks to system failure","""It is possible for the following sequence of operations to occur  # There are no tasks in the queue for more than 4 minutes.  # A host idle job begins.  # A host gets a next task from the queue.  # The host idle job terminates this host.  # The task completes as a system failure.    I believe that is what happened in these tasks:  * https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_rollback_fuzzer_2_enterprise_rhel_62_64_bit_patch_d99db775dbf73e27bd20e402f26f068dc199203d_5ca4c8690305b9718a48e108_19_04_03_14_51_22  * https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_jsCore_txns_patch_d99db775dbf73e27bd20e402f26f068dc199203d_5ca4c8690305b9718a48e108_19_04_03_14_51_22  * https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_mongosTest_patch_d99db775dbf73e27bd20e402f26f068dc199203d_5ca4c8690305b9718a48e108_19_04_03_14_51_22  * https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_ese_patch_d99db775dbf73e27bd20e402f26f068dc199203d_5ca4c8690305b9718a48e108_19_04_03_14_51_22"""
"EVG-6041","Bug","app",2,"Display task not shown from a generate.tasks which has no additional execution_tasks","""    This config is used in generate.tasks. However the GUI task displayed is still {{burn_in_tests_gen}}"""
"EVG-6040","Bug","app",2,"latency_secs and total_wait_secs in splunk often appear wildly incorrect","""When tracking data on user experience, we're especially interested in latency_secs and total_wait_secs. However, these are often wrong in the logs. We should fix this. Here's an example:  """
"EVG-6039","Task","app",0,"Add functionality to recent_tasks endpoint to bucket and filter by project and distro","""We use the recent tasks endpoint to monitor production, particularly after deploys or if a user has reported a problem https://evergreen.mongodb.com/rest/v2/status/recent_tasks?minutes=1. It would be useful to have an option that would cause those statistics to be broken down by project and distro, and furthermore that filtering (https://evergreen.mongodb.com/rest/v2/status/recent_tasks?minutes=1&status=system-failed) could also be done by project and distro."""
"EVG-6038","Bug","legacy-ui",2,"Tests in Tests Results pane on task page aren't sorted by name","""Note that I'd also expect the failing tests to be sorted by name, then followed by the passing tests sorted by name when sorted by """"Status"""" rather than """"Name""""."""
"EVG-9187","Task","platform",1,"Provide Example S3 Bucket Policy for Expanded Metrics Data","""It'd be nice if the cedar metrics data were not publicly readable.    One way to do this could be to set the bucket policy for the bucket storing cedar metrics. This policy could then be included in poplar's wiki or readme for future projects to use.    I think something [like this|https://docs.aws.amazon.com/AmazonS3/latest/dev/example-walkthroughs-managing-access-example1.html#grant-permissions-to-user-in-your-account-step1] should work mostly out of the box after changing the Principal to Cedar's AWS user."""
"EVG-8395","Bug","platform",2,"move certdepot to it's own package","""we'll want to:    - come up with a better name, maybe,  - create a new repo in evergreen-ci - create evergreen projects and configs """
"EVG-8357","Bug","platform",2,"jasper cli for running commands","""basically we want to have an easy CLI for testing and other manual administration operations.  should have a """"start command in background"""" and also """"wait for a command to finish.""""  maybe we can hook it up to the in-memory sender so we can, effectively tail the log from jasper as the command runs. """
"EVG-8330","Bug","platform",2,"add retry middleware to grpc clients","""This middleware package can probably do what we need, but we might want to copy it and use our logger.  https://github.com/grpc-ecosystem/go-grpc-middleware/tree/master/retry """
"EVG-6058","Bug","legacy-ui",2,"Elapsed time displayed on mouse over is incorrect","""example mci task:  https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_sharding_patch_4b5ea6e22404c5ebb5208bd96fad69ba2fa0cdb8_5ca3d83f1e2d1766d247a422_19_04_02_21_46_56##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%25224b5ea6e22404c5ebb5208bd96fad69ba2fa0cdb8%2522%257D%255D%257D    example tests:  txn_two_phase_commit_failover.js: mouse over says 40 secs, but if you open the logs, it took roughly 10 minutes. The length of the bar appears to reflect the 10 mins elapsed time.  """
"EVG-6053","Bug","app",1,"evergreen should panic on start if it imports testutil pacakge","""this would have the effect of using a test config in production. """
"EVG-6051","Bug","app",2,"cleanup testutil package","""with the new environment configurations, a lot of the infrastructure in the testutil package can probably be deleted, particularly the code that gets the settings, which should just be accessed from the environment  """
"EVG-6050","Bug","app",2,"Slack Notification Shows Failed Patch Builds as Successful","""Slack notifications for failed patch builds are showing up green. It's possible the problem is limited to restarts.    Here is a patch from today where I got green Slack notifications for all but the first execution when the task never succeeded: https://evergreen.mongodb.com/version/5ca5355330661517d93becb9    Here's a patch from late March that did have correct Slack notifications: https://evergreen.mongodb.com/version/5c9140690305b9644a477fdb"""
"EVG-6049","Bug","app",2,"Patches to the enterprise module are applied to the wrong base on spawn hosts","""If you launch a spawn host with the artifacts from the patch test with changes to the enterprise module, the patch for the enterprise module gets applied to HEAD of the enterprise repo rather than the base commit specified in the patch."""
"EVG-6047","Task","legacy-ui",2,"Tasks marked system failed by cleanup jobs show up as yellow in the build","""ClearAndResetStrandedTask needs to also update the build cache"""
"EVG-6057","Bug","legacy-ui",1,"Seeing some variants missing in the UI for an ""ignored files"" build","""Build is: https://evergreen.mongodb.com/version/mongodb_mongo_v4.0_fc525e2d9b0e4bceff5c2201457e564362909765#/0  Missing variant from the UI (and API) is: enterprise-rhel-70-64-bit    Not in an """"ignored files"""" version but same result: https://evergreen.mongodb.com/version/mongodb_mongo_v4.0_9c58f99b8c66e045881c921fb8bef70d93efc5ca"""
"EVG-6056","Task","app",0,"Modify user data to put Curator on host","""User data passed to instances should have user data with a command to download Curator."""
"EVG-6055","Task","app",2,"Check for system manager by OS/distro","""System manager differs by OS (WIndows, MacOS, Linux) and distro (e.g. rhel, suse, amazon, ubuntu)."""
"EVG-6059","Bug","legacy-ui",2,"Previous execution task history disappears after restarting task","""I restarted this task in a patch build to see if its failures were intermittent:    https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_noPassthrough_patch_78a00318d39bc35c2091775e74bf0dde780d950f_5ca8ad8b3066156c387bc27d_19_04_06_13_45_48/    After I restarted it, switching the page to view a previous execution of the task no longer displays subtask outcomes. See attached video."""
"EVG-9047","Task","platform",0,"Change distribution remote location to be more general","""Instead of pushing based on task name, it should push by GOOS/GOARCH."""
"EVG-8661","New Feature","platform",1,"Add ability to bootstrap certdepot with existing mongo client","""And make sure operations/service.go uses existing client"""
"EVG-8439","Bug","platform",1,"Rollups calculation overflow","""Due to assuming time data is not cumulative """
"EVG-8407","Bug","platform",2,"Migrate existing cedar data to have prefix","""Try and add prefix field to existing data that does not have it (coordinate with TIG on prefix naming conventions)"""
"EVG-8380","Bug","platform",1,"Poplar not propagating bucket prefix to server.","""Also, Cedar has no bucket prefix field in the ArtifactInfo struct. Make sure to add this to the bucket creating with the ftdc rollups job."""
"EVG-6061","Build Failure","app",2,"Failures: test-agent on OSX [Evergreen Self-Tests @ 0e29aaa3] (TestStatusSuite, TestAgentFailsToStartTwice)","""h2. [test-agent failed on OSX|https://evergreen.mongodb.com/task/mci_osx_test_agent_0e29aaa37e0c68fbfe7f2921d8ff26b3d732f17b_19_04_08_13_41_20/0]  Host: [macos-1012-76.macstadium.build.10gen.cc|https://evergreen.mongodb.com/host/macos-1012-76.macstadium.build.10gen.cc]  Project: [Evergreen Self-Tests|https://evergreen.mongodb.com/waterfall/mci]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/0e29aaa37e0c68fbfe7f2921d8ff26b3d732f17b]: Revert """"EVG-6001: Change MongoDB Driver to go.mongodb.org/mongo-driver (#2164)""""    This reverts commit 8ca30bd10bcaeae9c1a67cae8d85d7624ecd0013. | 08 Apr 19 13:41 UTC  Evergreen Subscription: ; Evergreen Event:   *TestStatusSuite* - [Logs|https://evergreen.mongodb.com/test_log/5cab505f3066156c387d4ed1] | [History|https://evergreen.mongodb.com/task_history/mci/mci_osx_test_agent_0e29aaa37e0c68fbfe7f2921d8ff26b3d732f17b_19_04_08_13_41_20#TestStatusSuite=fail]  *TestAgentFailsToStartTwice* - [Logs|https://evergreen.mongodb.com/test_log/5cab505f3066156c387d4ed1] | [History|https://evergreen.mongodb.com/task_history/mci/mci_osx_test_agent_0e29aaa37e0c68fbfe7f2921d8ff26b3d732f17b_19_04_08_13_41_20#TestAgentFailsToStartTwice=fail]    """
"EVG-8373","Bug","platform",1,"Download jobs can occasionally hang","""Task failure: [https://evergreen.mongodb.com/task/jasper_windows_test_4e2ac48a5d2fcf1cfa97379ef35557e00c9df813_19_04_09_14_11_36]    ¬†    It seems like the job is not being properly terminated after the context cancels. It might also make sense to add some retry logic to download."""
"EVG-6070","Bug","app",1,"Change assignNextAvailableTask to use the distro settings instead of the embedded distro document","""Currently assignNextAvailableTask uses the embedded distro document, which means that we cannot simply flip a switch in the distro config in order to use the new task dispatching mechanism. We should change this to use a FindOne to get the distro."""
"EVG-6069","Bug","legacy-ui",1,"lobster filter default should be changed to ""and""","""Could we change the default of """"Filter Logic"""" to be """"And"""" instead of """"Or""""?  In particular, the current default is not only unhelpful, the state of the toggle isn't included in the URL, so I always have to tell people to manually change it after sharing a lobster URL that includes filters."""
"EVG-6065","Task","legacy-ui",1,"Add Jasper CLI URL and version to admin page","""This is necessary so the provisioning jobs know where to get the Jasper CLI."""
"EVG-6170","Task","app",8,"Turn on new task queue service in production","""After EVG-6070, I believe we can start experimenting with the new task queue service. We can turn it on on many distros in staging, and if that looks good, we could turn it on in production on a carefully selected and monitored distro as well."""
"EVG-6075","Task","legacy-ui",1,"Allow Jasper CLI options to be configurable","""The binary name (i.e. curator for now) should be configurable, as well as the RPC service port."""
"EVG-6074","Improvement","app",1,"Inefficient query in GetParent()","""GetParent() includes checking if the tag equals the parentId, which is currently unindexed."""
"EVG-6198","Bug","app",2,"Some tasks in a variant aren't getting scheduled","""See comment (5/20/19)"""
"EVG-6080","Task","app",1,"Create command to download files on host","""This will make getting Jasper CLI on the host easier."""
"EVG-9325","Task","platform",1,"Add dry-run flag to curator poplar report send","""Follow-up from discussion with [~sam.kleinman], to make it easier to run workloads locally without having to report data.¬†"""
"EVG-6083","Improvement","legacy-ui",2,"Accommodate long variant names on the Versions Pages","""On the Versions by Variant page, long variant names are obscured.  If the long variant names are unique at the _end_ of the name, it is very hard to tell them apart.  For example, we have several variants that start with """"E2E w local & daemon"""" but then end with different qualifiers.  I cant' tell them apart on this view.    https://evergreen.mongodb.com/version/mms_e2a69e9b305c444bb6beb0ddd3b96c4ce3d2b7e5##0    !longnames.png|width=95%!"""
"EVG-6082","Bug","app",2,"Evergreen patch command does not report the same errors as validate","""If a project config references a distro that does not exist, {{evergreen validate}} will fail. However, {{evergreen patch}} succeeds. It should not.          """
"EVG-6087","Bug","legacy-ui",1,"Performance trend graphs not matching data","""Currently, the performance trend graph data is only displaying one of the rollup metrics from cedar and it is displaying it with the wrong metric (the data in the example below is the latency, but is showing up as ops/sec).    [Evergreen UI|https://evergreen.mongodb.com/task/sys_perf_linux_3_node_replSet_insert_remove_ffa171bc887edb1a08c06033f64b05cbe676cd7d_19_04_11_00_11_48]    [Cedar data|https://cedar.mongodb.com/rest/v1/perf/task_id/sys_perf_linux_3_node_replSet_insert_remove_ffa171bc887edb1a08c06033f64b05cbe676cd7d_19_04_11_00_11_48]"""
"EVG-6085","Bug","app",2,"Fix TestOOMSucceeds on OSX","""Failure: https://evergreen.mongodb.com/task/evergreen_osx_test_agent_d625fb79f8a41540fcebfcc55fd23e504a6f3463_19_04_15_15_22_47"""
"EVG-9269","Task","platform",2,"parallelize upload of data","""we should do some amount of parallelism (probably not amboy, just threads/etc.) of uploading/converting/sending multiple tests. """
"EVG-6088","Build Failure","legacy-ui",1,"Task shows as 'incomplete' (yellow box) even though all sub-tasks have succeeded","""In [this patch|https://evergreen.mongodb.com/version/5cb53177e3c3314d8d1c3a30], as of the time of filing of the ticket, the `multi_shard_multi_stmt_txn_jscore_passthrough `  task is shown in yellow (ETA: unknown), but when I [click on the task|https://evergreen.mongodb.com/task/mongodb_mongo_master_linux_64_debug_display_multi_shard_multi_stmt_txn_jscore_passthrough_patch_49436ebda24b3a36bfc84624d9da09850ed6e255_5cb53177e3c3314d8d1c3a30_19_04_16_01_36_07##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%252249436ebda24b3a36bfc84624d9da09850ed6e255%2522%257D%255D%257D], all the sub-tasks have succeeded.    NOTE: I am done with this patch build in case you want to mess around with it while investigating."""
"EVG-6096","Bug","app",2,"Seeing 500 errors from task json history endpoint","""We have an ETL cron job that queries the task json history endpoint for various tasks. The job occasionally gets a 500 error when hitting the endpoint, which causes the cron job to have errors. The cron logs don't give us a whole lot of information about what causing the error.     The logs can be see in [splunk|https://mongodb.splunkcloud.com/en-US/app/search/search?s=%2FservicesNS%2Fnobody%2Fsearch%2Fsaved%2Fsearches%2FDSI%2520etl-evg-mongo%2520has%2520not%2520run%2520successfully&display.page.search.mode=smart&dispatch.sample_ratio=1&q=search%20index%3D%22server-dsi-prod%22%20sourcetype%3D%22kube%3Acontainer%3Aetl-evg-mongo%22&earliest=-7d&latest=now&display.prefs.events.offset=150&sid=1555534651.1656700]    One of the recent queries being made is https://evergreen.mongodb.com/api/2/task/sys_perf_linux_shard_lite_change_streams_throughput_d7fb557f6fc6d486fa7107a8f64342caf552eeb4_19_04_17_15_09_44/json/history/change_streams_throughput/perf    We are curious if there is a way to get more information on what is causing the 500."""
"EVG-6095","Improvement","legacy-ui|perf-tools",2,"Filter canaries in the perf discovery page","""Add configuration for easily filtering out canaries in the performance discovery page.   Currently users need to manually enter {{^((?!canary|fio|NetworkB).)\*$}} to filter tests."""
"EVG-6094","Improvement","app",0,"Extend the PATCH project route to project admins","""Currently the route¬†https://evergreen.mongodb.com/api/rest/v2/projects/\{project_id}    is limited to superusers, it would be nice if it could be extended to project admins.    Part of our release process involves using the project UI to update the """"branch_name"""" field, it would be a huge help to us if it was possible to do this through the API as a project admin."""
"EVG-6093","Problem Ticket","app",2,"PR patch changing the project file in an invalid way doesn't show error","""This happened when someone accidentally introduced a syntax error in the project file as part of a PR. The PR checks didn't start running from what I can tell, and no error was reflected on GitHub."""
"EVG-6092","Task","app",1,"collect data for idle ","""probably need to set a created time field in the host document so we can see how much of each host is up plus idle time"""
"EVG-9194","Task","platform",2,"Create Jasper CLI to interface with managers/processes","""The Jasper CLI gives remote Jasper managers an interface to communicate with local Jasper services without directly connecting to the Jasper service (i.e. the app server should be able to talk to hosts by invoking the Jasper CLI over SSH, which then forwards the request to the host's Jasper service and returns the result output).    ¬†    It should be able to accept arbitrary stdin input and write the result data to stdout. It should be able to send requests to either the REST service or RPC service."""
"EVG-8436","Bug","platform",2,"Poplar shouldn't make metric values arrays","""For example https://cedar.mongodb.com/rest/v1/perf/task_id/sys_perf_wtdevelop_3_node_replSet_industry_benchmarks_secondary_reads_patch_89c2fb00ae1745ac04f5ca80911f432b13c66f7e_5c706835a4cf4720d1a64efa_19_02_22_21_24_52"""
"EVG-6099","Bug","app",2,"Commit Queue completed, but didn't merge change","""I was trying out the commit queue for a project. It looks like the commit queue generated an evergreen version and all the tasks completed successfully, but the PR was not merged. It also didn't update github of the success of the version.     The PR is here: https://github.com/evergreen-ci/evergreen.py/pull/10 (i may manually merge this before you get a change to see it).  The evergreen version is here: https://evergreen.mongodb.com/version/5cb8e67f32f4173adf68c98b"""
"EVG-6097","Task","legacy-ui",1,"Distros should have different options to communicate with hosts","""The distro page should have options to configure how it executes commands on hosts. Each distro should have the option to:   * Use the existing behavior of directly running commands over SSH (legacy).   * Use SSH, but indirectly run commands through the host's Jasper service by invoking the Jasper CLI (new SSH).   * Use gRPC to make requests directly to the host's Jasper service."""
"EVG-8991","Task","platform",0,"RPC should allow in-memory logs to be checked","""This functionality already exists in the [REST service|https://github.com/mongodb/jasper/blob/4cd0d9cec44f3d9c77bb6dca1fbb26b728425310/rest_service.go#L533-L576]. The logs should be sent as a buffered stream."""
"EVG-8371","Bug","platform",0,"Processes don't correctly detect when underlying process has ended due to timeout","""Jasper has functionality to [run triggers when the process has terminated due to timeout|[https://github.com/mongodb/jasper/blob/c7473fd79ef6c88d90ed5a201d36096166062e35/triggers.go#L81-L99].] This currently will not execute, since the `Timeout` field is never set in the `ProcessInfo`. This functionality should be either removed or fixed in the process implementations to detect when the process has exited due to timeout.      Another potential issue with respawned processes is that respawned processes do not receive the default trigger since the¬† trigger is set [in the manager's `CreateProcess`|https://github.com/mongodb/jasper/blob/c7473fd79ef6c88d90ed5a201d36096166062e35/manager_basic.go#L58], but not in `Respawn`."""
"EVG-6100","Bug","app",3,"Getting Logs/Status for Docker Container doesn't work","""Responses are flaky, almost certainly due to one of the jobs removing containers before host.create has exited. Possible solution is for jobs to never remove containers spawned by tasks."""
"EVG-8832","Build Failure","platform",2,"Failures: race-pool on Race Detector [Amboy @ 7cd8d05e] (TestRunnerImplementations, SingleCloseImpactsStateAsExpected)","""h2. [race-pool failed on Race Detector|https://evergreen.mongodb.com/task/amboy_race_detector_race_pool_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21/0]  Host: [ec2-3-89-44-156.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-58f8422j]  Project: [Amboy|https://evergreen.mongodb.com/waterfall/amboy]  Commit: [diff|https://github.com/mongodb/amboy/commit/7cd8d05ee7bfe909746b70ed61043dc441890964]: MAKE-735: clewanup logging (#82) | 19 Apr 19 14:26 UTC  Evergreen Subscription: ; Evergreen Event:   *TestRunnerImplementations* - [Logs|https://evergreen.mongodb.com/test_log/5cb9df430ae606426d29a8c2] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_pool_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestRunnerImplementations=fail]  *SingleCloseImpactsStateAsExpected* - [Logs|https://evergreen.mongodb.com/test_log/5cb9df430ae606426d29a8c2] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_pool_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#SingleCloseImpactsStateAsExpected=fail]    """
"EVG-8823","Build Failure","platform",2,"Failures: race-queue on Race Detector [Amboy @ 7cd8d05e] (TestQueueGroupOperations, Mongo, Close, TestQueueGroupConstructorPruneSmokeTest, TestSmokeMongoDriverRemoteTwoQueueRunsJobsOnlyOnce, TestSmokeMongoDriverRemoteManyQueueRunsJobsOnlyOnce +11 more)","""h2. [race-queue failed on Race Detector|https://evergreen.mongodb.com/task/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21/0]  Host: [ec2-18-212-114-126.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-d73i5qbg]  Project: [Amboy|https://evergreen.mongodb.com/waterfall/amboy]  Commit: [diff|https://github.com/mongodb/amboy/commit/7cd8d05ee7bfe909746b70ed61043dc441890964]: MAKE-735: clewanup logging (#82) | 19 Apr 19 14:26 UTC  Evergreen Subscription: ; Evergreen Event:   *TestQueueGroupOperations* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestQueueGroupOperations=fail]  *Mongo* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#Mongo=fail]  *Close* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#Close=fail]  *TestQueueGroupConstructorPruneSmokeTest* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestQueueGroupConstructorPruneSmokeTest=fail]  *TestSmokeMongoDriverRemoteTwoQueueRunsJobsOnlyOnce* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestSmokeMongoDriverRemoteTwoQueueRunsJobsOnlyOnce=fail]  *TestSmokeMongoDriverRemoteManyQueueRunsJobsOnlyOnce* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestSmokeMongoDriverRemoteManyQueueRunsJobsOnlyOnce=fail]  *TestSQSFifoQueueRunsJobsOnlyOnce* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestSQSFifoQueueRunsJobsOnlyOnce=fail]  *TestMultipleSQSFifoQueueRunsJobsOnlyOnce* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestMultipleSQSFifoQueueRunsJobsOnlyOnce=fail]  *TestSmokeRemoteUnorderedWorkerPoolsWithMongoDriver* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestSmokeRemoteUnorderedWorkerPoolsWithMongoDriver=fail]  *TestSmokeMultipleMongoDriverRemoteUnorderedQueuesWithTheSameName* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestSmokeMultipleMongoDriverRemoteUnorderedQueuesWithTheSameName=fail]  *TestSmokeMultipleMongoBackedRemoteUnorderedQueuesWithTheSameName* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestSmokeMultipleMongoBackedRemoteUnorderedQueuesWithTheSameName=fail]  *TestSmokeMultipleMongoDriverRemoteOrderedQueuesWithTheSameName* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestSmokeMultipleMongoDriverRemoteOrderedQueuesWithTheSameName=fail]  *TestSmokeWaitUntilMongoDriver* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestSmokeWaitUntilMongoDriver=fail]  *TestQueueGroupOperations* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestQueueGroupOperations=fail]  *Mongo* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#Mongo=fail]  *PruneWithTTL* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#PruneWithTTL=fail]  *TestSmokeMgoDriverRemoteManyQueueRunsJobsOnlyOnce* - [Logs|https://evergreen.mongodb.com/test_log/5cb9dee13066150c55df1188] | [History|https://evergreen.mongodb.com/task_history/amboy/amboy_race_detector_race_queue_7cd8d05ee7bfe909746b70ed61043dc441890964_19_04_19_14_26_21#TestSmokeMgoDriverRemoteManyQueueRunsJobsOnlyOnce=fail]    """
"EVG-9223","Task","platform",1,"jasper shell job implementation","""write an amboy job, probably in the jasper code base (separate package?), that is easily constructable, with regards to jasper fundamentals, to execute shell jobs in the background."""
"EVG-9165","Task","platform",2,"cli tools for accessing/reporting data from amboy interfaces","""using the reporting client.    to be eventually combined with the jasper SSH tools for remote acess."""
"EVG-9130","Task","platform",1,"amboy queue groups in one collection ","""to cover    https://github.com/mongodb/amboy/pull/83"""
"EVG-6106","Bug","perf-tools",0,"Some small Cedar Evergreen UI glitches","""Three major things:  1. Change points should only be displayed for their corresponding metric.  2. Any test for which a metric is not calculated should have it's name visible on the page but the graph collapsed when that metric is selected.  3. The numeric representation of the metric data (under the date on the left-hand side of the trend graph, an example in the screenshot below) always shows ops/sec even when another metric is selected."""
"EVG-6103","Task","app",1,"Do not send email for teardown failures","""This is already sent to Splunk. I'd like to reuse this email address for only high-value, actionable alerts."""
"EVG-6113","Bug","app",1,"Pushing a commit with a function that has no commands panics the repotracker","""I pushed a commit that commented out not quite enough evergreen.yml, which meant that there was a function that did not have commands. This caused the repotracker to panic and prevented the version from being created.  """
"EVG-6110","Bug","perf-tools",2,"Hidden change points should not be plotted on the trend charts","""At the moment, hidden change points are rendered as a [blue line|https://github.com/evergreen-ci/evergreen/blob/e23c4ce4d586236b99e25371fa0350dda48b3bfb/public/static/app/perf/trend_chart.js#L652-L659] on the trend charts.    By default, Hidden change points should not be rendered on the trend charts. (The [visibilty|https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/visibility] attribute would make this relatively straight forward).   But it should be possible to toggle visibility of any hidden change points in some fashion.  (The [toolbar|https://github.com/evergreen-ci/evergreen/blob/d84c85743a6e0a545ab412f58571516022ea7aa4/service/templates/task_perf_data.html#L317-L338] is getting a bit full now, another approach needs to be investigated)."""
"EVG-6109","Build Failure","app",1,"Failure: js-test on Ubuntu 16.04 [Evergreen (release) @ a529aa11] (PerfPluginTests.PerfPluginTests_expanded_metrics_data_should_be_converted_correctly_to_legacy_data)",""" h2. [js-test failed on Ubuntu 16.04|https://evergreen.mongodb.com/task/mci_ubuntu1604_js_test_a529aa11f7780cd9b53b0d6fafd6616c663f2c2a_19_04_23_19_50_18/0] Host: [ec2-3-94-95-54.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-wq9r7gnk] Project: [Evergreen (release)|https://evergreen.mongodb.com/waterfall/mci] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/a529aa11f7780cd9b53b0d6fafd6616c663f2c2a]: EVG-6018 Fix up agent deploy lock (#2219)  (cherry picked from commit ba8215d289e8001a6fd72daf8c7ee7f8a4aff7b6) | 23 Apr 19 19:50 UTC Evergreen Subscription: ; Evergreen Event:  *PerfPluginTests.PerfPluginTests_expanded_metrics_data_should_be_converted_correctly_to_legacy_data* - [Logs|https://evergreen.mongodb.com/test_log/5cbf706061837d5a4e791184] | [History|https://evergreen.mongodb.com/task_history/mci/mci_ubuntu1604_js_test_a529aa11f7780cd9b53b0d6fafd6616c663f2c2a_19_04_23_19_50_18#PerfPluginTests.PerfPluginTests_expanded_metrics_data_should_be_converted_correctly_to_legacy_data=fail]  """
"EVG-6108","Improvement","perf-tools",3,"Add a new 'Rejected Outliers' tab to support white listing.","""As a Performance BB / Perf Engineer  When I find a task that has been setup failed / rejected  And I know that this is a permanent / persistent change  Then I can whitelist a task from the build baron page (new 'Rejected Outliers' tab)  So that these results are not rejected and subsequent task runs will not be rejected.  ----    AC  The rejected status of the latest performance result will be cleared  # The test results should be visible without having to toggle the 'show rejected' data radio button.  # The status on the task page should be updated to show that this task is whitelisted. *We need to investigate if the status of a task can be changed in evergreen without rerunning a task as this would allow both the task and waterfall pages to update without the  need to rerun the task.*  Any subsequent run of this task will not be rejected.  """
"EVG-6116","Improvement","app",1,"Add documentation for ""Commit Queue"" on projects page","""I don't fully appreciate what the feature is about."""
"EVG-6114","Improvement","app",2,"move attach xunit and gotest commands from usinsg filepath.Glob to gitignore-style globbing","""These commands should use util.BuildFileList so that they support gitignore-style globbing instead of the more limited set of globbing from filepath.Glob."""
"EVG-6122","Bug","legacy-ui",2,"Sort option does nothing for Tasks pane","""[Consider this page|https://evergreen.mongodb.com/task/mongodb_mongo_master_linux_64_debug_unittests_patch_36cccd4d5f3a1bbae2a4c04841204152e641514c_5cc2016732f417216b1a16c0_19_04_25_18_51_10/0#/sort=Status].    Attempt to change sort to """"Name"""" (or any other value). Notice how it does nothing. Screenshot here."""
"EVG-6123","New Feature","app",2,"evergreen list should able to list keys","""The evergreen host create command requires a --key flag which can be a key name. I currently have no way to list my saved keys except for using the spawn host UI which defeats the purpose of having the CLI command.    There should be a flag for evergreen list to get these keys: {{evergreen list --keys}} or --key-names or whatever you feel is appropriate."""
"EVG-6129","Bug","app",1,"Panics in production","""On Sunday April 28th, received [several panics|https://mongodb.slack.com/archives/C866SR2LR/p1556465068000400]¬†about """"invalid input to ObjectIdHex: """"evergreen_bcc363df2650d570ffdc3849e593217a69280fd0"""" from¬†path   /api/rest/v2/patches/evergreen_bcc363df2650d570ffdc3849e593217a69280fd0.    """
"EVG-6126","Incident","app",1,"Purple due to timed out generate tasks","""Between 11am and 12pm EST there was a large amount of purple (e.g.,¬†[https://evergreen.mongodb.com/version/mongodb_mongo_v4.0_6a71c575a907af7af297f94401aea727ab28bd43]) due to agents timing out the generate.tasks command prior to the task finishing. While this should ultimately be resolved by using a queue group, in the meantime, we should increase the size of the pool to handle the current load."""
"EVG-6125","Bug","app",2,"Host running task group was terminated for being idle, causing later task in group to fail","""[Running a patch build|https://evergreen.mongodb.com/version/5cc4a89bc9ec442cd74095b5] off commit b6cc1fb89f8fbf92c66ef6274a1de1ad310b2fb1, with small changes only in .h and .cpp files. The tasks dbtest! and unittests! fail. The dbtest! failure logs:    And unittests! logs:  """
"EVG-6124","Bug","legacy-ui",2,"Restarting a variant produces ""Error restarting build: undefined""","""Attempting to restart all tasks in a variant in a patch build, here:    ¬†    [https://evergreen.mongodb.com/build/mongodb_mongo_master_enterprise_rhel_62_64_bit_patch_b6cc1fb89f8fbf92c66ef6274a1de1ad310b2fb1_5cc4a89bc9ec442cd74095b5_19_04_27_19_08_11]    ¬†    Produces this error:    ¬†    !image-2019-04-29-13-41-39-116.png!"""
"EVG-6132","Improvement","perf-tools",0,"Delete Trend Table tab from perf plugin","""During discussion in the project review for Expanded Metrics, no one said they used this view. We should delete it."""
"EVG-6130","Task","legacy-ui",0,"make remote-queue-group settings configurable in the admin ui/settings","""thinking mostly about:     DefaultWorkers, BackgroundCreateFrequency, and TTL"""
"EVG-8503","Bug","platform",1,"Command environment not being set in remote command","""[https://github.com/evergreen-ci/evergreen/blob/c2a86f466be7bb85d428737a606ae5aef6a0c0b9/units/provisioning_agent_deploy.go#L366]    ¬†    The semantics of a remote command should be that the environment variables are set on the remote command being executed, not the local SSH command."""
"EVG-6134","Bug","app",1,"Only 1 parent came up for a large number of container tasks","""There were many container tasks in the queue, but only a single parent came up. There may be a bug with scheduling parents."""
"EVG-9234","Task","platform",2,"the started at time for an ftdc chunk should be the first point in the chunk","""I'm going to put up a patch for, what I think is the fix, given that I'm going to be out, it might make sense for you to run with this.     also maybe write a one-off cli to migrate existing data just both for testing. """
"EVG-8808","New Feature","platform",2,"gRPC logger with grip","""implement this [interface|https://godoc.org/google.golang.org/grpc/grpclog#LoggerV2] and create a wrapper in aviation """
"EVG-8800","New Feature","platform",1,"Aviation logging should specify error ","""Currently, aviation logging will indicate whether an error has occurred for a given request but not what the error actually was. We should add this information to the logging.    Don't forget to revendor aviation in cedar!"""
"EVG-8758","New Feature","platform",1,"Get last N perf results by task name sorted by version order","""For Evergreen's perf trend graphs, we need to get the last 100 results sorted by commit. Since we do not store the commit in cedar, we can use the version order field for sorting."""
"EVG-8379","Bug","platform",2,"Failed generate.tasks jobs do not log, but successful ones do","""‚Äúgenerate-tasks-mongodb_mongo_master_enterprise_rhel_62_64_bit_sharding_auth_gen_patch_c1e9a0774ce6e01ea55729cade50c1586cb6602d_5cca094057e85a55aee42c44_19_05_01_21_02_00‚Äù does not appear in the Splunk logs, but¬†‚Äúgenerate-tasks-mongodb_mongo_master_enterprise_rhel_62_64_bit_sharding_auth_gen_patch_2bb9313de4c53d31051e30af49a1ead10535e5d2_5ccb247832f4173bac87f5cc_19_05_02_17_10_35‚Äù dos."""
"EVG-8365","Bug","platform",1,"Command does not correctly obey settings in OutputOptions","""[This logic|https://github.com/mongodb/jasper/blob/c7473fd79ef6c88d90ed5a201d36096166062e35/command.go#L472-L485] is not strictly correct in `Command` if, for example, output is redirected to error or output is suppressed."""
"EVG-6142","Improvement","app",2,"Evergreen CLI patch command should not submit uncommitted changes by default","""*Motivation*: The Evergreen CLI merge queue command submits only committed changes to Evergreen's merge queue, since we want to reduce the risk of a developer submitting changes to the merge queue that they don't actually wish to commit.    Evergreen GitHub pull request testing has a similar interface. To be included in a pull request, the code must be committed locally.    Evergreen's patch command differs. It includes changes to files tracked by git that have changed in the working directory but have not yet been committed. This has been confusing for users in the past (e.g., EVG-782). It also does not match the merge queue command, which will mean that users of the merge queue via the CLI might submit code reviews that differ from what they ship to the merge queue.    *Solution*: Evergreen's patch command currently supports submitting only committed changes by passing the {{--ref}} flag. This ticket will make that the default.    Many teams outside the server use pull request testing and will therefore be unaffected. However, some teams may rely on the current behavior and may be surprised by the change. To address this, we will   * Warn the user when they are submitting a patch if there uncommitted changes in their working directory.   * Send an email notifying users that we are making this change.   * Add an option to the {{patch}} command that preserves the old behavior.   * Add an option to the .evergreen.yml that will cause the old behavior to be the default    The feature is documented in the Evergreen Wiki:¬†[https://github.com/evergreen-ci/evergreen/wiki/Using-the-Command-Line-Tool#working-tree-changes]"""
"EVG-6141","Bug","app",2,"set-module not picking up non-committed changes","""evergreen set-module is currently only picking up committed changes for me.¬†"""
"EVG-6139","Build Failure","app",2,"Failure: test-repotracker on Ubuntu 16.04 [Evergreen (develop) @ ca8baf4b] (TestFetchRevisions)","""h2. [test-repotracker failed on Ubuntu 16.04|https://evergreen.mongodb.com/task/evergreen_ubuntu1604_test_repotracker_ca8baf4b0ed06ece5e247f6726eb34cfea08fb70_19_05_02_13_50_37/0]  Host: [ec2-34-239-177-19.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-mn6g5fzj]  Project: [Evergreen (develop)|https://evergreen.mongodb.com/waterfall/evergreen]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/ca8baf4b0ed06ece5e247f6726eb34cfea08fb70]: Revert """"EVG-6108 Add / Remove rejected outliers from whitelist. (#2251)""""    This reverts commit f0e7a0ef51cee7b09e00a91dd2fb8396b49186c1. | 02 May 19 13:50 UTC  Evergreen Subscription: ; Evergreen Event:   *TestFetchRevisions* - [Logs|https://evergreen.mongodb.com/test_log/5ccaf6969ccd4e257734555c] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_ubuntu1604_test_repotracker_ca8baf4b0ed06ece5e247f6726eb34cfea08fb70_19_05_02_13_50_37#TestFetchRevisions=fail]    """
"EVG-6148","Bug","app",2,"git.get_project checked out module revision other than what was specified in manifest","""https://mongodb.slack.com/archives/C0V896UV8/p1556905336101400?thread_ts=1556885576.098500&cid=C0V896UV8"""
"EVG-6147","Bug","legacy-ui",2,"Can't restart failed tasks","""I can't restart failed tasks in my patch build: https://evergreen.mongodb.com/version/5ccb1424e3c33114e2b1c65e"""
"EVG-9080","Task","platform",2,"Use new-style s3 URLs","""Amazon is no longer going to support the URL format we use when we link to artifacts ([https://forums.aws.amazon.com/ann.jspa?annID=6776]):    We should make sure that anywhere we use this format we switch to the new format. We should audit evergreen, curator, and the release tools. It is likely the case that pail is fine, since it uses the sdk, but we should double-check it as well."""
"EVG-6150","Bug","app",1,"Persist project yaml as subdocument of version","""Currently we store the project yaml as a configuration string. This slows down generate.tasks substantially on the full server yaml, taking about 10 seconds per generator. Having to only parse the yaml once and saving it as a subdocument could speed this up a lot."""
"EVG-6149","Bug","app",2,"Patch time reported to GitHub status was incorrect","""[https://github.com/evergreen-ci/evergreen/pull/2272]¬†reported that lint took¬†-2562047h47m16.854775808s."""
"EVG-9146","Task","platform",0,"Put service/client Jasper CLI command in Curator CLI","""This is to enable the app server to able to SSH into a host, run the CLI, and interact with the host's running Jasper service.    ¬†    As part of this, the separate Curator/Jasper CLI functionality should be consolidated into a single repo for modularity."""
"EVG-8384","Bug","platform",1,"95th percentile converted to 99th percentile","""[here|https://github.com/evergreen-ci/cedar/blob/master/rpc/internal/perf.ext.go#L51-L52]"""
"EVG-6154","Bug","app",1,"GitHub PR testing skipped a commit","""On this PR:¬†[https://github.com/evergreen-ci/evergreen/pull/2275]  Evergreen did not test this commit:¬†e7690a987639d131cc795c368ab3a1508de61571  Short of submitting a no-op commit, there is no way to get Evergreen to retry.    Also, Evergreen provides no feedback to the user so there's no way to know what to fix to get the patch to run."""
"EVG-6152","Bug","app",2,"Investigate short-lived spike in ""task does not exist"" errors in production","""*Time range of elevated error count*    [https://mongodb.splunkcloud.com/en-US/app/search/search?display.page.search.mode=fast&dispatch.sample_ratio=1&q=search%20index%3Devergreen%20metadata.level%20%3E%3D%2070%20NOT%20%22no%20entry%20found%20for%20host%22%20%22task%20does%20not%20exist%22&earliest=1557254481&latest=1557255381&display.page.search.tab=events&sid=1557256476.7644525]    *Example error signature*    *Origin of error*  """
"EVG-8454","Bug","platform",1,"Use s3 to get testing files for ftdc","""Use updated ftdc files"""
"EVG-6163","Problem Ticket","legacy-ui|perf-tools",2,"Performance graphs not displaying for Java driver","""I was looking at the performance graphs in Evergreen for the Java driver with [~david.daly] and we noticed that they are not displaying:    https://evergreen.mongodb.com/task/mongo_java_driver_perf__version~latest_os~linux_topology~standalone_auth~noauth_ssl~nossl_jdk~jdk9_perf_3c19b93b111dd315a2ee2892bad4fa213ac4ea39_19_05_03_12_56_32.    He suggested that I open a problem ticket to investigate."""
"EVG-6160","New Feature","app",1,"Log the output of what revision modules are cloned","""In BF-12741, it seems like the wrong version of the enterprise module was being used. However, since there is no indication of what version of the enterprise module was checked out, this is difficult to debug. It would be nice if evergreen logged what revisions of modules were being checked out. EVG-6043 added a log message for the project, but it doesn't look like the modules are being logged."""
"EVG-6159","Bug","legacy-ui",2,"Unable to restart system-failed tasks in a version","""Restarting system-failed tasks from the version level does not appear to work, e.g., from this version https://evergreen.mongodb.com/version/mongodb_mongo_master_50ad28ae365ad63a83508d708cf2fc0b6f7fa161#/0."""
"EVG-8398","Bug","platform",0,"Fix race detector deadlock on self-clearing manager","""Logs: [https://evergreen.mongodb.com/task/jasper_race_detector_race_4cd0d9cec44f3d9c77bb6dca1fbb26b728425310_19_05_06_20_44_40]    ¬†    One possible error is that self-clearing manager is no longer thread-safe."""
"EVG-6169","Bug","app",2,"--alias Broken On patch-file","""In the evergreen cli with the patch command, I can specify a task alias via the --alias or -a flag. When trying to use the patch-file command, this flag seems to be ignored and no tasks are selected in the resulting patch."""
"EVG-6167","Task","app",1,"Set up host Jasper service over SSH","""If bootstrapping the host over SSH (non-legacy), it should start the Jasper service using the Curator CLI functionality and ensure that it always runs on restart."""
"EVG-6166","Bug","app",2,"s3.put fails on Windows if directory contains long paths","""This happens even if nothing within the/short/prefix/* is a long path.    Command failed: error processing filter the/short/prefix/*: Error received by walkFunc for path \some\other\prefix\the\long\path: GetFileAttributesEx \some\other\prefix\the\long\path: The system cannot find the path specified"""
"EVG-6165","Task","app",1,"Add high-level overview to commit queue documentation","""The documentation would benefit from an even higher level view of what commit queue is trying to achieve - i.e. diagram style"""
"EVG-6164","Task","app",1,"Add Documentation for CLI Commit Queue","""Add a section about the server commit queue to the Wiki here:    [https://github.com/evergreen-ci/evergreen/wiki/Commit-Queue]    ¬†"""
"EVG-8511","Bug","platform",0,"curator ftdc should use 64bit ints for all integer fields","""ftdc should use 64 bit ints in more places.    Here's the """"curator ftdc export csv"""" output for rows 16 and 17 of [this metric file|https://s3.amazonaws.com/genny-metrics/sys_perf_linux_1_node_replSet_big_update_3b00dc385a99b576cee4d0f58d8a80e296b4b09c_19_05_08_15_18_47_0/Loader-IndividualBulkInsert]. Note the numbers for """"total"""" in the second to last column:        Here's the BSON/JSON output for the same rows; """"total"""" starts overflowing 2^32 on line 17 (and continues to overflow on subsequent lines):    """
"EVG-8502","Bug","platform",1,"We should not default empty artifact types to s3 ","""Going to remove these [lines|https://github.com/evergreen-ci/cedar/blob/master/rpc/internal/service.go#L247-L249] and propagate s3 type from poplar."""
"EVG-6175","Improvement","app",1,"Update Documentation for Spawn Containers","""Update host.create and host.list documentation for docker."""
"EVG-6173","Bug","app",2,"Incorrect max_containers ","""For ubuntu1604-container in prod, we have that max_containers is 8, whereas archlinux-parent sets it to 10. (Interestingly, max_containers is correctly set to 10 in prod.) This is not merely a display issue, as the parents on prod are only being assigned 8 containers."""
"EVG-6171","Bug","app",2,"Inconsistent behavior when specifying a ""requires"" field at both a task and task group level","""https://evergreen.mongodb.com/version/5cd97dd93e8e8629c9d3d856 does not work but https://evergreen.mongodb.com/version/5cd984000305b95692a4222c does"""
"EVG-9310","Task","platform",2,"Implement ext.go for buildlogger","""Turn gRPC generated structs into cedar buildlogger structs."""
"EVG-9236","Task","platform",1,"Implement API buildlogger model","""This includes satisfying the rest/data interface."""
"EVG-9222","Task","platform",1,"Create a top level pail logging configuration","""This should happen in model/config.go and environment.go, the latter having a bucket accessor that creates a bucket with the given top level configuration plus a passed in permissions argument."""
"EVG-9188","Task","platform",2,"Implement merger","""Merge multiple logs based on timestamp."""
"EVG-9182","Task","platform",0,"Create Log and LogInfo struct for database model","""Create the Log struct and implement Setup, IsNil, Find, Save and Remove. Also, write the hashing function on the LogInfo struct for the id."""
"EVG-9176","Task","platform",1,"Add FindLogById to the connector interface","""Add FindLogById to the connector interface"""
"EVG-9171","Task","platform",1,"Implement gRPC CreateLog","""Implement gRPC CreateLog"""
"EVG-9152","Task","platform",0,"Implement CreateLog function","""This function is analogous to CreateMetricSeries in model/perf.go. The function should take in a LogInfo struct and permissions type. This will be the entry point for creating a new log in the database."""
"EVG-9132","Task","platform",1,"Get exit code from Commands","""Right now, the only way to get the exit code of the process underlying a command is to get the process ID from it, give it to the Jasper manager that created the command to get the underlying process, and check the return value of `Process.Wait()`. It would be more convenient to directly poll the Command for its exit code."""
"EVG-9100","Task","platform",1,"Implement gRPC AppendLog","""Implement gRPC AppendLog"""
"EVG-9086","Task","platform",2,"Implement downloader","""This is a function on a Log struct that downloads the log chunks from s3 and sorts the data by the prepended timestamp, separating the timestamp into a separate slice with each index of the timestamp slice corresponding to the same index of the log line slice."""
"EVG-9075","Task","platform",2,"Implement Grip sender","""Implement a grip Sender interface backed by cedar‚Äôs buildlogger. Should pass in the gRPC service client upon creation of the sender and buffer/flush logs (i.e. how we get log chunks)."""
"EVG-9071","Task","platform",1,"Create buildlogger protobuf","""Don‚Äôt forget to add permissions message (not in design doc). Add to makefile."""
"EVG-9053","Task","platform",1,"Implement gRPC CloseLog","""Implement gRPC CloseLog"""
"EVG-9017","Task","platform",2,"Implement uploader","""This is a function on a Log struct that takes in a string and a timestamp, which is prepended to the byte array and uploaded to s3."""
"EVG-8992","Task","platform",2,"Add FindLogsByTaskId to the connector interface","""This will include filters to reduce logs returned. All logs from a given task id and filter will be merged."""
"EVG-8933","Task","platform",1,"Create and attach gRPC service","""Create empty service and attach function (see how it is done in rpc/internal/service.go). Attach to existing grpc service (line 120 in rpc/service.go)."""
"EVG-8901","Task","platform",0,"Create a permissions type for AWS permissions","""Create a permissions type for AWS permissions"""
"EVG-8840","Task","platform",1,"Implement buildlogger routes","""Don‚Äôt forget to add them to rest/service.go"""
"EVG-6181","Improvement","app",1,"Improve updating builds and versions for mark end","""EVG-5977 moved updating builds and versions to a job, because this code would often take a minute to run, which would cause agents to exit, because their MarkEnd requests would time out.    However, moving it to a job may have been the cause of queueing in the database, which increased request latency and caused errors in the system. We therefore reverted that commit. I suspect that the queueing happens because marking a job ended requires many queries.    [~john.liu] suggested that persisting the blocked state of task would eliminate a large amount of these queries. This ticket is to do that or determine another way to improve the job."""
"EVG-8520","Bug","platform",2,"Expanded Metrics operation throughput is incorrect","""The operation throughput for the following task appears to be far lower than the correct ops/sec throughput:    https://evergreen.mongodb.com/task/sys_perf_linux_1_node_replSet_insert_remove_cd651e5e12eb5416883776ced095805bc585e8bc_19_05_14_18_37_02    I verified this by looking at the ops/sec reported in perf.json as well as downloading the genny csv and manually calculating the throughput. Both confirmed a throughput of around 17k ops/sec. In the rollup though - it says """"300"""".     """
"EVG-6185","Bug","app",2,"Notification preference can't be set to None","""When a notification setting is set to none for Build Break notifications the setting is not saved and the attached error is shown.    (Credit: [~kimberly.tao])"""
"EVG-9186","Task","platform",0,"Need to be able to filter by variant in cedar","""In routes that don't have an implicit variant (ie. the task name one) there needs to be a way to filter by variant. https://cedar.mongodb.com/rest/v1/perf/task_name/industry_benchmarks has data from both linux standalone and sharded lite. To support this, I imagine poplar also needs to start sending variant/build data"""
"EVG-8826","Build Failure","platform",2,"Curator is hitting a 10 minute timeout on downloads","""We should either increase the timeout or regularly remove the files."""
"EVG-6187","Task","app",1,"Modify API route to GET project","""Only project admins should be able to get the project."""
"EVG-6186","Bug","legacy-ui",1,"Task Timing Page Only Shows Jesse's Commits","""The task timing page for any task on Enterprise RHEL 6.2 only show's Jesse's commits. This doesn't seem to be the case for other buildvariants. E.g. here's the [task timing page for compile|https://evergreen.mongodb.com/task_timing/mongodb-mongo-master#/project=mongodb-mongo-master&buildVariant=enterprise-rhel-62-64-bit&taskName=compile&requester=patch_request&limit=100&onlySuccessful=false]    Additionally the labels for the X axis seem to be backwards. The dates should be in decreasing order from left to right, with the most recent date on the left, to be consistent with what the line in the graph shows."""
"EVG-8418","Bug","platform",2,"amboy should create a status.completed: 1, status.mod_ts: 1 index","""Performance advisor reports inefficient aggregations on the amboy.evg.service.group collection with the shape    $or: [  """"status.completed"""": false,  {""""status.completed"""": true,  """"status.mod_ts:"""" {$gte: <now>}}  ]    It recommends adding a status.completed: 1, status.mod_ts: 1 index. This should likely happen in amboy."""
"EVG-8396","Bug","platform",1,"fix failing window tests","""copy [this|https://github.com/evergreen-ci/cedar/blob/master/evergreen.yaml#L63-L84]"""
"EVG-6196","Bug","app",1,"Evergreen alerts for aborted tasks","""This should not happen after EVG-2366."""
"EVG-6195","Bug","app",2,"git.get_project doesn't check patch's module hash","""https://github.com/evergreen-ci/evergreen/blob/c6438d3e557b3e9086c00a868227911eb03bc0c2/command/git.go#L430 uses the revision set in the project, which is usually HEAD"""
"EVG-6194","Task","app",1,"minimum number of hosts per distro ","""we should add a setting to the distro that will set a minimum number of hosts.    the host allocator should be able to create these hosts if they don't exist. """
"EVG-6192","New Feature","app",2,"Create API route to change base revision.","""Want to change base revision to switch branches for a project. Currently we have a repo_revision route for the UI, will likely be similar."""
"EVG-6191","New Feature","app",2,"Create API route to disable projects","""Ensure that disabled projects aren‚Äôt iterated over in jobs (such that many disabled projects would affect time complexity). Only to be done by project admins."""
"EVG-6189","New Feature","app",1,"Create API routes to get/modify project variables.","""Redacted credentials should be shown redacted.  Only project admins should have access.  """
"EVG-6188","New Feature","app",0,"Create API route to copy projects","""Only project admins should be able to copy projects.  Variables should be automatically copied, and private variables should still be private.  """
"EVG-6199","Task","app",2,"Start agent monitor via SSH","""If bootstrapping the host using SSH, the app server should be able to use the Jasper binary on the host to make a request to the Jasper service (local to the host) to start an agent monitor. This does not require TLS credentials to be set up yet."""
"EVG-6197","Bug","app",2,"Task stuck in starting state on terminated container","""https://evergreen.mongodb.com/task/evergreen_ubuntu1604_docker_test_command_c6438d3e557b3e9086c00a868227911eb03bc0c2_19_05_17_21_15_44"""
"EVG-6207","Build Failure","app",1,"Failed: smoke-test-agent-monitor on Ubuntu 16.04 [Evergreen @ 659180eb] ",""" h2. [smoke-test-agent-monitor failed on Ubuntu 16.04|https://evergreen.mongodb.com/task/evergreen_ubuntu1604_smoke_test_agent_monitor_659180eb4df576582b1b6340ba7db9db78196a17_19_05_21_14_39_40/0] Host: [ec2-18-207-158-136.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-ssqi565h] Project: [Evergreen|https://evergreen.mongodb.com/waterfall/evergreen] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/659180eb4df576582b1b6340ba7db9db78196a17]: EVG-5996: implement agent monitor (#2286) | 21 May 19 14:39 UTC Evergreen Subscription: ; Evergreen Event:   """
"EVG-6206","Bug","app",2,"Make a new endpoint for task status within a variant","""We would like an endpoint that would behave like the v1 REST endpoint (/v1/projects/{}/versions?limit={}""""), bu add support for pagination.    (For now, we partially resolved our need by fixing the amount of responses on the V1 REST endpoint by adding the limit, but not the skip/pagination functionality)    either add pagination support to V1 or add a new end point to V2.    The issue with V2 is that in order to find tasks within a variant, we need to traverse the json response in a very complicated manner."""
"EVG-6201","Bug","app",2,"CLI get-update prints new version message","""_get-update --install_ shouldn't prompt the user to run _get-update --install_  """
"EVG-6212","Bug","app",2,"Agent panic when getting working directory","""  """
"EVG-6216","Bug","app",2,"Wrong commit order on waterfall page","""Commit {{efe7bc8007aa932a1533af95d980909cd4a39670}} and {{202ba6150bcc276f2734479ef853dc38cf8d4d3f}} are shown in the wrong order on waterfall page. Vessy's commit {{efe7bc8}} is after Mathew's {{202ba615}}, but the waterfall pages shows Vessy's is before Mathew's. Here is the git log. Attached is the screenshot.        """
"EVG-6214","Bug","app",2,"Nil task on queue errors",""""""
"EVG-8497","Bug","platform",2,"Local git command hangs for over an hour","""In [this task|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_burn_in_tags_gen_patch_efd0267a75f0d8de8a451f77b0447484f7d0ee48_5ced53a53e8e8622ccbaa21d_19_05_28_15_28_48/0##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522efd0267a75f0d8de8a451f77b0447484f7d0ee48%2522%257D%255D%257D], the git.get_project command inexplicably hanged for over 1.5 hours. From the stack, it appears due to the shell commands themselves hanging. I was able to reproduce the hang by restarting the task, but not by writing a test mimicking the git command nor was Brian M able to reproduce by running the exact shell commands on the host"""
"EVG-6218","Bug","app",1,"--patch Ignored By list-patches In CLI","""When using the --patch argument in both the Linux and MacOS CLIs I see the full output of my last 5 patches rather than just the patch matching the specified ID."""
"EVG-6221","Build Failure","app",2,"Setup Failure: smoke-test-endpoints on Ubuntu 16.04 (Docker) [Evergreen @ 36745734] ",""" h2. [smoke-test-endpoints failed on Ubuntu 16.04 (Docker)|https://evergreen.mongodb.com/task/evergreen_ubuntu1604_docker_smoke_test_endpoints_36745734109b51c17378d5ce85c0e0f54e41d53c_19_05_29_13_48_31/0] Host: [|https://evergreen.mongodb.com/host/container-5349148375510172845] Project: [Evergreen|https://evergreen.mongodb.com/waterfall/evergreen] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/36745734109b51c17378d5ce85c0e0f54e41d53c]: EVG-5888 use more comprehensive query for task history (#2330) | 29 May 19 13:48 UTC Evergreen Subscription: ; Evergreen Event:   """
"EVG-6220","Bug","app",1,"Ending a task clears the aborted flag","""This makes the change in EVG-6196 effectively useless"""
"EVG-8907","Task","platform",1,"Remove superfluous locking to initialize basic process","""Basic process [unnecessarily locks to perform an initialization step|[https://github.com/mongodb/jasper/blob/c4ab0543b5ce03ca5d84f44680638c3f2ac9643a/process_basic.go#L78-L86].] This can be removed, since all of this information is known before `(*basicProcess).transition()` is called."""
"EVG-6224","Bug","app",2,"load-smoke-data loads corrupt-looking data into test db","""It's correct enough to not cause runtime errors, but wrong enough to be nonsense"""
"EVG-6223","Bug","app",2,"Host disappeared but wasn't cleaned up","""https://evergreen.mongodb.com/host/sir-mm5g713k"""
"EVG-8976","Task","platform",0,"Change default Jasper ports","""The Jasper default ports are currently 2286 for RPC and 2287 for REST. Since the agent uses port 2285, there is a high likelihood that the port will conflict with the ports currently used by Evergreen so we should use a different port range."""
"EVG-6235","Task","app",2,"Don't sort task groups to top of queue","""We currently sort task groups to the top of the queue in order to hack around a problem with sorting them in the legacy scheduler. With the tunable scheduler, it is not important that task groups appear grouped together in the queue. We should therefore stop doing this, since doing this makes build times worse for tasks not in task groups."""
"EVG-6234","Task","app",1,"Add an additional status to the next task endpoint for task groups","""The agent's current workflow is the following when it finishes a task group. """"A"""" is the last task in the task group. """"B"""" is the task that follows. This description skips a few things for simplicity.  # Finish running commands in task A.  # Ask for a next task.  # Since that task B is not in the task group, run teardown_group.  # Ask for a next task again. Get task B back.    The problem is that asking for a next task twice strands task B until after teardown_group finishes running. We've worked around this a bit with a query to prevent task B from being marked system-unresponsive. However, a better solution would be for the next_task endpoint to indicate to the host whether there are more tasks in the group without actually assigning that task to the host. There may be several possible solutions along these lines."""
"EVG-6232","Task","app",1,"Start agent monitor via RPC","""Hosts that communicate directly with app servers using RPC need to start their agent monitors via RPC."""
"EVG-6230","Task","app",2,"Add credentials file to host if communicating using RPC","""The Jasper service should run the RPC service with a key and certificate signed by the CA. This should be done differently depending on the bootstrap method (i.e. user data, SSH)."""
"EVG-6229","Task","app",2,"Stop agent monitor on host quarantine/decommission","""Hosts that have been quarantined/decommissioned should not have a running agent, so the agent monitor has to be terminated. This can probably be tracked similar to how `NeedsNewAgent` is done."""
"EVG-6227","Task","legacy-ui",2,"Have a default description for patches","""The text in the lines on https://mongodb.invisionapp.com/share/AWS69QV2BFP#/screens/365050843 is not required - we should either figure out some default text to display to help identify the patch, or set the description in the db to some default text"""
"EVG-6226","Task","legacy-ui",8,"Create a list view component for patches page","""This will be the list of patches on https://mongodb.invisionapp.com/share/AWS69QV2BFP#/screens/365050843  - Don't worry about the filter bar, top menu, or contents of the list expand yet  - The date/time of the patch should probably be in the list  - Use a mock Evergreen REST client as your data source. Loading real data from the Evergreen DB will be implemented later  - The list should be its own component, though it will likely contain sub-components"""
"EVG-6225","Task","app",1,"Add distro config option for curator directory","""Since buildhosts have different binary directories for each platform (e.g. /usr/local/bin on UNIX-based systems, C:\Windows on Windows), we need to know where curator can be found on each platform."""
"EVG-6240","Task","app",2,"Create API routes to modify/create subscriptions","""Could potentially be part of the existing modify projects route?"""
"EVG-8919","Task","platform",1,"Add sudo option to Command","""Command should have the option to run with elevated privileges."""
"EVG-6245","Bug","legacy-ui",2,"Waterfall page shows name instead of display_name for dynamically generated build variants","""In a recent script DAG team added (see commit [here|[https://github.com/mongodb/mongo/commit/ff945d4698dfcc61236537d7a5912ddd1abd9695]]), we started dynamically generating the following build variants rather than hard coding them in etc/evergreen.yml:   * ! Enterprise RHEL 6.2 (inMemory)   * ! Linux (No Journal)    As a result, they no longer show on the waterfall page by their display name. Instead, they show up on the waterfall page by their name:   * enterprise-rhel-62-64-bit-inmem-required   * linux-64-duroff-required    (NOTE: They only show up if jsTests have been changed or added to in the past few commits.)    However, they show up on the version page by their display names still:¬†[https://evergreen.mongodb.com/version/mongodb_mongo_master_34ff5d6e6ddb302634185549a2a5ee558d629ba2|https://evergreen.mongodb.com/version/mongodb_mongo_master_34ff5d6e6ddb302634185549a2a5ee558d629ba2:]    ¬†"""
"EVG-6244","Task","app",2,"Add environment variables to docker","""Should be able to use -e variables with host.create (port, etc)."""
"EVG-6243","Task","app",1,"Add environment variables to docker","""Should be able to use -e variables with host.create (port, etc)."""
"EVG-6242","Bug","app",1,"Commit Queue: Module merge order","""Modules should be merged before main repo so the manifest for the main repo's commit will reflect the new module hashes."""
"EVG-6249","Task","app",2,"copy projects should also copy subscriptions","""This should be changed in the UI modifyProject (where we do the actual copying) and the project copy route."""
"EVG-6248","Bug","legacy-ui",2,"Display task shows overall status as success despite unfinished execution tasks","""I was expecting the restarted task to show up as """"yellow"""" after the _gen succeeded and before generated tasks ran."""
"EVG-9082","Task","platform",1,"Check usage of single/double quotes in getCreateOpt","""{{getCreateOpt()}} has a¬†[line|https://github.com/mongodb/jasper/blob/e7ecfbbf797d8925e9a97ffc28ff2d3d11073924/command.go#L525] in which it checks for the usage of quotes/spaces in the 1st arg (presumably because the command's args been passed in as a string containing all the args rather than a slice, where each arg is an element in the slice). This should probably be {{ContainsAny}}, although it could end up breaking functionality unintentionally."""
"EVG-8994","Task","platform",2,"Write more tests for Command coverage","""Since Command is becoming particularly large in scope but also lacking in coverage, we need more tests to ensure that Command still behaves as expected."""
"EVG-8876","Task","platform",1,"Start RPC Jasper service with single credentials file","""The RPC service should be run from a single credentials file containing the client CA certificate (for client certificate authentication), the server certificate, and the server private key."""
"EVG-6257","Improvement","app",2,"Commit queue should not run steps in pre","""These steps can be potentially expensive, and therefore slow down the queue."""
"EVG-6254","Improvement","legacy-ui",1,"Patch page should differ for commit queue patches","""When a user submits a commit queue patch, the URL they receive has a big green button on it. Clicking on that button will prevent the user's patch from being processed by the queue and it will linger in the queue indefinitely. We should hide this button.    Other things on this page don't really make sense either. We could just display the user's position in the queue, with a link to the version (or a redirect) if there is one."""
"EVG-6265","Problem Ticket","app",1,"Database queueing when hosts become idle","""When we increased maxhosts from 500 to 1000, we observed that read tickets dropped to 0 a couple times a day. I believe this is because there were only undispatchable task group tasks present in the queue, so the idle hosts were causing lots of queries that validated that task group tasks should not be run. This will be fixed in the new scheduler, but we turned that on for a single distro today. Since we may discover bugs in the new scheduler and need to revert back to the legacy scheduler, we should put in some improvements to reduce database load when hosts are idle for the legacy scheduler. These should include  1. Persist the entire queue. If the queue is long, and the head of the queue contains only undispatchable task group tasks, there may be dispatchable tasks at the tail.  2. Agents should back off getting the next task. Currently they only jitter, with a 10-second interval.  3. Revert the change to increase idle host time for hosts that just ran a task group. I believe they were terminated and didn't run the next task because the entire queue wasn't persisted."""
"EVG-6263","Task","legacy-ui",2,"Create login modal for new UI","""We need to put together a simple login modal for the new UI in order to authenticate and use the Evergreen REST APIs (might be using the wrong term here, but you get the idea)."""
"EVG-6262","Bug","legacy-ui",1,"Deleted private properties show up in plain text in the events view","""If you delete a property that has been marked as private, its original value still shows up in plain text upon deletion in the events view as the `BEFORE` value in the UI.    Is it intended that it is possible to see original values in events?    ¬†    ¬†    !image-2019-06-07-18-42-20-727.png!"""
"EVG-6259","Improvement","perf-tools",3,"Update display canary perf tasks to indicate they are canaries","""Update evergreen perf displays to clearly indicate which tests are canaries. Fold down and hide all canary results in the trend graphs by default.   ----  As a Server engineer,  I want the evergreen task display to indicate which tests are canaries  So that I can focus more on the actual performance results.  ----  AC  * By default canary results on the task page for a performance test have a visual indication that they are canaries.   ** This could be a special icon, some sort of coloring, or hiding the canary results by default."""
"EVG-6272","Bug","app",1,"Users can extend expiration times beyond expire-on tag","""Currently users have the power to extend spawn host expiration times for more than 1 week. Although you can only set the spawnhost expiration to 1 week, if you wait several days, you can extend the expiration time again. This means that a user could keep extending the expiration time. Then, after a month has gone by, the reaper, which uses the """"expire-on"""" tag, will stop their host.    This recently happened to a user. We should either have a hard limit for how long a spawn host can stay up, or we should extend the expire-on tag if the spawn hosts's expiration time is being extended beyond it."""
"EVG-6266","Bug","app",2,"Dependencies are scheduled in tunable scheduler","""After switching to a new task scheduler our builds got broken because {{depends_on}} stopped working:  https://evergreen.mongodb.com/version/5cfe0d58c9ec444a61bc3211  As an example: our tasks must be invoked after {{setup_e2e}} task is finished:      But seems the tasks are run quite randomly and don't wait for the setup task to finish    Even more: the setup task is run after all others:  !screenshot-1.png|thumbnail! """
"EVG-9061","Task","platform",1,"RPC client should retry on non-logical errors","""The RPC client should already perform retrying to dial the server by default, but doesn't retry requests after the connection is set up."""
"EVG-8664","New Feature","platform",0,"Distinguish public read and authorized read for logs","""This will happen on the cedar level"""
"EVG-6290","Bug","perf-tools",2,"Trend chart displays wrong number on hover","""https://evergreen.mongodb.com/task/performance_4.2_linux_wt_standalone_views_aggregation_fdb56a92bfea1af0344044856df04af4d464a3b4_19_06_11_19_19_54    See Aggregation.IdentityView.DistinctWithIndex for bc2514e"""
"EVG-6288","Improvement","app",0,"Fleet Spawn Host","""Replace auto host provider with AWS fleet"""
"EVG-6286","Bug","app",0,"Parent hosts are sometimes getting terminated immediately","""See https://evergreen.mongodb.com/host/evg-archlinux-parent-20190612195309-7560620844551020799  We didn't log the termination event, but the AWS console currently show a user-initiated termination"""
"EVG-6285","Bug","app",2,"Report error to user in case where GitHub PR testing will not create any variants or tasks","""If we encounter https://github.com/evergreen-ci/evergreen/blob/c71adab4e46533bacb9625945bc5e012e7d4ded5/units/patch_intent.go#L258, we should return a more specific error than {{OtherErrors}} https://github.com/evergreen-ci/evergreen/blob/c71adab4e46533bacb9625945bc5e012e7d4ded5/units/github_status_api.go#L41."""
"EVG-6284","Task","app",2,"Agent should send its client version when fetching next task","""The app server currently checks if the agent version is old based on the doc in the host collection (updated by the agent deploy job), but since the agent monitor updates the agent without the app server's intervention, it should be able to notify the app server of its version to determine if it should exit so the monitor can restart it. This would also be useful to be able to add event logs when the agent revision changes. """
"EVG-6283","Bug","legacy-ui",2,"Discrepancy in timing display of tests","""I am investigating a [Time out build failure|https://jira.mongodb.org/browse/BF-13500], and I see from the [task view|https://evergreen.mongodb.com/task/mongodb_mongo_master_ubuntu1604_jstestfuzz_concurrent_replication_continuous_stepdown_flow_control_07_ubuntu1604_34f4722ea7ac90720e8b691007c5ec3939d7f59d_19_06_02_19_11_04/0] that when I mouse over a certain test, it is reported to have taken ~31 minutes:   !image-2019-06-12-13-28-12-025.png|width=447,height=224!    However, I looked at the task logs for this task, and the same test is reported to have taken 1.86 seconds:    !image-2019-06-12-13-29-34-655.png|width=1731,height=747!  I also notice that when I open up the Lobster logs for a particular test in the task, they don't necessarily include the complete logs of the test, e.g., [job0_fixture_teardown|https://logkeeper.mongodb.org/lobster/build/7b997c3fa97a1247574c3972d03d55bd/test/5cf4a819c2ab683a3ee1d7d2#bookmarks=0%2C153590&l=1].  ¬†  Is there a way to obtain the definitive source of a timeout other than looking at all job logs for outliers?"""
"EVG-6282","Task","app",1,"Add distro config option for client download directory","""The agent monitor has to download the latest client onto the host, but the app server should be able to choose the location of the client depending on the distro."""
"EVG-6277","Bug","app",0,"Single-host task groups with failed tasks add dependencies, which breaks single-host behavior on restart","""If a task in a single-host task group fails, for example with system-unresponsive, this automatically adds dependencies to later tasks in the group. This breaks the single-host task group behavior, because the later tasks in the group will no longer be scheduled at the same time as the previous tasks. Although this will be fixed in the new scheduler, we should fix this in the legacy scheduler as well, since it currently causes problems in people's patches. The solution that suggests itself is not to preserve dependencies in single-host task groups on restart."""
"EVG-9305","Task","platform",0,"Allow certs to be created without inserting to database","""Operations on certificates (e.g. `CertificateOptions.Sign()`) should ideally have operations that return the created certificate but don't modify the database."""
"EVG-9289","Task","platform",1,"Make mock Jasper interface available for testing","""Ideally should have a mock manager, process, and command."""
"EVG-9209","Task","platform",1,"Add expiration field to certdepot docs","""Currently, it is possible to check if a particular certificate is going to expire. It should be easier to find any certificates that are expired or about to expire within some period of time."""
"EVG-9079","Task","platform",0,"Fix flaky REST download test","""`DownloadFileCreatesResourceAndExtract` fails often on Windows, most likely because it has to download the entire mongodb tarball and extract it."""
"EVG-9060","Task","platform",1,"Allow docs to be found/removed from certdepot","""Currently, you can unset certain tagged items (e.g. cert requests, keys, etc). However, it would be good to be able to delete documents entirely."""
"EVG-6300","Bug","legacy-ui",1,"Restart Tasks hangs when there is an error","""When there's an error restarting a task, the green restart task """"pending"""" icon continues to spin, and there's no way to x out of the module, so you have to reload the page."""
"EVG-6299","Build Failure","perf-tools",2,"Dates on trends are mixed","""1. Open https://evergreen.mongodb.com/task/sys_perf_linux_standalone_genny_overhead_bbec06ea1e489cf3325caadee8928918e9395d15_19_06_13_00_11_42  or  https://evergreen.mongodb.com/task/sys_perf_linux_standalone_big_update_bbec06ea1e489cf3325caadee8928918e9395d15_19_06_13_00_11_42  2. Check date line on trends    !Screen Shot 2019-06-13 at 15.12.54.png!     Expected: dates should be placed in chronological order"""
"EVG-6298","Build Failure","perf-tools",2,"Trendchart sidebar shows different from trend op/sec number","""1. Open test with 128 https://evergreen.mongodb.com/task/sys_perf_linux_3_node_replSet_noflowcontrol_crud_workloads_3d7e1566f455b2ba17ccf661f78eff6fefe5e1ee_19_06_05_17_26_58##updatemulti_jtru from Performance Baron plugin  2. Check trends and compare to number on trend chart sidebar    !Screen Shot 2019-06-13 at 14.50.00.png!       *Expected*: op/sec number in trend should be the same as on trend  """
"EVG-6297","Task","app",1,"Add distro config option for Jasper credentials file location","""The Jasper service running on a host needs to know where to load the credentials file from."""
"EVG-6296","Improvement","app",2,"patch command should print warnings","""We currently surface warnings to users in {{evergreen validate}} but not in {{evergreen patch}}. These means that sometimes users will submit patches with warnings and not realize that this is the source of the patch failing to build. In some cases we can increase the warning level to error, but in other cases (EVG-6082) we may not.    The {{evergreen patch}} command should print warnings. We should also probably provide a way for users to suppress warnings with a setting in their ~/.evergreen.yml, and indicate in the warnings message how to do this."""
"EVG-6293","Bug","app",2,"min hosts not preserved for rhel70-stitch distro","""From the hosts page, it looks like we are not correctly keeping up min hosts for the rhel70-stitch distro. The minimum hosts is set to 3, but I only saw a single host, which was provisioning. There should have been 3 running hosts."""
"EVG-6291","Improvement","perf-tools",3,"Update the performance plugin to find the closest revision for a BF","""At the moment, when there is a BF for an unrun revision, the performance plugin will not display the green caret symbol to indicate that there is a known issue.    In this case, the performance plugin should query by order (a range of orders, rather than straight revision).    The caret displayed should be a different color to indicate that this is not an exact match. """
"EVG-9238","Task","platform",1,"investigate amboy indexes in cedar ","""    Saw the above from cedar, so I made a commit to remove priority sorting in amboy and also to skip building indexes (in case removing priority caused a different index to be built.)     Should take this as an oppertunity to check the indexes in the amboy collection, see if the indexes are right and if it makes sense to change things (and possibly revert some or all of my commit. """
"EVG-9143","Task","platform",1,"push file via jasper interfaces","""should build an interface that makes it possible to take a local file (or buffer/io.Reader) and have jasper write it out to a local interface.       this can be added to rest or jasper/rpc only and doesn't (necessarily) have to be in the manager interface.       the goal is to be able to replace use of scp in some operations without needing to write shell commands."""
"EVG-9025","Task","platform",1,"integrage jasperCMD interface into curator ","""to provide user-friendly interface for running commands via jasper on remote systems."""
"EVG-8996","Task","platform",2,"New saving pattern in cedar perf","""We should not let users of the model package completely change essential data in existing perf results, this saving and updating perf results in the database should follow a pattern similar to that in buildlogger."""
"EVG-8837","Task","platform",1,"Benchmarking/Investigation Hold","""Need to start to investigating the ideal buffering size for the buildlogger client, along with figuring out how much data will be coming in and how fast.    The result of this work should help us determine:  * DB scaling  * Application scaling (hosts and load balancers)"""
"EVG-6311","Bug","app",1,"Commit Queue CLI should check a project before uploading a patch ","""    The CLI should check the project has an enabled commit queue before uploading the patch.  """
"EVG-6310","Task","legacy-ui",2,"Create an API wrapper to retrieve a user's patches in evergreen.js","""GET /json/patches/user/{user_id}  Add more to the patch model (stop if this part gets too tedious though)"""
"EVG-6308","Task","legacy-ui",2,"Add searching of patches","""Allow searching/filtering of the patch list by description"""
"EVG-6307","Task","legacy-ui",2,"Plumb real evergreen API to patch page","""- Create a mock for the API to get user's patches  - Populate current placeholders on the patch page from the API  - Add tests for the patch page using the same methodology as the login page  - Don't do the patch details yet (anything in the expand). That comes later"""
"EVG-6306","Task","legacy-ui",2,"Add a way to configure spruce to point at Evergreen's server","""- The immediate goal is to be able to specify the Evergreen web server URL when starting spruce  - The way to configure this should accommodate the ways to deploy the UI mentioned in MCI-3008  - The method we come up with should be generic enough to accommodate future configuration options"""
"EVG-6304","Bug","legacy-ui",2,"Lobster page doesn't load","""Adding this combination of filters and bookmarks breaks lobster: https://logkeeper.mongodb.org/lobster/build/817a10f82d35dfb9d1fcc152fcace160/all#bookmarks=0%2C167924%2C167988%2C168196%2C168531%2C274710&f~=000~mongodb%20starting&f~=000~transition%20to%20primary&f~=000~stepping%20down%20from%20primary&f~=000~transition%20to%20secondary&f~=100~%5BContinuousStepdown%3A&l=1"""
"EVG-6313","Bug","legacy-ui",0,"Task page for earlier executions of a display task has incorrect links","""The links to the individual execution tasks have the execution number as part of the task id. For example, [this task page|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_rollback_fuzzer_unclean_shutdowns_patch_a368e90685fdaa5d855ecd54769f5ca0c09d4378_5d04308d850e6160f69b880e_19_06_14_23_46_06/5] links to https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_rollback_fuzzer_unclean_shutdowns_93_enterprise_rhel_62_64_bit_patch_a368e90685fdaa5d855ecd54769f5ca0c09d4378_5d04308d850e6160f69b880e_19_06_14_23_46_06_5/5 when the correct link is actually https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_rollback_fuzzer_unclean_shutdowns_93_enterprise_rhel_62_64_bit_patch_a368e90685fdaa5d855ecd54769f5ca0c09d4378_5d04308d850e6160f69b880e_19_06_14_23_46_06/5.    It's also confusing because the test results load but the task, system, and agent logs do not."""
"EVG-6324","Bug","app",2,"""Override Dependencies"" isn't deactivated after enabling","""I'd expect this option to be greyed out to indicate it's in effect. It currently doesn't grey out that option even after it's enabled."""
"EVG-6319","Task","perf-tools",2,"Perf discovery -- use existing comparison from task page","""A common scenario is to look at a performance task page, and then select the perf discovery link. Often we have added a comparison to a different commit. It would be nice if perf discovery automatically compared to that commit when following the link. It does not do that today, but instead goes to a generic default.¬†    Also, we can compare to multiple commits on the task page. In that scenario we should do something simple to pick one commit (maybe the first?).¬†"""
"EVG-6318","Bug","app",2,"Version page shows aborting task as yellow","""The task page shows the correct status, but the version page has a yellow box and started status tooltip."""
"EVG-6317","Bug","app",2,"system-unresponsive tasks missing HOST_TERMINATED_EXTERNALLY message","""See system-unresponsive tasks in this version https://evergreen.mongodb.com/version/mongodb_mongo_v4.0_5f93fc9db3a3475dd2c7543b9f1e1179e6f9065f."""
"EVG-6327","Bug","app",2,"Artifact filenames get truncated on spawn hosts","""It appears that when I spawn a host from a task with a long task name, the artifact filenames get truncated and I have to rename the files to a .tar.gz file in order to unzip them:      Ideally, the truncation would not remove the extension."""
"EVG-6326","Task","app",0,"Handle credentials expiration","""When the Jasper server certificate is about to expire, it should be able to deploy new credentials and restart the Jasper service with the new credentials (also probably restarting the agent monitor). This is most likely going to be a job, similar to the setup host job. The host may have to revert to a provisioning state"""
"EVG-8451","Bug","platform",1,"Fix various bugs in Jasper user-friendly CLI","""The wait flag does the opposite of expected, some CLI commands have conflicting names, the ID field is deceptive because it's not the actual Jasper process ID and therefore you cannot query the manager for that ID, usage text is incorrect, some spelling mistakes."""
"EVG-8481","Bug","platform",2,"Flaky cedar tests","""two tests fail occasionally:  * TestBuildloggerAppend/AppendToBucketAndDB  * TestAttachResultData/TestAttachResultData     Figure out what is going on and how to make them pass everytime."""
"EVG-6331","Task","app",2,"add reporting on host pool sizes and utilization for static hosts","""highest priority is getting quarantined number of hosts vs total numbers of hosts;     if it's possible to easily determine how many hosts are running tassk vs idle (probably is) then we should do that too.     Might have to add a new stats job, but may be able to quickly extend where the scheduler reports stats. """
"EVG-8413","Bug","platform",1,"Fix Command tags","""Tags are unused in Command currently, and they should be set in the CreateOptions instead of its own field."""
"EVG-6337","Task","legacy-ui",0,"Implement expanded view for a patch","""(note this is not the task expand popup)  - Display an at-a-glance view of the statuses of tasks within a variant  - This should load real data, but test with a mock that returns some hardcoded patches  - Figure out if users care about seeing individual variants. If so, figure out a good way to display potentially 60+ variants. If not, figure out how to best combine the results of variants  - Think about sorting - what do users want to see first?  - Clicking elements in this view will eventually open details, but don't implement that yet"""
"EVG-6334","Task","app",2,"Move provisioning setup logic to user data","""If bootstrapping with user data, ideally the work done by the provisioning setup host job should be done in user data."""
"EVG-6333","Improvement","app",2,"Add commit message and username to `commit-queue list` command","""Currently the `commit-queue list` command only lists version IDs. It would be useful for it to list the commit message and username so that it was more easily readable."""
"EVG-9280","Task","platform",2,"Implement gRPC StreamLog","""Implement gRPC StreamLog"""
"EVG-9115","Task","platform",2,"Change client verification for Jasper clients to verify host ID","""Since the instance does not have an IP at the time that the TLS certifiicate is generated, the server credentials will not pass the TLS handshake because the common name/IP will be invalid. Since the common name is set to the host ID, the Jasper client should do the TLS handshake but accept common names that match the host ID instead of a real domain name."""
"EVG-8920","Task","platform",2,"add ""dispatch before"" timestamp to amboy queue","""add a """"dispatch before"""" timestamp to give us a way to avoid dispatching jobs that we know will fail because they've been stuck behind a backlog. """
"EVG-6343","Bug","app",2,"Generate.tasks error","""https://mongodb.splunkcloud.com/en-US/app/search/search?display.page.search.mode=fast&dispatch.sample_ratio=1&q=search%20index%3Devergreen%20metadata.level%20%3E%3D%2070%20%22generated%20project%20is%20invalid%22&earliest=1561406400&latest=1561407000&sid=1561407411.8100473        """
"EVG-6342","Task","app",1,"Test bootstrapping and provisioning on staging archlinux distro","""Bootstrapping and provisioning needs to be tested in archilnux.    Initial testing should be using non-legacy SSH for bootstrapping, provisioning, and host communication.    Once there is sufficient confidence that the SSH system is functional, we should test user data for bootstrapping and RPC communication."""
"EVG-6340","Improvement","app",2,"Restarting failed generate.tasks should re-run generate.tasks","""Currently, generate.tasks will only execute a single time, since only a single job with a task's ID can exist in the database. If a generate.tasks job has failed to be _put_, then restarting a task containing generate.tasks will put that job, and the job will execute. This allows people to restart a task that, for example, went system-unresponsive before getting to the {{generate.tasks}} step.    However, if the job has already run, and has failed, then restarting the generate.tasks task will not cause the job to retry. In this server version https://evergreen.mongodb.com/version/mongodb_mongo_master_6b4bf643ce6a68c3c0c0d17075b3ef264ecb243d, for example, restarting the purple tasks will not cause the generate.tasks step to retry. These jobs failed because of a deploy, which canceled the context of a database operation. We should allow re-running generate.tasks jobs which have failed, but we should re-run successful jobs."""
"EVG-6339","Improvement","app",1,"Add link to task log in BFG ticket","""Add link to task log in BFG ticket"""
"EVG-8467","Bug","platform",2,"In-progress amboy group jobs will never be cleaned up","""If there is a deploy while a job in a group is in progress, and no other jobs in that group are pending, then that job will become stranded. Presumably this is because the periodic query that creates queues for groups does not search for jobs that are in progress."""
"EVG-6354","Question","legacy-ui",1,"Should scheduled overridden tasks schedule their dependencies?","""Setup:   # All tasks in a build are pending   # All tasks are unscheduled   # A task """"E"""", with a dependency on task """"A"""" is overridden   # The task """"E"""" is then scheduled¬†    Step 4 above causes task """"A"""" to be scheduled as well. Is this the expected behavior? I was hoping to _only_ schedule task """"E"""" and not have task """"A"""" run.    In practice, I've had to manually unschedule several transitive dependencies to achieve my desired behavior."""
"EVG-6353","Improvement","app",2,"StaleRunningTaskIDs query is slow","""During some recent queueing on the database, I saw a very long-running StaleRunningTaskIDs query. Is there something we can do to improve this query? It may be contributing to load on the db."""
"EVG-6349","Bug","app",1,"Nil project_ref returned by projCtxMiddleware","""If the \{project_id} supplied in the URL does not correspond to a project_ref in the db the   projCtxMiddleware¬†middleware will pass along a nil projectRef in the _RequestContext_ context.    The symptom was a panic generated when a user tried to enqueue something on the commit queue with a non-existent project_ref. Since the projectRef was nil, the commit queue middleware panicked when it tried to access a field in the projectRef. (https://mongodb.slack.com/archives/C866SR2LR/p1561473066004100)"""
"EVG-6348","Bug","app",0,"AWS took host away, but task did not restart","""mongodb_mongo_master_enterprise_amazon2_sharded_causally_consistent_jscore_txns_passthrough_gen_54ca8a7112746c7637a295b6d57b6f2c3b4df9b7_19_06_25_13_11_09 and some of the other ones in the same commit"""
"EVG-6347","Task","app",1,"Allow each host to own an SSH/RPC Jasper client","""Once hosts have been bootstrapped with Jasper, they should be able to create their own SSH/RPC Jasper clients without needing to check the communication type of the host. This will reduce the complexity of contacting the Jasper service in different ways."""
"EVG-6345","Build Failure","app",1,"Failures: test-model-alertrecord on Ubuntu 16.04 [Evergreen @ ee871638] (TestAlertRecord, TestInsertNewTaskRegressionByTestRecord)","""h2. [test-model-alertrecord failed on Ubuntu 16.04|https://evergreen.mongodb.com/task/evergreen_ubuntu1604_test_model_alertrecord_ee871638754055e58ddd808fba4ebd5ab9718da9_19_06_24_21_24_48/0]  Host: [ec2-54-210-158-253.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-mx986tnj]  Project: [Evergreen|https://evergreen.mongodb.com/waterfall/evergreen]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/ee871638754055e58ddd808fba4ebd5ab9718da9]: EVG-6331: Host Pool Stats (#2420) | 24 Jun 19 21:24 UTC  Evergreen Subscription: ; Evergreen Event:   *TestAlertRecord* - [Logs|https://evergreen.mongodb.com/test_log/5d114b5f0ae60640cf0b385d] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_ubuntu1604_test_model_alertrecord_ee871638754055e58ddd808fba4ebd5ab9718da9_19_06_24_21_24_48#TestAlertRecord=fail]  *TestInsertNewTaskRegressionByTestRecord* - [Logs|https://evergreen.mongodb.com/test_log/5d114b5f0ae60640cf0b385d] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_ubuntu1604_test_model_alertrecord_ee871638754055e58ddd808fba4ebd5ab9718da9_19_06_24_21_24_48#TestInsertNewTaskRegressionByTestRecord=fail]    """
"EVG-9258","Task","platform",2,"Allow Command.Run to be more configurable","""Currently, the only configurable behavior in Command.Run is the creation of the underlying processes via {{(*Command).ProcConstructor()}}. However, for some use cases, it needs to behave differently when run. For example, by the semantics of the {{sshManager}},¬†{{(*sshManager).CreateProcess()}} should logically configure the command and run it over SSH.¬† Since¬†{{sshManager}} itself relies on¬†{{Command}} for its underlying behavior, the in-memory¬†{{Command}} needs¬†{{Run()}} to actually serialize its fields into JSON input to the CLI on the remote machine over SSH in order to run the command with the correct semantics."""
"EVG-9172","Task","platform",2,"Allow Jasper service to kill itself for restart","""The command that must be used to kill a Jasper service within a Jasper-spawned process is platform-dependent (for example, using the service restart command to make a Jasper service restart itself won't work on MacOS)."""
"EVG-9158","Task","platform",1,"Fix REST test setup","""The function to create REST services for testing can fail to create the service and cause timeouts on Windows occasionally."""
"EVG-6358","Improvement","app",1,"Expose blocked field in API","""EVG-5960 creates a concept of blocked status for a task. We should expose this in the API."""
"EVG-6356","Bug","app",1,"CLI and patch page commit queue order are off by one","""The commit queue CLI considers the currently executing commit queue version to be 1, while the patch page considers the first pending commit queue version to be 1. This causes the two representations of the queue to be off by 1."""
"EVG-9318","Task","platform",1,"Add RemoteClient interface to SSH manager","""Would be useful to have other methods, such as download and log streaming."""
"EVG-6364","Improvement","app",1,"Set description to name of latest commit if not otherwise set","""If the description of the patch is not set, Evergreen should set its description to the latest commit on the branch. This will allow people to use the search function on the new patch page without having to pass a description. We should _not_ set a description if the user sets one or if this is a PR or commit queue version. (The latter already set descriptions.)  """
"EVG-6362","Improvement","app",1,"Commit queue resume merge project not needed","""The user should not need to enter the project"""
"EVG-8713","New Feature","platform",2,"Add interfaces to retrieve LDAP groups","""Add interfaces to retrieve LDAP groups"""
"EVG-6383","Improvement","app",0,"Retry commit queue versions within a time frame","""As an Evergreen administrator,  I want to be able to be able to re-enqueue commit queue versions within a timeframe  so that if some outage (e.g., GitHub, AWS, Evergreen, Logkeeper) causes commit queue tasks to fail, I can restart them in bulk.    Acceptance criteria: There is a UI element at https://evergreen.mongodb.com/admin similar to the """"Restart Tasks"""" element, which will retry commit queue versions within a timeframe. This will mean creating new versions for these tasks.    I'm not sure whether some way of letting the user know that this has happened should be in scope of this ticket. You could imagine that another iteration of this feature would be to allow users to retry their own commit queue versions. If we do this, there may be some UI element which changes to indicate that the version has been retried."""
"EVG-6381","Improvement","app",8,"Placeholder for integration testing with MANA","""Placeholder for integration testing with MANA"""
"EVG-6380","Improvement","app",8,"Existing role migration","""Existing role migration"""
"EVG-6379","Improvement","app",1,"API route - PATCH /roles","""API route - PATCH /roles"""
"EVG-6378","Improvement","app",8,"Private flag for variants","""Private flag for variants"""
"EVG-6374","Improvement","app",1,"Enforce distro permissions ","""Enforce distro permissions"""
"EVG-6373","Improvement","app",2,"Create distro permissions model","""Create distro permissions model"""
"EVG-6372","Improvement","app",2,"Add GetRolesForUser to gimlet","""Add GetRolesForUser to gimlet"""
"EVG-6371","Improvement","app",0,"Create permissions model","""Create permissions model"""
"EVG-6370","Improvement","app",0,"API route - POST /roles","""API route - POST /roles"""
"EVG-6369","Improvement","app",2,"API route - GET /roles","""API route - GET /roles"""
"EVG-6367","Improvement","app",0,"Create role model","""Create role model"""
"EVG-6366","Bug","legacy-ui",2,"TypeError in /task/cloud_automation_master_ubuntu16_LinuxTestGroup13_patch_8220204da05769860f6569fbb08c9a011638ce01_5d1130300305b96e985958e9_19_06_24_20_18_57","""h1. Error in Evergreen  *TypeError* in */task/cloud_automation_master_ubuntu16_LinuxTestGroup13_patch_8220204da05769860f6569fbb08c9a011638ce01_5d1130300305b96e985...* Cannot set property 'innerHTML' of null  [View on Bugsnag|https://app.bugsnag.com/mongodb/evergreen/errors/5cd5b9e9d8998f00193f20ec?event_id=5d1631870045ec5c36bf0000&i=jr&m=ci]  h1. Stacktrace    [View full stacktrace|https://app.bugsnag.com/mongodb/evergreen/errors/5cd5b9e9d8998f00193f20ec?event_id=5d1631870045ec5c36bf0000&i=jr&m=ci]  ~Created by Brian Samek via Bugsnag~"""
"EVG-6365","Bug","legacy-ui",2,"Tasks that use Cedar show no metrics in the perf plugin","""The perf plugin does not show data for any of the graph/table/trend views for tasks that use Cedar. I first observed this in [this patch build|https://evergreen.mongodb.com/task/sys_perf_linux_standalone_validate_cmd_patch_c0c64c95637f8f0700ac40e89dc39c30ec6f5f41_5d1242fa3e8e86513ddfe22a_19_06_25_15_51_44#]. But it looks like mainline is also affected. E.g. [this task|https://evergreen.mongodb.com/task/sys_perf_linux_3_node_replSet_service_architecture_workloads_a07912c7919d5cec360f628df445279800c66667_19_06_27_11_54_58#] but the errors I'm getting from the Chrome console are slightly different for the two tasks.    I chatted with [~julian.edwards] on Slack and Cedar does have the task. So it could be a perf-plugin or UI issue."""
"EVG-9321","Task","platform",1,"CLI commands should be easier to build","""Currently a user of the CLI who wants to build a command string has to do so manually. It would be good to have functions that build CLI subcommand strings for convenience and avoiding error-prone string building."""
"EVG-9023","Task","platform",1,"Fix download job race","""Logs: https://evergreen.mongodb.com/test_log/5d1b7f7032f417063ca03e5f#L3701"""
"EVG-6397","Bug","app",1,"S3copy always continues on error regardless of optional parameter","""https://github.com/evergreen-ci/evergreen/blob/master/command/s3_copy.go#L200 should probably have a return statement"""
"EVG-6396","Task","legacy-ui",2,"Rework authentication for spruce","""We'll work on this together, but the current mechanism isn't secure. We can't store an API key in the config file, so we'll need to get the user's key"""
"EVG-6395","Bug","legacy-ui",2,"Long env var name overflows onto text box ","""If you have a long enough env variable name, it overflows onto the value box and you can't read what it is set to.      !image-2019-07-02-15-24-28-291.png|thumbnail! """
"EVG-6391","Build Failure","app",0,"Failures: test-agent on Windows [Evergreen @ 9755507b] (TestStatusSuite, TestAgentFailsToStartTwice)","""h2. [test-agent failed on Windows|https://evergreen.mongodb.com/task/evergreen_windows_test_agent_patch_9755507b2276ec16131f4d9f157e404fbb5975e0_5d1a8241c9ec442782d0c0d2_19_07_01_21_59_30/0]  Host: [ec2-54-161-122-158.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/sir-579r6qcj]  Project: [Evergreen|https://evergreen.mongodb.com/waterfall/evergreen]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/9755507b2276ec16131f4d9f157e404fbb5975e0]: 'evergreen-ci/evergreen' pull request #2438 by Kimchelly: EVG-6347: hide Jasper communication internals behind host utility methods (https://github.com/evergreen-ci/evergreen/pull/2438) | 01 Jul 19 13:22 UTC  Evergreen Subscription: ; Evergreen Event:   *TestStatusSuite* - [Logs|https://evergreen.mongodb.com/test_log/5d1a850f32f417724e637c91] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_agent_patch_9755507b2276ec16131f4d9f157e404fbb5975e0_5d1a8241c9ec442782d0c0d2_19_07_01_21_59_30#TestStatusSuite=fail]  *TestAgentFailsToStartTwice* - [Logs|https://evergreen.mongodb.com/test_log/5d1a850f32f417724e637c91] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_agent_patch_9755507b2276ec16131f4d9f157e404fbb5975e0_5d1a8241c9ec442782d0c0d2_19_07_01_21_59_30#TestAgentFailsToStartTwice=fail]    """
"EVG-6407","Improvement","legacy-ui",2,"Add filtering of patches","""- By project  - By status (probably just success/fail/not done)  - By pull request/not    maybe more?"""
"EVG-6405","Bug","app",0,"The CLI commit queue creates a module in the primary repository","""Since the CLI commit queue runs both pushes in the same directory, it adds the module as a submodule of the main repository."""
"EVG-6400","Improvement","app",1,"evergreen/commitqueue added to queue links to PR instead of patches page","""# The message that an item has been added to the queue in the GitHub-backed commit queue should link to the patch, but instead it links back to the PR itself."""
"EVG-6399","Improvement","legacy-ui",2,"List items in commit queue in UI","""Currently the CLI lists the items in the commit queue. This display will be improved by EVG-6333. Currently the patches page for a pending commit shows what number it is in the queue. We should also display the queue in the UI and link to it from the patch page and possibly elsewhere."""
"EVG-6408","Bug","app",1,"Evergreen does not list or terminate hosts which have been created in a non-default aws account","""¬†When spawning a host in a different aws account, the host gets created successfully but the evergreen run hangs on a call to `host.list`. It reports """"Command failed: problem getting hosts list: 0 hosts of 1 are up, waiting"""" and upon task end, the host does not get terminated.    Run: https://evergreen.mongodb.com/version/5d1f0fbfa4cf471affebdbc9    Evergreen.yml snippet        Note: Same result for ipv4 & ipv6"""
"EVG-6415","Bug","app",2,"Commit queue delete should deactivate a running version","""If a user deletes an item from the queue that's already being processed the version should be deactivated so it won't merge if the tests pass."""
"EVG-6411","Bug","legacy-ui",1,"Patch expand panels collapse when a new page of patches is loaded","""I wonder if something is clearing the state of the expansion panels. We may need to maintain the expanded state of them ourselves, but we should avoid that if possible"""
"EVG-6410","Task","app",1,"Add distro options for root directory of user","""Because the Jasper service runs as a Windows service, it has no knowledge of (and therefore has no access to) the assumed cygwin mount (e.g. {{C:\cygwin}} is mounted as the root directory {{/}}) for SSH. The setup scripts might also need to be fixed to explicitly set the root and also remove usages of `/cygdrive`, which is not mounted in a non-cygwin SSH process."""
"EVG-9088","Task","platform",1,"populate processed_at timestamp field in rollup results",""" maybe also valid? """
"EVG-9040","Task","platform",1,"Allow Jasper service to run as configurable user","""Currently the Jasper service will run as the system default privileged user (e.g. root on Linux/Mac, LocalSystem on Windows). This should be configurable."""
"EVG-8952","Task","platform",1,"method on ceder model.ArtifactInfo to get a io.ReadCloser from the artifact","""internal api """
"EVG-6427","Improvement","app",1,"Paused commit queue patches report they are at position -1","""If a patch is at position -1, there should be a helpful message instead of reporting -1."""
"EVG-6425","Improvement","legacy-ui",1,"Remove configure button for commit queue patches","""On the /patches/mine page, there is a configure button for commit queue patches. Although it leads you to the patches page, which is useful, there's nothing to configure there, so the name of the button is confusing."""
"EVG-6423","Task","app",1,"Revendor amboy","""Disable ttl indexes on all queues for now"""
"EVG-6416","Bug","app",2,"Build project and branch are incorrect in rest v2","""https://evergreen.mongodb.com/rest/v2/versions/mongodb_mongo_master_83292f18bc75726a548ab7c9c5c650d779c90684 has project: """"mongodb-mongo-master"""" and branch: """"master"""", which is correct. https://evergreen.mongodb.com/rest/v2/builds/mongodb_mongo_master_enterprise_rhel_62_64_bit_83292f18bc75726a548ab7c9c5c650d779c90684_19_07_09_10_28_13 has project_id: """"mongo"""" and branch: """"mongodb-mongo-master"""", which is not correct."""
"EVG-9032","Task","platform",1,"Allow TTL to be set without needing certificate request","""The TTL can only be set if using a CertificateOptions struct and calling {{PutCertFromMemory}}. It would be more convenient to be able to access this field like the other fields via tags."""
"EVG-6432","Task","legacy-ui",2,"create cedar.js library ","""mirror the core parts of evergreen.js to support pulling performance (and log!) data, and the eventual integration of lobster into the new logging framework.     this should just be simple project infrastructure, and some simple classes to handle authentication/etc."""
"EVG-6439","Bug","perf-tools",2,"Trend chart displays incorrect comparisons","""https://evergreen.mongodb.com/task/performance_linux_wt_standalone_query_patch_135c88363bdb5e7b353825f3fec4aa0d7db80571_5d275c647742ae016a76b6f4_19_07_11_15_57_50##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522135c88363bdb5e7b353825f3fec4aa0d7db80571%2522%257D%255D%257D is showing drops in the 70% range, but looking at the raw numbers this is incorrect"""
"EVG-6438","Improvement","app",1,"Support ""description"" and ""d"" in addition to ""message"" and ""m"" in the commit queue","""[~david.bradford] noted that users habitually type --description or --d when they use the evergreen patch command.    Although the --message and --m commands better match the effect of this flag‚Äîsetting the git commit message‚Äîit would be more natural if users could use the argument they are used to from the evergreen patch command."""
"EVG-6437","Bug","app",2,"Log if a process is not cleaned up between tasks","""[This task|https://evergreen.mongodb.com/task/jstestfuzz_self_tests_replication_fuzzers_v4.0_rollback_fuzzer_MMv1_0_patch_9c46f46e08293d456fa64d6d092885e77bf84363_5d273a86d1fe0770b75ef0c4_19_07_11_13_32_55] was aborted by {{github_pull_request}} user likely due to a new commit being pushed the branch being tested. [The next task|https://evergreen.mongodb.com/task/jstestfuzz_self_tests_update_fuzzer_v4.2_update_multiversion_fuzzer_replication_flowCtlOff_0_328e56d0f185b6fc6e22538365fa420786a8c8c7_19_07_11_13_52_59] run on the [sir-df5i6akg|https://evergreen.mongodb.com/host/sir-df5i6akg] host then failed due to the address already being in use when starting up mongod.    h6. System logs from second task        h6. Test logs from first task        https://logkeeper.mongodb.org/lobster/build/1b95d451c3b52d5c5bd68f8d0c91a5e6/test/5d273f379041302837556c44#bookmarks=0%2C11558&f~=100~pid%3D&l=1    Note from [~brian.samek]: The agent should log if a process has not cleaned up between tasks. This will help us understand how often this occurs."""
"EVG-8909","Task","platform",1,"Add ID function to manager","""Processes already have the manager environment variable available through ProcessInfo, but a user should be able to ask a manager for its id without having to request it from one of its processes."""
"EVG-8905","Task","platform",1,"Move revendor to curator","""Evergreen already has a revendoring target available for automated revendoring. It would be nice to have this for other repositories, as well as potentially handle duplicate nested vendored packages."""
"EVG-6449","Task","app",2,"Task groups executing in wrong order. ","""While running a patch build I had some strange stuff happen. The first task (dbtest_compile) got stuck in the dispatch state, and the second task (detest) ran even though it shouldn't have.¬†    ¬†    https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_display_dbtest!_patch_a8a8fabb17e9700aab633a67b24fe6147290bb92_5d28d0dce3c3311db1c93d5f_19_07_12_18_27_10#/%23%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522a8a8fabb17e9700aab633a67b24fe6147290bb92%2522%257D%255D%257D#%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522a8a8fabb17e9700aab633a67b24fe6147290bb92%2522%257D%255D%257D"""
"EVG-6448","Task","legacy-ui",2,"Fix smaller UI issues with spruce","""* make styling consistent with Evergreen  * run through workflows and look for usability issues  * pretty up the menu (maybe)"""
"EVG-6445","Improvement","app",2,"Allow access to commit queue message in an evergreen task","""With the commit queue rollout to server, we would like to be able to convert existing githooks into evergreen tasks that can be run as part of the commit queue. Most of these are fairly easy, but there is a hook that checks if a given commit message starts with a jira ticket number.     Would it be possible for a task in evergreen to have access to: (1) whether this task is part of a commit queue execution, and (2) what the commit queue message is for the given patch?    If these were expansions, that would make it easy for tasks to have access to them, but other ways would work as well."""
"EVG-6450","Bug","app",2,"Timeout job should clean up stranded tasks that aren't the most recent running task on a host","""be very careful about task groups, especially ones running teardown_group since the last task will be different but should not be cleaned up    https://evergreen.mongodb.com/task/performance_linux_wt_standalone_compile_deaf23e643efa664338d602b419589639409b33a_19_07_12_20_23_52"""
"EVG-9185","Task","platform",0,"Vendor mongorpc and ftdc","""These dependencies are necessary for implementing a Jasper service built on the mongo wire protocol."""
"EVG-8470","Bug","platform",1,"github.com/mongodb/grip (and github.com/mongodb/ftdc) are broken on !linux","""https://github.com/mongodb/grip/pull/56 started depending on CPUTick from https://github.com/shirou/gopsutil, but that only defines CPUTick for linux."""
"EVG-6456","Improvement","legacy-ui",2,"Move the API client to the app's context","""Rather than passing it into every component. Also will probably need to rename the context object"""
"EVG-6455","Bug","app",2,"Spawn host doesn't have patch applied for tasks from certain patch builds","""Clicking the """"Spawn..."""" link in https://evergreen.mongodb.com/task/jstestfuzz_self_tests_unittest_t_test_linux_patch_d0fa191e0eb6d78ec5eab02c5aad1ff57229acaa_5d2de7f33627e048a6091b7c_19_07_16_15_06_28 leads to a {{/data/mci/source-jstestfuzz-self-tests-d0fa19/}} directory checked out to the appropriate commit but without the patch applied.    From discussing with [~john.liu] a bit over Slack, I've also found that {{evergreen fetch}} fails for tasks from other patch builds:    """
"EVG-6454","Bug","app",2,"Evergreen patch attaches to wrong enterprise commit","""In the patch [here|https://evergreen.mongodb.com/version/mongodb_mongo_master_8696830b93eaea25cb8573a3b63db52d283933da] evergreen selects the wrong enterprise commit. At the time, the head of enterprise was {{011070b30a821083e6605151b50bcfb6a9018647}} whereas the patch chose {{d7d8e25ecb4b027d018ffd200e20bdcae2b0d066}}."""
"EVG-9173","Task","platform",0,"Prevent duplicate tags within process info creation options","""The tags in the ProcessInfo's CreateOptions currently duplicate append tags in the CreateOptions passed into newBasicProcess/newBlockingProcess."""
"EVG-9154","Task","platform",1,"Integrate wire protocol POC","""The POC implements the bare-bones manager functionality. It needs to still be cleaned up, implement the process functionality, and tested."""
"EVG-8878","Task","platform",0,"Omit server name field from rpc credentials","""Server name should not be marshalled as part of the RPC credentials since it is only used as an in-memory way of handling the case in which the name on the TLS certificate doesn't match the host name."""
"EVG-6474","Improvement","app",1,"Add author to commit-queue list command","""The commit-queue list command currently shows some metadata about the elements in the commit queue. This should also include the author, since people will likely be looking for their own commits."""
"EVG-6473","Bug","app",2,"Commit-queue merge errors on messages containing quotes","""I noticed an error on `commit-queue merge` when the message I passed in contained quotes.    When I ran the below command, the version failed: https://evergreen.mongodb.com/version/5d3710200305b960bd5450ac      When I ran the below command, it succeeded: https://evergreen.mongodb.com/version/5d3712553e8e863ceba54eae  """
"EVG-6472","Question","app",2,"Removing an entry from the commit queue after it has started running doesn't prevent merge","""I had removed https://github.com/10gen/jstestfuzz/pull/114 from the commit queue while it was running because of the performance impact the changes would have on how the fuzzer compares query results. I found that despite doing so, after all the tasks finished, the commit was merged in master anyway. I wouldn't necessarily want to forced to abort the patch build to prevent the merge because it can be useful to allow the tasks to finish in order to demonstrate the problematic behavior.    I understand there isn't likely to be a perfect solution here but I figured we could at least discuss some options."""
"EVG-6470","New Feature","app",2,"Document new api endpoint and usage.","""As a Server Engineer,   I want to read the task_reliability end point documented,   So that I can correctly use the api.  ----  AC:   * task_reliability API is documented.   * All parameters usage is clear.   * The documentation should be easily located. """
"EVG-6468","New Feature","app",2,"Add support for pagination and limits (start_at param and interaction with limit).","""As the commitQ,   When the task_reliability endpoint is accessed,   And no start_at value is provided,   And there is less than one page of data,   Then the Task reliability records are returned.   And the response does not contains a start_at header.    As the commitQ,   When the task_reliability endpoint is accessed,   And no start_at value is provided,   And there is more than one page of data,   Then the Task reliability records for the first page of data are returned.   And the response contains the correct start_at header for the next page of data.    As the commitQ,   When the task_reliability endpoint is accessed,   And no start_at value is provided,   And there is exactly one page of data,   Then the Task reliability records for the that page of data are returned.   And the response contains a start_at header.    As the commitQ,   When the task_reliability endpoint is accessed,   And an invalid start_at value is provided,   Then 400 error status document is returned.    As the commitQ,   When the task_reliability endpoint is accessed,   And a start_at parameter is provided,    Then the Task reliability records for that page of data are returned.   And the response contains the correct start_at header for the next page of data.    As the commitQ,   When the task_reliability endpoint is accessed,   And a start_at parameter is provided,    And there is no more data,    Then an empty array is returned,   And the response does not contains a start_at header.  ----  AC:   * Pagination data is not provided in the case where there is no more data.   * The first page of data is always provided."""
"EVG-6467","New Feature","perf-tools",2,"Add date filtering support (before and after dates).","""As the commitQ,  When the task_reliability endpoint is accessed,  And a valid after_date is provided,  Then the Task reliability records between after_date and tomorrow are generated.    As the commitQ,  When the task_reliability endpoint is accessed,  And a valid after_date and before_date are provided,  Then the Task reliability records between after_date and before_date are generated.    As the commitQ,  When the task_reliability endpoint is accessed,  And a valid before_date is provided,  Then the Task reliability records between (before_date - group_num_days) and before_date are generated.    As the commitQ,  When the task_reliability endpoint is accessed,  And no before_date or after_date is provided,  Then the Task reliability records between (today - group_num_days) and tomorrow are generated.    As the commitQ,  When the task_reliability endpoint is accessed,  And an invalid date is provided,  Then a status 400 error (""""Invalid AfterDate/BeforeDate values"""") document is returned.    Invalid dates are:    * invalid date formats    * before date earlier than after_date    * before date equal to after_date    ----  AC:    * Dates are correctly validated and proper errors returned.    * Default dates are correctly applied.    * Date dates are correcly generated. Default before_date is tomorrow to capture all available      data, default after_date is before_date - group_days to get one complete record.  """
"EVG-6466","New Feature","perf-tools",2,"Add num_days support for arbitrary grouping.","""As the commitQ,   When the task_reliability endpoint is accessed,   And a valid or default¬†num_days is provided,   Then the Task reliability records are correctly calculated.    As the commitQ,   When the task_reliability endpoint is accessed,   And an invalid num_days is provided,   Then a status 400 error document is returned.  ----  AC:   * The num_days parameter is correctly validated and applied.   * The success reliability score is calculated from the available task stats."""
"EVG-6465","New Feature","perf-tools",2,"Add full task filtering support (task_names, variants, distros).","""As the commitQ,  When the task_reliability endpoint is accessed,  And incorrect project, task name, variant or distro combinations are provided ,  Then an empty should be returned.    As the commitQ,  When the task_reliability endpoint is accessed,  And multiple correct project, task name, variant or distro combinations are provided ,  Then an array of 1000 Task Reliability Score Record should be returned.      ----  AC:    * Full filtering by project, variant, task and distro is supported.    * The parameters are correctly validated and appropriate errors raised.    * The defaults are correctly applied.  """
"EVG-6464","New Feature","app",3,"Calculate the limited (20 days) reliability score for a single task name and a significance parameter.","""As the commitQ,   When the task_reliability endpoint is accessed,   And no task name is provided ,   Then a status 400 """"Missing Tasks values"""" error should be returned.    As the commitQ,   When the task_reliability endpoint is accessed,   And 51 task names are provided ,   Then a status 400 """"Too Many Tasks values"""" error should be returned.    As the commitQ,   When the task_reliability endpoint is accessed,   And a task name is set to """"aggregation_expression_multiversion_fuzzer"""",   Then an array of up to 50 Task Reliability Score Record should be returned using the defaults parameters.    As the commitQ,   When the task_reliability endpoint is accessed,   And a task name is set to """"aggregation_expression_multiversion_fuzzer"""",   And a limit of 1 is provided,   Then an array of 1 Task Reliability Score Record should be returned using the defaults parameters.    As the commitQ,   When the task_reliability endpoint is accessed,   And a task name is set to """"no_such_task"""",   Then an empty array should be returned.    As the commitQ,   When the task_reliability endpoint is accessed,   And a task name is set to """"aggregation_expression_multiversion_fuzzer"""",   And a significance value is provided,   Then an array of up to 50 Task Reliability Score Record should be returned with the correct reliability.    As the commitQ,   When the task_reliability endpoint is accessed,   And a task name is set to """"aggregation_expression_multiversion_fuzzer"""",   And a significance value is provided,   And a limit of 2 is provided,   Then an array of 2 Task Reliability Score Records should be returned.  ----  AC:   * Basic task name validation is implemented.   * The significance parameter is validated and handled correctly. Invalid, default(.05) and specified.   * The limit parameter is validated and handled correctly. Invalid, default(1) and specified."""
"EVG-6462","New Feature","app",3,"Implement Task Reliability API new REST API v2 endpoint with kill switch enabled by default.","""As the commitQ,  When the task reliability service is disabled,  And the task_reliability endpoint is accessed,  Then a 503 Http Service unavailable status should be returned.     As the commitQ,  When the task reliability service is enabled,  And the task_reliability endpoint is accessed,  Then an empty record should be returned.     ----    AC:    * Basic Routing is implemented.    * Kill switch returning a 503 should be enabled by default.    * An empty array should be returned when the kill switch is disabled.    ** The Project parameter should be validated from the router.  """
"EVG-6486","Bug","app",1,"On build page, failed/success summary doesn't match detailed view",""" !image-2019-07-24-17-54-48-950.png|thumbnail! from https://evergreen.mongodb.com/build/mongodb_mongo_master_enterprise_rhel_62_64_bit_5c9f7fb5d38df176bda950bdea6aaadbcb73e8e1_19_07_24_12_09_43.    Note that the summaries say Not Scheduled, F, F, S, F, F, but the details look like Not Scheduled, F (and still running), S, F, F, F."""
"EVG-6483","Improvement","app",2,"Pause task dispatching with greater granularity","""Pause task dispatching with greater granularity (per distro, patches, project)    ¬†    This came as an improvement item from the Artifactory outage post-mortem."""
"EVG-6482","Improvement","app",1,"Make it easy to run a script on all hosts in a distro ","""This came from the Artifactory outage post-mortem as an improvement item that would aid in future incident triage.    ¬†    ¬†"""
"EVG-6481","Bug","legacy-ui",1,"Rounder.js console error on waterfall, other pages","""When I load the waterfall, there is a console error: """"Rounder.js:1 Failed to load resource: the server responded with a status of 404 (Not Found)""""."""
"EVG-6499","Improvement","legacy-ui",1,"Add robots.txt file to prevent search engine crawling","""Read tickets were low for many hours on 7/25. There were a number of queries against the inefficient task history endpoints, which appear to come from a range of IP addresses belonging to Google's web crawler. We should add a robots.txt file to prevent this from happening again."""
"EVG-6495","Task","app",0,"Run host's Jasper service as distro-configured user","""Currently, Jasper will run at the default privilege level for the system (e.g. root on Linux. This should be fixed so that it runs as the user given in the distro settings.    ¬†    This doesn't include fixing Windows, which will require more work."""
"EVG-8986","Task","platform",0,"SetInput should return Command object","""To match all of the other command-building methods, it should also return the command object."""
"EVG-6501","Improvement","app",2,"host.create should create hosts that are accessible without a custom security group","""(See comment for detail)"""
"EVG-9036","Task","platform",0,"Include server name in credentials","""This is required to be able to re-use the same credentials file if the client is on the same host as the RPC service."""
"EVG-6504","Task","app",0,"Fix curl command args","""Curl doesn't allow {{\-\-flag=value}} syntax, only {{\-\-flag value}}."""
"EVG-6503","Task","app",0,"Allow SCP to put files in non-home directories","""The SCP command in the setup host job only works currently because it assumes that all files go into the home directory."""
"EVG-8923","Task","platform",0,"Suppress SSH-related output from CLI over SSH","""The Jasper SSH client depends on the output of a command being only the JSON output of the Jasper CLI. Output from SSH itself will cause it to fail to parse the JSON, which is particularly problematic since the default log level will warn about trying to add a new host to the list of known hosts."""
"EVG-8416","Bug","platform",0,"Only return error from SSH client if non-empty","""The CLI over SSH process has [a line|https://github.com/mongodb/jasper/blob/31d54de8c9ad68f5820112e68bc6a5ea8a8f1883/cli/ssh_process.go#L120] in which it creates an error from the error text resulting from the CLI wait command. However, it should only create an error if the error text is non-empty."""
"EVG-6509","Task","app",0,"Set ServerName in Jasper exported JSON credentials","""The host Jasper credentials file should contain the ServerName so that if using Jasper with SSH communication, it can re-use that same file to authenticate the Jasper CLI connection."""
"EVG-6508","Task","app",2,"Create user for Jasper service on Windows machines","""The Jasper service can't run as Administrator on Windows machines because it requires a password (which is not known by evergreen). There should be a new user created (e.g. mci-exec) with administrator privileges and the ability to start a service (i.e. """"Log on as a service"""" right)"""
"EVG-8863","Task","platform",0,"Allow logging to be configured from CLI","""There are [interceptors|https://github.com/mongodb/jasper/blob/f67da3ffa80bfe02fae5f0960198cc34aff41dd4/rpc/service.go#L36-L37] in the Jasper RPC service that allow you to log the RPC requests made. This would be useful to enable for debugging hosts in the future."""
"EVG-6513","Task","app",0,"Idle host termination should check waiting for agent monitor","""Currently, the idle host termination job [checks if the host is waiting for an agent based on a flag|https://github.com/evergreen-ci/evergreen/blob/be7a4bea6bbfd9341b2ce800ef8837e8e394e970/model/host/host.go#L659-L675] but this flag is not relevant for non-legacy hosts. On non-legacy hosts, it should check if the host needs an agent monitor deployed as an indicator of idleness."""
"EVG-6511","Task","app",0,"Agent monitor command needs home directory","""The agent monitor command needs tilde expansion to find the home directory but fork/exec processes don't have this shell feature."""
"EVG-9155","Task","platform",0,"Depot functions should handle internal name conversions","""Currently, certificate generation internally modifies the ID for users when generating certificates by replacing several non-alphanumeric characters with underscores. This can cause unexpected behavior, because it is then impossible for an external caller to find the user in the depot without knowing the exact transformation done on the original name."""
"EVG-8843","Task","platform",0,"Run non-interactive sudo check","""The [sudo check in the OOM tracker|https://github.com/mongodb/jasper/blob/88f51a01ba3d780c866571693a2e67d1157238d4/subtree_oom.go#L32-L43] needs to run in non-interactive mode since the OOM tracker won't supply a password."""
"EVG-6516","Bug","legacy-ui",2,"Test names get cut off on Evergreen task page","""When viewing [certain test results|https://evergreen.mongodb.com/task/mongodb_mongo_v4.0_osx_1010_read_concern_majority_passthrough_1_osx_1010_4a0def0129ae5aa6c8ea951b5c452c8938cf4d83_19_07_31_17_28_00/0] on an Evergreen task page, the names of tests get cut off on the left. This occurs in Chrome:  !chrome_default_zoom.png|thumbnail!    Safari:   !safari_default_zoom.png|thumbnail!     and Firefox:   !firefox_default_zoom.png|thumbnail!     all at default browser zoom levels on a 13 inch Macbook Pro. The problem seems to be alleviated at a lower zoom level e.g. 80% zoom in Chrome:   !chrome_80percent_zoom.png|thumbnail! """
"EVG-6522","Bug","app",1,"Improve commit queue error for non-enabled project","""Trying to enqueue from the CLI to a project without a commit queue gives a misleading error: """"item is not an integer""""  Improve error handling for this case to help the user know what really went wrong."""
"EVG-6521","Bug","legacy-ui",1,"Date in priority changed notification both wrong and redundant","""Aug 2, 2019 10:35:51 amPriority Changed at Dec 31, 0000, 7:03:58 pm to 2 by brian.samek    https://evergreen.mongodb.com/task/evergreen_ubuntu1604_smoke_test_agent_monitor_b447bbdb2740263b2ce8fd4217b9263ed715f51c_19_08_02_14_29_37#/log/EV"""
"EVG-6528","Task","app",0,"Set host flag for Jasper service","""Jasper automatically uses localhost as its host unless one is defined."""
"EVG-6525","Task","app",0,"Agent monitor needs its own log prefix","""This should be done to allow the agent monitor log files to be differentiated from the agent log files."""
"EVG-8569","New Feature","platform",2,"move tychoish/mongorpc into anser","""also use bsonx.Document for rpc wire messages"""
"EVG-6546","Task","app",1,"Allow intent host IDs to pass host validation when using user data","""The API server performs various checks on the host payload when contacted by the agent, including checking that the given host ID matches the host ID in the database. However, when the host is bootstrapped with user data, it only has the intent host ID available to it at the time that it's initialized. The API server should accept the intent host ID in the case of a host bootstrapped with user data. """
"EVG-6541","Bug","app",0,"Fix monitor file logging","""File logging needs to be given absolute path."""
"EVG-6540","Bug","app",2,"Check if webhooks exist in a repository before creating them","""When a repository is moved in GitHub (from one org to another) it seems to retain the webhooks that were set up before the move. When the Evergreen project is adjusted to point to the new owner it tries to create a webhook on the repo, but it fails since the webhook already exists.    Perhaps a solution is to check which whether Evergreen hooks have already been created for the repo and if so just save them instead of trying to create them.    Not sure what to do about the orphaned webhooks in the database when a GitHub repo is deleted (and then possibly reinstated and tracked in Evergreen)."""
"EVG-6539","New Feature","app",2,"dependency aware task dispatching should ensure task groups are in order","""tasks now have a task group order number that's populated, and it probably makes sense that within a schedule-able unit in the task dispatcher, we should ensure that task groups are ordered correctly. """
"EVG-6538","New Feature","app",2,"remove task group caching backfill job from pre-scheduler jobs","""we should figure out if there's a case where we need to continue to backfill task group order number in the scheduler, and if not we should remove it (and all task group caching?) """
"EVG-6537","New Feature","app",0,"distro admin ui for tunable scheduler options","""time in queue  expected runtime     (maybe rename zipper factor?)"""
"EVG-6536","New Feature","app",1,"add global admin UI options for tunable scheduler options","""time in queue  estimated runtime"""
"EVG-6535","Task","app",0,"Agent monitor should only listen on loopback","""Currently it listens on the given port for all IPs tied to the host."""
"EVG-6534","Bug","app",0,"Do not quote command line args to agent monitor","""Since the agent monitor process gets spawned from fork/exec, it won't interpret the quotes in a shell context, unlike the legacy agent deploy job which is done in the context of an bash session over SSH."""
"EVG-6533","Bug","app",2,"Host failed to spawn with an error that ""describe instances response has no reservations""","""Evergreen should either retry or fail. Instead it left the host up in the building state. https://evergreen.mongodb.com/host/evg-rhel62-large-20190806161144-4606364672920218135    """
"EVG-6531","Bug","app",2,"Evergreen missing commits","""Commit:¬†53a9785cff7def49a94cd7d1c6538e69e2e0f680    Commit time: ~03:30 PM¬†Mon Aug 05 2019    Merge time into master: ~8:00am Tues Aug 06 2019    Merged via a PR using a merge commit. Evergreen was able to see the merge commit    ¬†"""
"EVG-6530","Bug","app",1,"Webhook response for projects without a commit queue","""If a PR for a project without a commit queue is closed the response to the webhook will be a 400 code with an error that we couldn't find the corresponding project.        """
"EVG-8705","New Feature","platform",1,"processed at field in cedar pref api shouldn't be nil","""saw nil processed-at fields, which seemed wrong: https://cedar.mongodb.com/rest/v1/perf/task_id/sys_perf_linux_standalone_validate_cmd_944b2d06d8a51719722d96055d738e59d7e45d8f_19_07_06_20_55_01    It seems reasonable to remove this field from the API. """
"EVG-8471","Bug","platform",1,"The ""err_count"" field is never incremented, but it is used in the reporting package, and persisted as 0","""There is, however, a method to get it dynamically, though that's never called."""
"EVG-6549","Task","perf-tools",8,"Support Cedar data in perf discovery","""We need a way to compare expanded metrics data across different builds and to a known baseline. We use performance discovery for this for legacy data. This includes some way to label a baseline in cedar data, although it doesn't have to be the same tagging method used by the legacy data"""
"EVG-6568","Bug","legacy-ui",0,"New patch page loads huge documents containing data not immediately needed by views","""When I go to http://evergreen.spruce.s3-website-us-east-1.amazonaws.com/#/patches?user=oleg.pudeyev, I see that https://evergreen.mongodb.com/json/patches/user/oleg.pudeyev?page=0 is loaded which - currently for me - is a 6 MB json document. Processing this amount of data brings Firefox to its knees, and while Chromium appears to more or less cope it still takes a long time.    The application should intelligently load a sensible amount of data that it requires for presenting the current views instead of trying to load all data it might ever need up front."""
"EVG-6566","Task","app",2,"User data should be able to indicate when a spawn host is ready","""This can be used by the app server to verify when a spawn host is actually ready, including task data (e.g. via a cron job).    Furthermore, hosts running tasks should only be considered running once an agent contacts the app server for a task."""
"EVG-6562","Task","app",1,"NeedsNewAgent should not be set for non-legacy hosts","""NeedsNewAgent is only used to run the agent deploy job. Since non-legacy hosts don't deploy agents directly, NeedsNewAgent does not need to be set."""
"EVG-6559","Bug","legacy-ui",2,"New patch page doesn't work in firefox or safari","""I got it to load my patches in chrome, but in firefox there are no patches."""
"EVG-6558","Task","app",0,"Jasper client should have explicit timeout","""Currently the connection cancellation relies on the context passed to {{JasperClient()}}, but it should also have an explicit deadline (e.g. <30s)"""
"EVG-6557","Task","app",0,"Update host communication time when bootstrapping with user data","""This prevents the agent monitor deploy job from running, since the agent monitor should be started through user data."""
"EVG-6554","Bug","legacy-ui",2,"Spruce patches page show different results for clicking the filters in a different order","""If I select """"failed"""", """"buildhost-configuration"""", I get what I expect, the AND of those two selections. If I select """"buildhost-configuration"""" first, however, selecting failed expands the list of patches, potentially treating it as an OR."""
"EVG-6553","Improvement","app",2,"Host allocator should allocate additional hosts if tasks run for much longer than expected","""A user can submit a patch build which substantially changes the runtime of a task. Since the host allocator starts new hosts based on the historical runtime of a task, if many tasks take substantially longer than usual, the host allocator will not allocate enough hosts to run the tasks in the queue. The long-running tasks can fully occupy the running hosts. We should consider adding logic to the host allocator that will allocate new hosts if currently-running tasks are taking much longer than their estimated runtime."""
"EVG-6551","Improvement","legacy-ui",2,"CLONE - Accommodate long variant names on the Versions Pages","""On the Versions by Variant page, long variant names are obscured.  If the long variant names are unique at the _end_ of the name, it is very hard to tell them apart.  For example, we have several variants that start with """"E2E w local & daemon"""" but then end with different qualifiers.  I cant' tell them apart on this view.    https://evergreen.mongodb.com/version/mms_e2a69e9b305c444bb6beb0ddd3b96c4ce3d2b7e5##0    !https://jira.mongodb.org/secure/attachment/213962/longnames.png|width=95%!"""
"EVG-6579","Task","app",1,"Log time to from host creation to next task","""This would be a useful metric to measure the performance of legacy vs. non-legacy hosts. Currently, hosts only log the time to finish the setup host job."""
"EVG-6575","New Feature","app",0,"scheduler support for planning distro aliases","""need to write a query to look for alaised tasks and then make sure the scheduler can persist alias queues to a seperate collection"""
"EVG-6572","Bug","app",2,"Module-only commits do not work","""The two problems that occurred to Jonathan and me are  1. Requiring a single commit on community means you cannot commit enterprise-only.  2. Getting the commit message form community means that an enterprise-only commit will have the commit message of whatever happens to be on HEAD of community."""
"EVG-8938","Task","platform",0,"Log warning should check mongo driver error instead of mgo error","""The¬†{{mongoDepot}} should check for the mongo driver error for no documents instead of the mgo driver error."""
"EVG-6585","Bug","legacy-ui",2,"New patch page expand/collapse slows down as you scroll further down.","""If I try scrolling down a few times (~3-4 pages) in infinite scroll, the response time on¬† expanding/collapsing a more recent patch patch became slower each time I opened a new one. I tested in Chrome and Firefox with no add-ons.    Example after triggering infinite scroll twice:    [^Aug-12-2019 16-09-17.mp4]"""
"EVG-6583","Improvement","legacy-ui",0,"Patch page filter on patch type","""Like the status and project filters, there could be a filter on type (cli, PR, commit queue)."""
"EVG-6582","Task","app",1,"GPG metadata in commit queue commit message when showSignatures enabled in Git","""In my ~/.gitconfig, I've set the following:      When using the commit queue, this has created the following commit in evergreen:  https://evergreen.mongodb.com/version/mongodb_mongo_master_22e98452c5eb9a4a0c08616a421e4894751966c9    The signature confirmation messages from {{git log}} appear to have propagated to the commit message."""
"EVG-6581","Task","app",0,"Jasper service should log errors to splunk","""Would be useful for debugging the Jasper service on hosts."""
"EVG-6580","Bug","legacy-ui",2,"It's not possible to set min hosts in the UI unless a distro is set to tunable","""Even though it's supported for the legacy scheduler"""
"EVG-8743","New Feature","platform",2,"s3 bucket.Pull/Push hangs for large numbers of files","""in the context of building index pages (which is admittedly done in a weird way currently) the s3 bucket does Pulls and I witnessed not all of the files downloading, (maybe list timesout or hits a max and we don't do more iteration), also hangs in cases when the files exist."""
"EVG-8526","New Feature","platform",2,"verbose/debug logging for pail/repobuilder","""particularly for Push/Pull operations it would be nice to have more insight into what's happening for longer operations. """
"EVG-6594","Task","app",1,"Intent hosts that fail to spawn should have their credentials removed","""In some testing, hosts that failed to come up (e.g. due to hitting EC2 limits) did not delete their Jasper credentials because their intent host doc is removed instead of decommissioned/terminated."""
"EVG-6592","Improvement","app",2,"Capture commit queue patches in Mbox format","""If commit queue patches are captured in Mbox format they will retain author info and commit messages and merge mode will work for CLI queues."""
"EVG-6590","Task","app",1,"Improve distro bootstrap config validation","""There are many fields related to distro bootstrapping that should be validated since fields are required depending on their bootstrapping method."""
"EVG-6600","Improvement","legacy-ui",2,"Merge queue submits should not show up on my patch queue page","""It is very confusing, because they show up as non-finalized patch queues. It is doubly confusing when I've just actually patch tested the same thing to make sure it works before sending it to the merge queue, but when I got back to the patch page to look at something else it looks like I forgot to actually run my tests."""
"EVG-9225","Task","platform",0,"Splunk logger panics if setup fails","""Closers being called before checking error causes panics if there's an error."""
"EVG-6607","Improvement","legacy-ui",2,"New patch page top menu requires clicking on menu option text","""In Evergreen menus are designed so that you can click anywhere in a rectangle to select an option, and the rectangle is highlighted. On the new patches page you have to click on the text itself. We should make the patches page menu be more like Evergreen's."""
"EVG-6604","Bug","app",1,"Legacy task finder does not skip undispatchable tasks","""This means that the dequeue op is a noop, and we rely on the scheduler running again to remove them from the task queue. """
"EVG-6610","Task","app",1,"Close Jasper connections","""Operations that open connections to Jasper services need to close them."""
"EVG-6609","Task","app",0,"Static mac hosts should be able to be bootstrapped with SSH","""Currently the provisioning setup host job does not run on static hosts. This prevents static hosts from being bootstrapped with the Jasper service via SSH.    ¬†    The scope of this ticket only covers mac hosts. Static linux hosts will need to be handled separately because they do not have root permissions."""
"EVG-9263","Task","platform",1,"Loggers should have configurable send thresholds","""Loggers are currently set to log everything that is sent to them. However, it may be desirable to configure this. For example, only log at the error level or above."""
"EVG-9043","Task","platform",2,"Stop retrying failed amboy ftdc rollup jobs","""When jobs fail because of bad data given to cedar by users, we should be notified. But, the amboy job should not continue to retry these jobs over and over. There should be some type of indicator to stop trying to calculate rollups after a certain number of failures, but this should be done keeping in mind that the data may not be bad but the there is some other issue with the application. If the latter is the case, the job should be retried once the application's issue is fixed."""
"EVG-8964","Task","platform",1,"Migrate perf model functions that use old driver to new driver","""don't forget to pass in context rather that use env's context"""
"EVG-6635","Task","app",1,"Remove credentials dependency on global environment","""Currently, there are some calls to get the global environment (e.g. [here|https://github.com/evergreen-ci/evergreen/blob/c3257d957e89b278855db9b0baf85f933b59fc6b/cloud/ec2.go#L228]). Passing the global environment can be removed if we assume that the database name and connection URI are fixed at bootstrap time."""
"EVG-6634","Improvement","app",1,"Update documentation","""Update commandline documentation for spawn hosts"""
"EVG-6632","Improvement","app",2,"Specify the distro when creating cloud managers in order to get correct key/secrets.","""Currently we only use a default region for spawn hosts. We want Admin Settings (Providers.AWS) to allow for multiple keys/secrets (map region -> key or value). Region from EC2ProviderSettings should be passed through so we know which key/secret to use (if no region, use us-east-1 as the default)."""
"EVG-6631","Improvement","app",1,"Modifying Admin Settings to take multiple EC2 keys/secrets.","""Should be able to add additional EC2 Region/Key/Secrets within the AWS admin card with a [+] (this region should correspond to the alias tacked on to the end of the distro, for example ‚Äúeurope‚Äù).Should also add to admin settings route."""
"EVG-6629","Improvement","app",0,"Add option to run commands on host","""Jasper will need to be provisioned on hosts. This may be available only from the CLI."""
