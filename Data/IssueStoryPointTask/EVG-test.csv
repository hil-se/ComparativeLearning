"issuekey","type","components","storypoint","title","description_text"
"EVG-8542","New Feature","platform",2,"Allow aborting amboy jobs by prefix","""Currently you can abort jobs by id, or you can abort all jobs, but you can't abort only one kind of jobs. We should add this functionality, possibly by allowing aborting jobs by prefix."""
"EVG-7572","Bug","app",2,"Logs url from API is wrong","""The Build Baron worker occasionally fails to download logs to search for failures. Looking into one of these failures, it seems like we are getting the wrong log URL from the API. It does seem to occur when there have been multiple executions of the task and we are looking at an execution that may not be the latest.    For example, [This task|https://evergreen.mongodb.com/rest/v2/tasks/mongodb_mongo_v4.4_enterprise_debian10_64_jstestfuzz_concurrent_replication_continuous_stepdown_flow_control_09_enterprise_debian10_64_340ddb282a92bb5e97d0c43b7d44c26ec7d8da0e_20_03_10_13_18_27?fetch_all_executions=1]. Looking at the first executions, all the logs seem to append an extra """"_0"""" to the task id in the URL, which makes the links invalid. The log to the system log is: https://evergreen.mongodb.com/task_log_raw/mongodb_mongo_v4.4_enterprise_debian10_64_jstestfuzz_concurrent_replication_continuous_stepdown_flow_control_09_enterprise_debian10_64_340ddb282a92bb5e97d0c43b7d44c26ec7d8da0e_20_03_10_13_18_27_0/0?type=S"""
"EVG-7569","Bug","app",1,"Commit queue sends notifications to the wrong item","""Recently when an item in the queue finishes processing the queue sends a notification to the next item in the queue that hasn't even started processing yet and not for the item that finished processing."""
"EVG-7565","Task","app",1,"Reduce logging in scheduler","""The scheduler produces a lot of noisy grip logs that make it difficult to find distro logs in Splunk. We should remove the ones that log frequently and don't produce a lot of useful output."""
"EVG-9125","Task","platform",0,"Increase repobuilder timeout","""The new repobuilding service has to build more repos, so it will hit the 1 hour timeout and fail to sync with pail."""
"EVG-8683","New Feature","platform",2,"Update selected-tests to use poetry","""Update selected-tests to use poetry"""
"EVG-8370","Bug","platform",2,"Double slashes and permanently moved errors ","""See [here|https://mongodb.splunkcloud.com/en-US/app/search/search?earliest=-4h%40m&latest=now&q=search%20index%3Dcedar%20auth&display.page.search.mode=smart&dispatch.sample_ratio=1&display.page.search.tab=events&display.general.type=events&display.visualizations.charting.chart=line&sid=1584021158.2338196] for more information. This may be due to redirects."""
"EVG-7577","Improvement","app",1,"Log event when host allocator changes static host status","""This is convenient for tracking events such as transitioning between running and quarantined/terminated."""
"EVG-7583","Bug","legacy-ui",2,"Lobster json pretty printing goes away with scroll","""Scroll around the one bookmark here with the json pretty printing on to understand: https://logkeeper.mongodb.org/lobster/build/56e19e8ab9e7042a85b559a81a5be69b/test/5e6ab05c9041301fc71f79bd#bookmarks=53211&l=1"""
"EVG-7581","Task","app",0,"Add newline for distro aliases listed in CLI","""It needs whitespace or the first alias is printed on the same line."""
"EVG-7580","Task","app",1,"Add AWS credentials for S3 push to agent","""The agent needs the credentials to push task directories to S3. This should probably go in the environment for the agent setup."""
"EVG-7641","Task","app",2,"So many log lines of ""Attach test logs succeeded"" in Java tests","""It's coming from         For example, see https://evergreen.mongodb.com/task/mongo_java_driver_tests_zlib_compression__version~3.6_os~linux_topology~standalone_auth~noauth_ssl~nossl_compressor~zlib_jdk~jdk8_test_cedb69c82bd4bd321a2929b4110f574dee5a2881_20_03_13_16_01_44.    I think this is because in Java each Junit test generates its own file, and the command is logging every single one.    Anything we can do to dial down the verbosity of this logging?"""
"EVG-7590","New Feature","app",0,"Noop new agent downloads from monitor if instance is going to shut down","""On an AWS host, if the instance is going to shut down, the monitor should not download a new agent. The agent has likely exited due to detecting that the instance is going to shut down. Instead of exiting the monitor, simply noop the download and setup, since having code that exits the monitor is potentially risky."""
"EVG-7589","New Feature","app",1,"Do not create tickets for system-unresponsive tasks","""System-unresponsive tasks do not require human investigation, so we should not create tickets for them. Only setup, system, and failed tasks should create tickets."""
"EVG-7588","New Feature","app",1,"Shut down agent before AWS shuts down spot instance","""Poll this endpoint on AWS hosts https://aws.amazon.com/blogs/aws/new-ec2-spot-instance-termination-notices/ and exit the agent if the endpoint returns that the host is going to be terminated. This should ensure that the agent does not report a failed or system failed status to the app server. Instead we will rely on the app server cleaning up this task to mark it system unresponsive."""
"EVG-7586","New Feature","app",1,"Download working directory from spawn from task ","""The linked tickets describe preserving and restoring the working directory from tasks. Another use case is restoring the directory to a spawn host in order to debug a failure."""
"EVG-7585","Task","app",1,"Do not show validation warnings for distro aliases","""If you run {{evergreen validate}} on a config containing a distro alias for distros/run_on, it will give warnings about a nonexistent distro even though the distro alias exists. It shouldn't give warnings for using a distro alias."""
"EVG-7597","Improvement","app",2,"Display task BFGs should link to failing execution tasks' logs","""Since [EVG-7304|https://jira.mongodb.org/browse/EVG-7304] a single BFG is created for all test failures in a display task.   We should change the task log links to point to execution tasks' logs since the display task has no logs."""
"EVG-7596","Bug","app",2,"A display task was finished before it actually finished","""A display task had two execution tasks that timed out. We logged an event for the display task finishing before the second execution task timed out."""
"EVG-7595","Bug","app",1,"Decommission idle hosts of deleted distros","""The idle hosts query relies on finding distros that exist. However, for hosts whose distros have been deleted (e.g. for distro aliases), these hosts also have to be decommissioned."""
"EVG-7593","Task","app",1,"Handle distro aliases in host.create","""Currently there's no handling of distro aliases in the host.create command."""
"EVG-7603","Bug","app",1,"Virtual workstation home volume device name isn't set","""When we attach a volume to the instance we should pass the distro's home volume device name to AWS."""
"EVG-7602","Bug","app",1,"Intent host IDs sent to DescribeInstances API","""This is a problem, because it causes Evergreen to exceed its API limit, which prevents it performing other operations. Evergreen did this 5000 times in a 1-hour period https://mongodb.splunkcloud.com/en-US/app/search/search?q=search%20index%3Devergreen%20client%3D%22%5C*cloud.awsClientImpl%22%20message%3D%22AWS%20API%20call%22%20metadata.level%3D70%20%20api_name%3DDescribeInstances%20InvalidInstanceID.Malformed&earliest=1584547200&latest=1584550800&display.page.search.mode=verbose&dispatch.sample_ratio=1&sid=1584554969.4654267."""
"EVG-7601","Bug","app",2,"Handle AZs that don't support the instance type in Fleet requests","""Some AZs don't support all instance types. If a distro's instance type isn't supported by an AZ we should exclude that AZ from Fleet requests (by way of its subnet ID) for instances of that distro, or at least catch the error and not retry.   One possibility is to get the list of supported instance types for an AZ [through the API|https://docs.aws.amazon.com/sdk-for-go/api/service/ec2/#EC2.DescribeInstanceTypeOfferings] (and probably cache it somewhere)"""
"EVG-7600","Task","app",2,"Investigate finding distros by ID in all usages","""A bunch of calls to find distros by ID should probably support usage of aliases, but they have to be handled on a case-by-case basis."""
"EVG-7599","Bug","app",0,"Handle distro aliases when checking distro permission scopes","""When distros are deleted, the distro IDs used to check permissions should go to their aliased distro instead of the deleted distro."""
"EVG-9221","Task","platform",2,"use go1.13 for cedar","""can we deploy from artifacts compiled by computers that aren't julian's laptop. please verify"""
"EVG-7614","Task","app",0,"Validate that user does not spawn a virtual workstation with task data","""Since virtual workstations are just slightly different spawn hosts and do not have a github key to clone repositories, it would be invalid to load task data. It is still possible to do this via the UI or just a straight rest request."""
"EVG-7612","Task","app",0,"Omit Jasper splunk credentials for virtual workstations","""Virtual workstation hosts (and probably spawn hosts in general) shouldn't get these credentials."""
"EVG-7611","Bug","ui",0,"Task table shouldn't push default query params to URL","""currently the task table component pushes default query params to the URL if invalid query param values for the task table. The task table should not push default query params to the URL and infer the correct parameters internally"""
"EVG-7609","Bug","perf-tools",2,"Problems in performance graph displays","""Some graphs are showing artifacts and may be trying to connect the results from different thread levels.Â """
"EVG-7608","Bug","ui",1,"Loading skeleton for task page tabs","""add the loading skeleton for the task page tabs"""
"EVG-7607","Bug","perf-tools",2,"sys-perf benchmarks return ""could not find task on base commit""","""sys-perf has started using generate.tasks, which appears to interact poorly with historical data. This link https://evergreen.mongodb.com/plugin/json/history/sys_perf_linux_standalone_validate_cmd_patch_aef7cbf49c396df95c02606a9e94d26c892e53ed_5e72767c1e2d17595813fb53_20_03_18_19_52_18/perf returned """"could not find task on base commit"""", presumably because the task didn't exist at all in the base commit. We should see if it's possible to have the logic to look back past base commits even if the task doesn't exist."""
"EVG-7606","Improvement","app",2,"Spawn host display names","""Add a display name to spawn hosts that user's can change to something more memorable than instance ids."""
"EVG-7604","New Feature","ui",2,"Patch page: schedule patch tasks mutation","""The schedule button on the patch page calls modify version to schedule all tasks    in legacy UI, clicking """"schedule all tasks"""" on patch page makes a PUT request to [/version/\{versionId}|https://evergreen.mongodb.com/version/5e727e7932f41772e1594452]Â with a req payload ofÂ   """
"EVG-9065","Task","platform",1,"cleanup paths for temporary directories","""currently we hardcode some stuff in data, but it should be app-level configurable"""
"EVG-7622","Question","app",1,"cron buildvariant has not run","""I used cron syntax for a buildvariant to run OCSP tests. The tests are supposed to run every 14 days and the buildvariant first shows up in the waterfall on 2/28/2020 but all of the runs show that it is inactive. Is the syntax incorrect? {{evergreen validate}} does not report any errors.    Link to the section of the config file that defines this buildvariant:Â [https://github.com/mongodb/mongo-go-driver/blob/master/.evergreen/config.yml#L1605]"""
"EVG-7620","New Feature","ui",1,"App crashes when switching back and forth between tabs","""Attached are screenshots of the error on the patch and task pages. the task page is the screenshot with the 422 error.Â """
"EVG-7617","New Feature","ui",1,"Make url query params between patch and task pages the same","""The query params used between patch and task page should be the same. the params passed to the queries should also be the same (where there is overlap).Â     This specifically relates to the sortDir param, which has a value ofÂ ASC || DESC on the patch page and 1 || -1 on the task page.Â """
"EVG-7616","Task","app",0,"Add environment variable option to skip integration tests","""Almost 90% of the time I don't care about the integration tests and I don't want to populate the credentials, so I just want to skip them."""
"EVG-7628","New Feature","app",1,"Document process","""Document how to set this up to simplify setup for users"""
"EVG-7626","New Feature","app",2,"Add git_tags_only tag to tasks in yaml","""Introduce a """"git_tags_only"""": true setting for tasks in the project yaml that should only run when a git tag is pushed (i.e. not in mainline or patch builds) and the commit author is part of the allowed github usernames"""
"EVG-7625","New Feature","app",2,"Add authorized github usernames to project","""Only these users will be able to create versions when they push git tags"""
"EVG-7624","New Feature","legacy-ui",2,"Add regex patterns to project to determine what tasks should run","""Add to UI, as well as CLI. Should handle  variant regexes, task regexes, variant tags, and task tags."""
"EVG-9181","Task","platform",2,"split options for deleteOnSync","""add separate options for delete on sync pull-only/push-push (and make the current option just set the other two option, with validator logic to prevent ambiguous settings.)    """
"EVG-7635","Improvement","app",1,"Do not terminate user data hosts that pass provisioning cutoff if they are running a task","""Due to a job backup today, some hosts were stuck in starting but since they ran with user data, the agent managed to pick up tasks even though they were not marked as provisioning. We should let these hosts continue as long as they are running tasks."""
"EVG-7634","Bug","ui",1,"Task Page: Add Test Count to GQL schema","""task type should return the failed test count to display in the tests tab    taskTests mutation should return total number of tests in task tests    taskTests mutation should return number of tests found from filters excluding page and limit    Â """
"EVG-7633","Bug","ui",1,"Task Page: Add file count to GQL schema","""this is necessary to show the number of files in the files tab."""
"EVG-7632","Bug","app",1,"Git commit date can be later for modules than for the main repo","""The commit queue pushes module commits before the main repo so the module commit hashes recorded in the main commit's manifest will be accurate.  Despite this, sometimes the main repo commit's commit date precedes the modules' and the manifest gets the wrong commit."""
"EVG-7631","New Feature","legacy-ui",2,"Patch page: map patch task status & base status to corresponding badge color","""The status and base status columns in the patch tasks table should show badges that correspond to the status color    Will require putting new tasks in DB for patch that cover all available patch statuses    [https://mongodb.invisionapp.com/d/main/?redirHash=#/console/19479418/408295791/preview?scrollOffset=229]"""
"EVG-7630","Task","app",1,"Alias static hosts with build/test suffix","""We have to migrate all the static hosts to use the large/small convention instead. The old host task queues should be cleared after the distro is aliased and deleted to avoid duplicate task notifications, since their queues tend to be very long."""
"EVG-7629","New Feature","ui",0,"Add Makespan field to GQL Schema","""Add Makespan field to GQL schema to show in the Task metadata panel"""
"EVG-8408","Bug","platform",1,"Poplar gRPC doesn't set timestamps","""Events added through poplar gRPC don't seem to have their timestamps reflected in the resultant ftdc files.     It looks like the [Export|https://github.com/evergreen-ci/poplar/blob/3ed14b6c043a6f2d434241a302690e904daa47ff/rpc/internal/collector.ext.go#L8] function doesn't pass the timestamp field on to the [Performance|https://github.com/mongodb/ftdc/blob/0659acdc6e9ea8863e0d9e888fb09da4287343d2/events/performance.go#L26] struct."""
"EVG-7645","New Feature","ui",2,"Report relevant errors to bugsnag","""report errors to bugsnag and new relicÂ     Â [https://docs.google.com/document/d/1G7Fyp6VwCIwfY2kwzEUKRnQuYD1yAV3wb5Tuv3GF_Xg/edit]   * this should be high alert to bugsnag:Â [https://github.com/evergreen-ci/spruce/pull/106/files/9fcc28747dd1da382d4c499defe56c83d47eb1a1#diff-a7ecbc3c8ce6748c1957900fcbc52ae3R123]"""
"EVG-7644","Improvement","app",0,"Allow status to be set on terminated static host and preserve quarantined status","""Static hosts are terminated if removed from  a static distro, but should be set to running if moved to a different distro."""
"EVG-9202","Task","platform",1,"Better REST logging","""Many of the admin commands have bad service side logging so it makes it hard to figure out issues when something goes wrong. We should have more robust logging in these cases."""
"EVG-8955","Task","platform",1,"Standardize cronjob names in selected tests","""As a DAG engineer,   I want all the selected tests cronjobs to have the same prefix,  So that I can easily detect them in the kanopy output.    ----    AC:  * all cronjobs in selected tests start with 'selected-tests'"""
"EVG-7654","Task","app",2,"Remove binary representation of generate tasks","""We currently save both a binary version and a string version of generate tasks. We have been running with the string version for some time, so we're confident that it works. We should stop persisting the binary version."""
"EVG-7653","Bug","perf-tools",0,"Incorrect trend graph representation in some cases","""Incorrect trend graph representation in some cases  [aggregation on Standalone Linux inMemory|https://evergreen.mongodb.com/task/performance_4.4_linux_wt_standalone_aggregation_02e12f2b4acfb8f1d401ed78a04fe4b6e23b9976_20_03_20_20_37_41##Aggregation.Group.TenGroupsWithSumJs]    When selected commit is on top of improvement then the graph is built incorrectly:   !Screen Shot 2020-03-25 at 11.31.36 AM.png|width=600!     When the selected commit set up on the any other point (other then âfirst failing revisionâ point) then graphs look good:   !Screen Shot 2020-03-25 at 11.32.23 AM.png|width=600!   """
"EVG-7651","Bug","ui",2,"Some json objects in lobster aren't expanded","""In https://logkeeper.mongodb.org/lobster/build/b0b5735508d54fe614397bd9d310f5be/test/5e7b8263f84ae831d1166f42#bookmarks=0%2C478%2C3498%2C21167%2C21405%2C21432%2C21442%2C21468%2C21469%2C21471%2C21472%2C21473%2C21474%2C21619%2C21707%2C21728%2C21828&f~=000~%2Fmongod&f~=100~config.shards&l=1, Line 3498 is not expanded when the """"pretty print"""" setting is enabled."""
"EVG-7649","Bug","ui",1,"fix patch-route flakey test: Fetches sorted tasks when table sort headers are clicked ","""right now this test is muted"""
"EVG-7647","Bug","legacy-ui",2,"Lobster UI lag when selecting options or highlighting log line","""The latest [version|https://github.com/evergreen-ci/lobster/commit/9968954d3568ff4899f0e807e6eb0a6054d5a5f3] of Lobster appears to have a noticeable lag between the time of executing an action like clicking an option button or highlighting a log line and the action having an effect. This [screencast|https://www.dropbox.com/s/w5hr9e41ckltfn9/lobster_ui_slow.mov?dl=0] tries to capture the effect. This happens on Chrome (80.0.3987.132) and Safari."""
"EVG-7657","Improvement","app",0,"Do not pass host's SSH options into SSH command runners","""Since the SSH options are already available without needing to pass them in, it doesn't make sense to pass a property of the host into a host method."""
"EVG-7656","Task","app",2,"enable extended amboy stats in evergreen","""there's a constant in the code to disable it, and the goal is to flip the query, but we just have to make sure that the operations aren't going to be too expensive (we've tried it in the past), but I think we've added indexes so it should be fine, but it's a bug that doesn't reproduce in staging"""
"EVG-8426","Bug","platform",1,"ssh keys not being created in cronjobs","""The ssh keys for test selection workers are not getting created properly and causing the scripts to fail. It looks like this is due to attempting to pass an argument when we source the script to create the ssh keys, which doesn't work. See [here|https://github.com/mongodb/selected-tests/blob/fe60908fcd767d40b285dd854659ca9f7a16f2fb/cronjobs/update_task_mappings.sh#L5]"""
"EVG-8424","Bug","platform",2,"Why does an ID of 0 lead to a monotonically-increasing value?","""Would be a question ticket, but it looks like that type doesn't exist for this project. Was just wondering what the reasoning is behind [this|https://github.com/mongodb/ftdc/blob/master/events/performance.go#L169] if-statement that leads to IDs monotonically increasing if they're at zero. It's preventing us from zero-indexing threads and I was curious what the rationale was / whether there are cases when we should just let it monotonically increase."""
"EVG-7671","Bug","app",1,"Intent hosts for hosts started by tasks are removed after three minutes","""The query the host allocator uses to find stale host intents also includes stale intents for hosts started by tasks and removing those is the purview of [PopulateHostTerminationJobs|https://github.com/evergreen-ci/evergreen/blob/49d6d438cb3c5aed7f64f01deef2832aafd374c0/units/crons.go#L271] """
"EVG-7670","Improvement","app",1,"Spawn host queries for host provisioning should check UserHost","""Some places check for UserHost, but other places check StartedBy, which is unreliable because it could include host.create hosts."""
"EVG-7668","Task","app",2,"Investigate Fleet error message","""When we tried starting an arm instance with Fleet we got an error message which indicates that instead of asking for an instance in us-east-1a we should ask for an instance in us-east-1b or us-east-1d. The request overrides (included in the log message) included all three, though us-east-1a was first. The default subnet for the distro (included in the launch template) could have been us-east-1a as well.    In general, investigate whether AWS is respecting all the overrides, or just picking the first."""
"EVG-7666","Improvement","app",1,"Do not call DescribeInstances twice to get volume total size","""When we call {{cacheHostData}}, we already have the instance info from {{DescribeInstances}}. However, calling {{getVolumeSize}} within that function makes another request to {{DescribeInstances}}, so we unnecessarily double the amount of {{DescribeInstance}} calls we need to make for caching. We do this every time we cache the host data (e.g. during the cloud host ready job)."""
"EVG-7662","Bug","legacy-ui",1,"Select first matching distro from spawn host page if distro is aliased","""If you try to spawn a host from the task page for a distro that has been deleted, just try to find the first matching distro which has an alias (or give some kind of error message saying no such distro exists)."""
"EVG-7685","Improvement","app",1,"Fix Create Volume device name generating","""Caused the 3/30 outage"""
"EVG-7684","Improvement","app",2,"Add UI option to pull data from this task sync from s3 into a spawn host","""If this task's working directory was synced with s3 (through a CLI request to do so), it should have a UI display to show the command to pull from the task sync directory. """
"EVG-7682","New Feature","ui",1,"Use order field instead of patchNumber from Task gql type & rm patchNumber field ","""FE: patch number should accessed from the order field on the Task type instead of patchNumber on the Task type.Â     BE: Remove patchNumber from the Task type"""
"EVG-7681","Bug","app",0,"Task groups not executing sequentially","""We're seeing build failures again where the """"stitch_support_run_tests"""" task starts executing before the """"stitch_support_install_tests"""" finishes. As a result the former task fails, because the test binary it wants to run isn't finished building and installing."""
"EVG-7680","Task","app",2,"Add project-level configuration to enable s3 push/pull via project config and patching","""Since these commands can expose secrets stored in the agent's task directory and anyone in evergreen can run a patch whose task directory can be later pulled, project admins should opt into this feature.    Alternatively, there could be an option to allow s3.push and s3.pull but not allow {{evergreen fetch}} to download the task dump. This would keep the task directory within the agent's host."""
"EVG-7679","Task","app",1,"Write docs for s3.push and s3.pull","""These new commands should be documented in the wiki. There should be lots of strong words about the potential exposure of secrets in the task directory.    Also document the {{variants}} field for commands, dependencies, and requirements.    Also document how to use the CLI options."""
"EVG-7674","Improvement","app",1,"Allow -y argument to evergreen commit-queue with multiple commits","""With multiple commits on the current branch, run the following:    {{evergreen commit-queue merge -p mongodb-mongo-v4.4 -y}}    Expected: The commits are submitted to the merge queue.    Actual: Evergreen prompts me:    {{Commit queue patch has multiple commits. Continue? (y/n):}}    I think that """"-y"""" should override all yes/no prompts."""
"EVG-7694","Task","app",2,"Change font and add plugins","""change font to consolas/inconsolata  plugins:   - JavaScript (for server tests) ([EsLint|https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint], [Babel|https://marketplace.visualstudio.com/items?itemName=mgmcdermott.vscode-language-babel], [Snippets|https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets], [Booster|https://marketplace.visualstudio.com/items?itemName=sburg.vscode-javascript-booster])  - Golang (for us as well as enterprise tools) ([Go|https://marketplace.visualstudio.com/items?itemName=ms-vscode.Go])  - Snippet/Expansions ([vscode-snippet|https://marketplace.visualstudio.com/items?itemName=vscode-snippet.Snippet])  - Yaml ([YAML|https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml])  - markdown/restructured text ([Markdown All in One|https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one])  - Bash/shell scripting ([Bash Debug|https://marketplace.visualstudio.com/items?itemName=rogalmic.bash-debug] and [Bash IDE|https://marketplace.visualstudio.com/items?itemName=mads-hartmann.bash-ide-vscode])  - The vim emulation mode ([VSCodeVim |https://marketplace.visualstudio.com/items?itemName=vscodevim.vim])  - Emacs emulation mode ([Emacs Friendly Keymap|https://marketplace.visualstudio.com/items?itemName=lfs.vscode-emacs-friendly])  - Some good themes ([Base 16 Themes|https://marketplace.visualstudio.com/items?itemName=AndrsDC.base16-themes])  - REST ([REST Client|https://marketplace.visualstudio.com/items?itemName=humao.rest-client])"""
"EVG-7693","Improvement","ui",1,"Don't use all caps for status badge labels","""They should be in title case like the rest of the labels"""
"EVG-7691","New Feature","ui",0,"TreeSelect width should be dynamic / 100% of its parent","""I made a temporary fix so that TreeSelect accepts a width prop. However it causes the dropdown div to be less width than its parent.Â """
"EVG-7689","Improvement","app",1,"Ignore extra variables in project validation","""A lot of projects give this error:   {{WARNING: yaml: unmarshal errors: line 1: field variables not found in struct model.ParserProject}}  This is because many projects use variables.    There's also a project validation error message missing a value for the format string on [this line|https://github.com/evergreen-ci/evergreen/blob/f64dfedbd176edf4959711fe26b0bfe0a41ffe43/operations/validate.go#L98]."""
"EVG-7688","Improvement","ui",2,"Limit GraphQL playground mutations to superusers","""Queries are already limited to authenticated users. The goal of this ticket is to limit mutations."""
"EVG-7687","Improvement","perf-tools",3,"Performance Baron number type filter should support abs","""As a Build Baron,   I should be able to filter by absolute value (e.g. '>= abs(0.05)'),   So that I can filter change points that would generally be viewed as noise.  ----  AC:   * In addition to the currently supported operators ('>','>=','<','<=' and '==') number field types should also support abs() to filter by absolute value.   * the default filter for the hazard field should be set to '>= abs(0.05)'"""
"EVG-7686","Improvement","perf-tools",2,"Performance Baron sorting by revision should sort chronologically","""As a Build Baron,   When I sort by revision,   The change point data should appear in chronological order.  ----  AC:   * the revision field is essentially random so sorting by revision whithin a page is meaningless and not helpful   * there is a one to one mapping from the revision to the order field. The revision sort should use the order field to allow sensible sorting, as the Order field is the monotonically increasing field that essentially represents the create time of the performance data."""
"EVG-9226","Task","platform",2,"Scoped jobs should be resilient to server restarts","""Repobuilder jobs that are in progress get stuck in progress when the app server is restarted. If they are stuck in progress, the stuck job will block any future job with the same scope from running. They should probably restart if they're stuck in progress. This is likely due to some problematic interaction between scopes, the lock timeout, and job dispatching."""
"EVG-9112","Task","platform",0,"Add option to verbose log the files being downloaded from pull","""This is mostly a UX benefit for users running the CLI pull command, which could take a long time depending on your network bandwidth. In lieu of having a progress bar, it would be nice to give an option to print what file is currently being downloaded from S3."""
"EVG-9016","Task","platform",3,"Restrict calculation of change points to the portion of the time series after the latest triaged change point","""AS a DAG engineer,  I'd like to restrict the calculation of change points to the portion of the time series after the latest triaged change point, such that, we do not evict triaged change points and do not constantly recalculate change points over old performance results.    AC:  * change points only detected for the part of the performance result history that has not yet been triaged"""
"EVG-8748","New Feature","platform",3,"Add change point list grouped by version endpoint to cedar","""As a DAG engineer,  I'd like to add route to get change points grouped by version, such that, we can get a list of change points grouped by version for other components to use.    AC:  * paginated  * conforms to technical design API (page, page_size, total_pages -- do not worry about filtering and sorting for this ticket)"""
"EVG-8704","New Feature","platform",2,"Add percent_change to change points","""As a DAG engineer,   I'd like cedar to calculate percent_change for change points being detected, such that, it can be used for filtering/sorting.    AC:   * percent_change is calculated and persisted during change point calculation jobs   * Migrate existing change points in cedar to have these"""
"EVG-8602","New Feature","platform",3,"Add filtering by variant, task, test, version, measurement, thread_level to get change points by version API","""As a DAG engineer,  I'd like to be able to filter change points by variant, task, test, version, measurement, thread_level, such that, these lists can be filtered.    AC:  * these lists can be filtered using a regex for the above properties    Please see technical design for API to implement."""
"EVG-8595","New Feature","platform",2,"Add triage section to change points in cedar","""As a DAG engineer,  I'd like to add a triage section to change points being detected in cedar, such that, this triage section can be integrated with further triaging functionality.    AC:  * Triage section added and persisted in default untriaged status for all change points being created  * Add default to all old change points      See technical design of associated epic for format."""
"EVG-8561","New Feature","platform",2,"Add sorting for percent_change and calculated_on to cedar change points lists","""As a DAG engineer,   I'd like to be able to sort change points lists from cedar by percent_change, and calculated_on, such that, these lists can be sorted by these properties.    AC:   * Can sort on these properties"""
"EVG-8557","New Feature","platform",2,"Add triage endpoint to cedar","""As a DAG engineer,  I'd like to add a triaging endpoint to cedar, such that, change points can be triaged.    AC:  * Triage endpoint added.    Please see technical design for exact API to implement."""
"EVG-8462","Bug","platform",0,"DispatchBy should query for tasks before current time","""If it's before the DispatchBy time, we can still dispatch the job. If it's past the DispatchBy time, we should not dispatch the job."""
"EVG-7708","Task","app",2,"Allow users to specify region in s3 commands","""As we have more remote users, we should allow buckets outside of the """"us-east-1"""" region to be usable with our s3 commands. Doing this would require letting users specify the region of their bucket in the s3 command."""
"EVG-7706","New Feature","perf-tools",2,"Add component for filtering expanded metrics change points by triage status","""As a DAG engineer,  I'd like to add a UI component for filtering expanded metrics change points based on triage status, such that, build barons can focus on untriaged change points.    AC:  * Add and integrate component allowing users to select triage status filter on expanded metrics triaging page  * Update service layer to pass through triage filter  * defaults to """"untriaged""""    Here is the [wireframe|https://docs.google.com/spreadsheets/d/1Dh-C2CB15lb7veXP1uoXZNh43MMvZuvx4hX-4mVilSY] for the UI.  Here is the [technical design|https://docs.google.com/document/d/1wKLZ-IWjA8-kWAO44tHotzuYei0y2rNX7OQjrKGEo34] for this project.  The specific route this component should be backed by is:      """
"EVG-7703","New Feature","perf-tools",3,"Add sorting capability to component for filtering percent_change, and calculated_on","""As a DAG engineer,  I'd like to add the ability to specify a sort in the component that handles filtering for the above properties in the change point for expanded metrics list in spruce, such that, we can also sort on these properties.    AC:  * Can specify a sort order as well  * Service updated to pass sort through to API    Here is the [wireframe|https://docs.google.com/spreadsheets/d/1Dh-C2CB15lb7veXP1uoXZNh43MMvZuvx4hX-4mVilSY] for the UI.  Here is the [technical design|https://docs.google.com/document/d/1wKLZ-IWjA8-kWAO44tHotzuYei0y2rNX7OQjrKGEo34] for this project.  The specific route this component should be backed by is:  """
"EVG-7702","New Feature","ui",2,"Component for filtering by percent_change and calculated_on in the Expanded Metrics Perf Baron UI","""As a DAG engineer,  In the [Expanded Metrics Perf Baron UI|https://evergreen.mongodb.com/perf-bb/expanded-metrics-change-points], I'd like to have a component that allows user to specify filter for change points by percent_change, and calculated_on, such that, these lists can be filtered on the front end. Percent change and calculated on are floats and datetimes, respectively, and this component should allow users to specify windows for these filters per the [wireframe|https://docs.google.com/spreadsheets/d/1Dh-C2CB15lb7veXP1uoXZNh43MMvZuvx4hX-4mVilSY].    AC:  * Component should be integrated into change point table for each of the above properties  * Service updated to pass these arguments through to API calls appropriately    Note: [Technical Design|https://docs.google.com/document/d/1wKLZ-IWjA8-kWAO44tHotzuYei0y2rNX7OQjrKGEo34/edit#]"""
"EVG-7701","New Feature","perf-tools",2,"Add sorting capability to component for filtering variant, task, test, version, measurement, thread_level","""As a DAG engineer,  I'd like to add the ability to specify a sort in the component that handles filtering for the above properties in the change point for expanded metrics list in spruce, such that, we can also sort on these properties.    AC:  * Can specify a sort order as well  * Service updated to pass sort through to API    Here is the [wireframe|https://docs.google.com/spreadsheets/d/1Dh-C2CB15lb7veXP1uoXZNh43MMvZuvx4hX-4mVilSY] for the UI.  Here is the [technical design|https://docs.google.com/document/d/1wKLZ-IWjA8-kWAO44tHotzuYei0y2rNX7OQjrKGEo34] for this project.  The specific route this component should be backed by is:      """
"EVG-7700","New Feature","perf-tools",3,"Component for filtering by variant, task, test, version, measurement, thread_level when getting change point lists from legacy UI","""As a DAG engineer,  I'd like to have a component that allows user to specify filter for change points by variant, task, test, version, measurement, thread_level, such that, these lists can be filtered on the front end.    AC:  * Component should handle creating basic regexes  * Component should allow user to specify an exact regex, either directly, or using some kind of advanced mode  * -Component should provide a tooltip describing what it does somewhere, in case user is confused-  * Component should be integrated into change point table for each of the above properties  * Service updated to pass these arguments through to API calls appropriately  * measurement filter should default to the following three measurements: [â95th percentile latencyâ, â50th percentile latencyâ, âaverage read latencyâ]    Here is the [wireframe|https://docs.google.com/spreadsheets/d/1Dh-C2CB15lb7veXP1uoXZNh43MMvZuvx4hX-4mVilSY] for the UI.  Here is the [technical design|https://docs.google.com/document/d/1wKLZ-IWjA8-kWAO44tHotzuYei0y2rNX7OQjrKGEo34] for this project.  The specific route this component should be backed by is:  """
"EVG-7699","New Feature","perf-tools",3,"Add change point grouped by version table to legacy UI","""As a DAG engineer,   I'd like to add a table component to display change points grouped by version to the legacy UI, and expose it as a page in evergreen, such that, people can see expanded metrics change points in evergreen.    AC:   * Table page available in evergreen   * version should be able to be expanded showing change points it contains   * Table should allow you to multiselect change points/versions   * Existing perf baron page has option to switch to expanded metric baron page   * This now page has option to switch to legacy perf baron page   * API providing data should be exposed as a service, not actuated directly by table component    Note: no filtering/sorting/actions for this ticket    Please consult design doc and legacy perf baron page for guidance."""
"EVG-9196","Task","platform",2,"Configure selected tests pytest to run all the correct tests and checks","""As a DAG engineer,   I should be able to run all the required pytests and checks in one command,   So that selected-test development is stream lined.  ----  AC:   We already support flake8 and isort   * configure pytest to allow it to run:   ** black   ** pydocstyle src   ** mypy src   * Update docs/Contributing.md to reflect the simplified command.   * we will not be fixing the errors in the test directory"""
"EVG-8815","New Feature","platform",8,"Allow processes to be created within containers","""We should be able to run processes in within docker containers. It should also manage shutting them down.    We should have a new docker manager to handle these processes."""
"EVG-7716","Improvement","app",1,"Spawn host user config file should be written as yaml instead of json","""This is mostly because a virtual workstation user (or any spawn host user, really) wouldn't be able to read the file. I think this would also cause some problems if the evergreen binary updates the file, which it assumes is yaml and not json."""
"EVG-7715","Improvement","legacy-ui",1,"Show spawnhosts' display name on termination","""EVG-7606 added display names to spawnhosts. We should use it in more places on the spawnhost page. For example, the terminate host modal could use it instead of the instance id. """
"EVG-7711","Bug","app",1,"Occasional InvalidParameterValue errors from AWS API for AttachVolume","""Sometimes Evergreen gets back InvalidParameterValue back from the AWS API for an AttachVolume request https://mongodb.splunkcloud.com/en-US/app/search/search?q=search%20index%3Devergreen%20client%3D%22%5C*cloud.awsClientImpl%22%20message%3D%22AWS%20API%20call%22%20metadata.level%3D70%20%20api_name%3DAttachVolume&earliest=1585832400&latest=1585834200&display.page.search.mode=verbose&dispatch.sample_ratio=1&sid=1585834826.68129.    At a minimum, Evergreen should avoid doing retries in this case. Also, is there validation that Evergreen can perform to avoid making this call in the first place?"""
"EVG-7710","Bug","app",1,"Panic in s3.get on windows","""    """
"EVG-7722","Task","app",0,"Evergreen binary should be owned by distro user","""In user data, it might be curled by root and not the distro user so it can't be overwritten if the agent monitor needs to be redeployed."""
"EVG-7719","Improvement","app",2,"Ask for a different AZ when AWS gives an InsufficientInstanceCapacity error","""EVG-7698 stopped retries for an InsufficientInstanceCapacity error. We still can't get hosts of the distro until that AZ gets capacity and it will still eat into the API limit because the host allocator still needs the hosts.    As an alternative we could update the distro document cached in the host intent to use a different subnet/AZ on the next retry."""
"EVG-7738","Task","app",1,"collect more metadata in volumes collection","""created, deleted, expired, in use/not"""
"EVG-7737","New Feature","ui",2,"Task count number should reflect number of results for query","""the number on the right, aka the total, currently reflects total of all tasks for the patch. It should reflect total patches for the specific query.Â """
"EVG-7734","Task","app",0,"workstations should be easy to configure and start","""there are a couple of operations that should be built into the workflow:     - if you start a workstation distro, then it should automatically have the """"workstation flag selected.""""   - if you do not have an unexpireable host configured, then you should automatically be enabled as an unexpireable host  - when the host has entered running state there should be a notification sent. """
"EVG-7733","Task","app",2,"make mount point and directory configurable","""people should be able to configure where symlinks/userdata are setup"""
"EVG-7730","Bug","app",1,"IDE's shell doesn't source .bash_profile","""The integrated shell in vscode isn't a login shell so it doesn't source .bash_profile. One of the issues this causes is the evergreen binary isn't on the path.    We should start the shell as a login shell:  https://code.visualstudio.com/docs/editor/integrated-terminal#_shell-arguments"""
"EVG-7725","Improvement","app",2,"Add volume display names","""There should be a way to name and manage volumes so you know what you're attaching to a host.  Maybe another table in the UI?"""
"EVG-7724","Bug","app",1,"Writing .evergreen.yml file in home directory requires root permissions","""There was a change to host provisioning that prevents non-userdata spawn hosts from provisioning due to attempting to write the home directory's .evergreen.yml instead of putting it in \{{cli_bin}}. This is likely because the buildhost configuration AMI writes this file as root."""
"EVG-8521","Bug","platform",1,"retried exceptions should throw original exception","""When we retry endpoints, if we continue to get an exception, we should rethrow that exception instead of throwing a RetryException. The [tenacity docs|https://tenacity.readthedocs.io/en/latest/#error-handling] explain how to do this."""
"EVG-7752","Bug","app",1,"Task groups should not be allowed to be defined multiple times","""We have validation to ensure that the same name is not used for [build variants|https://github.com/evergreen-ci/evergreen/blob/df7927071e3cfd5381e076243d079037e3788437/validator/project_validator.go#L609-L616] or [tasks|https://github.com/evergreen-ci/evergreen/blob/df7927071e3cfd5381e076243d079037e3788437/validator/project_validator.go#L880-L897]. However, we don't do this same name uniqueness validation for task groups."""
"EVG-7751","Improvement","app",1,"Build variant and task names should not be allowed to have commas, or be called ""*"" or ""all""","""We currently only ban bars (|) in the names of build variants and tasks. would be ambiguous in dependencies which use {{*}}, which means """"all tasks"""" or """"all build variants"""". We should also warn for commas or """"all"""" in tasks and build variants, because they would be ambiguous in the CLI invoked through a shell (because we allow users to specify comma-separated lists of tasks and build variants and """"all"""" is a magic keyword for running all variants or all tasks)."""
"EVG-7750","Improvement","app",2,"Remove requires field from project config","""The only project that used requires was the server and it's been removed at this point, so we should get rid of it since it's not a very useful feature.    Â     We should also remove from the wiki."""
"EVG-7749","Improvement","app",1,"Project validation should give warnings for dependencies refer to nonexistent buildvariants","""Commands and dependencies allow you to specify which build variants the task should run on or which dependency it is waiting for. There should be validation that such buildvariants actually exist and throw warnings if they don't."""
"EVG-7748","Bug","app",2,"Number of command calls should apply to pre/post blocks","""Some commands like host.create and generate.tasks limit the number of times you can call them. These limits currently only apply to tasks but not for pre/post, as well as task group setup/teardown/tasks (which should probably be checked separately from tasks). We should check the limits on those as well."""
"EVG-7765","Bug","app",1,"Validate that func and command are mutually exclusive in a command list","""If you try to validate a command that has both {{command}} defined and {{func}} defined, it won't error but the agent will ignore the {{command}} defined in favor of {{func}}. We should add warnings to the validator that the two options are mutually exclusive for a single item in the commands list."""
"EVG-7762","Improvement","app",1,"Ensure that tasks are not both patchable and patch_only","""Currently it's possible to specify a task is both patchable and patch_only for the same task (in essence, never run). We should give warnings to not allow this combination."""
"EVG-7758","Bug","app",2,"CheckYamlStrict complains about patch_optional and status if used in dependency","""Example project config:        If I run {{evergreen validate}} on this config, it gives this warning during {{CheckYamlStrict}}:  WARNING: yaml: unmarshal errors:    line 24: field patch_optional not found in struct model.copyType    line 24: field status not found in struct model.copyType    It gives the same error if you specify {{depends_on}} in the task definition instead of the buildvariant task list. However, if you call {{LoadProjectInto}}, the actual {{model.Project}} result has {{PatchOptional}} and {{Status}} properly populated for that dependency."""
"EVG-7777","Improvement","legacy-ui",2,"Add drag-and-drop to project commands","""Splitting from EVG-7732 because it's more annoying to do than I anticipated. Commands should be rearrangeable because order matters, so adding a command is super annoying.    TriedÂ [https://material.angular.io/cdk/drag-drop/overview]Â but there were bugs adding it.. FoundÂ [https://www.npmjs.com/package/ng-drag-drop]Â for a new attempt but use whatever!"""
"EVG-7776","Bug","ui",1,"PatchMetadata resolver on taskResolver throws error for base commit","""FindPatchById method only accepts mongo ObjectIds. This error will happen on all task base commits because the base commit is a version and versions do not have ObjectIds.Â     Solution: use FindVersionById method in PatchMetadata resolver instead ofÂ FindPatchById"""
"EVG-7774","Improvement","app",1,"If user specifies volume, should spawn host in that zone","""Otherwise it'll fail to attach the volume"""
"EVG-7773","New Feature","ui",1,"Error, success, warning and info banner component and context","""Pages: patch, task    Components: patch tasks, patch changes, task logs, task tests, task files    To do: if there is an error, show error banner in place of component"""
"EVG-7772","New Feature","ui",1,"Render errors on patch page","""Render full page error if problem loading patch.Â     Render banner at top of page for all other errors    Â """
"EVG-7769","Bug","app",2,"Multiple events created for TASK_FINISHED event","""https://mongodb.splunkcloud.com/en-US/app/search/search?earliest=1585195200&latest=1585281600&q=search%20index%3Devergreen%20message%20%3D%20%22processing%20event%22%20event_type%20%3D%20TASK_FINISHED%20event_resource%20%3D%20mongodb_mongo_v4.4_enterprise_rhel_62_64_bit_inmem_display_parallel_38e017530f4a317c109524bde9bf1f1366896bc5_20_03_26_15_13_52&display.page.search.mode=smart&dispatch.sample_ratio=1&display.general.type=events&display.page.search.tab=events&sid=1586530279.467449    This led to duplicate tickets https://jira.mongodb.org/browse/BFG-575333 and https://jira.mongodb.org/browse/BFG-575334."""
"EVG-9015","Task","platform",1,"add logging on dispatch errors ","""add something here:     https://github.com/mongodb/amboy/blob/master/queue/driver_mongo.go#L791    possibly removing,     https://github.com/mongodb/amboy/blob/master/queue/driver_mongo.go#L525    and better annotate:  - https://github.com/mongodb/amboy/blob/master/queue/driver_mongo.go#L493  - https://github.com/mongodb/amboy/blob/master/queue/driver_mongo.go#L504  """
"EVG-8034","Bug","app",1,"Host provisioning jobs with scopes cause job backups if unable to finish successfully","""I created a spawn host with a volume that doesn't exist in AWS since it was available in the spawn host UI (it's probably a bug to allow people to try attaching volumes that don't exist in AWS) and it got stuck in provisioning (couldn't finish the user data done job because {{attachVolume}} would always fail on the AWS call). This seems to have caused amboy to refuse to run other jobs in the queue.    Splunk errors: https://mongodb.splunkcloud.com/en-US/app/search/search?q=search%20index%3Devergreen%20i-0b3a0f488d280099a&display.page.search.mode=smart&dispatch.sample_ratio=1&earliest=1586550600&latest=1586561220&sid=1586561901.485818"""
"EVG-7784","Improvement","app",1,"Host should be decommissioned if volume does not exist in AWS","""This is to avoid the problem where the user data done job keeps retrying but can never succeed since there's no such volume in AWS. AWS will return """"InvalidVolume.NotFound"""" for this issue."""
"EVG-7785","Task","app",1,"add admin configuration for setting the priority option on amboy queue ","""UI/rest/etc."""
"EVG-8355","Bug","platform",2,"Signal processing algorithms deploy failing","""ex: https://evergreen.mongodb.com/version/signal_processing_algorithms_75312e873543f0f89aace75f43ded783395425c5    As a DAG engineer,  I'd like poetry deploy to succeed for mainline builds, such that, we don't see red in evergreen, and the binary wheels upload successfully.    AC:  * Deploy does not fail in mainline"""
"EVG-7798","New Feature","ui",0,"Check in .prettierrc","""check in prettierrc so our editors format spruce code the same way"""
"EVG-7797","Improvement","app",1,"Stopping host should detect when instance is stopped without depending on timing","""[This piece of code|https://github.com/evergreen-ci/evergreen/blob/f8d313109ff81e1413df35455dad402a7aa674a2/cloud/ec2.go#L944-L975] attempts to stop the host but does not do so in an idempotent way. If the check for host status fails (which is not guaranteed to succeed since it depends on how long the host takes to shut down), the host will be stuck in the stopping state with no way to recover. We should check if the host is stopped every time this is called and not just blindly make an AWS call which may fail. We also should unset the stopping state and revert to the old state if it fails. This code should not rely on sleeping as a reliabl mechanism to try to give the host time to shut down. """
"EVG-7792","Task","app",1,"Delete distro teardown scripts","""Distro teardown scripts are no longer used by any projects. We should delete the code supporting distro teardown."""
"EVG-7787","Bug","app",1,"Investigate volume not found in DescribeVolumes","""[https://mongodb.splunkcloud.com/en-US/app/search/search?earliest=-15m&latest=now&q=search%20index%3Devergreen%20InvalidVolume.NotFound%20NOT%20api_name%20%3D%20DescribeVolumes%20DescribeVolumes%20%7C%20stats%20count%20by%20host_id&display.page.search.mode=smart&dispatch.sample_ratio=1&display.page.search.tab=statistics&display.general.type=statistics&sid=1586784655.609498]"""
"EVG-9211","Task","platform",1,"Shrub should support task sync commands","""This should implement s3.push and s3.pull."""
"EVG-8450","Bug","platform",1,"Shrub.py uses the wrong key for setting exec_timeout_secs","""Shrub.py allows you to [set exec_timeout|https://github.com/evergreen-ci/shrub.py/blob/05c234280f31bd5312b7d48e047ab339c7f34873/src/shrub/config.py#L159], but when it represents the value, it [stores it|https://github.com/evergreen-ci/shrub.py/blob/05c234280f31bd5312b7d48e047ab339c7f34873/src/shrub/config.py#L48] in the """"timeout"""" key which I understand to not have this meaning."""
"EVG-8383","Bug","platform",1,"Poplar runs out of memory when uploading large files","""In [this task|https://evergreen.mongodb.com/task/sys_perf_linux_standalone_insert_remove_patch_c4bca20e65afbb77834559247bdda8f541cda16b_5e93542f7742ae582b499d67_20_04_12_17_49_57##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522c4bca20e65afbb77834559247bdda8f541cda16b%2522%257D%255D%257D] we called {{poplar send}} with the results of a 12-hour run of InsertRemove and ended up running out of memory."""
"EVG-7809","Improvement","app",1,"Evaluate idle host termination for user data hosts stuck in provisioning that do not have work","""This host (i-0e069286dc0256011) got stuck in provisioning due to an app server restart when it was trying to requeue the job to retry provisioning. The idle host aggregation assumes that hosts are transiently in provisioning and will either fail to provision (decommissioned) or succeed (running). It doesn't handle a host which is permanently stuck in provisioning but has an agent running (because the LCT check will always filter out a host that's running an agent), so we should let user data hosts be considered for idle termination if the agent is running and not running tasks."""
"EVG-7805","Improvement","app",1,"Don't alert on starting spawn host","""Evergreen sends 2 alerts, one on starting a spawn host, and one on it successfully provisioning. A user doesn't care about the first alert, because there is nothing they can do yet. We should remove the first alert."""
"EVG-7804","Task","app",0,"Remove unused catcher in MergeGeneratedProjects","""A catcher catches errors but doesn't do anything with them."""
"EVG-7803","Improvement","perf-tools",2,"Add variant/task/test links to expanded metrics triaging ui","""As a DAG engineer,  I'd like there to be links for each change point entry on their variant/task/tests, such that, you can easily navigate to those pages without having to do URL surgery.    AC:  * for each change point, variant/task/test are linked (see legacy UI for example)"""
"EVG-7802","Improvement","app",1,"Expose commit date for a version in expanded metrics triage UI","""As a DAG engineer,  I'd like to know the date of a version's commit in the expanded metrics triaging UI, such that, the chronological sorting being done is obvious.    AC:  * version's commit date exposed"""
"EVG-7800","Improvement","app",1,"Communicator should print the body text verbatim if it is not a gimlet.ErrorResponse","""Many of the communicator routes attempt to parse a {{gimlet.ErrorResponse}} if a REST request returns something other than 200 OK. However, it's not guaranteed that the app server will even return a body in that format, and in those cases, the {{Communicator}} oftentimes returns unhelpful messages about parsing errors from gimlet, most commonly {{""""invalid character 'x' looking for beginning of value""""}}). In that case, we should always fall back to returning the response body as the error text if a gimlet response can't be parsed."""
"EVG-9151","Task","platform",1,"set better batch size for amboy queries in mongodb","""it's currently 100, and when there are scopes this is probably wrong? maybe we should just let it be default? """
"EVG-7814","Bug","app",1,"Distro page gives error if you re-create a distro that previously existed","""If you delete a distro, then recreate a distro of the same name, there's a flash that says """"error adding distro"""", which seems to be caused by [these lines|https://github.com/evergreen-ci/evergreen/blob/4d8f4df42b6f60057737b9d3a8ccee3a56815d72/service/distros.go#L331-L339]    Logs: https://mongodb.splunkcloud.com/en-US/app/search/search?q=search%20index%3Devergreen-staging%20%22error%20adding%20distro%22&display.page.search.mode=smart&dispatch.sample_ratio=1&earliest=-15m&latest=now&sid=1586981483.723360"""
"EVG-7813","Task","app",2,"Run user data on restart for Windows without relying on handleUserData being reset","""We're currently relying on a script in buildhost-configuration to reset the user data flag indicating whether user data has run yet in order. However, the Windows instances will no long be resetting the user data to allow evergreen to run user data again. We should add the persist tag to the end of the script to ensure it runs when it reboots.    I think sommanye of the operations have not been built with the intent to be run multiple times (e.g. setup script logic, echoing to authorized keys for spawn hosts), so we should make sure that these operations are resilient to running multiple times."""
"EVG-7812","Task","ui",2,"Add description, author, enqueue time, and code changes to commit queue query","""Most can be found on the patch data structure, but the enqueue time is an additional field on the commit queue item that needs to be exposed"""
"EVG-7811","New Feature","ui",1,"Patch: Schedule patch UI","""Clicking on """"Schedule"""" button in the patch reconfigure page schedules the patch and redirects user to the patch page of the newly scheduled patch"""
"EVG-7810","New Feature","ui",2,"Patch: Reconfigure patch UI","""Designs:Â [https://mongodb.invisionapp.com/d/main#/console/19647524/411104420/preview]    UI for selecting build variants and tasks to configure a pach"""
"EVG-8848","Task","platform",1,"support transition to appropriate REST methods for authentication workflow","""Cedar historically supported GET http verbs for authentication workflows despite the fact that the data payload for these requests were in the body of the request. This error was corrected in MAKE-1173, and we inventoried all known clients, but have missed some externally maintained clients.     To resolve, we should (quckly) add back support for GET verbs (in addition to current support for POST)  in these cases, and then when the old clients have been fixed and sufficently back ported we can remove them. I would prefer to leave this ticket open to track removing support for GET in a few days/weeks """
"EVG-7911","Bug","legacy-ui",2,"can't spawn a rhel70-cloud from failing task","""https://evergreen.mongodb.com/task/mms_code_health_COMPILE_BAZEL_patch_bcac666f557161e095706b0ff113d2c28df4ee41_5e989c493627e01ffa20566f_20_04_16_17_56_27"""
"EVG-7822","Bug","app",2,"Correct percentage/ratio calculation in perf build baron view","""This value should be calculating the %change of the magnitude of the change, either a drop or an increase.    This [line|https://github.com/evergreen-ci/evergreen/blob/3fc333d4f9cda59c22bf156cb86efc10e0196d69/public/static/app/perf-bb/hazardLevelCell.js#L10] should just be    AC:   * Need to change the column heading to %change from hazard level   * Add a testÂ """
"EVG-7819","Task","app",2,"ensure restarted tasks unblock blocked dependencies ","""we have observed that some tasks become blocked by the dispatcher after their dependencies fail, and should become unblocked after one of their upstream dependencies become unblocked.     (and subject to the same, potentially eventual, reblocking if they're still unsatisfiable for other reasons (age, other blocked dependencies.)) """
"EVG-7817","Improvement","app",2,"Handle task sync with specific status","""Right now, the task will sync if it's requested from the CLI regardless of whether it succeeded, failed, system-failed, or setup failed. We should add an option to specify under which conditions it should sync.  {{ShouldSync}} should probably be refactored as a struct of options for task sync for a patch."""
"EVG-7835","Task","app",2,"app shouldn't fail to start if an api_only user is misconfigured.","""alert, and just don't allow that user to log in, but oof failure to start for bad data is heart wrenching.Â """
"EVG-7832","Bug","app",2,"Virtual workstations are killed shortly after provisioning","""[This commit|https://github.com/evergreen-ci/evergreen/commit/5da06af4cd6f1ea0483968fd08878ff7e4531c11] puts a host termination job on the queue when provisioning fails.   When copies of the job run concurrently the first job to successfully mount the volume will succeed and mark the host as running, but later jobs will try to mount an already mounted volume and fail (because the script isn't idempotent). The later job puts a job on the queue to terminate the host and it's killed a few minutes after it's been marked as running."""
"EVG-7831","Bug","app",1,"Virtual workstation never expire checkbox is between volume settings","""Maybe it could go under the volume size?"""
"EVG-7829","Task","app",2,"Allow distro user data to specify type of user data","""If none is specified, it won't do anything. However, if you specify the user data type, it can do checks on whether or not the correct tags and directives are included.    This is mostly to solve an incompatibility between host.create (which requires that we _not_ provision the host with user data) and the distro user data (which has to be merged with the type of the existing user data, but can't do so if there is none)."""
"EVG-7828","Improvement","app",2,"Let user specify max timeout on task sync from CLI","""If requested from the CLI, task sync is given an hour to finish. If the one hour timeout isn't generous enough, they can set it higher."""
"EVG-7827","Task","app",0,"virtual workstation setup commands should be scoped to the distro's home volume","""also prefix, when possible (maybe optionally), by the project directory."""
"EVG-8645","New Feature","platform",2,"improve debugability of chains of Command executions","""when you get an error and the command has many subcommands it's difficult to know what ran"""
"EVG-8550","New Feature","platform",2,"add conditional ""When"" methods for adding arguments to reduce complexity of calling code","""a la LogWhen in grip, all of the methods that add commands should have conditional options"""
"EVG-8900","Task","platform",2,"Return iterator when downloading test results","""This way if there are thousands of results, we are not loading them all into memory"""
"EVG-8524","New Feature","platform",1,"add logging if Next takes longer than a second","""number of jobs considered, time, job type dispatched."""
"EVG-7855","Improvement","app",2,"Add validation to generate tasks that variants must have a display name","""The approach that suggests itself to me is that the project validator should validate that variants have a display name, since generate.tasks calls the validator. We should make sure that this doesn't break any existing projects."""
"EVG-7853","New Feature","ui",2,"Tables: statuses should autoupdate","""statuses in these tables should autoupdate"""
"EVG-7851","New Feature","ui",2,"Nav: dropdown","""dropdown showing all links for user - link to legacy ui for all links unsupported in new ui (which for first release will be all of them)    Â """
"EVG-7848","Bug","app",2,"User data does not appear to run on ubuntu arm64 hosts anymore","""Recently (i.e. within the past week or two), user data has stopped running on ubuntu 1604/1804 arm64 hosts. I had to switch these hosts to use new SSH provisioning for now, but we should figure out why the user data scripts aren't running anymore. They used to be able to provision with user data."""
"EVG-7844","New Feature","ui",1,"Proof of concept: release strategy","""When will new UI be released?    How will new UI be released?Â     To whom?    What comes after that    What needs to be updated for the release to be possible?    Who needs to know about the release?    How will the release be communicated?    Who will do the communicating for the release of the new ui?    Map out the entire flow, from beginning to end, of the features included in the release.Â """
"EVG-7843","Bug","app",2,"""Cannot redefine tasks"" error in generate.tasks","""https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_sharding_ese_gcm_gen_patch_a94df7c8c6f36e67086406b5778368f97dc1bd7f_5e9da7109ccd4e313742fcb6_20_04_20_13_44_02/0##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522a94df7c8c6f36e67086406b5778368f97dc1bd7f%2522%257D%255D%257D"""
"EVG-7842","New Feature","ui",1,"Favicon","""app should have favicon that matches evergreen logo"""
"EVG-7840","New Feature","ui",1,"Show Evergreen icon and logo in navbar","""Clicking on logo or icon goes to 'my patches' page"""
"EVG-7839","New Feature","ui",0,"Remove project dropdown from navbar","""Project dropdown is used for waterfall page. Until waterfall page exists, remove dropdown from navbar"""
"EVG-7838","New Feature","ui",1,"Patch tasks table should have initial sort value","""Problem: clicking patch tasks table sorter does nothing on the first click because table sorter changes from default to ASC. This is a jarring experience because nothing occurs as result of user action.Â     Solution: task tests table has an initial state for sorters. Implement same initial state logic for patch tasks table as seen in task test table.Â """
"EVG-7837","New Feature","ui",1,"Proof of concept: New Relic analytics","""Write proof of concept for how analytics will be utilized    What questions are we trying to answer through analytics?    How will analytics be implemented in the app?Â """
"EVG-7836","New Feature","ui",1,"Proof of concept: legacy/new UI toggle","""Write proof of concept for toggling between new UI and legacy UI    Go into codebase and assert that proposed design for toggle will work"""
"EVG-7865","Bug","app",1,"The EVG cli is complaining about invalid fields (status)","""h3. Repro    1. Run the following commands:      h3. Context    It looks like the status field should exist:    https://github.com/evergreen-ci/evergreen/blob/e41b1bdef0f6b0ca8140abe0885528a0333764c3/rest/model/task.go#L39    (it also appear in the EVG wiki)    and in this test  https://github.com/evergreen-ci/evergreen/blob/e7afea271efe1673e5f6f16fa83f38cbd436f526/model/project_parser_test.go#L55  """
"EVG-7861","Bug","app",2,"Request context canceling for logs","""With really long buildlogger logs, the request context cancels before the logs can fully load. We should fix this."""
"EVG-7859","Improvement","app",1,"Add ""First Task Failure"" notification to PR patch runs","""I noticed the addition of """"First Task Failure"""" notifications on the evergreen user settings. This would be great if the functionality can be added to add to PR runs also    This would be very useful for some of us â the complete PR suite for mms can take about 2 hours, and the first failure may happen in 10 minutes. This would easily allow us to get early notice if a PR has caused any failures without having to keep checking on the PR page."""
"EVG-7874","New Feature","app",2,"filter/report recent task statuses by agentVersion","""version and revision. """
"EVG-7871","New Feature","ui",2,"Reconfigure Page: Used mixed state checkbox for select all and deselect all ","""select all and deselect all is currently controlled by a button. it should be a mixed state checkbox"""
"EVG-8814","New Feature","platform",8,"Implement jasper job dependency manager","""This is to handle dependencies in jasper build."""
"EVG-8582","New Feature","platform",1,"Allow evergreen logging backends to be configured for commands from build file","""Evergreen offers different logging back-ends. We should expose this in the build system config files so people can configure evergreen logging as necessary."""
"EVG-7879","Improvement","app",2,"Prevent the removal of a home volume","""If a user removes their home volume the system won't boot (because the device is written into the /etc/fstab file)"""
"EVG-8501","Bug","platform",1,"Set StartAt and EndAt for RPC ProcessInfo and do not panic RPC conversion methods","""These fields were defined for local ProcessInfo but are never set in the protobuf.    We also should not panic during conversions, which I've just noticed in jasper.ext.go, because panics will cause the RPC service to return no error and no response (which is not helpful) when it abruptly shuts down. Instead, it should return some error during the RPC-Jasper model conversion. Relying on these methods on the client side will also cause panics."""
"EVG-8449","Bug","platform",1,"Get change points by version is failing/bugged","""Can't get a list of change points grouped by version from the cedar api.    As a DAG engineer,  I'd like to be able to get a list of change points grouped by version for any project, such that, I can do things with these lists.    AC:  * this route works for page 0  *  page_size can't be 0  * page_size is handled properly"""
"EVG-7887","Improvement","app",2,"Log AWS retries due to request limits at lower log level","""Since retries due to request limits are an expected condition, we should not log these at error level."""
"EVG-7884","Bug","app",0,"Pull from task sync to spawn host seems to miss files","""When requested, {{evergreen pull}} runs on the spawn host, but seemingly misses several files because the process exits with code 1.    Jasper process info from a failed pull attempt:  {              """"id"""": """"ffd19d7c-68df-4cb0-b87b-a1bf8c4bf272"""",              """"host"""": """""""",              """"pid"""": 671,              """"exit_code"""": 1,              """"is_running"""": false,              """"successful"""": false,              """"complete"""": true,              """"timeout"""": false,              """"options"""": {                  """"args"""": [                      """"/bin/bash"""",                      """"-l"""",                      """"-c"""",                      """"/root/evergreen -c /root/.evergreen.yml pull --task mci_lint_lint_model_patch_783fc9cfbe5d65fdd7c8c61827e0a8cd65fa4b44_5ea2eb1397b1d369722e887e_20_04_24_13_35_40 --dir /data/mci""""                  ],                  """"env"""": {                      """"JASPER_ID"""": """"ffd19d7c-68df-4cb0-b87b-a1bf8c4bf272"""",                      """"JASPER_MANAGER"""": """"24c0a80c-eb17-495e-95a4-545c5ef7d2d6""""                  },                  """"synchronized"""": false,                  """"implementation"""": """""""",                  """"working_directory"""": """"/"""",                  """"output"""": {                      """"suppress_output"""": false,                      """"suppress_error"""": false,                      """"redirect_output_to_error"""": false,                      """"redirect_error_to_output"""": false                  },                  """"stdin_bytes"""": null              },              """"start_at"""": """"0001-01-01T00:00:00Z"""",              """"end_at"""": """"0001-01-01T00:00:00Z""""          },"""
"EVG-7883","Bug","app",2,"Many repetitions of post-task logs","""In [this|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_unittests_14a5bcab6ee67dad278c02d74fea2bf4df149aa2_20_04_08_23_24_39] task's logs there is a very large section that is repeated over and over with the same messages and same timestamps (for most of the log's page), including the line {{Finished running post-task commands}}."""
"EVG-7882","Improvement","app",1,"Set the commit when switching branches through API","""When using the API to switch branches, the commit should be set as well so the build can run successfully.    context:  https://mongodb.slack.com/archives/C0V896UV8/p1587738944466200"""
"EVG-7880","Bug","ui",1,"Cypress: cy.login fails when tests rerun in dev mode","""the cypress test runner reruns tests in the test browser and preserves cookies when code changes are made during local development. Rerunning tests that use cy.login fail because the command is unable to find credential inputs since the logged in user is redirected away from the login screen.    cy.login should be modified so it doesn't search for inputs if the relevant cookies exist"""
"EVG-7897","New Feature","app",1,"remove ssh_timeout_secs from evergreen.Settings.HostInit","""it's unused. """
"EVG-7896","Improvement","ui",8,"Adjust patchTasks, userPatches and taskTests pagination to account for recently created/deleted documents","""Paginated infinite scrolling tables powered by the patchTasks, userPatches or taskTests queries can show duplicate rows if patches, tasks or tests are added or deleted from the db while scrolling. A reason for this is because we currently count the number of documents to skip in our paginated db query based on how many rows we are showing in the UI"""
"EVG-7895","Task","app",0,"Pull should error if no matching task directory is found in s3","""Right now, it'll just no-op and pull nothing. However, it should be an error to pull if the task sync contains nothing in it."""
"EVG-7972","Bug","app",1,"Spawnable selenium server image","""Create an Evergreen container distro that has this as its imageÂ [https://hub.docker.com/layers/selenium/standalone-chrome/4.0.0-alpha-5-20200409/images/sha256-8e6222259f4098dfc9440b0d57b04088c3ea750eb6628b973fac17a646ea11f0?context=explore.|https://hub.docker.com/layers/selenium/standalone-chrome/4.0.0-alpha-5-20200409/images/sha256-8e6222259f4098dfc9440b0d57b04088c3ea750eb6628b973fac17a646ea11f0?context=explore]"""
"EVG-7907","Improvement","ui",1,"My Patches: Return total patches from userPatches query","""return the total number of patches without factoring in Page & Limit from the userPatches query"""
"EVG-7904","Task","app",0,"Write better doc comments explaining meaning of host timing constants","""There are several time constants used in host management that have subtle differences (e.g. {{provisioningCutoff}} vs {{MaxLCT}} vs {{MaxUncommunicativeInterval}}). It would be nice to explain what they are in a doc comment so people know what the exact semantics are and don't accidentally misuse them."""
"EVG-7899","Improvement","perf-tools",2,"Disable color shading in Perf Discovery","""When selecting expanded metrics in perf discovery the ratio column is still colored based on the assumption that higher is better. Numbers greater than 100 are green, and those below are red. For the latency values reported by expanded metrics, this is not correct. This ticket is to disable the coloring until such time that  EVG-7697 is completed.     Acceptance Criteria:  - No more colors in perf discovery for any metrics.  """
"EVG-9110","Task","platform",2,"Jasper remote tests should test REST client and scripting/logging should actually be implemented","""The REST interface was never added to the remote manager tests for some reason. I tried to add the REST client to the remote tests but it fails most of the scripting and logging tests, which were untested and don't work according to the test cases."""
"EVG-7913","Improvement","app",2,"Mark tasks as failed if the build fails during ""go test""","""When running {{go test}}, the build can fail. The Evergreen parser for {{go test}} output doesn't currently handle this, so none of the tests will be run and the task will succeed, even though it has technically failed.    Example task:Â [https://evergreen.mongodb.com/task/mongo_go_driver_tests_42_plus_zlib_zstd_support__version~latest_os_ssl_32~ubuntu1604_64_go_1_12_test_replicaset_auth_ssl_patch_a484eb6d9594fce7c5d6a15960a15cd04c03f986_5ea9aad10ae6062860bc3011_20_04_29_16_26_58##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522a484eb6d9594fce7c5d6a15960a15cd04c03f986%2522%257D%255D%257D]    Relevant log line:Â [https://evergreen.mongodb.com/test_log/5ea9ad080305b924ba8232f5#L8676]"""
"EVG-8980","Task","platform",2,"Benchmark existing pail implementations","""This would be useful to determine what workloads the current implementations are best at handling. Most interesting would be the performance of uploading a large number of small files or a small number of large files. This has implications for how performant task sync is at uploading/downloading entire directories."""
"EVG-8652","New Feature","platform",2,"Upgrade cedar's test environment to mdb 4.2","""As a DAG engineer,    I'd like to use MDB 4.2 in cedar's tests, such that, we can leverage the features of 4.2, and such that the test environment matches the production environment.    AC:  * move from 4.0->4.2 in cedar's tests"""
"EVG-8403","Bug","platform",2,"Fix redirects in cedar","""I POST to cedar.mongodb.com/rest/v1/admin/perf/change_points and get redirected to GET cedar.mongodb.com/rest/v1/admin/perf/change_points.    This seems to happen for other routes as well.    I'm guessing the issue is auth? If so, unauthenticated requests should get a 401, not a 301 to a GET route that doesn't exist."""
"EVG-7926","New Feature","app",2,"add more logging when we terminate a provision failure host","""we seem to only have logging when setup scripts run, and it's possible that these kinds of events are centrally logged in a meaningful way."""
"EVG-7921","Bug","app",1,"Stop looping on unprocessed notifications","""[This commit|https://github.com/evergreen-ci/evergreen/commit/0290a7087d74047154ac8abbef6201f5de27e07d] tries to dispatch notifications that were dropped by their event-send job (if the job's context is cancelled, for instance).  However, there's a collision in the job ids and the new job isn't inserted.    The event-send job's id should include a timestamp."""
"EVG-7918","Improvement","app",2,"Blacklist the commit queue's merge task when a task fails","""If an item is manually removed by a user we [blacklist the merge task|https://github.com/evergreen-ci/evergreen/blob/d79e6eb3d7e3e1565efbc5d9188ca4dad3e7a836/model/commitqueue/commit_queue.go#L257] so the item won't be merged if one of the tasks is restarted.  We should also do this when we [abort the version for a failing task|https://github.com/evergreen-ci/evergreen/blob/d79e6eb3d7e3e1565efbc5d9188ca4dad3e7a836/model/task_lifecycle.go#L561]."""
"EVG-7914","New Feature","app",2,"add flag to host or distro document to identify cluster members","""Evergreen has some distros which maintain hosts that don't run tasks and aren't container parents (the compile cluster for the workstations), but there is nothing in the data model that would track this, and allow us to report on it appropriately.    The host idle data report should also reflect this """
"EVG-8694","New Feature","platform",2,"put integration tests behind flag to help major ","""put things that depend on external services like aws behind a flag to improve local development experience, so that you don't need credentials to run tests.    open question: should we also have a flag to exclude tests that depend on a running mongodb instance or is that a reasonable assumption?"""
"EVG-8442","Bug","platform",2,"Refactor expanded metrics front+back end not to rely on thread levels directly","""As a DAG engineer,  I'd like thread levels not to be a first class citizen in terms of the data models we use, such that, cedar doesn't need to worry about arguments to test runners individually.    AC:  * filtering by thread level is done in a way such that the API does not explicitly know about thread levels, but instead applies filters for arguments (e.g. arg_filters = {thread_levels: [1,2,3]} rather than thread_levels = [1,2,3])  * CPs returned on the version_with_change_points route have arguments on them, rather than thread levels  * The us takes thread levels from the arguments on a cp, rather than directly from a cp"""
"EVG-7938","Bug","legacy-ui",1,"When spawning a host from a task, the host spawn dialogue reappears","""If you spawn a host from the """"Spawn..."""" link on a task page, after clicking Spawn from the modal, the host is spawned and then the modal reappears. I don't see how, but I suspect it was introduced by https://github.com/evergreen-ci/evergreen/commit/3b681729e27b6b09320ed1158f6c3eb39d75bf6d, since that's the only recent change I see that would affect this page."""
"EVG-7934","New Feature","app",2,"spread historic repotracker build better","""- reduce frequency of catchup jobs more.   - activation should be less of a spike. and could happen in fewer jobs as they're pretty quick. """
"EVG-7930","Bug","app",1,"GetInstanceStatus spins if the host ID is no longer in AWS","""GetInstanceStatus should return terminated if it receives InvalidInstanceID.NotFound. If enough time has passed that the host is no longer in AWS, this means that the host has in fact been terminated, but currently GetInstanceStatus retries on this error."""
"EVG-8781","New Feature","platform",1,"add more dispatching statics to job complete notes ","""- job dispatch time (time.Started-time.Created)  - total job pending time (time.Finsihed-time.Created)"""
"EVG-8868","Task","platform",2,"Create Jasper build CLI that can generate evergreen configs from golang build files","""Mostly, this should just be feeding a yaml config file into the golang evergreen config generator. For now, this should just be a convenience to test the generator quickly.    Â     We should also create an explicit Jasper binary in {{cmd}}."""
"EVG-7950","Improvement","ui",2,"tests and tasks tables should be paginated instead of infinite scroll","""also allow users to enter their own page size"""
"EVG-7948","Bug","app",1,"Volume expiration query inefficient","""The query to find volumes that have expired does a lookup on an unindexed foreign field (volumes.volume_id)"""
"EVG-7946","Improvement","app",2,"Mount volumes by UUID","""Currently volumes are mounted by device name, which is subject to change (e.g if a user changes the instance type). Because this is written into the instance's /etc/fstab file changes to the device name prevent the instance from booting.  Instead, the /etc/fstab should reference the volume's UUID.    https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html#ebs-mount-after-reboot"""
"EVG-7945","Improvement","legacy-ui",2,"Error reporting proof of concept","""figure out which errors should be reported to bugsnag and their severity level"""
"EVG-9270","Task","platform",0,"Server should be closed as soon as the context cancels","""Currently, it only checks for a done context before each connection accept so it can wait forever on accepting connections without cleaning up. We should have a thread that closes the server as soon as the context is done to clean up resources."""
"EVG-7957","Bug","legacy-ui",1,"My Patches: prevent pagination component Next button from moving  ","""the next button moves from right to left when paginating over many pages.Â """
"EVG-7955","Bug","app",2,"lobster hides 'truncated' fields on log lines","""When a server log line is too long, Structured Logging will truncate the line by omitting any fields past the line limit, and instead adds two new fields at the root level of the JSON, """"truncated"""" and """"size"""".  Lobster is hiding these fields, which makes it hard to tell what lines are actually truncated when viewing a log.      Here is an example, search for """"T00:19:23.903"""" to compare the raw log output versus the HTML Lobster output:  https://logkeeper.mongodb.org/build/bb9f3c027d7e502fb455308955e19b5a/test/5eaf5f88c2ab684da28bda30?raw=1  https://logkeeper.mongodb.org/lobster/build/bb9f3c027d7e502fb455308955e19b5a/test/5eaf5f88c2ab684da28bda30#bookmarks=0%2C29904&l=1"""
"EVG-7954","Improvement","ui",1,"Fix commit queue button sizing","""!https://files.slack.com/files-pri/T024FNNHU-F012WBPQ8BY/screen_shot_2020-05-05_at_12.40.41_pm.png!    On a 1200 px width screen"""
"EVG-7964","Bug","app",1,"Volumes UI doesn't refresh when a host gets a volume in the background","""When a new volume is added as a virtual workstation's home volume, the new volume which is linked from the host isn't present on the volumes page until the page is reloaded."""
"EVG-7960","Improvement","app",2,"Batch Fleet Requests","""The CreateFleet request takes a slice of LaunchTemplateConfigs. We should investigate if this allows us to batch CreateFleet requests.  Uploading the launch templates (CreateLaunchTemplate) will probably still need to be individual."""
"EVG-7977","New Feature","legacy-ui",2,"create Query for aws regions for user profile in spruce","""[https://github.com/evergreen-ci/evergreen/blob/master/service/user.go#L200]    https://github.com/evergreen-ci/spruce/pull/162#discussion_r421199391"""
"EVG-7975","Improvement","ui",1,"Build variants and tasks can be selected while in ""Changes"" tab for patch configuration","""I am able to click on the different variants in the âSelect Build Variants and Tasksâ pane while in the Changes tab during patch configuration. Since the changes stay the same regardless of which build variant/task is selected, selecting a different build variant/task does not have an effect."""
"EVG-7974","Improvement","ui",2,"Allow task selection of multiple build variants at once in new UI","""I am not currently able to hold shift to select multiple build variants so I can hit """"select all"""" and select all tasks amongst those build variants. Will this functionality, or something equivalent, be available?    Update: this ticket added functionality to select multiple build variants with Ctrl+Click (Command+Click on mac). EVG-8176 tracks the support for Shift+Click."""
"EVG-7969","Task","app",1,"subprocess.scripting needs to support running tests in the harness","""This is so that we can generate projects that use evergreen configurations from scripting generators."""
"EVG-9228","Task","platform",2,"Packages in server requirements should work with python 3.6","""The server build system sets a python minimum of python 3.6, not python 3.7. However, shrub requires 3.7. This creates an unpleasant situation on Ubuntu 18.04 (which is the image type used for virtual workstations), where the system python3 is not acceptable for installing the `dev-requirements`. You can work around by using the toolchain python, which is py37, but this isn't great. We should ensure that our tools work on the most commonly deployed Ubuntu LTS without needing the mongodbtoolchain."""
"EVG-8037","Bug","app",3,"Virtual workstation home directories should be on the correct volume","""Virtual workstations currently have the users home directory at /home/ubuntu, but this is the small local volume. We want users to actually use the large volume.    We should arrange things so that /home is mounted on the large volume, not the small one.    Otherwise, it is too easy for tools that expect to write to things under $HOME to do the wrong thing. It is also unexpected for users that their $HOME directory is the wrong place to do work.  """
"EVG-7983","Bug","app",2,"Host spawned from task missing artifacts","""When I spawn a host from this task, I don't seem to get any artefacts pre-loaded onto it: https://evergreen.mongodb.com/task/mongodb_mongo_v4.4_enterprise_debian10_64_logical_session_cache_replication_1sec_refresh_jscore_passthrough_3_enterprise_debian10_64_bbdf0a11d1c61be0760a829e82799129beac7be0_20_05_08_09_20_41/0    """
"EVG-9120","Task","platform",2,"Allow tags to be applied to all packages by default and explicitly exclude packages","""All tags have to be explicitly listed for now, which requires defining the package path and the tag associated with it. We should also support tagging all packages with some set of global tags, then explicitly excluding particular packages from default tags."""
"EVG-9070","Task","platform",1,"Deduplicate identical options for golang","""Since people can specify options as the package or variant level, we have to be able to overwrite existing options while preserving unspecified ones when merging variant options into package options."""
"EVG-8203","Improvement","app",1,"Move all projects to git hooks","""Some projects use the legacy repotracker. This means that commits show up much more slowly, and it prevents using more modern features. If it's possible to move all projects to git hooks, we should also open a ticket to remove the option to configure a project as repotracker-only entirely."""
"EVG-7988","Improvement","app",2,"Add helpful error message if evergreen commit queue merge fails due to GitHub branch protection","""From Slack: IÂ enabled it and ranÂ {{evergreen merge}}Â , but the commit queue merge test went faster than a different github PR check, so when evergreen attempted to merge it failed since not all required checks had completed. or at least this is what I assume happened. in github I only saw the messageÂ {{""""merge failed: """"}}    Â """
"EVG-7985","Bug","app",1,"Users with volume size >= their limit can't spawn any hosts","""If a user has volumes with a total size greater than the limit (currently 700GiB) they can't spawn hosts.  The input [here|https://github.com/evergreen-ci/evergreen/blob/2127156a54b791ecd14e4a4d53101c7661294299/public/static/partials/user_host_options.html#L115] sets a minimum of 1. Because the input is disabled when the user doesn't have any remaining volume capacity the value is [stuck at 0|https://github.com/evergreen-ci/evergreen/blob/2127156a54b791ecd14e4a4d53101c7661294299/public/static/js/spawned_hosts.js#L702] and the form is invalid."""
"EVG-7993","Bug","app",2,"Unscheduling tasks/builds/versions in the commit queue doesn't remove the item for GitHub queues","""If a user aborts or unschedules a commit queue task we [remove the item from the queue|https://github.com/evergreen-ci/evergreen/blob/8b70262c283f271045c4d13f81ed98b0fa8e9680/service/task.go#L738]. We do the same [for builds|https://github.com/evergreen-ci/evergreen/blob/8b70262c283f271045c4d13f81ed98b0fa8e9680/service/build.go#L221] and [versions|https://github.com/evergreen-ci/evergreen/blob/8b70262c283f271045c4d13f81ed98b0fa8e9680/graphql/util.go#L434]    The item identifier passed in is the version id, so it doesn't work for GitHub queues."""
"EVG-8685","New Feature","platform",2,"simplify amboy marshaling flow","""use the thing julian and I have been working on for dependency injection in jasper"""
"EVG-8636","New Feature","platform",2,"periodically log statistics during event collection","""provide an implementation of the collector interface https://github.com/evergreen-ci/poplar/blob/master/vendor/github.com/mongodb/ftdc/events/collector.go#L20 so that they log aggregate stats (using grip) periodically, probably like """"running average of throughput and latency, and maybe some other elements that are in the events structure.)     Considerations:  - logging might impact the throughput of the event collector, which means we probably need to make it a wrapper to a collector. (This would probably be simplified by adding a Count() method to the Collector interface)   - users may want to opt-in to this kind of reporting, which would require changes to the poplar registry and its interfaces.  - for many tests, there are multiple collectors running in parallel, which means the logging messages produced should probably have an ID of some sort, again this might require adding a Name() method to the Collector interface, and providing a way for the to propagate through the interfaces.     I suspect for clarity and stability, we will want to implement message.Composer (from grip) with a type that produces a well-formed message and optional . message.Fields may not have an easy to scan format. """
"EVG-8004","Task","app",1,"Use archive bucket in task sync","""This is to attempt to fix performance issues in task sync possibly due to uploading a large number of files."""
"EVG-8003","Task","ui",2,"Add check box to variant select in patch restart modal","""!image-2020-05-13-17-51-00-199.png!"""
"EVG-8001","Bug","app",2,"Evergreen's _archive.targz_pack_ command does not pick up all the files","""I am investigating a test failure: https://evergreen.mongodb.com/task/mms_e2e_opsman_os_sanity_E2E_OpsManager_SanityTests_RemoteAutomation_SUSE15_860d517f3684edeb52e65c76f75cc55d4e5c43f3_20_05_13_11_51_44    Our EVG config looks like this (mms/master):      - command: archive.targz_pack        params:          target: """"logs.tgz""""          source_dir: """"mms""""          include:            - ...            - """"server/build/agents/logs/**""""    The generated logs.tgz file (on the task linked above) contains the following data:      However, if you search all the Download logs, you will find this line:      [junit] 2020-05-13T12:38:01.125+0000 [main] [com.xgen.svc.cukes.helpers.LocalAgentManagerFiles.INFO] [LocalAgentManagerFiles.java:47] - Renaming logsDir from server/build/agents/logs/42-Install-automation-and-backup to server/build/agents/logs/42-FAILED-Install-automation-and-backup    *42-FAILED-Install-automation-and-backup is missing from the tgz*    If you look at that tasks's history and download other logs.tgz files, you will find all kinds of inconsistencies (e.g. the previous one has two failed tests, but doesn't have a `server/build/agents/`directory.    *This is seriously impacting our ability to debug why our test targets are failing!*    Can you please look at this bug, with priority?    Thanks,  Mihai"""
"EVG-8013","Bug","legacy-ui",1,"Volume create buttons are on the left of the modal","""Maybe they need to be float:right?  Also, should the label be """"Create""""?"""
"EVG-8012","Bug","legacy-ui",1,"Update Host button adds an error flash if unexpirable hosts are at the limit","""I have two unexpirable hosts. The form isn't dirty, but the Update Hosts button is enabled. Clicking it displays an error flash that I can't have more than two unexpirable hosts.  If I actually make a change I still get the error, but the change is made."""
"EVG-8011","Bug","legacy-ui",1,"Host start/stop/terminate buttons are misaligned","""it seems hiding uptime causes the buttons to move up a column.  Why is uptime hidden, though? They're both running. (I just stopped/started the second one)"""
"EVG-8010","Bug","app",1,"Virtual-workstations are terminated shortly after provisioning completes","""Multiple user-data-done jobs running at the same time will sometimes cause the second job to terminate the host.     When the job returns an error we [terminate the host|https://github.com/evergreen-ci/evergreen/blob/a2a5bb96591e9b2eecb09edb314fdf99abc53932/units/provisioning_user_data_done.go#L117]. attachVolume is mostly idempotent so a second job should just mount the volume a second time without erroring. Asking AWS to mount an already mounted volume is an exception because AWS will return an error if the volume is already mounted. We try to [continue on error for this case|https://github.com/evergreen-ci/evergreen/blob/a2a5bb96591e9b2eecb09edb314fdf99abc53932/units/provisioning_setup_host.go#L774], but it seems AWS sometimes returns a different error string: """"VolumeInUse"""".    Previously we addressed this problem with scopes and now that scopes are fixed that may be a viable solution."""
"EVG-8009","New Feature","ui",1,"Use separate data set in evergreen for e2e tests and for developing locally","""Our e2e tests will make assertions based on a predefined set of data. Two separate data sets allows us to freely edit data for local development without worrying about breaking the e2e tests.Â """
"EVG-8790","New Feature","platform",3,"Make signal processing jobs in cedar report time series to Performance Analysis and Triage Service and remove all other tooling","""As a DAG engineer,  I'd like to remove the signal processing stuff being done in cedar, and simply have it's [recalculate change points job|https://github.com/evergreen-ci/cedar/blob/master/units/recalculate_change_points.go#L69] migrated to only reporting time series updates to the Performance Analysis and Triage Service.    The API for the reporting is as follows:      The aggregation for getting this data [already exists|https://github.com/evergreen-ci/cedar/blob/master/units/recalculate_change_points.go#L89].    AC:  * Cedar reports time series updates to performance analysis and triage service using the existing triggers for aforementioned job  * All other signal processing tooling/schema removed  * Remove change points from cedar's database    Notes:  * [Technical Design|https://docs.google.com/document/d/1wKLZ-IWjA8-kWAO44tHotzuYei0y2rNX7OQjrKGEo34]  * [Design Modification|https://docs.google.com/document/d/1jLcNDgYPSJte11kfFnidWpFXfWUPnjy-zdq63UeWOQM]"""
"EVG-8378","Bug","platform",0,"Large writer closer should flush after it has reached the threshold size","""In [these line in the largeWriterCloser|https://github.com/evergreen-ci/pail/blob/a03af0d0a6184f872ec5ddd73631cb00f0ec3675/s3_bucket.go#L468-L474], we flush before we've reached {{maxSize}}. However, since this is the backing writer implementation of the multipart uploader, it should flushÂ _after_ it has reached 5MB or else AWS will reject the multipart upload with the error {{EntityTooSmall: Your proposed upload is smaller than the minimum allowed size}}. We should change the semantics of the size threshold to mean {{minSize}} for uploading, rather than {{maxSize}} before we flush."""
"EVG-8031","Task","app",1,"evergreen validate should error more helpfully","""Occasionally users have evergreen validate warnings from unmarshal strict that just look like """"error unmarshalling into temp structure."""" Would be nice if we could give them more context.    [https://mongodb.slack.com/archives/C0V896UV8/p1589831494350700]    Â """
"EVG-8027","Bug","app",1,"mountLinuxVolume: umount command doesn't specify the absolute path to the device","""The device name no longer includes the absolute path.  Fix the umount command to prepend the path (/dev/)"""
"EVG-8035","Improvement","legacy-ui",1,"Enable Git Tag Version Creation Checkbox on Project Page","""Similar to Enable Pull Request Testing, would be nice to have this as a checkbox so if someone is having an issue they can uncheck this rather than unpopulate related fields."""
"EVG-8045","Improvement","app",1,"Mounted volumes shouldn't display an expiration time","""... since they won't expire."""
"EVG-8044","Improvement","app",1,"Unexpirable hosts remaining message is confusing if it's broken over two lines","""""""1   unexpirable host remaining""""    it's not clear the 1 is part of a message that got wrapped. Maybe we should set     {code:css}  white-space: nowrap;  {code}    [here|https://github.com/evergreen-ci/evergreen/blob/2c4eeec32698f70c87c4153f52a528ef58a4f1a5/public/static/partials/user_host_details.html#L99] and [here|https://github.com/evergreen-ci/evergreen/blob/2c4eeec32698f70c87c4153f52a528ef58a4f1a5/public/static/partials/user_volume_details.html#L43]"""
"EVG-8043","Build Failure","app",2,"Failed: coverage on Coverage [Evergreen @ 2c4eeec3] ","""h2. [coverage failed on Coverage|https://evergreen.mongodb.com/task/evergreen_coverage_coverage_2c4eeec32698f70c87c4153f52a528ef58a4f1a5_20_05_20_14_24_51/0]  Host: [ec2-52-86-97-72.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/i-06d9b27132960dd1f]  Project: [Evergreen|https://evergreen.mongodb.com/waterfall/evergreen]  Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/2c4eeec32698f70c87c4153f52a528ef58a4f1a5]: EVG-7990 add git tag requester (#3602) | 20 May 20 14:24 UTC  Evergreen Subscription: ; Evergreen Event:     [Task Logs | https://evergreen.mongodb.com/task_log_raw/evergreen_coverage_coverage_2c4eeec32698f70c87c4153f52a528ef58a4f1a5_20_05_20_14_24_51/0?type=T]  """
"EVG-8041","Improvement","app",1,"Volume expiration warnings should link to the volume","""The link I got just took me to the spawn host page.    It could link to the volume by setting the resource type and volume id parameters in the URL"""
"EVG-8039","Bug","app",1,"New provider settings don't log to the event log","""In https://evergreen.mongodb.com/event_log/distro/rhel76-docker, the AMI history does not show past April 6"""
"EVG-9235","Task","platform",0,"Add yaml.UnmarshalStrict variant for utility operations","""The utility package provides convenience functions wrapping the regular {{yaml.Unmarshal}}, but we should also provide strict variants for stricter YAML parsing."""
"EVG-9138","Task","platform",0,"Move BuildFileList into utility","""This is so Jasper can reuse the function (will require libraries using utility to vendor {{github.com/sabhiram/go-git-ignore}})."""
"EVG-8810","New Feature","platform",1,"mciuploads/barque permissions issue","""https://slack-redir.net/link?url=https%3A%2F%2Fevergreen.mongodb.com%2Ftask%2Fbarque_ubuntu1604_dist_a7a85c58ecc01ff206816d3088acf74597348b67_20_05_21_15_44_13%2F0    looks like we should be able to upload, but maybe our key doens't have access"""
"EVG-8529","New Feature","platform",1,"Dist target should compile for Linux for deployment","""When you use {{make dist}}, it compiles but compiles the barque binary also based on your local GOOS (which is probably {{darwin}} for everyone except Sam). However, the barque binary in the {{dist.tar.gz}} needs to be built for Linux, so we have to run {{make build/make-tarball}}, followed by {{GOOS=linux make dist}} or else the binary will be built for macos.    Also verify that custom local builds are deployable because it seems like the two most recent deploys for Amboy revendors did not actually restart the barque app server with the custom build (although they changed the {{/srv/barque/current}} symlink)."""
"EVG-8053","Improvement","legacy-ui",1,"Aborted by task name is too long","""When a task is aborted on account of another task (for the commit queue) the task page includes a link to the task that really failed. The link text is the task ID which is unsightly and confusing. It should probably be """"_build display name_:_task display name_"""" or something.    Example:Â [https://evergreen.mongodb.com/task/mongodb_mongo_v4.2_enterprise_rhel_62_64_bit_compile_patch_8dafa4060855b0568dbd3e103984d29cb2937628_5ec6d01c3627e07ed8130f62_20_05_21_19_02_01|https://evergreen.mongodb.com/task/mongodb_mongo_v4.2_enterprise_rhel_62_64_bit_compile_patch_8dafa4060855b0568dbd3e103984d29cb2937628_5ec6d01c3627e07ed8130f62_20_05_21_19_02_01##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%25228dafa4060855b0568dbd3e103984d29cb2937628%2522%257D%255D%257D]"""
"EVG-8052","New Feature","ui",1,"Update Subscription Modal based on designs","""Update the Subscription modal based on designs from product designers"""
"EVG-8690","New Feature","platform",2,"jasper benchmarks fail to compile after logging configuration change",""""""
"EVG-9210","Task","platform",2,"New repobuilder jobs should clear .olddata from previous runs","""When the app server restarts in the middle of a repobuilder job, it will leave behind the {{.olddata}} directory if it was running {{createrepo}} when it restarted. This will cause future {{createrepo}} commands in later repobuilder jobs to fail since the old data directory still exists. We should remove it before we run {{createrepo}} (this should be fine to do since the jobs are protected by scopes on the distro and have to run serially on each distro).    Logs: https://mongodb.splunkcloud.com/en-US/app/search/search?q=search%20index%3Dbarque%20build-repo.distro.rpm.repo.c0860eb1-cce1-4207-8f47-50c786814d87&display.page.search.mode=verbose&dispatch.sample_ratio=1&earliest=1590513780&latest=1590528225&sid=1590528302.2773197"""
"EVG-8071","Improvement","app",1,"The CLI's host create command's key parameter is unclear","""The key help string says """"name or value of an public key to use"""" but it really means the name of a key in the user's user document.    The error message for a non-existent key is also not helpful: """"key does not start with ssh-rsa or ssh-dss"""". We should say the key doesn't exist."""
"EVG-8068","Bug","app",2,"Child task of display task has ETA based on whole display task's makespan instead of the previous execution of the child task","""When viewing the child task of a display task, such as [this one|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_multiversion_sharding_jscore_multiversion_passthrough_gen_patch_c480627eae1b5d09f8eea247b396b45b89a5c275_5ecd672a306615532c0d3e5b_20_05_26_19_00_10/1##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522c480627eae1b5d09f8eea247b396b45b89a5c275%2522%257D%255D%257D], I expect the ETA to beÂ  2-3 minutes based on execution 0. Instead when it's running, the ETA is 16 minutes long, as demonstrated by the attached screenshot.    My guess is that child task is using the parent display task's previous makespan (which was 17 minutes) to make this estimation. (Parent of the above linked taskÂ [is here)|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_multiversion_display_sharding_jscore_multiversion_passthrough_patch_c480627eae1b5d09f8eea247b396b45b89a5c275_5ecd672a306615532c0d3e5b_20_05_26_19_00_10##%257B%2522compare%2522%253A%255B%257B%2522hash%2522%253A%2522c480627eae1b5d09f8eea247b396b45b89a5c275%2522%257D%255D%257D]"""
"EVG-8067","Task","app",2,"Track duration of time between patch build creation and patch build scheduling","""I am interested to track a metric that gives a sense of how long it takes a user to configure a patch build, whether via the evergreen UI or relying exclusively on the CLI. This metric, along with data on how many users are using the UI, and whether users are running builds with all required tasks of all required builds vs. builds with some curated selection of tasks, would be interesting to look at to gauge usability of the patch build configuration process.    I believe we already can get a sense of how many users are using the UI to configure patch builds by looking at the POST requests to the patch build configuration page.    As a follow-up question related to this feature request, are we currently tracking any information on the composition of tasks being selected for patch builds?"""
"EVG-8056","Bug","platform",2,"Unable to run a local shell script in subprocess.exec on windows","""Iâm trying to run a subprocess.exec in a windows host where the binary option is a local shell script but Iâm getting an error    Sample evg function  {code:yaml}command: subprocess.exec  type: test  params:    add_to_path:      - ${go_bin}      - """"/cygdrive/c/Program Files/go-msi""""      - """"/cygdrive/c/wixtools/bin""""    working_dir: src/github.com/mongodb/mongocli    env:      WORKDIR: ${workdir}      CGO_ENABLED: """"0""""      <<: *go_options    binary: build/package/generate-msi.sh  {code}  Task [here|https://evergreen.mongodb.com/build/mongocli_master_go_msi_snapshot_patch_4ed3c5b8e6ae45d996c033d688526965c0d3e7b8_5ecbde33d1fe0766215764e7_20_05_25_15_03_23]   Logs [here|https://evergreen.mongodb.com/task_log_raw/mongocli_master_go_msi_snapshot_package_msi_patch_4ed3c5b8e6ae45d996c033d688526965c0d3e7b8_5ecbde33d1fe0766215764e7_20_05_25_15_03_23/0?type=T#L37]    Is this possible for windows hosts? running shell scripts as a subprocess.exec ? Iâm trying to move a lot of my shell.exec to be subprocess.exec this way but hitting this error with a windows host"""
"EVG-8358","Bug","platform",0,"subprocess.exec is missing json tags","""It won't serialize properly if the JSON tags aren't included because it will use the field name starting with an uppercase as the key."""
"EVG-8076","Task","ui",2,"Create Query to query for correct version of evergreen cli ","""https://github.com/evergreen-ci/spruce/pull/179#discussion_r430726473"""
"EVG-8075","Task","ui",2,"Create Query to fetch correct download links for download card","""[https://github.com/evergreen-ci/evergreen/blob/master/environment.go#L736]"""
"EVG-9291","Task","platform",1,"Allow number of tasks for task group to be configurable","""Although the lower limit is 4, we should let people set it to a different value than that if they want."""
"EVG-8846","Task","platform",2,"Reorganize build files","""While the multi-file support is correct and usable, it's probably not the ideal file organization structure. It would be nice to figure out a file organization that somehow nicely handles evergreen-specific configuration (e.g. loggers and task groups) and generator-specific configuration (e.g. Golang's {{RootPackage}} doesn't have a good location, nor do the environment variables) without creating a proliferation of lots of small single-purpose files."""
"EVG-8082","Bug","app",2,"Slack Patch Notification reports failed task has started","""I received a notification (Subscription: 5ec56ff961837d675d29296e; Event: 5ecff63f7742ae725a5508e2) forÂ [this|https://evergreen.mongodb.com/task/jstestfuzz_self_tests_query_agg_fuzzers_v4.4_aggregation_multiversion_fuzzer_inMem_patch_a8b108b061d064bbeebd5bdb7d81ced4d77e1d19_5ecff45a1e2d17733479353c_20_05_28_17_26_51/0]Â task, see attached screenshot.   It failed, the line to the left is red (as it should be in failed scenarios) but the status has been reported as started. Also, this is a PR notification, so I'm not sure why I'm getting a notification for this task, which I never subscribed to, instead of the patch as a whole."""
"EVG-8985","Task","platform",8,"Implement jasper build","""The build system should be able to run targets and should be integrated with the amboy job queues/dependency manager to handle parallel target creation/re-building."""
"EVG-8343","Bug","platform",1,"Update signal processing algorithms readme (poetry)","""As a DAG engineer,  I'd like to update the signal processing algirithm's readme to reflect the move to pytest,  such that, developers know how to develop the library."""
"EVG-8111","Improvement","legacy-ui",2,"Not authing against corp secure properly when using performance analysis and triage service","""It appears that the performance analysis and triage service in production is sometimes unavailable. Reproduce by following this [link|https://evergreen.mongodb.com/perf-bb/expanded-metrics-change-points/sys-perf]. Be sure to clear cookies [here|https://signal-processing-service.server-tig.prod.corp.mongodb.com/docs] first.    As a DAG engineer,  I'd like this to work, and redirect users to authenticate through corpsecure when it doesn't, such that, we have the necessary auth cookies to make these requests.    AC:  * Evergreen auths against corpsecure as needed"""
"EVG-8084","Bug","app",0,"Host should decommission once max provision attempts is exceeded","""There's an off by one error where, because we increment the provision count at the end of the job, the condition {{shouldRetryProvisioning()}} will never return false, so the host will not decommission immediately when it runs out of attempts (it'll be caught by the 25 minute timeout, but it would be better for it to fail fast)."""
"EVG-8083","Build Failure","app",2,"Setup Failure: test-cloud on Ubuntu 16.04 [Evergreen @ 51e5e1e8] ",""" h2. [test-cloud failed on Ubuntu 16.04|https://evergreen.mongodb.com/task/evergreen_ubuntu1604_test_cloud_51e5e1e8c347d72879f859868b5d549469ecd6ab_20_05_29_14_35_25/0] Host: [ec2-3-91-191-170.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/i-09bcb395f9d9879be] Project: [Evergreen|https://evergreen.mongodb.com/waterfall/evergreen] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/51e5e1e8c347d72879f859868b5d549469ecd6ab]: Revert """"Revert """"Revert """"Revert """"MAKE-1152: Use MaxInt32 instead of MaxInt64 (#3621)""""""""""""""""  This reverts commit 0c48a16288bb3eeb9cbd80af9c8a5869f9a57d22. | 29 May 20 14:35 UTC Evergreen Subscription: ; Evergreen Event:   [Task Logs | https://evergreen.mongodb.com/task_log_raw/evergreen_ubuntu1604_test_cloud_51e5e1e8c347d72879f859868b5d549469ecd6ab_20_05_29_14_35_25/0?type=T] """
"EVG-8087","Task","app",1,"Raise limit on hosts.create","""For provider: docker it seems like it could be much higher."""
"EVG-9163","Task","platform",2,"Scoped jobs that are undispatchable should have scopes removed or be deleted","""It seems like barque still has problems with re-dispatching old jobs with scopes that exceed the lock timeout. One possible reason is that jobs with a {{DispatchBy}} requirement may not be able to run if too long has passed, so they will be stuck unable to dispatch and also will not clear their scopes. For jobs that have scopes and are stuck in progress but can't be re-dispatched due to {{DispatchBy}}, we should just unset their scopes and mark them complete."""
"EVG-8983","Task","platform",0,"Move file checksum logic to utility","""This is mostly so that jasper can re-use it for an experimental dependency cache implementation."""
"EVG-8421","Bug","platform",1,"Benchmarks do not compile with change to loggers","""{{go build ./benchmarks}} fails because the loggers were refactored.    Â     We should also add it to the lint packages so it can be sanity check that it actually works in the future."""
"EVG-8100","Bug","app",2,"Can't spawn host after creating a 700GB Volume","""Once I have a workstation with a 700GB volume, the spawn button is greyed out regardless of which distro I try to spin up"""
"EVG-8099","Improvement","app",2,"Improve event log for deleted commit queue item","""When a commit queue item is deleted and the merge is prevented, it may not be immediately clear to the user or to others why the merge task is blacklisted (see [example|https://evergreen.mongodb.com/task/mongodb_mongo_v4.2_commit_queue_merge_merge_patch_patch_495ea4a50219e08ac7a4e1bcd58dc4935f5f0173_5ed53e152fbabe33b5eb87e6_20_06_01_17_43_05#/log/EV#comparehashes=495ea4a50219e08ac7a4e1bcd58dc4935f5f0173&threads=maxonly]). We should add a new type of log that says something like """"Patch deleted by <user>"""" before logging that mci has changed the task priority.    [https://github.com/evergreen-ci/evergreen/blob/1f42d4e8c3ec4e8b9f1104668ccf41d8040b7f0e/model/commitqueue/commit_queue.go#L271]"""
"EVG-8096","Bug","app",2,"Task spawn host button misses artifacts","""When I try to spawn a host for my BF that had a crash on https://evergreen.mongodb.com/task/mongodb_mongo_v4.4_enterprise_rhel_62_64_bit_large_txns_format_concurrency_sharded_with_stepdowns_202f27642004fc8a87efa543940825b4f5c8d866_20_05_27_15_56_43/0, I don't get the core dumps downloaded and have to download them myself."""
"EVG-9178","Task","platform",1,"Add documentation to exported fields in cedar","""Some of the structs and public fields in Cedar don't have documentation associated with them. It should be added in the places it is needed for the things that the DAG team owns -Â Performance Analysis Service, time series data, time series update job, etc    Â     AC:   * Public fields in DAG related areas in Cedar are documented"""
"EVG-8833","Task","platform",2,"Support test results parsing from generators","""The Make-based generator has to have a means to report results from tests (e.g. {{gotest.parse_files}}). The golang generator will also need to support a means to report test results in such a way that we don't need an intermediate file containing the results, but this can occur within subprocess.scripting once test results are moved to cedar."""
"EVG-8134","Improvement","app",2,"Expose --add-host for Docker containers created with host.create","""It would be useful to be able to say something like this:    {code:yaml}  - command: shell.exec    params:      script: |        echo """"task_host_server_ip: $(ip addr show ...)"""" > task_host_expansions.yml # or the external IP from the instance metadata service  - command: expansions.update    params:      file: task_host_expansions.yml  - command: host.create    params:      provider: docker      image: selenium/standalone-chrome      publish_ports: true      add_hosts:        task_host: """"${task_host_server_ip}""""  {code}    Then within the container, the browser could be directed to visit http://task_host:9080.    Reference: https://docs.docker.com/engine/reference/run/#managing-etchosts"""
"EVG-8133","Bug","ui",1,"""Unable to find task"" when clicking on burn_in task","""Clicking the task shown in the screen shotÂ for this [patch build|https://spruce.mongodb.com/patch/5ea9c9fc7742ae2842c23bb3/tasks] leads to the graphql error in the screen shot. Here is the [offending task|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_burn_in:replica_sets_jscore_passthrough_1_enterprise_rhel_62_64_bit_patch_4fa07f1c28e20f902d55dcc2f2c07a8135ad31f4_5ea9c9fc7742ae2842c23bb3_20_04_29_18_40_22/0##comparehashes=4fa07f1c28e20f902d55dcc2f2c07a8135ad31f4&threads=all] in the legacy UI."""
"EVG-8119","Task","ui",1,"refactor and Remove XHR dependency for commit_queue tests","""We use a pollyfill with in our cypress tests to listen to our graphql requests. This breaks apollos ability to make event driven callbacks like `onError` and causes functionality to break within cypress but not on a normal browser. This ticket covers removing all `waitForGQL` dependencies with in the commit_queue tests"""
"EVG-8113","Bug","app",1,"Project setup script doesn't run correctly","""1) The working directory is set to a directory that doesn't exist.  2) The same command runs multiple times."""
"EVG-8112","Bug","ui",1,"Task action items in dropdown menu are unresponsive to clicks","""Task page, task actions dropdown menu, clicking on the dropdown items does nothing.Â     Update: the dropdown items do work, but they are not being properly displayed when they are disabled. They are disabled but do not appear disabled; therefore confusing the user by making them think the button is broken.Â """
"EVG-8109","Bug","legacy-ui",2,"Malformed link to jira ticket for revert commits on waterfall page","""{color:#1d1c1d}On waterfall page for project {color}{color:#1d1c1d}evergreen is generating wrong URLs for revert commits. In particular is including a double apicesÂ {color}{{""""}}{color:#1d1c1d}Â and colon in the jira [link|https://jira.mongodb.org/browse/%22SERVER-50251:], like the following:   !Screen Shot 2020-08-24 at 1.06.36 PM.png|width=30%! """
"EVG-8108","Bug","app",2,"host.create container logs not working","""I wrote a command that tries to tail the logs but they're always empty"""
"EVG-8107","Bug","ui",2,"Patches that will not run are marked running on patches page in Spruce","""This patch is marked as running on my my patches page https://spruce.mongodb.com/patch/5eb2d84c5623433079333f22/tasks."""
"EVG-8106","Bug","ui",1,"GraphQL error: internal system error on logs page","""For https://spruce.mongodb.com/task/evergreen_lint_generate_lint_patch_f6ffa2cce21a18c650c8e61dfca474a1f87845a5_5eb2d84c5623433079333f22_20_05_06_15_31_26/logs.    Looking at the legacy UI, this task has no logs, so I think this is just a case where the message should say """"No logs found"""" or something similar instead of the error message."""
"EVG-8105","New Feature","ui",1,"Patch & Task page: set max width on display name part of tables","""when display names are one word and long, there is not enough space to view the other columns"""
"EVG-8103","Bug","app",2,"Spawning containers from tasks shouldn't use existing parent hosts","""The parents will have the same security group as the one running the task, and hosts within this same security group cannot communicate with each other"""
"EVG-8102","Bug","app",0,"Fix unit tests","""Because tychoish :(Â """
"EVG-8547","New Feature","platform",0,"gotest.parse commands need to specify files","""We can't specify the files to parse for golang tests currently."""
"EVG-8151","New Feature","app",2,"subprocess.scripting should parse go test results","""We should not have to execute a separate {{gotest.parse_files}} command when it could be done directly from the output of subprocess.scripting. This is just an intermediate solution until we move test results to cedar."""
"EVG-8146","Bug","ui",1,"Variant should use display name, not id","""For example, https://spruce.mongodb.com/patch/5ed7b0670ae606496cf87284/tasks?page=0 should have """"Ubuntu 16.04"""", not """"ubuntu1604"""" in both the table and the build variants pane. That should also be the case for the tooltips on the my patches page."""
"EVG-8145","Bug","ui",1,"Time taken missing, though makespan is present","""https://spruce.mongodb.com/patch/5ed7b0670ae606496cf87284/tasks?variant=ubuntu1604"""
"EVG-8144","Bug","ui",2,"Is anything actually ever in Running status?","""Tasks that are running appear to be Started. I don't know if anything is ever in Running. Is that status redundant?"""
"EVG-8143","Bug","ui",2,"Patch shows failed, but no tasks are failed","""https://spruce.mongodb.com/patch/5ed7b0670ae606496cf87284/tasks?variant=ubuntu1604    Note that this appeared to be the case before test-cloud ran. The icon for the build variant on the my patches page was correct (that the variant was in progress) but the patch badge said failed."""
"EVG-8142","Bug","ui",2,"Task durations seem wrong","""The point of showing the duration on the current task page is to show the length of time that the current task takes, not the overall time of the commit. In [Spruce|https://spruce.mongodb.com/task/evergreen_lint_lint_rest_route_patch_1f42d4e8c3ec4e8b9f1104668ccf41d8040b7f0e_5ed671e1d6d80a60ea7b2677_20_06_02_15_36_32/logs] this task duration is 13 hours, and the base commit duration is 7 hours. But [in Evergreen |https://evergreen.mongodb.com/task/evergreen_lint_lint_rest_route_patch_1f42d4e8c3ec4e8b9f1104668ccf41d8040b7f0e_5ed671e1d6d80a60ea7b2677_20_06_02_15_36_32]the task duration is 47 seconds, with 27 seconds on the base commit, which is much more relevant to the current task.  """
"EVG-8140","Bug","ui",2,"Distinguish between Undispatched and Blocked tasks in Spruce","""This task shows undispatched, but it is blocked on other tasks succeeding which have failed so the status should say blocked.    [https://spruce.mongodb.com/task/evergreen_lint_lint_trigger_patch_1f42d4e8c3ec4e8b9f1104668ccf41d8040b7f0e_5ed671e1d6d80a60ea7b2677_20_06_02_15_36_32/logs]"""
"EVG-8138","Bug","ui",1,"Event logs aren't handling quotes correctly","""[https://spruce.mongodb.com/task/evergreen_ubuntu1604_dist_patch_40de312f8fb0855a0d4fcaf1647b36fc6173768b_5ed6d4df850e612690f882f0_20_06_02_22_38_41/logs?logtype=event]"""
"EVG-8136","Improvement","ui",2,"Add count of how long task has been running / ETA","""Currently there's a count up of how long the task has been running, and and count down for ETA. This is prominently featured in the old UI and would be missed in the new UI. Also on tasks that haven't started yet we show the estimated time to start and the estimated duration.    !image-2020-06-03-07-13-11-390.png!"""
"EVG-8135","New Feature","ui",1,"my patches: fix build status icon link","""currently uses the wrong id"""
"EVG-9282","Task","platform",1,"Experiment with removing grep for go test ","""I feel like extra grepping for pass/fail in the output log is unnecessary if you just check the return code of {{go test}}."""
"EVG-9005","Task","platform",1,"Curling golangci-lint should retry","""Sometimes the host fails to resolve {{raw.githubusercontent.com}}."""
"EVG-8507","Bug","platform",1,"Fix test-remote on race-detector","""The test only fails on race detector so it could be something to do with the test execution being slower due to race detection enabled.  Logs: https://evergreen.mongodb.com/task/jasper_race_detector_test_remote_edc31da19da5dea040847c2c83e034fb2a357cd7_20_06_02_14_25_50"""
"EVG-8360","Bug","platform",0,"Return correct gotest command name based on legacy or non-legacy","""It returns the wrong command name if you use {{gotest.parse_files}} instead of {{gotest.parse_json}}"""
"EVG-8159","Task","app",1,"gotest.parse_json should be able to match file glob patterns","""File path matching behavior should be the same as {{gotest.parse_files}} basically."""
"EVG-8157","Task","ui",1,"Two Linux 64 bits show up on the download card","""!image-2020-06-04-09-20-57-145.png!    One of the them is the legacy version we shouldn't show that"""
"EVG-9058","Task","platform",1,"Export scripting harness type strings","""The only way to know the valid harness type strings is to hard-code strings.    This should also be fixed in {{subprocess.scripting}}."""
"EVG-8977","Task","platform",2,"Allow environment variables to be specified at package and variant levels for golang generator","""For example, we may want to use a different GOROOT for some variants."""
"EVG-8183","Improvement","app",2,"Give MANA an API to cleanup unexpirable hosts/volumes in off-boarding","""Expose an API for MANA to call in their off-boarding process that removes the user's unexpirable hosts and volumes"""
"EVG-8182","Improvement","app",2,"Don't Log IDE panics","""[reverse_proxy|https://github.com/golang/go/blob/cc8838d645b2b7026c1f3aaceb011775c5ca3a08/src/net/http/httputil/reverseproxy.go#L299] sometimes panics if there's an error while streaming the response back to the client (https://github.com/golang/go/issues/23643).  Our [middleware|https://github.com/evergreen-ci/gimlet/blob/185166ff85e8801545747fa65a14486e0fe4680b/middleware_grip.go#L166] recovers the panic and logs to slack. Because the panic isn't actionable we need to log at a lower level.    One design is to recover the panic in the route so it doesn't make it all the way back up to the recovery logger."""
"EVG-8178","Bug","ui",1,"Navigating to ""RAW"" link in patch configuration does not open new window and clears task selections ","""When I am in the patch configuration window and I view the RAW link for the changes in the patch, my task selection is cleared, since the RAW link does not open the page in a new tab.   !clicking on raw logs loses my selected tasks.png|thumbnail!   I would expect the RAW link to open the page in a new tab, as is what happens in the HTML page."""
"EVG-8177","Bug","ui",1,"Navigating to certain Spruce pages brings users to the bottom of the screen","""This happens with the patch [configure|https://spruce.mongodb.com/patch/5eda79550ae6061360113a0f/configure/tasks] page:   !patch configure page loads starting at the bottom by default.png|thumbnail!    as well as the patch details page, when accessed via the breadcrumb. E.g., clicking on {{aggregation_auth}} from [this patch|https://spruce.mongodb.com/version/5ea9c9fc7742ae2842c23bb3/tasks] and then clicking """"Patch 940"""":   !brought to the bottom of the page on page load.png|thumbnail!     It would be great if these pages went to the top of the page by default."""
"EVG-8171","Bug","ui",1,"Base commit link on patch details page should go to base commit in legacy ui","""Currently it just goes to the version page"""
"EVG-8170","Task","ui",0,"Remove notify me button on patch page","""temporarily remove notify me button on patch page until the modal is developed"""
"EVG-8167","Improvement","app",2,"Allow passing arbitrary additional parameters to host rsync command","""So that people can do things like pass a .gitignore to apply the rules for file exclusion via {{--filter}} or do whatever they want if they already know how to use rsync."""
"EVG-8166","Bug","ui",0,"Remove condition to stop polling build variants when all tasks have finished","""this condition prevents polling when we actually should be"""
"EVG-8164","Question","app",2,"Why did git.get_project block the mongodb-mongo-master commit queue for 35 minutes?","""This morning I created a {{commit-queue merge}} ([here|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_lint_fuzzer_sanity_patch_patch_5c6e1e540a9b5b0e0c87fa3522b9e668e2357a8c_5eda3142d6d80a270f66d4cf_20_06_05_11_50_01##comparehashes=5c6e1e540a9b5b0e0c87fa3522b9e668e2357a8c&threads=maxonly]) which locked up for 35 minutes. (compared to the [expected 2 minutes|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_lint_fuzzer_sanity_patch_patch_7074dee1fbf6763c0d463c377c2e47d8ef2c4f6f_5eda44a72a60ed0ac4af4b34_20_06_05_13_12_08##comparehashes=7074dee1fbf6763c0d463c377c2e47d8ef2c4f6f&threads=maxonly]Â for this task) There is no output from {{git.get_project}}. I suspect this would've blocked the commit queue until it timed out.    Can you look into whether this was an Evergreen, VPC/networking issue, Github or other issue?    Furthermore, what can be done to prevent this in the future? Should we set timeouts for the commit queue tasks in the server yaml. Does the git command support a timeout for the initial round trip connection (which I'm assuming is what failed here)? Basically, I could've tanked the whole queue for however long the timeout is, and that would've been pretty bad for others."""
"EVG-8163","Bug","ui",2,"Patch base task statuses filters do not always work","""On the patch details page, filtering by base status returns unexpected results. Sometimes, the statuses displayed in the filter dropdown do not align with the statuses displayed in the base status column. Additionally, filtering by 'success' or another status returns no tasks when it should return some or all of them.Â     Example patch:Â [https://spruce.mongodb.com/version/5ecff20932f4173f1fdc1666/tasks?limit=100&page=0]"""
"EVG-8190","Task","ui",2,"""T-shaped"" patch builds should mark checkboxes as partially selected (indeterminate)","""Suppose the user takes the following actions on the configure patch build page:    # Selects the build variant BV1.  # Checks the checkbox for the task T1.  # Selects the build variant BV2 which also supports running task T1.    The expected state of the checkbox for the task T1 is for it be [partially selected|https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes]. Clicking the checkbox while it is in an indeterminate state deselects it."""
"EVG-8189","Task","ui",2,"""T-shaped"" patch builds should support shift+click","""EVG-7974 added support for cmd+click. shift+click is additionally supported by the existing patch configuration page to select a range of contiguous build variants."""
"EVG-8188","Task","ui",2,"""T-shaped"" patch builds should deduplicate tasks and select tasks on all relevant build variants","""It looks like there are multiple checkboxes for the same task and while both become checked when one is clicked, the task count for only one of the build variants is updated (depending on which checkbox is clicked). Note that I didn't attempt to schedule this patch build to see if the task would actually run on all the build variants or not.    Suppose the user takes the following actions on the configure patch build page:   # Selects the build variant BV1.   # Checks the checkbox for the task T1.   # Selects the build variant BV2 which also supports running task T1.    The expected state of the checkbox for the task T1 is for it beÂ [partially selected|https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes]. Clicking the checkbox while it is in an indeterminate state deselects it."""
"EVG-9201","Task","platform",0,"Allow users to specify variables section","""This is so that people can define things like anchors."""
"EVG-9003","Task","platform",0,"Call git.get_project in setup group","""git.get_project should be done at the beginning of each task group when the host is setting it up but doesn't need to be done for every single task."""
"EVG-8960","Task","platform",2,"Golang package discovery should be able to find source files","""Currently, it will only discover directories containing test files. For one example use case, a user who wants to lint might want a package to be auto-defined if it contains go source files, even if it does not contain any test files. This should be a configurable setting (by default, off)."""
"EVG-8930","Task","platform",2,"BuildFileList should support file exclusion","""We have a pattern of building file lists within a directory if they match a series of include/exclude patterns. We should be able to generalize {{BuildFileList}} so that it can support file inclusion/exclusion rules within a directory (or maybe without specifying a directory)."""
"EVG-8206","Task","app",2,"Be more careful about retrying on github 404s","""If a user adds a module that with a typo in the GitHub, Evergreen will exhaust its GitHub API limit retrying. https://evergreen.mongodb.com/version/5ede8b903e8e865991924ea7"""
"EVG-8204","Improvement","app",1,"Make virtual workstation setup include code review tool posting to JIRA","""The alias virtual workstations provide for uploading code reviews is cr='~/kernel-tools/codereview/upload.py --check-clang-format --check-eslint'. Our server onboarding instructions include the --jira_user option, so that running the code review tool posts to JIRA. This also requires setting up Jira OAuth credentials. It would be helpful to include this in either the workstation configuration or in the wiki."""
"EVG-8200","Bug","ui",1,"No patches listed on spruce patches page","""The following page: https://spruce.mongodb.com/user/mark.benvenuto/patches, displays no patches for me. I expect it would display some patches.    !image-2020-06-08-12-26-01-860.png|thumbnail!     Browser: Version 81.0.4044.138 (Official Build) (64-bit)  OS: macOS 10.14.6    """
"EVG-8198","Improvement","app",2,"Documentation Improvements","""bq. Could be good to have a warning against using ninja for compiledb because I tried that out of habit but it actually doesnât work right if you built ninja with icecream support      bq. Iâd appreciate some public documentation on icecream scheduling in the cloud. Itâs disconcerting to have it silently populated in /etc/icecc/icecc.conf from the variant image      bq. Highlight how Evergreen IDE doesnât require being on VPN. Go one step further and also suggest using the integrated terminal in VS Code to do server builds, patch builds, commit queue, etc. without being on the VPN."""
"EVG-8197","Improvement","app",2,"GDB improvements","""Add ~/.gdbinit to   * source ~/mongo/.gdbinit and ~/mongo-v44/.gdbinit when invoked from those directories  * set these settings:  **       Add /opt/mongodbtoolchain/gdb/bin to PATH"""
"EVG-8192","Task","app",0,"Variables should be optional in strict project yaml validation","""People seem to conventionally use it for defining extra yaml stuff like anchors, but it's not required as part of the project config."""
"EVG-8211","Task","app",2,"Write Design Document for Parameterized Builds","""Scope:Â [https://docs.google.com/document/d/1GuZOGa07dMhC1KS8TQeF3oad0Tg5Xp1XleodrcdB2nM/edit#]"""
"EVG-8209","Question","app",2,"explain problem building container image errors","""Understand the root cause of """"problem building container image"""" errors"""
"EVG-9327","Sub-task","platform",2,"Implement by TestName route","""Implement REST route to fetch test results by task id, execution, and test name."""
"EVG-9326","Sub-task","platform",2,"Implement by TaskID route","""Implement REST route for fetching test results by task id and execution."""
"EVG-9316","Task","platform",1,"Define data model for stats collection","""We need to define the structure of the payloads we are going to write to s3 and that the agent will send over gRPC, as was done [here|https://github.com/evergreen-ci/cedar/blob/master/model/test_results.go#L325-L338]."""
"EVG-8226","Improvement","ui",1,"Swap order of base and patch status columns","""Should reflect the legacy ui"""
"EVG-8224","Bug","ui",2,"Unhandled error is thrown when spruce disconnects from evergreen app server","""spruce should handle this error so the app doesn't crash, maybe indicate to the user that they have lost connectivityÂ """
"EVG-8223","Task","platform",0,"Implement disk usage stats collector","""This should be a replacement for {{df -h}} in the system logs currently."""
"EVG-8218","Improvement","ui",2,"Spruce deploy script should block if local master is not latest","""the script should be modified to prevent pushing to production if the local master branch is not the most recent"""
"EVG-8216","Task","app",1,"Add one repo/branch restraint to git tags","""PR testing and commit queues seem restricted to one repo/branch. Git tag triggered versions should likely also be restricted."""
"EVG-8214","Task","platform",1,"evergreen local user settings is wrong","""Currently the user settings say:       However this doesn't work unless it's """"http://localhost"""" so this should be fixed."""
"EVG-8242","Bug","ui",2,"Task logs not being rendered properly","""Specially formatted task logs dont have appropriate styling associated with them    [https://spruce.mongodb.com/task/spruce_ubuntu1604_e2e_test_patch_ac763049d8990383f90704ded0aa7c1de30cb6a5_5ee2a096a4cf477cceaa2f69_20_06_11_21_22_31/logs?logtype=task]    Â     [https://evergreen.mongodb.com/task_log_raw/spruce_ubuntu1604_e2e_test_patch_ac763049d8990383f90704ded0aa7c1de30cb6a5_5ee2a096a4cf477cceaa2f69_20_06_11_21_22_31/0?type=T]    !https://files.slack.com/files-pri/T024FNNHU-F015N84P51P/image.png!    !https://files.slack.com/files-pri/T024FNNHU-F0159RC0S59/image.png!"""
"EVG-8239","Task","ui",1,"Link to legacy top nav pages in Spruce UI","""In order to allow folks to maintain their navigation patterns to pages not supported in Spruce, we should allow the Spruce top nav to link to the legacy pages:   !Screen Shot 2020-06-11 at 2.57.31 PM.png|thumbnail! """
"EVG-8238","Bug","ui",1,"Patch build notification email links to legacy UI patch instead of Spruce UI","""Example:    Hi,    Your Evergreen patch in 'mongodb-mongo-master' [5ee254c37742ae4114585d57|https://evergreen.mongodb.com/version/5ee254c37742ae4114585d57] has failed.    test patch"""
"EVG-8236","Bug","ui",2,"'My patches' breadcrumb on another user's patch leads to my own patches","""I pasted the version ID of another user's evergreen patch into a Spruce version URL: https://spruce.mongodb.com/version/5ee2434732f417796e65772f/tasks    Navigating to 'My Patches' from this other user's patch leads me to my own patches, instead of the user's patches. When I try to hit 'back' to get back to the user's patch link, I remain on my own 'My Patches' page."""
"EVG-8230","Bug","platform",2,"Users who haven't signed into the UI recently get 401 errors for the CLI","""I assumed that background reauth would have handled this, so I opened this as a bug."""
"EVG-8270","Improvement","ui",1,"adjust welcome modal styles","""add space between description and carousel navigation dots and center the modal"""
"EVG-8261","Improvement","ui",2,"Store page size in local storage and use as default in Spruce","""use the latest page size used (e.g., 20 [entries per page|https://spruce.mongodb.com/version/5efa5aac2fbabe4f8783c596/tasks?limit=20&page=0], 100 [entries per page|https://spruce.mongodb.com/version/5efa5aac2fbabe4f8783c596/tasks?limit=100&page=0], etc.) as the default value when limit query variable does not exist in url    Â """
"EVG-8260","Improvement","ui",1,"display spruce git commit hash in production html","""this will help us keep track of what is deployed to production"""
"EVG-8259","Bug","app",0,"Jasper restart should be allowed even if host is in running state","""Some of the mac hosts were restarted but the agent was stuck so they never got put in the 'provisioning' state. Usually, we want them to be in the provisioning state rather than running state because it guarantees that the agent monitor has shut down. However, [this check for the agent monitor|https://github.com/evergreen-ci/evergreen/blob/bd4afd4af6d8ea1e5b3bf7abfc8955170969db1d/units/provisioning_jasper_restart.go#L139-L149] should be sufficient to prevent jasper restarts until the agent monitor is down. Therefore, it should be fine to allow hosts to be in the running state when jasper needs to be restarted.    Logs: https://mongodb.splunkcloud.com/en-US/app/search/search?q=search%20index%3Devergreen%20macos-1014-57.macstadium.build.10gen.cc%20NOT%20external-state-check%20NOT%20%2Fhost%2Fmacos-1014-57.macstadium.build.10gen.cc&display.page.search.mode=verbose&dispatch.sample_ratio=1&earliest=1591887600&latest=1591920000&sid=1592233844.3764706"""
"EVG-8255","Task","app",2,"Login cache should be cleared as part of mana offboarding","""MANA is expected to call `DELETE /users/{user_id}/permissions` in order to clear the user's permissions, but it would be good to also clear their login cache so that the background reauthentication job does not needlessly try to reauth people who should already be offboarded. We should either add add another route and have MANA make a request to it, or just add it to the existing delete permissions route."""
"EVG-8253","Bug","app",1,"Version start time should not get updated with every task","""https://github.com/evergreen-ci/evergreen/blob/bd4afd4af6d8ea1e5b3bf7abfc8955170969db1d/service/api_task.go#L53 will eventually call into a function that updates the version start time regardless of if it's already started"""
"EVG-8252","Bug","platform",1,"Database error retrieving DistroQueueInfo for distro id 'suse15-zseries-large': document not found","""I see these errors in Splunk. This is likely a side effect of the work to remove queue distros when scheduling is disabled."""
"EVG-8250","Bug","ui",2,"Unkown directive client bugsnag error","""Bugsnag is throwingÂ  graphql validation errors when using the @client directive in graphql queries. Either replace the usage of this field or handle this error.    *[https://app.bugsnag.com/mongodb/evergreen/errors/5ede8fc73dc90800185da435?filters[event.since][0]=30d&filters[error.status][0]=open&pivot_tab=event]*"""
"EVG-8284","Task","app",1,"Remove multiple AWS key/secrets from admin settings","""Turns out this is unnecessary, all regions will use the same key/secret pair."""
"EVG-8282","Task","app",2,"Display tasks have duplicate dependencies","""EVG-6917 was supposed to make display tasks not have duplicate dependencies, but they still appear to.  e.g. https://evergreen.mongodb.com/task/mongodb_mongo_v4.4_enterprise_rhel_62_64_bit_display_rollback_fuzzer_unclean_shutdowns_patch_40add1dc44736475ea3aa598f9878e990b2ad974_5ee890a21e2d17016ea3405d_20_06_16_09_29_04"""
"EVG-8300","Problem Ticket","app",2,"generate.task timing out","""It seems like there have been a lot of 'generate.tasks' calls that are timing out at 2 hours. They feels like a really long time for 'generate.tasks' to run. It might be worth investigating if something is wrong."""
"EVG-8299","Improvement","app",2,"CLI command to ssh to an instance","""Wrap ssh to look up the current DNS name of the instance so a user can always use to same command"""
"EVG-8293","Bug","ui",2,"Improve display of long variant/test names in Spruce","""see https://spruce.mongodb.com/version/5ee93748562343577c5e7870/tasks?limit=100&page=0 and https://spruce.mongodb.com/task/mongo_java_driver_tests_jdk_secure__version~latest_os~linux_topology~sharded_cluster_auth~auth_ssl~ssl_jdk~jdk11_test_69ef5be50c8ac47a989dcf92f230c837f4454df3_20_06_15_16_44_05/tests?page=0&testname=ServerDiscovery"""
"EVG-8320","Problem Ticket","app",2,"Evergreen task ran twice on the same machine (under the same task execution)","""h6. Task logs        https://evergreen.mongodb.com/task_log_raw/mongodb_mongo_v4.4_enterprise_rhel_62_64_bit_sharding_auth_audit_13_enterprise_rhel_62_64_bit_d36d5430d7aefc844a2020064703df4fff7d6dcd_20_06_04_12_54_42/0?type=T#L871    h6. Agent logs        https://evergreen.mongodb.com/task_log_raw/mongodb_mongo_v4.4_enterprise_rhel_62_64_bit_sharding_auth_audit_13_enterprise_rhel_62_64_bit_d36d5430d7aefc844a2020064703df4fff7d6dcd_20_06_04_12_54_42/0?type=E#L1172  """
"EVG-8318","Improvement","ui",1,"Link generated tasks to its generator","""There is not currently a way in the UI to map a generated task to its generator. We should expose this in both the legacy and new UIs, since EVG-8191 has a dependency on this ticket."""
"EVG-8310","Bug","app",2,"Makespan is skewed for patches that have had tasks restarted","""I re-ran one of the tasks in one of my [patches|https://spruce.mongodb.com/version/5ee254c37742ae4114585d57/tasks] a few days after initially submitting it. The Makespan includes the multiple days worth of time between the initial patch start time, and the finish time of the second execution of the tasks:   !Screen Shot 2020-06-18 at 9.18.50 AM.png|width=30%!  This behavior is consistent with that of the [legacy UI|https://evergreen.mongodb.com/version/5ee254c37742ae4114585d57].  I would expect that the idle time during which no tasks are running would not be included in the makespan. It would be helpful to consider how to account for this idle time when displaying Makespan / time taken."""
"EVG-9690","Task","app",1,"Auto-populate working directory if not specified in subprocess.scripting","""If the working directory is not specified for subprocess.scripting, the code most likely will not work. However, most of the time, it seems like using the agent's working directory should be sufficient as an auto-populated field. This will help the jasper generator not need to depend on the host's working directory (which enables local jasper build generation to be passed directly with a patch)."""
"EVG-9689","Improvement","ui",2,"Remove timeline and summary pages","""Research has found that there are no users of the timeline and summary pages. We should remove them."""
"EVG-8325","Build Failure","app",2,"Failures: test-rest-model on Race Detector [Evergreen @ 769da5ca] (TestCodegen, basic, scalars, thirdparty, TestCreateConversionMethodsError)",""" h2. [test-rest-model failed on Race Detector|https://evergreen.mongodb.com/task/evergreen_race_detector_test_rest_model_769da5ca31dd3ee3d26720269ecb4d2ceab0808e_20_06_18_20_45_59/0] Host: [ec2-54-226-139-238.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/i-02ca1699534bb8bf4] Project: [Evergreen|https://evergreen.mongodb.com/waterfall/evergreen] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/769da5ca31dd3ee3d26720269ecb4d2ceab0808e]: MAKE-1363: retry curling golangci-lint (#3709) | 18 Jun 20 20:45 UTC Evergreen Subscription: ; Evergreen Event:  *TestCodegen* - [Logs|https://evergreen.mongodb.com/test_log/5eebd888a4cf47327ca2e9ed] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_race_detector_test_rest_model_769da5ca31dd3ee3d26720269ecb4d2ceab0808e_20_06_18_20_45_59#TestCodegen=fail] *basic* - [Logs|https://evergreen.mongodb.com/test_log/5eebd888a4cf47327ca2e9ed] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_race_detector_test_rest_model_769da5ca31dd3ee3d26720269ecb4d2ceab0808e_20_06_18_20_45_59#basic=fail] *scalars* - [Logs|https://evergreen.mongodb.com/test_log/5eebd888a4cf47327ca2e9ed] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_race_detector_test_rest_model_769da5ca31dd3ee3d26720269ecb4d2ceab0808e_20_06_18_20_45_59#scalars=fail] *thirdparty* - [Logs|https://evergreen.mongodb.com/test_log/5eebd888a4cf47327ca2e9ed] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_race_detector_test_rest_model_769da5ca31dd3ee3d26720269ecb4d2ceab0808e_20_06_18_20_45_59#thirdparty=fail] *TestCreateConversionMethodsError* - [Logs|https://evergreen.mongodb.com/test_log/5eebd888a4cf47327ca2e9ed] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_race_detector_test_rest_model_769da5ca31dd3ee3d26720269ecb4d2ceab0808e_20_06_18_20_45_59#TestCreateConversionMethodsError=fail]  [Task Logs | https://evergreen.mongodb.com/task_log_raw/evergreen_race_detector_test_rest_model_769da5ca31dd3ee3d26720269ecb4d2ceab0808e_20_06_18_20_45_59/0?type=T] """
"EVG-8323","Improvement","ui",2,"remove scroll and show all items at once from changes and files tables","""this makes sense since the build variant side panel is not scrollable and is as long as it needs to be"""
"EVG-8322","Improvement","ui",1,"user/patches & user/:id path redirect should replace browser history instead of push","""this is to avoid polluting browser history"""
"EVG-9703","Task","app",2,"Commit queue not working for sandbox in staging","""For whatever reason, the commit queue for yb_mci in staging seems to not be working (I'm not sure if it's the commit queue for all of staging or for this project in either environment or what).Â     For example:Â [this version|https://evergreen-staging.corp.mongodb.com/version/5ef23ae597b1d31c63ef1665] has no merge task associated with it.    Having looked in the DB, the parser project associated with the version _does_ have the merge task and variant, but the tasks/builds don't exist.    This project in staging is important for our own development of the commit queue so we should resolve this."""
"EVG-9701","Task","app",1,"Passing a config file that doesn't exist should alert the user ","""If someone tries to pass a config file that doesn't exits, (evergreen -c ~/.non_existent_file.yml) the error they get is """"can't get project ref: Unexpected reply from server (404 Not Found): no project found named <project name>""""Â   It should instead display a more helpful error likeÂ  âhey that configuration file doesnât existâ"""
"EVG-9700","Task","platform",2,"Add more robust buildlogger testing for resmoke","""These tests include:   * End-to-end test with curator binary.   * Test to retrieve grouped logs with disjoint times.   * Test to retrieve grouped logs with overlapping tags."""
"EVG-9709","Bug","platform",0,"Fix compilation of benchmarks","""Cedar's benchmarks don't compile because the timber client's function signature changed."""
"EVG-9708","Build Failure","app",1,"Failures: test-operations on Windows [Evergreen @ c2718716] (TestHostRsync, ExistingLocalFileMirrorsRemoteFile, NoChangesInDryRunWithPull, RemoteDirectoryHasLocalSubdirectoryWithoutTrailingSlash +9 more)",""" h2. [test-operations failed on Windows|https://evergreen.mongodb.com/task/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24/0] Host: [ec2-18-207-164-212.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/i-0779e1b12bb66e623] Project: [Evergreen|https://evergreen.mongodb.com/waterfall/evergreen] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/c2718716d542f59601fc6b5e86cb4b8fcda0b3f1]: EVG-8204 increment version string | 23 Jun 20 21:29 UTC Evergreen Subscription: ; Evergreen Event:  *TestHostRsync* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#TestHostRsync=fail] *ExistingLocalFileMirrorsRemoteFile* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#ExistingLocalFileMirrorsRemoteFile=fail] *NoChangesInDryRunWithPull* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#NoChangesInDryRunWithPull=fail] *RemoteDirectoryHasLocalSubdirectoryWithoutTrailingSlash* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#RemoteDirectoryHasLocalSubdirectoryWithoutTrailingSlash=fail] *RemoteDirectoryMirrorsLocalDirectoryWithoutDeletions* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#RemoteDirectoryMirrorsLocalDirectoryWithoutDeletions=fail] *LocalDirectoryMirrorsRemoteDirectoryWithoutDeletions* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#LocalDirectoryMirrorsRemoteDirectoryWithoutDeletions=fail] *RemoteFileCreatedIfNonexistent* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#RemoteFileCreatedIfNonexistent=fail] *ExistingRemoteFileMirrorsLocalFile* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#ExistingRemoteFileMirrorsLocalFile=fail] *NoChangesInDryRun* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#NoChangesInDryRun=fail] *LocalDirectoryMirrorsRemoteDirectoryExactly* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#LocalDirectoryMirrorsRemoteDirectoryExactly=fail] *LocalDirectoryHasRemoteSubdirectoryWithoutTrailingSlash* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#LocalDirectoryHasRemoteSubdirectoryWithoutTrailingSlash=fail] *LocalFileCreatedIfNonexistent* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#LocalFileCreatedIfNonexistent=fail] *RemoteDirectoryMirrorsLocalDirectoryExactly* - [Logs|https://evergreen.mongodb.com/test_log/5ef283540305b93e1b26de4b] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24#RemoteDirectoryMirrorsLocalDirectoryExactly=fail]  [Task Logs | https://evergreen.mongodb.com/task_log_raw/evergreen_windows_test_operations_c2718716d542f59601fc6b5e86cb4b8fcda0b3f1_20_06_23_21_29_24/0?type=T] """
"EVG-9707","Task","platform",1,"evergreen YAML should not write AWS credentials to home directory","""It should follow what pail does and export environment variables instead (and remove {{~/.aws}} since we can't guarantee that other projects will clean up after themselves)."""
"EVG-9706","Bug","app",2,"""Out of Memory Kill detected"" message on task page is incomplete for some OOM failures","""(/) """"Out of Memory Kill detected (PIDs: 2762)"""" - https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_ubuntu_task_executor_pool_size_1604_64_bit_concurrency_sharded_replication_57faf552c3acb1dbfacff0020003cbcd3bd36d17_20_06_17_01_34_24/0#/log/S        (x) """"Out of Memory Kill detected (PIDs: )"""" - https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_inmem_causally_consistent_read_concern_snapshot_passthrough_0_enterprise_rhel_62_64_bit_inmem_2cc507c7c4199aeddd698a277a346b2acfa1c224_20_06_22_01_14_04/0#/log/S        Both of these failures occurred after the changes from [af7fb3b|https://github.com/mongodb/mongo/commit/af7fb3b79ce6ad97b8288c5e7cd64c405375e79b] as part of SERVER-48455."""
"EVG-12396","Bug","ui",2,"Open Page in the New UI displays on pages that are not yet supported","""Presently, clicking this link on a [legacy UI commit page|https://evergreen.mongodb.com/version/mongodb_mongo_master_47dcbeba765b04a829be9c27289e152e24e1a855] results in a GraphQL error. Clicking it on the [task details page|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_dynamic_required_lint_eslint_47dcbeba765b04a829be9c27289e152e24e1a855_20_06_25_20_10_38] shows a page in the new UI, as if it were a patch, but then clicking on the Patch breadcrumb leads to the same GraphQL error.    Removing the Open Page in the New UI link on the commit details/task details pages would avoid potential confusion about which pages ought to be supported.    It might also be worthwhile to consider displaying a more specific error message in Spruce when a user tries to navigate to a page that isn't yet supported."""
"EVG-12393","Improvement","app",2,"Transition running hosts to running","""When we find out a userdata host is running we should skip the provisioning state (and the setupHostJob) and just go straight to running. We'll need to relocate OnUp and setDNSName, maybe to cloud-host-ready.  This will allow us to remove the logic in next_task that lets provisioning hosts run tasks. Also, we could remove the user-data-done job since the agent won't be asking for tasks until userdata has finished running. """
"EVG-12392","Improvement","app",2,"Mark terminated instances as terminated in the DB","""If AWS tells us a host has terminated we should mark it in the db if we haven't already."""
"EVG-12391","Improvement","app",2,"Terminate Spot Instances that are about to terminate","""For the spot instance termination event we should terminate the host instead of waiting for AWS to kill it (they aren't running tasks anymore anyway)."""
"EVG-12390","Improvement","app",2,"Add REST route to handle AWS webhooks","""Probably one route will suffice"""
"EVG-12389","Task","app",2,"Configure host events","""Set up AWS to send webhooks for these [events|https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/EventTypes.html#spot-instance-event-types]:  * Spot Instance Interruption and/or termination  * instance running    # Create a SNS topic and add a https subscription to send webhooks to evergreen (separate topics/subscriptions for prod/staging?)  # Configure a CloudWatch/EventBridge rule to publish to the topic"""
"EVG-12388","Task","platform",1,"Do not set subprocess.scripting working directory in meta-build","""Since it should be set by default to the task's working directory."""
"EVG-12387","Task","platform",1,"Add golint for jasper","""Jasper tends to be well-documented and it would be good to ensure future devs continue keeping the documentation in a good state."""
"EVG-12386","Task","app",2,"Add region credentials to distros in staging","""Add support for the following regions in all ( ?)Â spawnable distros in staging, and also verify that the instance type is available.   * ap-southeast-2   * Europe (Ireland): eu-west-1   * California: us-west-1    Â Â """
"EVG-12400","Bug","app",2,"No error is displayed when modifying a host that is terminated","""When using the CLI to extend the expiration time of a host using evergreen host modify --host <hostID> --extend 5 with an id of a host that is terminated, the CLI returnsÂ    """"Successfully queued changes to spawn host with ID 'hostID'."""""""
"EVG-12399","Build Failure","app",1,"Failures: test-rest-model on Ubuntu 16.04 [Evergreen @ 18ab08f5] (TestCodegen, aliases, basic, object_embedded, object_simple, scalars, thirdparty)",""" h2. [test-rest-model failed on Ubuntu 16.04|https://evergreen.mongodb.com/task/evergreen_ubuntu1604_test_rest_model_18ab08f5613814fd6d8dc97de4c47c6db7d08f11_20_06_25_19_46_47/0] Host: [ec2-54-91-138-40.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/i-08c55209d62321a1b] Project: [Evergreen|https://evergreen.mongodb.com/waterfall/evergreen] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/18ab08f5613814fd6d8dc97de4c47c6db7d08f11]: EVG-8169 allow aliasing fields (#3717) | 25 Jun 20 19:46 UTC Evergreen Subscription: ; Evergreen Event:  *TestCodegen* - [Logs|https://evergreen.mongodb.com/test_log/5ef4ffe5a4cf4714d36fb8c2] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_ubuntu1604_test_rest_model_18ab08f5613814fd6d8dc97de4c47c6db7d08f11_20_06_25_19_46_47#TestCodegen=fail] *aliases* - [Logs|https://evergreen.mongodb.com/test_log/5ef4ffe5a4cf4714d36fb8c2] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_ubuntu1604_test_rest_model_18ab08f5613814fd6d8dc97de4c47c6db7d08f11_20_06_25_19_46_47#aliases=fail] *basic* - [Logs|https://evergreen.mongodb.com/test_log/5ef4ffe5a4cf4714d36fb8c2] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_ubuntu1604_test_rest_model_18ab08f5613814fd6d8dc97de4c47c6db7d08f11_20_06_25_19_46_47#basic=fail] *object_embedded* - [Logs|https://evergreen.mongodb.com/test_log/5ef4ffe5a4cf4714d36fb8c2] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_ubuntu1604_test_rest_model_18ab08f5613814fd6d8dc97de4c47c6db7d08f11_20_06_25_19_46_47#object_embedded=fail] *object_simple* - [Logs|https://evergreen.mongodb.com/test_log/5ef4ffe5a4cf4714d36fb8c2] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_ubuntu1604_test_rest_model_18ab08f5613814fd6d8dc97de4c47c6db7d08f11_20_06_25_19_46_47#object_simple=fail] *scalars* - [Logs|https://evergreen.mongodb.com/test_log/5ef4ffe5a4cf4714d36fb8c2] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_ubuntu1604_test_rest_model_18ab08f5613814fd6d8dc97de4c47c6db7d08f11_20_06_25_19_46_47#scalars=fail] *thirdparty* - [Logs|https://evergreen.mongodb.com/test_log/5ef4ffe5a4cf4714d36fb8c2] | [History|https://evergreen.mongodb.com/task_history/evergreen/evergreen_ubuntu1604_test_rest_model_18ab08f5613814fd6d8dc97de4c47c6db7d08f11_20_06_25_19_46_47#thirdparty=fail]  [Task Logs | https://evergreen.mongodb.com/task_log_raw/evergreen_ubuntu1604_test_rest_model_18ab08f5613814fd6d8dc97de4c47c6db7d08f11_20_06_25_19_46_47/0?type=T] """
"EVG-12414","Task","platform",2,"Move Jasper metabuild to Evergreen","""The metabuild tool should belong in evergreen since it's an Evergreen-focused feature. It would be good to keep features related to evergreen configuration within Evergreen rather than put it in a repository (which could someday integrate with it, but currently doesn't and likely won't in the near or medium term)."""
"EVG-12413","Task","platform",1,"Shrub should support yaml output","""Shrub currently outputs a JSON Evergreen configuration file. While this is fine for things like the agent which just parses it, it's not a very human-readable format. Since we will eventually support local task generation for patches, it would be nice if it had an option to output YAML instead of JSON."""
"EVG-12412","Improvement","ui",2,"ansi_to_html library sometimes errors when viewing logs ","""the error happens when viewing these pages    [https://spruce.mongodb.com/task/sqlproxy_full_matrix__os_full_matrix~osx_mongodb_version~latest_mongodb_topology~standalone_module_tests_patch_129f80fcf3b75ecb4f8f24ecbb1ba2b5d7dc1a3e_5efa177e3e8e86592c495ab0_20_06_29_16_32_00/logs]    [|https://spruce.mongodb.com/task/buildhost_configuration_ubi7_build_container_patch_3899b4ba54eb93ecd70b2963ae6c380b83ee4f41_5f05fc4c1e2d17015edcdc21_20_07_08_17_03_08/logs]    Â     [https://app.bugsnag.com/mongodb/evergreen/errors/5efa1a85442e1f001893f433?filters[event.since][0]=30d&filters[error.status][0]=new]"""
"EVG-12404","Bug","app",1,"Hosts that fail to convert provisioning type should be set to running","""OSX hosts failed to convert to new provisioning due to a permission denied (presumably because the sudo permissions to allow new provisioning were only applied to macos-1012 and macos-1014, but not osx-1010). However, if you switch back to legacy provisioning, the host is not set to running automatically."""
"EVG-12427","Task","platform",2,"LogIterator implementations do not close readers","""The LogIterators call {{(pail.Bucket).Get()}} but do not have a way to close the returned manually {{io.ReadCloser}} (e.g. after theÂ {{LogIterator}} is done). This is causing the Windows tests to fail with device/resource busy when trying to clean up the local pail bucket (TestMergeLogIterator).    One possible solution would be to provide a {{Close}} method in the {{LogIterator}} interface."""
"EVG-12422","Bug","app",2,"Error restarting failed tasks in patch build with ""duplicate key error""","""In [this patch|https://spruce.mongodb.com/version/5efa3c6ec9ec4470c51e2319/tasks], if I """"Restart"""" all tasks that failed with """"System Failure"""", I can reliably get the following error:  """
"EVG-12419","Bug","platform",1,"Fix leaking resources for TestLogMergeIterator","""Seems like there is a leaked resource in the TestLogMergeIterator test, the tmp dir cannot be removed at the end of the test.    It only fails on Windows.Â """
"EVG-12418","Bug","app",2,"Versions with blocked tasks aren't marked as complete","""We're supposed to mark a version as complete when all its remaining tasks are blocked, but this isn't happening."""
"EVG-12442","Task","platform",1,"Cedar CLI client commands are not usable","""It requires a host/port from the parent CLI context, which does not have those flags defined. It should just get the flags from the CLI context at the client level.    It also requests from the wrong (because it needs to be prefixed with {{/rest/v1}}."""
"EVG-12440","New Feature","platform",1,"Implement AppendArtifact on the system metrics model","""This should upload a new artifact to the bucket specified in the SystemMetricsArtifactInfo struct and append the key to the slice of keys."""
"EVG-12432","Task","platform",1,"Create protobuf for system metrics service","""This ticket requires you to create the protocol buffer (gRPC) for the system metrics collection service. There are some examples you can look at including [buildlogger|[https://github.com/evergreen-ci/cedar/blob/master/buildlogger.proto]] and [perf|[https://github.com/evergreen-ci/cedar/blob/master/perf.proto]].    Think about what users would want to send and how that fits with the functions you have written in the model package."""
"EVG-12453","New Feature","app",2,"Create API to test a project alias","""It can mostly be a wrapper around https://github.com/evergreen-ci/evergreen/blob/c19b96fbffa64becbfabc7e1bbe13e0425b9475a/model/project.go#L1282"""
"EVG-12452","Task","platform",0,"Add short flags for revendor command","""Mostly so that I can type less."""
"EVG-12539","Task","ops",1,"Create new evergreen project for Spark connector","""Hi,    Could I get another new evergreen project for the Spark Connector?    A copy of https://evergreen.mongodb.com/waterfall/mongo-spark-2.3.x would be great, just need it to point to the: 2.4.x branch.    Many thanks,    Ross"""
"EVG-12467","Task","platform",2,"CLI should support SendMessages","""This is so the CLI maintains parity with the other remote interfaces and so the the CLI over SSH client can call {{SendMessages}}."""
"EVG-12464","Bug","ui",2,"UI should handle when patch has no base commit ","""This will happen rarely, for example in a new project that has no commits yet"""
"EVG-12478","Task","app",2,"Versions triggered from git tags shouldn't be set inactive","""These should always be scheduled."""
"EVG-12477","Task","platform",1,"Shrub should omitempty optional fields","""This will cut down on the verbosity of the generated configs."""
"EVG-12471","New Feature","app",2,"Add authentication support to evergreen project subscription POST configuration","""As part of the PM-1800 / BF Matching for Patch Builds, DAG would like the build baron server to receive patch failure notifications.    Since this project is implemented as a kanopy service, it is behind [corp secure|https://wiki.corp.mongodb.com/display/SEC/CorpSecure+2.0].     We will be requesting a long lived JWT to grant access to our kanopy service but evergreen will need to support JWT (as a secure field) in order to post to the /patch_build/add_instance endpoint.    A JWT can be used either as a [cookie or an authorization header|https://jira.mongodb.org/browse/DAG-274?focusedCommentId=3276831&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-3276831]."""
"EVG-12470","Improvement","ops",1,"Enable BB plugin for ""wiredtiger-mongo-v4.4"" Evergreen project","""Please help to enable BB plugin for the [wiredtiger-mongo-v4.4|https://evergreen.mongodb.com/waterfall/wiredtiger-mongo-v4.4] project.   The plugin had been enabled for the other 2 wiredtiger projects previously if that helps.   Cheers."""
"EVG-12498","Task","ops",1,"Create mongo-go-driver-v1.4 Evergreen project","""Please create a new Evergreen project:    Name: mongo-go-driver-v1.4   Display Name: Mongo Go Driver (release/1.4)   Branch Name: release/1.4    Otherwise, it should be a clone of mongo-go-driver, with all the same project properties, etc.    Please also create the necessary S3 buckets to allow uploads of build artifacts"""
"EVG-12497","Task","ops",1,"Create new evergreen project for mongo-java-driver-4.1","""Please create new Evergreen project:    Name: mongo-java-driver-4.1  Display Name: Java Driver (4.1)  Branch Name: 4.1.x    Otherwise, it should be a clone of mongo-java-driver-4.0, with all the same project properties, etc.    Please also create the necessary S3 buckets to allow uploads of build artifacts    """
"EVG-12487","Bug","ui",1,"e2e tests: fix task_actions spec","""these tests flake:    Clicking on Restart and then Schedule should produce an error banner    There should be 2 banners visible from the previous actions    Â """
"EVG-12491","Incident","app",1,"Tasks failed to restart","""See https://mongodb.slack.com/archives/G979SL0HM/p1594502408091800 for discussion. A system-failed task failed to restart. Reverting task group reset logic commits fixed it.    Tasks that failed to restart before the revert:  * https://evergreen.mongodb.com/task/mongo_release_rhel80_compile_2dae2754daded5fb71a93d19223613850826f75e_20_07_10_19_05_28  * https://evergreen.mongodb.com/task/mongo_release_amazon2_compile_2dae2754daded5fb71a93d19223613850826f75e_20_07_10_19_05_28    Commits I reverted:  * 1c22aa164c4c608a26103d969b4ccc51253595f8  * 20482f76c62c0971e55051de639ce32c48608573    I reverted the first because just reverting the second got me into some pretty unpleasant merge conflicts."""
"EVG-12503","Bug","ui",2,"Task checkboxes remain unselected after clicking","""On some variants, the task check boxes appear to be unselected even after clicking individually or clicking """"Select all tasks in this variant"""".    This was the patch build: https://spruce.mongodb.com/patch/5f0ca3d7306615237fb06b7b/configure/tasks    I observed this on the """"OCSP tests"""" variant.    Reproduced in Google Chrome 83.0.4103.116.    Screenshot attached."""
"EVG-12502","Task","platform",1,"Allow user to specify generated config output format in CLI","""Since shrub now supports JSON and YAML, we should generate configs for either one (the YAML one would be better for human readability while the JSON one would be suitable for {{generate.tasks}})."""
"EVG-12496","Bug","ui",2,"GQL query for myHosts","""myHosts gql query should return a list of hosts that will support this page.Â     since a user can only have 6 hosts, it's unlikely we will need to paginate this query    [https://mongodb.invisionapp.com/d/main/#/console/19647524/424885179/comments]"""
"EVG-12495","Bug","ui",2,"GQL query for Host ","""create a Host gql type that has all of the host metadata shown on these pages    then create a host query to fetch a host by it's id    only include recentEvents in this structure if it's not meant to be paginated  [https://mongodb.invisionapp.com/d/main/#/console/19647524/424885179/comments]  [https://mongodb.invisionapp.com/d/main/#/console/19647524/424885176/comments]    Â     Â     Â """
"EVG-12493","Task","platform",2,"Remove dependence on working directory for clone","""The working directory flag for Make-based projects should be removed from the CLI. Users should be able to specify the working directory to clone to, but it should just default to the task's working directory (i.e. {{${workdir}}}).    For golang-based projects, the working directory should be configurable just like the Make one, but it should default to {{${GOPATH}/src/<project_path>}} if none is specified."""
"EVG-12533","Bug","app",1,"host configure commands appear to hang","""printing to stdout stops after the first command"""
"EVG-12530","Improvement","ui",2,"Hosts page pagination","""* Get next page of results   * Update âpageâ url param & re-fetch       * Choose number of hosts per page   * Update `limit` url param & re-fetch"""
"EVG-12529","Improvement","ui",2,"Filtering hosts: fetch filtered hosts","""Listen to changes in url params and query hosts with params as filters"""
"EVG-12528","Task","ui",2,"Filtering hosts: dropdowns UI `search/filter` button","""Clicking `search/filter` adds query param to url"""
"EVG-12527","Improvement","ui",2,"Reusable table filters","""Clicking `reset` removes query param from url"""
"EVG-12524","Task","ui",2,"Selecting multiple hosts on hosts page: mixed state checkbox","""Mixed state checkbox in column header"""
"EVG-12523","Task","ui",2,"Restart Jasper button","""Button that launches modal and can be used on /hosts and /host pages"""
"EVG-12517","Task","ui",2,"Display title and status ","""Display the title and status for the /host/<hostId> pageÂ     !image-2020-07-14-10-43-04-831.png!"""
"EVG-12515","Task","ui",2,"Create page layout ","""Create the /host/<hostid> page layoutÂ """
"EVG-12514","New Feature","ui",2,"Create Route ","""Create the /host/<hostid> routeÂ """
"EVG-12513","Task","ui",2,"Host Metadata Card Component ","""Render the metadata card component: query the data and display it.Â     !image-2020-07-14-10-43-52-718.png!"""
"EVG-12546","Bug","app",2,"Detected OOM Kill when there was none in the system logs","""This [task|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_dynamic_required_sharding_ese_gcm_37_enterprise_rhel_62_64_bit_dynamic_required_patch_188c858a12705164b7ae5f1ad418821bedd94bb4_5f0caad39ccd4e2f8b9748c4_20_07_13_18_41_44#/log/S#comparehashes=188c858a12705164b7ae5f1ad418821bedd94bb4&threads=maxonly] detected an OOM kill with no PIDs.    The system logs don't mention an OOM Kill"""
"EVG-12545","Bug","app",2,"Display task with an OOM kill?","""The [task|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_display_replica_sets_large_txns_format_patch_c957403d177c8b83c3d3693b29d7af73f34ffdfc_5f0c24f0e3c3311dad2f5e25_20_07_13_09_10_09#/log/S#comparehashes=c957403d177c8b83c3d3693b29d7af73f34ffdfc&threads=maxonly] in question"""
"EVG-12544","Bug","app",2,"OOM Tracker misses pids","""There are times when the OOM tracker misses pids that were OOM killed  [One example|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_replica_sets_large_txns_format_2_enterprise_rhel_62_64_bit_majority_read_concern_off_74ab0cdac56e1cc62fc96d3ca3be3ddfa54f2bcb_20_07_11_23_55_48#/log/S] where we found 12173 but missed 16811 (which is included in the system log)  [Another example|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_majority_read_concern_off_replica_sets_large_txns_format_2_enterprise_rhel_62_64_bit_majority_read_concern_off_74ab0cdac56e1cc62fc96d3ca3be3ddfa54f2bcb_20_07_11_23_55_48#/log/S], and [another|https://evergreen.mongodb.com/task/mongodb_mongo_master_enterprise_rhel_62_64_bit_dynamic_required_gle_auth_patch_188c858a12705164b7ae5f1ad418821bedd94bb4_5f0caad39ccd4e2f8b9748c4_20_07_13_18_41_44#/log/S#comparehashes=188c858a12705164b7ae5f1ad418821bedd94bb4&threads=maxonly]"""
"EVG-12540","Task","platform",2,"Allow FTDC to collect JSON in memory","""FTDC currently supports collecting JSON and writing the FTDC chunk to a file. However, it may be useful to keep it in memory."""
"EVG-12538","Improvement","platform",1,"Have timber buildlogger client take username and apikey","""This will replace the current way of asking for the certificate files."""
"EVG-12537","Bug","app|platform",1,"Disable oom tracker in containers","""On linux, the container won't have access to the host's dmesg buffer and trying to run it will return """"dmesg: read kernel buffer failed: Operation not permitted""""    https://stackoverflow.com/questions/41171349/why-is-a-shell-within-a-docker-container-showing-dmesg-content-from-the-host"""
"EVG-12535","Improvement","platform",2,"Set read concern majority","""We set write concern majority. We should also set read concern majority to avoid reading data that can be rolled back.    Note that the environment variable that sets write concern is in 10gen/kernel-tools. We should use a similar model for setting read concern: Support setting arbitrary read concerns in the app, with a default, and pass read concern majority in the env."""
"EVG-12554","Bug","app",2,"Task has nonexistent dependency","""https://evergreen.mongodb.com/task/mongo_python_driver_Coverage_Report_coverage_report_patch_5d92b2f5523876653018a4427962ef8ee8f7e6ff_5f0638a6d1fe074eae3090f0_20_07_08_21_20_39    It has a very long list of dependencies that are not specified in the yml. Also it mysteriously got scheduled a week after the patch was submitted"""
"EVG-12548","Improvement","app",1,"Remove restriction of hosts greater than half the number of task group tasks","""There is a restriction on task groups that the max number of hosts must not be more than half the number of tasks. I believe this was meant to enforce that people use task groups to serialize tasks. However, this doesn't really make sense. Users might want the task group behavior of preserving the directory but also be fine with parallelism."""
"EVG-12588","New Feature","ui",1,"Volumes page: Page title + badges","""Volumes page: Page title + badges"""
"EVG-12584","New Feature","ui",2,"Volumes page: GQL mutation to create volume","""Volumes page: GQL mutation to create volume"""
"EVG-12583","New Feature","ui",2,"Volumes page: GQL mutation to edit volume","""Volumes page: GQL mutation to edit volume"""
"EVG-12582","New Feature","ui",2,"Volumes page: Create table dropdown card component - hook up to volumes query","""Volumes page: Create table dropdown card component - hook up to volumes query"""
"EVG-12580","Task","ui",2,"Volumes page: GQL query for myVolumes","""Volumes page: GQL query for myVolumes, include these fields in the Volumes gql type: volume, mountedOn, status, expiresAt, createdAt, startedAt (maybe), type, size, availabilityZone, isHomeDir"""
"EVG-12579","New Feature","ui",2,"Volumes page: GQL mutation to unmount / mount volume from host","""Volumes page: GQL mutation to unmount / mount volume from host"""
"EVG-12578","New Feature","ui",2,"Volumes page: GQL mutation to delete volume","""Volumes page: GQL mutation to delete volume"""
"EVG-12577","Task","ui",1,"Volumes/Host page: Create tab for Volumes and Hosts and empty placeholder pages","""Volumes/Host page: Create tab for Volumes and Hosts at /spawn route and empty placeholder pages"""
"EVG-12576","Task","ui",2,"Spawn host page: Render table rows ","""Spawn host page: Render table rowsÂ """
"EVG-12575","Task","ui",2,"Spawn host page: Create table dropdown card. Populate with data from host query.","""Spawn host page: Create table dropdown card. Populate with data from host query."""
"EVG-12574","Task","ui",2,"Spawn host page: GQL query to get instanceTypes","""Spawn host page: GQL query to get instanceTypes"""
"EVG-12573","Task","ui",2,"Spawn host page: GQL query to get spawnableDistros","""Spawn host page: GQL query to get spawnableDistros"""
"EVG-12572","New Feature","ui",2,"Spawn host page: GQL mutation to edit a spawned host","""Spawn host page: GQL mutation to edit a spawned host"""
"EVG-12570","Task","ui",2,"Spawn host page: Create GQL mutation to spawn a host","""Spawn host page: Create GQL mutation to spawn a host"""
"EVG-12569","New Feature","ui",8,"Spawn host page: Create spawn host modal and hook up to spawn host button","""Spawn host page: Create spawn host modal and hook up to spawnHost mutation and spawn host button"""
"EVG-12568","New Feature","ui",2,"Spawn host page: GQL mutation to start a paused host","""Spawn host page: GQL mutation to start a paused host"""
"EVG-12567","Task","ui",2,"Spawn host page: GQL mutatation to delete host","""Spawn host page: GQL mutatation to delete host"""
"EVG-12566","New Feature","ui",2,"Spawn Host page: GQL mutation to pause/restart host","""Spawn Host page: GQL mutation to pause/restart host"""
"EVG-12564","Task","ui",2,"Prefrences page: Hook up the pencil action button in the Public Keys table","""Prefrences page: Hook up the pencil action button in the Public Keys table to edit the public key. Clicking on the key should open a component to edit the key (needs design)"""
"EVG-12563","Task","ui",1,"Spawn host page: Page title + badges","""Spawn host page: Page title + badges"""
"EVG-12562","Task","ui",2,"Prefrences page: Create the ""+ Add new key"" button on Manage Public Keys page","""Prefrences page: Create the """"+ Add new key"""" button on Manage Public Keys page as well as the component (needs design) to submit a new key. Hook up the component submit button to the createPublicKey mutation."""
"EVG-12561","Task","ui",2,"Prefrences page: GQL Mutation to delete a public key for the authenticated user","""Prefrences page: GQL Mutation to delete a public key for the authenticated user"""
"EVG-12560","Task","ui",2,"Prefrences page: Render Key Name and Action buttons in the Manage Public Keys page","""Prefrences page: Render Key Name and Action buttons in the Manage Public Keys page. Hook up trash can button to the delete public key mutation."""
"EVG-12559","Task","ui",1,"Prefrences page: Add Manage Public Keys tab in the Preferences page and a placeholder page","""Prefrences page: Add Manage Public Keys tab in the Preferences page and a placeholder page"""
"EVG-12558","Task","ui",2,"Prefrences page: GQL Mutation to update a public key","""Prefrences page: GQL Mutation to update a public key"""
"EVG-12557","New Feature","ui",2,"Preferences page: myPublicKeys query","""create a query to request the authenticated users public keys.Â """
"EVG-12556","Task","ui",2,"Prefrences page: GQL Mutation to create a public key for the authenticated user","""Prefrences page: GQL Mutation to create a public key for the authenticated user"""
"EVG-12555","Improvement","app",1,"Increase timeout for Task S3 downloads to 30 minutes","""In order to support slower network speeds on static hosts (Z,PPC), we want to increase the timeout on downloading artifacts from S3. From manual tests, 30 minutes seems to be a safe threshold.     Example: https://evergreen.mongodb.com/task/mongodb_mongo_v4.4_enterprise_rhel_81_ppc64le_failpoints_31b08e7d7e095132b7db3e8f4a4271478cf353ab_20_07_16_02_59_08    """
"EVG-12613","New Feature","ui",2,"Hosts page table","""[https://mongodb.invisionapp.com/share/C2WKQWRWG5Y#/screens/424885145]"""
"EVG-12609","Bug","app",2,"Task restarted with system failure, then marked started twice","""[https://evergreen.mongodb.com/task/mms_e2e_local_with_daemon_E2E_Local_BRS_Automated_PIT_Restore_ShardedCluster_Blockstore_S3_dd9fa2b4001cd68b7d427b3ff9e6e8924af9b5fb_20_07_16_13_59_36#/log/EV]    We need to know if this behavior is something expected we need to change batch times or test lengths to account for, in order to make a task's contribution to the variant makespan shorter. Or if it is something that needs to be addressed by the evergreen team to prevent from happening again."""
"EVG-12605","Bug","platform",2,"Generated task ran 8 hours after last task it depended on finished","""This task ran on Jul 17 at 1:49amÂ [https://evergreen.mongodb.com/task/mms_e2e_local_with_daemon_foliage_dd9fa2b4001cd68b7d427b3ff9e6e8924af9b5fb_20_07_16_13_59_36#/log/EV]    It ran over 8 hours after the last task it depended on finished on Jul 16 at 5:05pm    [https://evergreen.mongodb.com/task/mms_e2e_local_with_daemon_E2E_Local_BRS_Automated_PIT_Restore_ShardedCluster_Blockstore_S3_dd9fa2b4001cd68b7d427b3ff9e6e8924af9b5fb_20_07_16_13_59_36]    This was on rhel70-large over the evening which we would expect to not be constrained on hosts, so we're perplexed what caused the delay    The task was generated long before on Jul 16 at 10:12amÂ [https://evergreen.mongodb.com/task/mms_evg_foliage_stat_check_init_dd9fa2b4001cd68b7d427b3ff9e6e8924af9b5fb_20_07_16_13_59_36]    This gave us a makespan of 15 hours for the variant. We need to bring that down.    Looking for a root cause of why this 8 hour delay occurred, any steps the evergreen team or we can implement to prevent it in the future.    CC: [~geoff.mishkin] [~james.broadhead]"""
"EVG-12603","Task","platform",2,"Suggest re-logging into UI if evergreen CLI cannot authenticate user","""User refresh tokens expire after 100 days and the only way to get a new token is to log into Okta via the UI. However, the CLI currently just returns 401 unauthorized - it should suggest logging in again if it gets this due to expired tokens.    The way the middleware is written, there's no way to distinguish between different reasons for 401 unauthorized (e.g. unauthorized because ) since the user checking is based on the presence/absence of a {{gimlet.User}} being attached, so it's likely that suggesting logging in again will be the wrong solution since it's just a guess."""
"EVG-12626","Improvement","platform",2,"LoggingCache does not work as intended","""It should be a logging cache stored on the remote service side, not the client side.    It should probably follow the REST model for the logging cache implementation, where it connects to the REST service and makes requests for all the logging cache methods.    We should test the logging cache once it's implemented (along with {{SendMessages}}, which depends on this)."""
"EVG-12625","Improvement","platform",1,"Rename CreateSystemMetricRecord to CreateSystemMetricsRecord and fix panic logging in timber","""The naming change is just for consistency with other functions, which use the plural form."""
"EVG-12624","Question","app",2,"Are task groups clearing the work dir between tasks within the group?","""https://github.com/evergreen-ci/evergreen/blob/2a733770e298ce01069e5c916b6a4d8773518c3d/agent/agent.go#L323 doesn't seem to check, but also I think we would be hearing about it if this were the case.    To test this, you can make a task group that writes a file in the first task and then reads that file in the second task."""
"EVG-12632","Bug","app",1,"`evergreen admin enable-service` and `disable-service` fetch blank service flags","""They make a request to the legacy admin settings route, which returns an empty struct (except for the banner). We should fix this so it actually returns the existing service flags. Otherwise, these CLI commands will unset all the service flags."""
"EVG-12629","Improvement","platform",2,"Handle expired refresh tokens by logging out user","""If the user has an expired refresh token, the background reauthentication job should clear their login cache as soon as it detects that error so that they must log in again.    Gimlet will have to return a special error message for the case of a user's refresh token being expired."""
"EVG-12644","Task","ui",1,"Create script to easily convert mongo documents to json","""This would help us quickly turn prod mongodb document data into plain json so that it can be used to seed the local dataÂ     This would greatly speed up the process of generating data to seed the local db."""
"EVG-12642","Improvement","app",2,"Don't stop starting a host if can't get price information","""EVG-12641 might be a situation where hosts can actually start, but the pricing API blocks Evergreen from setting hosts to running. We should put a context on calls to the cachingPriceFetcher and not error if they fail, since we can probably safely continue, since we no longer rely on it to get the cheapest AZ."""
"EVG-12640","Improvement","platform",1,"Add exit status to cedar GRPC client","""Just in case the metrics collector fails."""
"EVG-12649","Improvement","platform",1,"Fix make dist to compile for the target GOOS operating system","""This has the same problem that Barque had where it'll compile for the native computer's GOOS instead of the one set in the command line (e.g. {{GOOS=linux make dist}})"""
"EVG-12648","Incident","app",2,"Initial task setup failure for task","""This is not related to problem creating certificates and occurred less than 1% of the time. https://evergreen.mongodb.com/task/mongodb_mongo_master_amazon_compile_78cc027285359cc21c55f2dac69ce41cb9f23959_20_07_24_10_05_58"""
"EVG-12670","Task","platform",2,"Implement LTS/continuous/development checks for new versioning scheme","""The new versioning implementation should distinguish between LTS releases and non-LTS releases (i.e. continuous and development releases)."""
"EVG-12687","Bug","app",1,"Can't create empty patches","""An empty patch errors:    {code:bash}  $ evergreen patch -p evergreen  Enter a description for this patch (optional):  Unexpected reply from server (500 Internal Server Error): 400 (Bad Request): error getting summaries by commit: error getting patch summaries for commit 'master: EVG-12681 fix for Apple's git (#3834)': couldn't validate patch: Error waiting on patch: 562 - fatal: unrecognized input  : exit status 128  {code}  """
"EVG-12686","Task","platform",0,"Remove nonce error checking for ID token validation","""After filing [this issue|https://github.com/okta/okta-jwt-verifier-golang/issues/43], it seems like it should no longer be necessary to check for an error string related to empty nonce claim when returned an ID token [here|https://github.com/evergreen-ci/gimlet/blob/d28831ee71d1d02871f7e6a1c94ec5387430218d/okta/okta.go#L196-L205]. We should be able to remove this check."""
"EVG-12684","Bug","app",2,"Fleet errors for a set of distros","""We're getting many errors trying to spawn ubuntu*-arm64-large hosts."""
"EVG-12682","Task","platform",8,"Test new versioning scheme end to end","""We should verify that we can correctly put a version greater than 4.5.0 into the development repository. It may also make sense to do this with a release candidate.    This has to be done before we can do the first continuous release."""
"EVG-12681","Bug","app",1,"Can't patch with apple's version of git","""The version string for Apple's version of git doesn't match the [regexp|https://github.com/evergreen-ci/evergreen/blob/4dab3e36c27e0487aa3cf2c8c7da37e1c0d29259/operations/patch_util.go#L673] """
"EVG-12679","Task","platform",1,"Remove freebsd from cross-compilation","""Nobody uses it anymore so we can get rid of it."""
"EVG-12696","Bug","app",2,"New commits are not being tracked by mongo-go-driver-v1.4","""The mongo-go-driver-v1.4 project isn't automatically scheduling waterfall builds for new commits to the branch it's tracking. [~john.liu]Â initially fixed this by using the """"force run repotracker on save"""" option in the project settings, which kicked off one waterfall run, but the project did not pick up commits the next day either."""
"EVG-12690","Task","platform",8,"Implement new versioning scheme","""This should ideally be a separate implementation from the legacy versioning scheme, whose logic should preferably not change.    For this, we should just implement the existing methods on the mongodb version object, but with their new meanings. This new versioning scheme should only apply for versions 4.5.0 and above.    For example, development series do not exist anymore, but a release that goes into the development repo should be denoted by any non-LTS version which has {{major.quarter.patch}} format and is not followed by {{-rcN}} (special for release candidates)."""
"EVG-12697","Task","ui",1,"Call update function onEnter for table filters","""In table dropdown filters, the update function should be called if user presses Enter"""
"EVG-12712","Bug","ui",1,"Allow users to copy-to-clipboard build variant names on patch configuration page","""This is useful if a user wants to copy/paste build variant names for documentation, conversations about which task(s) to schedule, etc.    Presently, it is not possible to select them (see this [patch build|https://spruce.mongodb.com/patch/5f244d89d6d80a20695854b1/configure/tasks]). """
"EVG-12724","Improvement","ui",2,"Tasks submitted time should be their ingest_time","""The submitted time shown for a task taken from the task's create_time field. Given that a patch task's create time is [that of its base version|https://github.com/evergreen-ci/evergreen/blob/d40dbd00d349328491003a6fc21bc28fae5c8ef6/model/lifecycle.go#L1040] this is confusing. It would be better to show the task's ingest_time."""
"EVG-12717","Bug","app",2,"Evergreen automatically scheduled a zSeries task from March 24th 2020 on August 2nd 2020","""Tasks older than 7 days shouldn't be getting automatically scheduled.    https://evergreen.mongodb.com/task/mongodb_mongo_v4.4_enterprise_rhel_72_s390x_inmem_sharding_op_query_1_enterprise_rhel_72_s390x_inmem_70c19c844d348774290fdadb9f9bbb0deb5301ad_20_03_24_06_16_46#/log/EV    |Aug 2, 2020 6:45:04 am|Scheduled at Aug 2, 2020, 6:45:03 am|  |Aug 2, 2020 7:00:31 am|Dispatched to host [rhel74-z-12.dallasisv.build.10gen.cc|https://evergreen.mongodb.com/host/rhel74-z-12.dallasisv.build.10gen.cc]|  |Aug 2, 2020 7:00:37 am|Marked as """"started""""|"""
"EVG-12730","Task","ui",2,"Host Events Query ","""Fetch host event data on the ui.Â """
"EVG-12729","Task","platform",2,"Implement Download method","""This should download a single metric type from s3 for a SystemMetrics object."""
"EVG-12738","Task","platform",0,"Handle nil time and duration in jasper RPC conversions","""{{ptypes.Timestamp}}/{{ptypes.Duration}} will fail if passed a nil {{time.Time}}/{{time.Duration}} (e.g. if the process hasn't finished yet so doesn't have an ending timestamp)"""
"EVG-12737","Bug","app",2,"Can you create a patch against a restricted project you don't have access to?","""[https://mongodb.slack.com/archives/C0V896UV8/p1596729650420200]    Initial thoughts are yes, but I don't have a restricted project that I don't have access to for testing.    If you can, then we should probably change this issue to a bug, since you could leak Evergreen project variable values in the patch."""
"EVG-12736","Task","platform",2,"Upgrade gopsutil to latest tagged release","""The version of gopsutil that we're depending on panics on MacOS when calling {{(*Process).CreateTime()}} due to [a bug that has been fixed in a later version|https://github.com/shirou/gopsutil/issues/799#issuecomment-562764688].    This will require some work to fix grip, which is pinned to an old version of gopsutil."""
"EVG-12744","New Feature","app",3,"Create global_max_hosts functionality ","""Currently, we are relying on max_host limits to prevent the total number of hosts in the system from becoming too great. We should have a global limit in place so that we can loosen up max_host limits on individual distros, which are frequently pegged at max_hosts and build up very long wait times as a consequence.    use this data:  https://mongodb.splunkcloud.com/en-US/app/search/search?earliest=rt-1m&latest=rt&q=search%20index%3Devergreen%20%22host%20stats%20by%20distro%22&display.page.search.mode=fast&dispatch.sample_ratio=1&display.general.type=events&sid=rt_1596821781.155325    Pegged hosts:  https://mongodb.splunkcloud.com/en-US/app/search/search?earliest=-60m%40m&latest=now&q=search%20index%3Devergreen%20%22host%20stats%20by%20distro%22%20%7C%20spath%20path%3Ddata%7B%7D%20output%3Ddata%20%7C%20fields%20-%20_raw%20%7C%20fields%20data%20%7C%20mvexpand%20data%20%7C%20spath%20input%3Ddata%20%7C%20where%20status%3D%22running%22%20AND%20provider!%3D%22static%22%20and%20distro!%3D%22ubuntu1804-workstation-cluster%22%20and%20distro!%3D%22ubuntu1804-workstation%22%20%7C%20stats%20avg(max_hosts)%20as%20_max_hosts%20avg(count)%20as%20avg_count%20by%20distro%20%7C%20eval%20pegged_floor%3Dfloor(_max_hosts%20*%200.99)%20%7C%20where%20avg_count%20%3E%20pegged_floor%20%7C%20sort%20by%20pegged_floor&display.page.search.mode=verbose&dispatch.sample_ratio=1&display.general.type=visualizations&display.page.search.tab=visualizations&display.visualizations.charting.chart=column&sid=1596824255.157079      """
"EVG-12746","Bug","app",1,"The `evergreen` command line utility fails on Windows due to format of Git version","""The `evergreen` command line utility for Windows fails with this error:      The version that Git reports on Windows indeed is """"2.15.0.windows.1"""":  """
"EVG-12763","Bug","app",1,"Commit queue command and patch show truncated commit message","""Using evergreen version 2020-08-06, I ran       The commit message is truncated from """"SERVER-50221 Use shared_ptr to manage NoLimitSorter and InMemIterator in-memory data"""" to """"SERVER-50221 Use shared_ptr to manage NoLimitSorter and InMemIterator"""", and it appears this way in the Evergreen UI as well.    It appears that the point of truncation is the point where the commit message rolls over to the next line on [GitHub|https://github.com/mongodb/mongo/commit/6d307c337d5d76e5471e0676fc255cab15aef61a]."""
"EVG-12762","Task","app",1,"Clean up interns' virtual workstations","""EVG-8183 provided an API for MANA to clean up unexpirable resources (e.g. virtual workstations) left behind when someone leaves the company. Since MANA doesn't call it yet we need to manually clean up the hosts/volumes left behind by the summer interns."""
"EVG-12758","New Feature","ui",2,"Tasks Queue: Task table filtering","""* Can filter by task ID   * Can filter by revision"""
"EVG-12755","New Feature","ui",2,"Task Queue: Route","""* /task-queue   * Just going to /task-queue page will redirect user to default distro queue   * e.g. /task-queue => /task-queue/macos-1012       * Selected task represented in route   * /task-queue/:distroId/:taskId    Regardless of distro id   * âTask Queue` page title always present   * âSearch for Distroâ input always present"""
"EVG-12748","Task","ui",2,"Add data and tests for host events ","""Add data and tests that test a host that has events attached to both a host id and a tag.Â     When we create an intent host it has an ID like âevg-abcdefghâ, and then when we create the actual host we now have an ID like âi-1234"""". The host intent ID is saved as Tag` in the actual host. The current query should cover both, butÂ  we need to add a test that specifically includes events that happened to the host intent.Â """
"EVG-12747","Task","ui",2,"Handle empty running task on host page","""On the host page, there may not be a running host. When there is no running task, it should displayÂ Current Task:Â _none._    !image-2020-08-10-15-28-58-974.png!"""
"EVG-12769","Improvement","platform",2,"Poplar should enable env vars for sensitive information","""Some variables that are included in the upload report, such as the bucket api key, can only be added via the json report file. This file is often exported with the rest of the DSI artifacts which probably shouldn't have such sensitive information. We should enable env vars for these elements."""
"EVG-12767","Bug","app",1,"Do not remove temporary file prematurely when updating evergreen binary","""This will cause updates via {{evergreen get-update --install}} to fail."""
"EVG-12766","Bug","app",1,"Return 200 error on list endpoints with no resources attached","""List endpoints like /resource_A/a_id/B_resources should not 404 when there are no B resources attached to an existing resource_A. They should return a 200 with an empty list.    requests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://evergreen.mongodb.com/rest/v2/tasks/mms_code_health_E2E_NDS_DRY_RUN_c93893c3366dc473a6eaacade37416d56ef25b16_20_08_11_13_22_13/tests"""
"EVG-12765","Task","platform",2,"Exclude dev releases from the download feed","""Dev releases should be available in the repo but should not be advertised publicly for downloading since it's meant for internal use."""
"EVG-12764","Improvement","app",0,"Client should return non-zero status when user aborts patch submission at the uncommitted changes prompt","""I typically run  {code}  evergreen patch ... && git branch server-xxxxx-evgN  {code}  or similar so that I can keep track of my patch builds.  This works nicely if I change my mind and answer """"n"""" to the """"This is a summary of the patch"""" prompt, or if the patch submission fails for some reason.  However, if I answer """"n"""" to the """"Uncommitted changes are omitted from patches by default"""" prompt, then the exit code is still 0.  I would expect it to be non-zero, since the patch submission didn't run to successful completion.  The success exit status means the git branch/tag (or whatever followup action I wanted) is still performed, even though the patch wasn't submitted.  This is counter-intuitive given the way that the other prompt works.  Usually when I say """"n"""" to this prompt it's because I just want to run """"git status"""" to see what the uncommitted changes are.    """
"EVG-12779","Bug","app",2,"Stop using git's -c option in git.get_project","""git version  < 2.1.2 doesn't support it"""
"EVG-12777","Problem Ticket","app",2,"Pushed tag not triggering new version","""After configuring the {{mongo-tools}} project for tag-triggered versions and pushing a tag called {{test-tag}}, I saw that the tag was added to the [existing version|https://evergreen.mongodb.com/version/mongo_tools_d3aec0abfc02b849946ab154e1cda1884c0d06d5] corresponding to the tagged commit, but no new version was created.    For reference, see the attached screenshot of the tag-triggered versions config.    More info from a slack conversation with [~annie.black]:  {quote}it looks like we weren't able to find any builds, but i see that release is a valid build so i'm not sure why it wasn't found{quote}"""
"EVG-12788","Bug","app",2,"Re-execution of system failure did not activate blocked tasks","""I have a task which claims to be blocked. However, it depends only on a compile task, which successfully completed.  The compile task appears to have encountered system failures, and took four tries to successfully complete.  Is this expected for dependent tasks to remain blocked?    https://evergreen.mongodb.com/task/mongodb_mongo_master_debian92_aggregation_patch_424f10ec4bc7b333bd682c7490fc6147688fd0ec_5f3558913066156e86024d1b_20_08_13_15_15_09##comparehashes=424f10ec4bc7b333bd682c7490fc6147688fd0ec&threads=all"""
"EVG-12784","Bug","app",2,"Restricted project mms-auto-code-change evergreen project appears in dropdown for Cory Mintz","""My understanding is that a restricted project should only be viewable by the admins of the project. That must be incorrect.    How can I change who can view this project? If I cannot change it myself, I need removed everyone except the admins from view access."""
"EVG-12790","Bug","app",1,"Can't start stopped hosts from the old UI","""Clicking the start button returns a 400"""
"EVG-12789","Bug","platform",2,"gantt chart for tasks incorporating wait times","""Characterize system-introduced lag for SLAs.    Potential Metrics:    slowdown: runtime on a loaded system divided by runtime on a dedicated system     by task tree or by build  wait time: Time from scheduling to dispatch    problem: different schedulers function differently on this"""
"EVG-12801","Task","ui",2,"Handle undefined hosts more gracefully ","""!image-2020-08-17-16-28-42-844.png!"""
"EVG-12799","Task","platform",1,"Fix semantics of IsDevelopmentBuild for NewMongoDBVersion","""It should be false for any new version that is not """"pre"""" or ends in """"-"""" or has """"~""""."""
"EVG-12798","Task","platform",1,"Add new metadata fields to ArtifactVersion","""{{ArtifactVersion}}'s {{ProductionRelease}} and {{DevelopmentRelease}} are only for the old versioning scheme. The download feed will have {{ContinuousRelease}} and {{LTSRelease}} for the new versioning scheme.    Also, we should fix the JSON tags for {{Current}}.    It doesn't seem link any project is currently using these fields so far."""
"EVG-12810","Task","platform",2,"Ensure feeds have expected output for first continuous release","""Run some tests and manually check to ensure that the full.json and current.json will look as they're expected in preparation for the actual release. The other feeds that will be generated should also be spot-checked to ensure they'll produce the expected output.    Since the versions are just pulled from git tags in the mongo repo, it seems fine to just add the first continuous version to that list and see if it produces the expected feed."""
"EVG-12809","Task","platform",1,"Set up CI testing for bond","""Currently, testing is all manual.    We should also set up golangci-lint as the preferred linter instead of gometalinter."""
"EVG-12807","Task","app",1,"Add region credentials to distros in prod","""This is dependent on the build script being deployed to prod."""
"EVG-12804","Bug","app",2,"validate_commit_message task in the commit queue does not work with a commit message across two lines","""I had difficulty with [a recent commit|https://github.com/mongodb/mongo/commit/456b0e3ff9c319f494f6defcf62315cd17f8d3a6] where I originally had the commit message across two lines so that each line was <=100 chars, like so:    SERVER-49731 Create an Ident base class for RecordStore and SortedDataInterface and thread a  shared_ptr<Ident> through to the KVDropPendingIdentReaper on drop collection/index.    When I tried to use     evergreen commit-queue merge --project mongodb-mongo-master    to send the patch to the commit queue, the message got completely garbled:    Commit Queue Merge: '=?UTF-8?q?SERVER-49731=20Create=20an=20Ident=20base=20class=20for?=' into 'mongodb/mongo:master'   (https://spruce.mongodb.com/version/5f3bd794e3c331627f992d36/tasks)    I changed it to a single really long line, and it finally worked fine: https://spruce.mongodb.com/version/5f3bd94de3c331627f993096/tasks    Is this expected behavior? Or a bug? What format commit message should I be using? This is the first commit message where this has been a problem. I've committed patches with two-line messages before that the commit queue turned into one line, which was not what I wanted but did get through the commit queue."""
"EVG-12814","Bug","app|platform",2,"Investigate Failed to acquire IX lock transaction errors","""This is causing commits to be missed in rare cases"""
"EVG-12829","Bug","app",2,"Spawnhost setup scripts cd to non-existent directory on RHEL6.2","""The user for RHEL is root and the root user's home directory is at /root.  When we [prepend|https://github.com/evergreen-ci/evergreen/blob/b043069916c03fbdedc843526ee204eec8e38481/units/util.go#L52] the script with   {{cd /home/<user>}}, it fails because the directory /home/root doesn't exist."""
"EVG-12827","Bug","app",2,"Mbox BodyReader cannot handle lines longer than 4096 bytes","""msg.BodyReader().Read calls nextLine(), which calls ReadSlice('\n'), which relies on the default bufio buffer size of 4096 bytes. This means that lines longer than 4096 bytes cause patches to fail."""
"EVG-12826","Improvement","app",1,"Store regular patches in patch format","""Once tests have been adjusted to handle committed changes we should go back to storing patches in patch (mbox) format."""
"EVG-12825","Bug","app",1,"Store regular patches in diff format","""[This commit|https://github.com/evergreen-ci/evergreen/commit/4321ae58c139be58a2370a4c0d6e62f9236ec3b2] causes patches to be stored in patch format. This breaks tests relying on git.get_project not committing the changes.  We should hold off on storing patches this way until the tests can handle the changes being committed."""
"EVG-12824","Task","platform",1,"Clean up makefiles","""1. Remove things used for goEnv that were necessary solely for gometalinter (mostly the PATH muddling).  2. Should also experiment with removing goEnv entirely and just setting environment variables using Make's {{export}} feature.  3. Clean up build directory creation."""
"EVG-12840","Task","platform",1,"Handle dev releases for feeds and ensure continuous releases get release notes","""Ensure that:  - Development releases appear in full.json but not in current.json.  - Continuous releases get their own release notes, but Docs will have to update us on what the release notes URL will be for them."""
"EVG-12838","Task","platform",1,"Merge new versioning scheme logic","""Once the mongo-release-tools logic is code-complete and ready for the first continuous release, it should be merged into the master branch."""
"EVG-12852","Task","app",2,"improve offboarding users by modifying expiration time","""Manual testing has shown that offboarding users takes more time than our route allows, given the one minute time out. To make this as successful as possible, I believe this should be moved to a job. Potentially if terminating an unexpirable instance fails, we should log critical, otherwise the unexpirable volume may never be terminated.    Title updated to reflect the comments."""
"EVG-12851","Task","app",1,"commit queue panics","""https://mongodb.slack.com/archives/C866SR2LR/p1598289724003000"""
"EVG-12845","Improvement","app",1,"Provide API for a patch's diff","""Currently If a task wants to get its patch it needs to get it itself from git diff. We should provide an endpoint for the task to get it from.   This will reduce reliance on how Evergreen applies the patch."""
"EVG-12843","Build Failure","app",2,"Failures: coverage on Coverage [Evergreen @ a5450e38] (TestBackgroundSuite, TestMaxHeartbeats)",""" h2. [coverage failed on Coverage|https://evergreen.mongodb.com/task/evergreen_coverage_coverage_a5450e38434901d38c62b11f5243f3c2bc88c91e_20_08_21_20_35_21/0] Host: [ec2-34-235-152-164.compute-1.amazonaws.com|https://evergreen.mongodb.com/host/i-049d55f089ef5f68d] Project: [Evergreen|https://evergreen.mongodb.com/waterfall/evergreen] Commit: [diff|https://github.com/evergreen-ci/evergreen/commit/a5450e38434901d38c62b11f5243f3c2bc88c91e]: EVG-12481 Don't panic (#3918) | 21 Aug 20 20:35 UTC Evergreen Subscription: ; Evergreen Event:  *TestBackgroundSuite* - [Logs|https://evergreen.mongodb.com/test_log/5f4032a82fbabe0a1f64ef69] | [History|https://evergreen.mongodb.com/task_history/evergreen/coverage?revision=a5450e38434901d38c62b11f5243f3c2bc88c91e#/TestBackgroundSuite=fail] *TestMaxHeartbeats* - [Logs|https://evergreen.mongodb.com/test_log/5f4032a82fbabe0a1f64ef69] | [History|https://evergreen.mongodb.com/task_history/evergreen/coverage?revision=a5450e38434901d38c62b11f5243f3c2bc88c91e#/TestMaxHeartbeats=fail]  [Task Logs | https://evergreen.mongodb.com/task_log_raw/evergreen_coverage_coverage_a5450e38434901d38c62b11f5243f3c2bc88c91e_20_08_21_20_35_21/0?type=T] """
"EVG-12883","Improvement","app",1,"Ensure parameters are documented where relevant","""And potentially parameters should have their own section, to explain the hierarchy."""
"EVG-12882","Improvement","app",1,"Add --parameters option to the evergreen list command","""This will display the description and defaults for the parameters defined in the YAML for a project."""
"EVG-12881","Improvement","app",2,"Allow user to pass in parameters from the CLI, using either KEY=VALUE pairs or a file","""These parameters should also be stored with the patch and exposed via API."""
"EVG-12878","Improvement","app",2,"Allow users to maintain project-specific default parameters in their local client configuration.","""This will just add onto the existing Project struct in local configs. This should overwrite defaults in the project YAML."""
"EVG-12877","Improvement","app",1,"Ensure that if parameter YAML defaults are changed for PRs, these are used","""This includes PRs."""
"EVG-12876","Improvement","app",2,"Allow default parameters to be stored in the project YAML","""These should overwrite project variables. Should allow for a default value and a description."""
"EVG-12874","Improvement","ui",1,"Add link to task page that goes to /task-queue","""link only exists if task is on the queue"""
"EVG-12873","Task","platform",1,"Use latest version of golangci-lint","""The last go1.9 version of golangci-lint is buggy. It's probably better to lint with the latest linter version since go1.9 compatibility doesn't matter much."""
"EVG-12888","Improvement","app",2,"host.create should log the distros or AMI it creates","""There have been several cases where it has been difficult to debug a problem with host.create, because it required reading a complex project config to figure out what distro was spawned. host.create should log the distro or AMI it is spawning to the agent logs."""
"EVG-12899","Bug","ui",1,"Change LastCommunication Format on /host/<hostID>","""Change the format from    Â Last Communication:Â Jul 20, 2020 9:08:41 am   toÂ     Â Last Communication:Â  a month ago"""
"EVG-12896","Improvement","platform",1,"Use proper gRPC error codes","""Jasper currently just uses the {{github.com/pkg/errors}} to return errors to the gRPC service. However, because of this, it will always return an internal RPC error for any of these cases. We should use gRPC's error formatting {{google.golang.org/grpc/status}} since it supports returning specific gRPC statuses."""
"EVG-12910","New Feature","ui",2,"Display related Jira tickets in the build baron ","""Fetch related Jira TicketsÂ data on the ui.Â     [Main Ticket|https://jira.mongodb.org/browse/EVG-12459]    [Design|https://mongodb.invisionapp.com/share/C2WKQWRWG5Y#/screens/415337715]Â Â     Â """
"EVG-12907","New Feature","ui",2,"Add the add note button and functionality to the build baron UI ","""Â     Main Ticket    [Design|https://mongodb.invisionapp.com/share/C2WKQWRWG5Y#/screens/415337715]Â Â     Â """
"EVG-12903","New Feature","app",2,"Way to exclude tasks from git tag triggered versions","""Similar to how we have """"patchable: false"""" it would be great to have a similar flag to disallow things from running on git tag triggered versions instead of just messing with regex    """
"EVG-12913","Task","platform",2,"Implement required scripting environment methods for CLI","""They have not been implemented so far."""
