"issuekey","type","components","storypoint","title","description_text"
"COMPASS-167","Task","Schema",3,"Re-implement ""open ranges"" behavior in reactified schema view","""For MongoDB World, we've implemented a behavior in the query builder on """"number"""" minicharts to create open ranges, e.g. {{\{""""$lt"""": 20\}}} instead of {{\{""""$gt"""": 15, """"$lt"""": 20\}}} (special request from Dana for the demo). The behavior was to click-drag the selection box over the edge of the chart to trigger the open range, while still allowing closed ranges when dragging close to the edge.    !open_closed_ranges_query_builder.gif|width=600!    This behavior got lost in the transition to the React version of the schema in the 1.4.0-beta cycle.    We want to re-implement it, and also add subtle visual feedback that indiciates to the user that they have reached/passed the threshold between open/close ranges (e.g. a faded background to the side when switching to open range).    The implementation for this behavior is available in the old code base, but it needs to be adjusted to the new query builder code.     Code Snippets:    - Detection of mouse outside chart in the old code base: https://github.com/10gen/compass/blob/1.3-releases/src/app/minicharts/d3fns/many.js#L89-L98 ({{openLeft}}, {{openRight}} boolean flags)    - Code in the old Query Builder to handle open ranges: https://github.com/10gen/compass/blob/1.3-releases/src/app/minicharts/querybuilder.js#L292-L306 (probably not relevant, just adding for completeness).    - Somewhere in here we need to add the """"outside chart"""" detection and construct the open query, and pass it to the {{setRangeValue}} action, see below. https://github.com/10gen/compass/blob/master/src/internal-packages/schema/lib/d3/many.js#L85-L108    - New Query Builder action {{setRangeValue}} already supports open ranges, just need to be called correctly: https://github.com/10gen/compass/blob/f05b3acf40fe9e56691aedd83cd7d970a9a84420/src/internal-plugins/query/lib/store/query-store.js#L564-L593    Acceptance criteria:  * add """"outside chart"""" implementation for minicharts  * call {{setRangeValue}} in query store         """
"COMPASS-65","Task","CRUD",3,"CRUD: Improve Date Editing","""- Add help section explaining types that can be converted to dates. Format example MUST be one of yyyy-mm-dd, yyyy-mm-ddThh:MM:SS, yyyy-mm-ddThh:MM:SS.SSS. Note: Date formats were expanded to a much larger set by using the Date constructor in COMPASS-919.  - Render the dates in the same format that can be accepted: yyyy-mm-ddThh:MM:SS.SSS      """
"COMPASS-115","Story","Real Time Server Stats",5,"As a developer I want to show dates in server time and not local (laptop) time","""h5. Story  As a developer, I want Compass to show date values in server time and not converted to the local (laptop) time so that I confirm that my application is saving dates correctly.    h5. User anecdote  More details:  With the current Compass implementation, I thought my App inserts dates with an offset of +1 day and I spent a lot of time trouble-shooting until I used the mongo shell and realized the dates are correct but Compass shows it converted to local time.    h5. Product Acceptance Criteria  * Have a menu option(s) to Show Dates as server time or local time  * Default to server time"""
"COMPASS-265","Task","UI / UX",5,"Find in Page","""Electron now has the bindings so """"Find in Page"""" (Cmd+F) is accessible to us: https://github.com/atom/electron/blob/master/docs/api/web-contents.md#webcontentsfindinpagetext-options    Note: this will involve UI for the search input, prev/next/close buttons."""
"COMPASS-274","Task","UI / UX",2,"Converting type names to numbers in doc validation rule builder makes JSON less readable","""I created doc validation rules using type names (see attached) but Compass then converts them to the numeric equivalent in the JSON output and the rule that's added to MongoDB. It would be simpler for people to understand the rules if Compass kept the name instead.    {code:title=rules.js|borderStyle=solid}  {    """"name"""": {      """"$type"""": 3    },    """"name.first"""": {      """"$type"""": 2    },    """"name.last"""": {      """"$type"""": 1    },    """"social.twitter"""": {      """"$type"""": 4    }  }    db.getCollectionInfos({name:""""people""""})  [   {    """"name"""" : """"people"""",    """"type"""" : """"collection"""",    """"options"""" : {     """"validator"""" : {      """"name"""" : {       """"$type"""" : 3      },      """"name.first"""" : {       """"$type"""" : 2      },      """"name.last"""" : {       """"$type"""" : 1      },      """"social.twitter"""" : {       """"$type"""" : 4      }     },     """"validationLevel"""" : """"strict"""",     """"validationAction"""" : """"error""""    },    """"info"""" : {     """"readOnly"""" : false    },    """"idIndex"""" : {     """"v"""" : 2,     """"key"""" : {      """"_id"""" : 1     },     """"name"""" : """"_id_"""",     """"ns"""" : """"clusterdb.people""""    }   }  ]  {code}      Scope of the ticket:     - change type value to its string alias  - change tests to reflect this"""
"COMPASS-273","Task","Document Validation|UI / UX",5,"Field names should be available in doc validation pane","""When using the GUI document validation rule builder, it would be a lot simpler to use if it allowed you to select from the existing document field names rather than having to type them in.      Acceptance Criteria:  - Use the react-select component index field names (COMPASS-540) to wire it up to the field store (COMPASS-727)  - Add functional tests for adding field names to Document Validation  - Update existing enzyme tests to account for these changes"""
"COMPASS-290","Task","Stability",3,"Make sure all version comparisons use semver","""For server version comparisons (e.g. all 3.4-only features) we should use a library that can handle version numbers correctly, e.g. the """"semver"""" package.    Otherwise, we might run into issues with release candidates or other unusual version strings.    Simple string comparison fails in these cases:       But semver can handle this correctly:       One place where this happens:    https://github.com/10gen/compass/blob/d244de57b322ae4b3142c13220dec5191fafe0b9/src/internal-packages/crud/lib/component/editable-value.jsx#L73    Need to find all other places where we use simple string comparisons for versions."""
"COMPASS-302","Task","Query Bar",1,"When the user wants to execute an empty query, pop up a warning box that this is not ideal","""Broken off from COMPASS-291 and should be implemented after that.    Show a modal popup to warn the user when they try to run an empty explain {} because that is potentially very expensive on the database and we already know the result: a collection scan.    Acceptance Criteria:     - When the user enters an empty query (or uses the default empty query) and hits apply, a modal window should appear with a warning text and 2 buttons, cancel/continue. Only when the user presses continue should the explain be executed.  """
"COMPASS-374","Task","UI / UX",1,"Make schema/query timings visible to the user","""- Dictate to the user the definition performance: """"You may think this was slow because you were also on a hangout""""  - Don't want to think UI bugs/performance in Compass mean Server is slow  - We track these as metrics but don't expose to user  - Time to sample on server|analyze|render|$sample used  - If sample time on server slow (use ms value for slow queries from profiler?)     - recommend viewing the explain plan to make it faster    - green|yellow|red color indication like mocha's slowms?"""
"COMPASS-457","Task","First-Run",1,"Improve the Windows installer icon","""Presumably the installer icon should use the MongoDB leaf, not something that looks a bit like a black Christmas present box.    !Screen Shot 2016-11-28 at 4.36.12 pm.png|width=50%!    Windows builds are available on Evergreen, e.g.    https://evergreen.mongodb.com/task/10gen_compass_testing_windows_64_compile_0ebd7009f7403340abb53f6691bf0325793bd8e5_16_11_28_04_14_13"""
"COMPASS-506","Task","Connectivity",3,"Clear recent connections list from connect view","""Or remove individual connections."""
"COMPASS-632","Task","DDL",5,"Support collation on Create Database & Collection dialogs","""Introduced in MongoDB 3.4:  https://docs.mongodb.com/master/release-notes/3.4/#collation-and-case-insensitive-indexes    MongoChef claims full collation support which Compass cannot today:  http://3t.io/blog/what-is-new-in-mongochef-4-5/"""
"COMPASS-723","Task","Connectivity",1,"Increase ssh tunnel connection timeouts","""We have a user in intercom complaining that he gets ssh timeouts, when RoboMongo connects to the instance ok.   Currently, the timeout is [hardcoded to 5 seconds|https://github.com/mongodb-js/connection-model/blob/2002a3df39658665ac9d6713ace525bd35bb2dcb/lib/model.js#L703-L705] in the connection-model. Increase to 30 seconds to account for geo latency. """
"COMPASS-820","Task","Performance",3,"Static assets all live under ./static","""This will improve the Windows installation experience in two ways: 1. Installation assets to be decompressed before installation begins 2. Installation assets trigger less activity like to be disrupted by a virus scanner   - Make a new {{./static}} directory - Move {{./src/app/{images,styles}}} and HTML files into {{./static}} - Update all image references in the app and hadron-build to point at {{./static}} - Update hadron-build to write {{./src/compiled-less}} to{{./static}} - Add {{./static}} to the {{asar.upack}} option in {{hadron-build/commands/release.js}} (they don’t need to be packed)  Also consider updating any timing code to use [~lucas.hrabovsky] suggestion: https://github.com/nolanlawson/marky  h3. References   - [N1 ./static|https://github.com/nylas/N1/tree/master/static] - [N1’s bootloader.js|https://github.com/nylas/N1/blob/master/static/index.js] - [Atom ./static|https://github.com/atom/atom/tree/master/static] - [Atom’s advanced bootloader.js|https://github.com/atom/atom/blob/master/static/index.js]  If all goes well, this will negate https://jira.mongodb.org/browse/COMPASS-415"""
"COMPASS-851","Bug","Connectivity",2,"Investigate Kerberos Authentication if the username contains @ ","""From COMPASS-745, it looks like Kerberos and X.509 are also likely to double-encode their auth-component in the same way LDAP does.    This ticket should:    1. Confirm if this is true, e.g. with https://docs.mongodb.com/v3.2/tutorial/control-access-to-mongodb-with-kerberos-authentication/    2. If so, add a regression test in connection-model.  3. Remove all redundant {{encodeURIComponent}} calls, including in comments to make it clearer that {{url.format}} already handles this even better than we could ([git blame|https://github.com/nodejs/node/blame/v6.3.1/lib/url.js#L557] reveals it has been [optimised for more performance|https://github.com/nodejs/node/commit/db9128135f382e22202d900263e872d8b48f0050])."""
"COMPASS-909","New Feature","DDL|Research & Design",5,"Rename collection","""As the comments below indicate there are several feature requests to rename a collection. This can be achieved in the node driver by calling the [rename|http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#rename] command on particular collection. The goal of this ticket is to add the UI element, probably an extra option in the sidebar next to ever collection field to edit and call the rename command on the selected collection.    Acceptance Criteria:  * add {{rename}} to data-service (https://github.com/mongodb-js/data-service)  * include unit tests for rename in data-service  * make UI element (On the sidebar) that can be clicked to produce a modal for renaming collection  * add enzyme tests for the above element  * add store action to rename collection that calls the above data-service method  * add unit tests for the above store action        """
"COMPASS-931","Task","Connectivity",3,"Spike: Research if/how Compass can be ""kerberized""","""Reported by Barclays (00430436).    When connecting to a Kerberos authenticated MongoDB deployment using Compass, we must supply the password from the Compass UI. Ideally, Compass should use the context of the logged in user and hence a password should not be needed unless a different context/user is needed to connect to the MongoDB deployment.    This is how """"kerberized"""" applications usually behave, and while the current implementation works, it's unusual and unexpected for users used to work in a kerberos environment.    """
"COMPASS-1014","Bug","CRUD",3,"Unable to Enter Line Breaks in Strings","""User reporting on Intercom that they are unable to create line breaks in Strings in the Documents tab. """"\n"""" is getting escaped and we already override the Enter key functionality. Need to allow \n or provide a CTRL+Enter or similar to allow line breaks."""
"COMPASS-1083","Task","CRUD",3,"LUUID/NUUID/BinData support for filters","""Please see comments."""
"COMPASS-1102","Task","Plugins",5,"Move Explain to external package","""Move the explain internal package to the new compass-explain repo.    - Move all code from internal-packages/explain to 10gen/compass-explain  - Use the khaos template to generate the plugin and make necessary changes to the template if problems arise.  - Move all Validation tests from Compass to the compass-explain repo  - Add compass-explain to the compass-lite and compass-enterprise distribution configs in the package.json in Compass (for now)  - Remove internal-packages/explain"""
"COMPASS-1100","Task","Plugins",8,"Move Database Plugin to External Plugin","""Move the database internal package to the new compass-collections-ddl repo.    - Move all code from internal-packages/database to 10gen/compass-collections-ddl  - Use the khaos template to generate the plugin and make necessary changes to the template if problems arise.  - Move all Database tests from Compass to the compass-collections-ddl repo  - Add compass-collections-ddl to the compass-lite and compass-enterprise distribution configs in the package.json in Compass (for now)  - Remove internal-packages/database"""
"COMPASS-1099","Task","Plugins",8,"Move Databases DDL to External Plugin","""Move the databases-ddl internal package to the new compass-databases-ddl repo.    - Move all code from internal-packages/database-ddl to 10gen/compass-databases-ddl  - Use the khaos template to generate the plugin and make necessary changes to the template if problems arise.  - Move all databases-ddl tests from Compass to the compass-databases-ddl repo  - Add compass-databases-ddl to the compass-lite and compass-enterprise distribution configs in the package.json in Compass (for now)  - Remove internal-packages/databases-ddl"""
"COMPASS-1237","Task","Packaging",8,"Add Installation Drive Destination Selection to Install Workflow on Windows","""A customer reported in [this coversation|https://app.intercom.io/a/apps/p57suhg7/respond/inbox/unassigned/conversations/10247108756] a desire to select to which drive Compass is installed. I then tested the workflow on a Windows 10 machine and was unable to select the drive to which I was installing.     I believe the ability to select the destination drive for the install to be a desirable addition to the workflow."""
"COMPASS-1337","Task","Document Validation|Stability",3,"Make Doc Validation's Editable Component reusable across plugins","""Currently the Editable component resides in Doc Validation but it is a generic component that can be used throughout Compass.     It will be pulled over to Compass after COMPASS-1303 is done. The work remaining is:  - Remove the Editable component from [Doc Validation|https://github.com/10gen/compass-document-validation] and use the version from Compass via the appRegistry lifecycle methods  - Remove any !important flags in the {{editable.less}} file as it shouldn't be required anymore.    Acceptance criteria:  - Make sure Doc Validation UI remains the same  - Make sure Charts UI remains the same  """
"COMPASS-1404","Task","Connectivity",3,"Hook into Server Description Changed Events","""Currently deployment awareness listens to only topology description changed events, which does not cover the case when connected to a standalone instance. If a standalone server goes into an unknown state, the topology type remains as single according to the SDAM specification even though the server description becomes unknown.    Therefore, we must also listen to these events when connected in standalone mode and fire the same changes as the existing topology related events.    - Change https://github.com/10gen/compass-deployment-awareness/blob/master/src/stores/index.js to also listen to 'serverDescriptionChanged` events and trigger with an overwritten 'unknown' state instead of keeping the same 'single' type. The read state and write state stores should handle this accordingly."""
"COMPASS-1629","Task","Connectivity",3,"Cross-realm Kerberos Support","""From CS-26551. After a bit of initial investigation, imagine this breaking out into 3 tasks:    - COMPASS-1629: Spike: Research additional options needed to support cross-realm kerberos via the connect dialog  - Add additional Kerberos options to connect dialog  - Kerberos Cross-Realm testing backend setup    {quote}  Compass RC1 - Internal Server Error With (Cross Realm) Kerberos @ Connect Time    Debug Console Shows:      Note in the java driver we would have to do something along the following, would this be something that node driver can expose to compass?     {quote}"""
"COMPASS-1735","Task","Navigation",5,"Map Cmd-R (Ctrl-R) to reloading data only, Cmd-Shift-R app reload","""This request has been made many times, e.g. this intercom conversation:   https://app.intercom.io/a/apps/p57suhg7/respond/inbox/conversation/11245082354    Based on email discussion with Sam, Dana, Fred (see below), let's make the following changes:    Cmd-R (Ctrl-R on Windows/Linux) should reload data only. No app refresh.     Behavior:    - always trigger a reload of the sidebar, and  - if the user is on the instance level databases view: refresh the list of databases  - if the user is on the instance level RTSS view, reset the view  - if the user is on the database level collections view: refresh the list of collections  - if the user is on one of the collection level tabs, additionally execute the following action:  -- Documents tab: reload the documents (like the dedicated Refresh button)  -- Schema tab: execute a new schema sampling with the same query  -- Explain tab: execute a new explain plan with the same query  -- Indexes tab: refresh indexes  -- Document validation: reload validation rules       Cmd-Shift-R (Ctrl-Shift-R on Windows/Linux) should reload the app (behavior that is Cmd-R today).  """
"COMPASS-1764","Task","CRUD|Performance",5,"Compass handles the crazy keys document series","""h4. Usage/steps to reproduce        Then navigate to the {{perf.crazy_keys}} collection in Compass.    An extended set of documents can be created and imported into MongoDB with this script relatively easily, on my local machine I already have the following numbers of keys and preliminary results:  32^3=32,768  48^3=110,592   64^3=262,144 (slow, ~5-10s)  80^3=512,000 (slow, ~30s)  96^3=884,736  140^3=2,744,000 (Compass 1.9.x betas crash with a memory exception)    h4. Proposed solution - cap at 100k fields    #intellectualhonesty - let the data drive your decision.    Thus Compass, most likely in [mongodb-schema|https://github.com/mongodb-js/mongodb-schema], should stop scanning at about 100k fields (configurable as other optimizations are found) in a document and report this Easter egg in the GUI (originally this was Issue 2 in COMPASS-1901).    h4. Acceptance criteria    * A mongoimport -able version of these documents, perhaps with easier to understand names like crazy_keys_512000 (might be already done by COMPASS-1766, if so drop up to 2 story points)  * Cap field or schema processing at 100k fields, reporting this somehow, e.g. with properties such as """"totalFieldCount"""", """"analyzedFieldCount"""" (working titles to capture the semantic, change the syntax as needed).  * Message displaying this scenario, e.g. """"100,000 fields limit reached, remaining N fields are not displayed""""  * Appropriate unit tests    h4. Out of scope    * Anything in the schema/indexes/document validation tabs (such as the react-select dropdown to choose an index name), this is just about the Documents Tab.    h4. Background    So I let Friday afternoon get to me and challenged myself to create a document with ~2.7 million keys.    After about 3 minutes, Compass crashes. The mongo shell is still doing something in CPU-land after 8 minutes so far.    On different data sets, such as documents with ~500,000 fields (i.e. COMPASS-1766), Compass takes ~30 seconds or more to render, or crashes (COMPASS-1764).     Would explicitly limiting Compass to say 100,000 fields with a message like """"Compass cannot render documents with more than 100,000 fields"""" seem reasonable? Yes but only when the user gets down to the 100,001st field.    For documents under 100k fields, is a loading spinner enough? (i.e. ~6 seconds, so should not need a progress bar?).     Proposed Solutions: Potentially push to the GPU? Otherwise just drop to {{Loading...}} text."""
"COMPASS-1766","Task","CRUD|Performance",2,"Investigate Compass CRUD render times with increasing numbers of keys","""# Use the script on COMPASS-1764, mgeneratejs or similar to generate documents with 50,100,200,400,800,1600,3200,6400,12800,25000,50000,100000 top-level fields  # Report results - Measure time to render and chart it     ## is it a straight line? is it exponentially slower each time?     ## is there a cut off point where it just hangs?  """
"COMPASS-1788","Task","CRUD|Performance",3,"Generalize ""Show N more fields"" to clone mode","""Repeat the work as for Edit mode COMPASS-1787, but applied to Clone document mode."""
"COMPASS-1805","Task","Plugins",5,"Move Collection Internal Plugin to External Plugin","""Move the collection internal plugin to external one at 10gen/compass-collection"""
"COMPASS-1803","Task","Plugins",8,"Move Explain Internal Plugin to External One","""Move the explain plan internal plugin to an external one at mongodb-js/compass-explain-plan    Acceptance Criteria:  - Create mongodb-js/compass-explain-plan repo  - Generate the plugin from the new template.  - Move over Components  - Move from Reflux to Redux.  - Refactor Components to be Pure for use with Cloud"""
"COMPASS-1802","Task","Plugins",5,"Move Indexes Interal Package to External Plugin","""Move the Indexes internal plugin to an external one under 10gen/compass-indexes"""
"COMPASS-1901","Task","CRUD|Performance",3,"Implement CRUD loading spinners/ripples/animations","""Add loading spinners in places known to be slow.    h4. Scenario  1. Visit data.mongodb.parts  2. Open mercedes.laps_31k_x_4k5 dataset, documents tab (Issue 1, Issue 2)  3. Click """"Show 1000 more fields""""  4. Double click on a field (after the first 25) to edit it, rendering the 1025 fields (or 2025 or more if the user went further) can take a long time (Issue 3)    h4. Issue 1  Fetching data from the server can take an unbounded amount of time (e.g. server never responds, server under a DDoS attack, rogue queries, etc).    !Thinking about remaining bottlenecks post disable chartView and COMPASS-1786.png|thumbnail!     Solution: Reuse the existing loading spinner for loading more documents:   !Network activity loading spinner.png|thumbnail!     h4. Issue 2  See COMPASS-1764    Example with 110,592 fields (48^3):    !perf.crazy_keys_48.png|thumbnail!     h4. Issue 3  As rendering can take a long time, the naive fix here is to let the user know it can take a long time with a rendering/loading text or spinner, depending on whether the UI is locked.    Aside: Longer term, getting field-based updates to work would allow the user to project only the fields they care about and then update just those fields, but there are no current plans to implement this.    Aside 2: This issue only affects edit mode, where the user has double-clicked on the specific field they wish to edit. Specifically clone, loading, cancel, update success and delete can all drop back to rendering just 25 fields, as they have no specific requirement to maintain the user's current context, and so are not affected.    Aside 3: Table view (COMPASS-652) if it got filtering of fields may also resolve this, as might adding a filter fields box into CRUD itself."""
"COMPASS-2282","Story","Misc",3,"As a user I want to execute a query without leaving my keyboard","""As a user I want to execute a query without leaving my keyboard so I can be more agile and not have to use the mouse."""
"COMPASS-2301","Task","Plugins",5,"Make Application index.html a Template","""Make the Compass index.html a template.    Acceptance Criteria:  - Make template with area to insert a CSP into the meta tags.  - Compass generates a new html file to load via browserWindow.loadURL() on start up from the template and the user saved CSP."""
"COMPASS-2300","Task","Plugins",5,"Compass Stores User Provided CSP","""Compass persists the user provided CSP.    Acceptance Criteria:  - Clicking on save will persist the CSP to disk (user data dir).  - On plugin initialization the CSP is loaded from disk (user data dir)."""
"COMPASS-2299","Task","Plugins",5,"User Provides DNS Wildcard for CSP","""Allow the user to enter a DNS wildcard value to add to the CSP.    Acceptance Criteria:  - User selects a CSP directive.  - Use may enter multiple DNS wildcard values for the directive.    """
"COMPASS-2381","Story","Compass|Query|Query Bar",3,"As a user I would like visual feedback when executing queries","""As a user I would like visual feedback when executing queries so that I can tell that the operation was sent to the server and is currently in progress (remove uncertainty).     From Joe:    In Compass (all versions up to 1.10.1.0) long running queries give no feedback when running or when completed. As a result you have to spot the number of results changing to determine if a query is complete. I have attached a screen capture demonstrating this. Sorry about the background noise on the video. I was in an airport lounge :-)    """
"COMPASS-2406","Story","Research & Design|Schema",1,"As a user I am confused between when the reset button takes the place of the Analyze button","""As a user I am confused between when the reset button takes the place of the Analyze button and I find myself hitting refresh by mistake when I really want to analyze."""
"COMPASS-2470","Task","Electron",1,"Compass app quits when last window is closed on macOS","""On Compass 1.11.1, the whole Compass app quits when the last window is closed.     This creates friction if the user intends to create a new window/connection - they are forced to search for and open Compass again. On macOS, it is customary for the app to stay open even when there are no running windows or sessions; quitting is an explicit step by the user rather than implicit by the developer. For reference, Slack does not quit if the last window is closed. """
"COMPASS-2554","Task","Auto Updates",5,"Create Auto Update Component","""Create the Auto Update Component    Acceptance Criteria:  - Create the component.  - Component displays if update available  - Component displays new version number.  - Component displays release notes."""
"COMPASS-2553","Task","Auto Updates",2,"Create Auto Update Plugin","""Create the auto update plugin.    Acceptance Criteria:  - Create the repo  - Generate the plugin from the template."""
"COMPASS-2602","Task","Export to Language",3,"Expand Java generator to BSON object built-in functions","""Expand the bson objects so that the functions in the `supports` column of the 'Export to Language Spec' tables. Can be split into smaller tickets for each subtype if multiple people are working on it at the same time."""
"COMPASS-2593","Task","Export to Language",3,"Expand ECMAScript visitor to language-specific built-in types","""dates, regex, etc."""
"COMPASS-2592","Task","Export to Language",3,"Expand ECMAScript visitor to BSON type constructors","""Add support for each BSON type, but not built-in methods or utils. Can be split into smaller tickets for each subtype if multiple people are working on it at the same time."""
"COMPASS-2591","Task","Export to Language",3,"Expand ECMAScript visitor to objects/arrays","""Resulting language is basically JSON without any BSON-specific objects."""
"COMPASS-2590","Task","Export to Language",3,"Write a ECMAScript generator","""Write a custom visitor that can visit the AST produced by COMPASS-2589     Support literals, arithmetic, etc. without any BSON-specific support. No need for assignments/functions/anything higher-order."""
"COMPASS-2612","Task","Export to Language",5,"Pretty print generated code","""ace editor is taking the generated code and just pastes in as is without formatting it properly. this ticket is meant to figure out formatting on setValue as well as setting up ability to change syntax highlighting / formatting based on output language"""
"COMPASS-2628","Task","Export to Language",5,"Add BSON constants or utils to C# symbol table","""Add C# template to the symbol table for each BSON constant or util. Blocked by COMPASS-2727, and needs to be done after COMPASS-2626"""
"COMPASS-2627","Task","Export to Language",5,"Add BSON object built-in functions to C# symbol table","""Add C# template to the symbol table for each BSON object method. Blocked by COMPASS-2727 and needs to happen after COMPASS-2626"""
"COMPASS-2626","Task","Export to Language",3,"Expand C# generator to BSON type constructors","""Add C# template to the symbol table for each BSON constructor. Blocked by COMPASS-2727"""
"COMPASS-2623","Task","Export to Language",5,"Add BSON object built-in functions to Python symbol table","""Add python template to the symbol table for each BSON object method. Blocked by COMPASS-2727. Has to be done after COMPASS-2621  """
"COMPASS-2622","Task","Export to Language",5,"Add BSON constants or utils to Python symbol table","""Add python template to the symbol table for each BSON constant/util. Blocked by COMPASS-2727 and needs to be done after COMPASS-2621"""
"COMPASS-2621","Task","Export to Language",3,"Add BSON type constructors to python symbol table","""Add python template to the symbol table for each BSON constructor. Blocked by COMPASS-2727"""
"COMPASS-2695","Task","Export to Language",2,"write c# test cases","""This task is meant to correct / input test cases for c#. C# results should be accurate code, but tests don't have to be yet passing.    This task also involves researching how c# handles bson / how the language works a bit."""
"COMPASS-2719","Task","Aggregation pipeline",5,"Kill Long Running Pipelines","""For pipeline stages that are taking a long time to run (ex match without index), look at more optimizations or killing stages."""
"COMPASS-2717","Task","Aggregation pipeline|Query Bar",3,"Move Ace Autocomplete Constants to Separate Module","""Move the autocomplete constants to a separate module for reuse in Charts.    AC:  - Create mongodb-ace-autocompletions  - Move constants in agg pipeline builder to the new module.  - Publish module.  - Use module in agg pipeline builder."""
"COMPASS-2716","Task","Aggregation pipeline",5,"Add Snippets to Query Operators","""Add snippets to each of the query operator constants."""
"COMPASS-2727","Task","Export to Language",3,"Abstract templates from symbol table","""This needs to happen before we can do anything else.     Right now the symbol table just has the java templates directly in them, but we need a way for each code generator to fill out the template and argTemplates with the correct language.    Should we put it in a separate file, and have a """"loader"""" that fills out the symbol table with the template?    Should we have a separate """"templates"""" object?    Should we just copy + paste the SymbolTable.js and fill out the correct templates for each target language, then worry about abstracting it away later?"""
"COMPASS-2724","Task","Aggregation pipeline",8,"Agg Pipeline Execution Rules","""- $limit before $group, $sort (long running ops)  - $match nothing before to prevent index use.  - remove $sample completely  - Add maxTimeMS to each preview and allow user to re-execute.    """
"COMPASS-2723","Task","Aggregation pipeline",5,"Increase Intelligence of Stage Editor","""Have the autocompleter suggest better items based on context."""
"COMPASS-2722","Task","Aggregation pipeline",1,"Add allowDiskUse to agg pipeline execution","""Add allowDiskUse flag to agg pipeline queries."""
"COMPASS-2737","Task","Aggregation pipeline",5,"Progressive Backoff With MaxTimeMS","""Allow users to progressively increase the max time ms setting up to a max amount."""
"COMPASS-2743","Task","Metrics",1,"Track Create Atlas Cluster Link Clicks","""Add tracking each time a user clicks on the create Atlas cluster link."""
"COMPASS-2742","Task","Connectivity",2,"Add Link to Create Atlas Cluster","""Create a link to create an atlas cluster.    AC:  - Add the component to the connect window sidebar.  - Clicking on the link opens the sign-up page in Atlas in a browser."""
"COMPASS-2751","Task","Aggregation pipeline",5,"Import Pipeline","""Add the ability to import an aggregation pipeline into the builder."""
"COMPASS-2750","Task","Aggregation pipeline",3,"Add Telemetry Data to Aggregation Pipeline","""Add Telemetry Data to Aggregation Pipeline:    - Pipeline length  - User scrolling through documents.  - Pipeline Error Rate  - Stage Operators"""
"COMPASS-2749","Task","Export to Language",3,"Implement Export to language UI","""Designs are here: https://jira.mongodb.org/browse/COMPASS-2675"""
"COMPASS-2755","Story","Compass",3,"Explicitly indicate a view","""h3. User story  As a Compass user  I want to distinguish views from collections  So that I easily understand what I am selecting in the sidebar or in the list of collections    h3. Acceptance criteria  - Views are represented with an intuitive icon in the sidebar  - Views appear after Collections in the sidebar  - Views appear after Collections in the [Views and Collections screen|https://mongodb.invisionapp.com/share/ZKQDF41YGSJ#/screens/350992753]  - In the Views and Collections screen, Views are displayed with the collection (or view) they are based on    h4. Original description  bq. Currently a view is distinguished from """"normal"""" collection with a lock side its name. A more explicit way should be used to indicate a view."""
"COMPASS-2754","Task","Export to Language",3,"Figure out how to test non-symmetric translations","""Right now our test suite expects all translations to be symmetric, but that's not always possible (especially as our generated code gets more idiomatic).     For example, Code in javascript can accept a function or a string, but in shell it only accepts a string.    Javascript --> Shell:      Shell --> Javascript     """
"COMPASS-2766","Task","Export to Language",3,"Set default numeric type","""For example, numeric literals are doubles in the shell and javascript, but in java they are 32-bit integers. Ensure we're being consistent with integer types."""
"COMPASS-2761","Story","Compass|Grammar|Query Bar",3,"As a Compass user, I need support for $near and $nearSphere","""Current support for $geoWithin in Compass does not return a sorted list of matching points.    """
"COMPASS-2760","Task","Export to Language",5,"make bson-compilers work in the browser","""currently to consume this package, you need to be running a node environment as all the symbol tables get joined dynamically with 'path'.    Need to consider a browserify transform that gets triggered on 'npm prepublish' and packages up a pure javascript module.    https://www.npmjs.com/package/path-browserify and https://www.npmjs.com/package/brfs will probably do the trick.  """
"COMPASS-2789","Task","Export to Language",5,"get export to language modal to be worked in compass","""The Idea™ at the moment is to get start off in compass main repo and create a dropdown to include the current history feature and export to language.    To trigger both history and export components, generate an event on the global app registry – `global.hadronApp.appRegistry`.    Then get export to language to listen in the `store.onActivated` for the above ^ event to be dispatched.    A good example to see something like this working is in import-export plugin.    -*Update:* use these two events to get the query bar – open-aggregation-export-to-language, open-query-export-to-language-    -*Update2:* once the event is 'caught' in store.onActivated, dispatch an event to be handled in export-query.js module. The event in export-query.js should change the state to have an inputQuery passed in from aggregation/querybar.-    *Update3:* check that this actually works with the compass branch that has the appRegistry events; need to send back the close button event"""
"COMPASS-2788","Task","Tech debt",2,"Update Status to React 16","""Update status plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2787","Task","Tech debt",2,"Update SSH Tunnel Status to React 16","""Update ssh tunnel status plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2786","Task","Tech debt",2,"Update Server Version to React 16","""Update server version plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2785","Task","Tech debt",3,"Update Server Stats Plugin to React 16","""Update server stats plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2784","Task","Tech debt",2,"Update Instance Plugin to React 16","""Update instance plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2783","Task","Tech debt",3,"Update Security Plugin to React 16","""Update secutiry plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2782","Task","Tech debt",3,"Update Query History to React 16","""Update query history plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2781","Task","Tech debt",3,"Update Deployment Awareness to React 16","""Update deployment awareness plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2780","Task","Tech debt",3,"Update Document Validation to React 16","""Update document validation plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2779","Task","Tech debt",5,"Update Connect Auth Roles to React 16","""Update connect auth plugins plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2778","Task","Tech debt",3,"Update Connect to React 16","""Update connect plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2777","Task","Tech debt",3,"Update Collection Stats to React 16","""Update collection stats plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures.  - Open source plugin."""
"COMPASS-2776","Task","Tech debt",3,"Update Import/Export to React 16","""Update import/export plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2775","Task","Tech debt",5,"Upgrade Aggregations Plugin to React 16","""Update aggregations plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Fix dependencies and failures."""
"COMPASS-2774","Task","Tech debt",5,"Upgrade CRUD Plugin to React 16","""Update the CRUD Plugin to React 16:    AC:  - Update to React 16.3.2  - Update Enzyme to 3.3.0  - Bump apiVersion to 2.0.0  - Update dependencies to support changes and fix issues.  - Release new major version for Cloud."""
"COMPASS-2797","Task","Export to Language",1,"Figure out how to handle elisions in java","""Elisions in javascript: [,,1, 2] --> [undefined, 1, 2]    Won't work in java because doing `.append(""""array with leading elision"""", Arrays.asList(null, """"1"""", """"2"""")) will throw a null pointer exception.`         Use BsonUndefined     """
"COMPASS-2820","Task","Export to Language",3,"Put export to language into read-only ace code editor","""To get syntax highlighting and maybe even pretty printing?"""
"COMPASS-2817","Task","Export to Language",3,"Move anything JS-specific out of the Generators and into javascript/Visitor.js","""The generators need to be input-language agnostic, so anytime we execute JS code in an emit method it needs to be moved to the Visitor, whenever possible."""
"COMPASS-2816","Task","Export to Language",3,"Add Shell BSON methods to JS symbol table","""(lower priority because not needed for v1)"""
"COMPASS-2815","Task","Export to Language",3,"Add Shell BSON utils to JS symbol table","""(lower priority because not needed for v1)"""
"COMPASS-2814","Task","Export to Language",1,"Add Shell BSON constructors to JS symbol table","""(lower priority because not needed for v1)"""
"COMPASS-2808","Task","Export to Language",3,"Run python tests in python","""Need to run each of the generated python tests in the python interpreter to make sure that they run and do what's expected (i.e. str vs repr).         Can add a python template to [https://github.com/mongodb-js/bson-compilers/blob/test-file/make-test-file.js] and write to a file that can be run in python."""
"COMPASS-2806","Task","Export to Language",3,"Write error handling tests for Javascript","""Write JS JSON tests in test/json/error/*         Need to make sure we throw when code won't run in the target language, and the error messages are useful. These tests need to be *complete*, so that we are testing every error path."""
"COMPASS-2805","Task","Export to Language",3,"Write error handling tests for Java","""Write Java JSON tests in test/json/error/*         Need to make sure we throw when code won't run in the target language, and the error messages are useful. These tests need to be *complete*, so that we are testing every error path."""
"COMPASS-2804","Task","Export to Language",3,"Write error handling tests for Python","""Write Python JSON tests in test/json/error/*         Need to make sure we throw when code won't run in the target language, and the error messages are useful. These tests need to be *complete*, so that we are testing every error path."""
"COMPASS-2803","Task","Export to Language",3,"Write error handling tests for C#","""Write C# JSON tests in test/json/error/*         Need to make sure we throw when code won't run in the target language, and the error messages are useful. These tests need to be *complete*, so that we are testing every error path."""
"COMPASS-2802","Bug","Real Time Server Stats",1,"RTSS Still Polling on Auth Errors","""Investigate and fix RTSS still polling when an authentication error is encountered."""
"COMPASS-2830","Task","Intercom",2,"Disable Intercom in Compass Dev Environments","""Disable Intercom in Compass Dev Environments"""
"COMPASS-2829","Task","Atlas",1,"Create Unique Identifier to Send to Atlas with Link","""Send a unique identifier to the Atlas link so they know it came from Compass."""
"COMPASS-2847","Task","Metrics",3,"Investigate User Upserts Failing","""Compass is not updating user data in the data warehouse, failing on the attempted update/upsert via Stitch. Need to investigate is this is a Stitch or Compass issue."""
"COMPASS-2846","Task","Compass",2,"Validate TLS 1.2 Support with MongoDB 4.0 ","""We need to verify that the latest version of Compass can connect to a MongoDB 3.7.9/4.0.0 instance with --requireSSL enabled [--sslDisabledProtocols=TLS1_0] (1.0 is disabled by default).    This is enough to mark Compass as done with regards to the company/product wide Safe TLS initiative driven by the PCI-DSS deadline of June 30, 2018 where TLS 1.0 must be disabled by default everywhere. """
"COMPASS-2864","Task","Export to Language",1,"Investigate adding buffer type to query bar","""Discuss if we want to add a """"buffer"""" support.   * Right now it is valid to instantiate a JS Buffer only in the Binary object constructor. Should users be able to instantiate buffer data types outside of the BSON binary object?   * Will people ever actually use it, outside of the BSON Binary type?   * There isn't a shell equivalent outside of using the subtype like `md5(...data...)`."""
"COMPASS-2865","Task","Export to Language",5,"Explore idiomatic export to language","""Exploratory ticket for the idiomatic export to language feature.   * Work with the drivers/education teams to specify exactly what """"idiomatic"""" code should look like for Java, Python, Node, Shell, CSharp.   * Split the work into tickets with estimates.   * Do we want to give people the option to have idiomatic/standard, or do we want to always generate """"idiomatic"""" code?"""
"COMPASS-2889","Story","Aggregation pipeline|Compass",3,"Agg Pipeline Builder - Create an icon to create (insert) a new stage inplace","""Add a plus button next to the Delete button for each stage. When clicked, it inserts a new stage right after the one that is currently selected. This will help avoid a lot of vertical scrolling and also unnecessary movement/dragging of stages when you want to simply insert a stage in the middle of a pipeline, which is very common when authoring/debugging agg pipelines."""
"COMPASS-2888","Story","Aggregation pipeline|Compass",3,"Agg pipeline builder to autocompolete newly defined fields","""Currently, the Agg Pipeline builder offers field autocompletion based on the collection selected for aggregation. I'd like to see this extended to the new fields defined in the $project stages that precede any new stages that attempts to use them. See example attached."""
"COMPASS-2904","Task","Export to Language",3,"Add ""required imports"" to generated code","""There was some concern that we need to indicate which classes we're using in the generated code so that beginners know exactly how to import the bson classes/etc.         We can use the code in [https://github.com/mongodb-js/bson-compilers/blob/test-file/make-test-file.js] as a starting point.         Open questions:    * how do we want to display this visually?   * do we only import what we use (therefore do a scan of the exported code) or should we just provide a generic """"import"""" list of things that can be used?   * Is this required for version 1?"""
"COMPASS-2903","Task","Export to Language",1,"Add csharp to test generator","""Java + python are already done:  [https://github.com/mongodb-js/bson-compilers/blob/test-file/make-test-file.js]"""
"COMPASS-2902","Task","Export to Language",5,"Generate accurate and idiomatic Binary data","""Instead of extracting the data as a string, we need to extract the data as bytes so that we can generate the correct output language binary data.          Java, for example, has only signed bytes and must be constructed with:  """
"COMPASS-2901","Task","Export to Language",3,"Misc Python idiomatic syntax ","""From: https://github.com/mongodb-js/bson-compilers/pull/78"""
"COMPASS-2899","Task","Export to Language",5,"Use Builders for java documents","""http://mongodb.github.io/mongo-java-driver/3.6/builders/"""
"COMPASS-2898","Task","Export to Language",3,"Misc Idiomatic Java Syntax","""* Use {{BsonUndefined}} instead of null   * {{java.lang}} is always imported, so don't need to use the full name.   * Use {{SimpleDateFormat}} instead of {{toString()}}   * Use {{toHexString}} instead of {{toString}} for ObjectId   * Use {{BINARY}} instead of {{OLD_BINARY}} for Binary subtype.   * Use Document constructor, so generate """"\{x: 1}"""" as """"new Document(""""x"""", 1)"""" and not """"new Document().append(""""x"""", 1)""""   * Remove Code.toString() for JS and Shell because the result is just """"[object Object]""""    [https://github.com/mongodb-js/bson-compilers/pull/82]     [https://github.com/mongodb-js/bson-compilers/pull/84]    Comments from: [https://github.com/mongodb-js/bson-compilers/pull/76]     """
"COMPASS-2896","Task","Export to Language",3,"Idiomatic java numbers","""Generate numbers idiomatically in java.         [https://github.com/mongodb-js/bson-compilers/pull/83]"""
"COMPASS-2895","Task","Export to Language",5,"create a wiki for bson-compilers","""There are a few things that need to be explained in a wiki about how this project works. That way if people want to contribute, it'll be easier for them to get started. Also useful for other teams that will be using this package. Should include:    1) Symbol tables   * how are these generated   * how does the hierarchy work   * what happens to them afterwards    2) Visitors and Generators. How do we end up with ctx being """"passed down"""" from visitor to generator?    3) What happens once Antlr generates the AST? what do we do from there?    4) Diagram to explain the javascript visitor structure.    5) Maybe a few more diagrams if they prove useful"""
"COMPASS-2894","Task","Export to Language",3,"implement feedback for c# syntax to be idiomatic","""[https://github.com/mongodb-js/bson-compilers/pull/65 |https://github.com/mongodb-js/bson-compilers/pull/65]    Doesn't include Builders: see https://jira.mongodb.org/browse/COMPASS-2900?filter=-2"""
"COMPASS-2893","Task","Export to Language",3,"implement design changes for export to language feature","""input / output to be side by side –> [https://mongodb.invisionapp.com/share/YZGJBROJ6UT#/screens/287448203]    plus a few code structure / component changes:   * -separate out components from main export-modal.jsx. Primarily a new *ace editor* component and *select-box* component-   * -create *copy successful* messaging-   * -make sure *copy* always works-   * -level out and vertically align titles / buttons for ace editor. Currently export-to and select box are misaligned-   * write a few more test cases for each component and modules – going to make another ticket for this!"""
"COMPASS-2906","Task","Export to Language",3,"write nested document tests","""should test for larger, more complicated document queries"""
"COMPASS-2909","Bug","Compass",1,"Compass not able to auto fill connection string with LDAP userDN information. ","""Hi Compass team,    Compass not able to auto fill connection string with LDAP userDN information when copying from Atlas connection modal. User have to manually input the all the required information manually.     Please see the screenshot video here: [https://cl.ly/0J2l3Y3T0o00]         Thanks,    Steve"""
"COMPASS-2910","Task","Export to Language",1,"ace editor to change language modes based on outputs","""need to be able to set proper syntax highlighting based on ouptut language in the plugin UI"""
"COMPASS-2917","Task","Telemetry Data",2,"Update Compass Version With Last Login Date","""We need to update the Compass version along with the last login date in the metrics."""
"COMPASS-2923","Task","Query",3,"Update Language Model to Support $text, $mod, $bits...","""Update the language model to support modern MQL features."""
"COMPASS-2937","Task","Aggregation pipeline",3,"Support 4.0 Features in Grammar","""Add support for 4.0 conversion features to the grammar. Also support new $bucket syntax."""
"COMPASS-2943","Task","Export to Language",3,"unify test cases for bson compilers","""Maintaining tests based on input language might prove itself tedious in the long run. Something to consider in the future is coming up with a yml / json file to store all tests and read out the input and output from a single json / yml object. If either the output or input are non existent for a particular method, the test can be skipped (i.e. the key/value pair will not be in that particular code block)."""
"COMPASS-2950","Task","Connectivity",2,"Add New Atlas Link","""Add the new Atlas link to the connect window with the updated designs."""
"COMPASS-2949","Task","Aggregation pipeline",3,"Toggle Auto-Preview","""Add another mode, auto-preview, which allows the user to toggle if the stages are executing when typing. When turned off, require CMD/CTL+Return to execute."""
"COMPASS-2964","Bug","Export to Language",1,"Export to Language Modal Needs Max Height","""With long queries or pipelines, the export to language modal goes off screen. Think we just need to set a max height on the modal itself and let the contents scroll. See screen shot."""
"COMPASS-2966","Task","Export to Language",3,"Only provide imports for used packages","""Only applies to java + javascript imports, but right now we always import all potential classes. We should figure out which classes are actually used and only import those."""
"COMPASS-2971","Task","Export to Language",1,"Abstract new into template","""Right now we are using """"this.new"""" to determine if new is required, we should abstract that into a template so that we can support [~durran.jordan]'s work on ruby."""
"COMPASS-2976","Bug","Document Validation",2,"NaN in EditableDocument Double fields","""if I enter alphabetic characters into a Double field it changes the text to """"NaN"""" and you sort of get stuck in that state. Can't backspace to get rid of it, have to select all and then enter a number to start over         !https://mail.google.com/mail/u/0?ui=2&ik=7a0111ff37&attid=0.1&permmsgid=msg-a:r3017218747656759137&th=1644ca3c9016d539&view=fimg&sz=w1600-h1000&attbid=ANGjdJ8NBqAZ14nzrIKji5xeBJVgPfL0ScqX7gV8M5Hz2Z5uSV9lJQS4hg0lttEK2d94bkfPWf3UjPLQUiaSrsnRMAP7KIshyX1ahWOfOfbCg0EOSmNtgyVCLtRqJOw&disp=emb&realattid=ii_jj09mmwz0!"""
"COMPASS-2977","Task","Connectivity",2,"Update Node Driver to 3.1.0","""Upgrade the Node driver to 3.1.0 for SCRAM-SHA256 support."""
"COMPASS-2983","Task","Connectivity",5,"Add SCRAM-SHA-256 Support","""Add SCRAM-SHA-256 support to the connection window."""
"COMPASS-2998","Task","Export to Language",1,"Add ""Idiomatic"" button to export to language UI","""Since we can support regular documents or builders in java + c# (soon), we need to allow the user to active/deactivate. [~durran.jordan], do we want default to be """"use builders"""" or not?"""
"COMPASS-3020","Task","Export to Language",1,"Java default to using builders","""[https://github.com/mongodb-js/compass-export-to-language/pull/13]    https://github.com/mongodb-js/bson-compilers/pull/120"""
"COMPASS-3033","Task","Export to Language",1,"rename Bson-Compilers to Bson-Transpilers","""Because Bson-Source-To-Source-Compilers is too long"""
"COMPASS-3045","Story","Aggregation pipeline",5,"Support Collation in Agg Pipeline Builder","""Add collation support to the aggregation pipeline builder.        # Add the collation field.   # Pass collation options when executing the stages.   # Pass collation options when executing a $out    https://mongodb.invisionapp.com/share/ZSMFJZ4DHKY#/screens/309739115_Design_04_-_1280px_-_Option_A"""
"COMPASS-3051","Task","Export to Language",3,"Add copy button to original pipeline in Export to Lang modal","""* Add copy button to left code snippet (original pipeline)   * Add tooltip to both copy buttons """"Click to Copy""""   *"""
"COMPASS-3063","Task","UI / UX",2,"Change in-progress banner icons in collation support modals","""Updating icons from """"align-center"""" to """"spinner""""    !image-2018-08-14-14-39-05-265.png|width=576,height=411!"""
"COMPASS-3065","Task","Auto Updates",5,"Migrate services from deis to new techops platform","""The auto-update and maps proxy currently run on Deis, which is being decommissioned by TECHOPS this quarter. Migrating to [the new platform|https://github.com/10gen/platform-docs] will dramatically increase reliability and provide long overdue monitoring and alerting. This is a multi-step project that will involve circling back with TECHOPS to update the DNS of these current services to point at the new platform containers. cc [~angelo.olivera]"""
"COMPASS-3072","Task","Compass",8,"mongodb_schema.rs: project setup","""* -setup- [-rust-clippy-|https://github.com/rust-lang-nursery/rust-clippy]   * -setup- [-rustfmt-|https://github.com/rust-lang-nursery/rustfmt]   * -setup ci to include rust-clippy and rustfmt check-   * -setup ci to make sure wasm pack can be build-   * -setup github-templates-   * -setup [wasm-pack|https://github.com/rustwasm/wasm-pack] (abstraction over [wasm-bindgen|https://github.com/rustwasm/wasm-bindgen])-   * look into existing project figure out api endpoints and what will need to be exposed to wasm-pack/wasm-bindgen   * -check 'clone' and 'debug' are implemented for all structs-   * -figure out how to do testing with rust's internal test framework / possibly look into [quickcheck|https://github.com/BurntSushi/quickcheck] for model testing-   * -#![deny(unsafe_code)]-   * -deny missing docs-   * -add code of conduct-   * documentation for all of the above ^"""
"COMPASS-3074","Task","Export to Language",3,"Investigate export-to-lang modal size","""Split off from COMPASS-3051, since it included two separate features.   * Improve the modal height   ** See if we can have the modal height extend to full height of the compass window (margin top and bottom should be the same) OR   ** See if we can have the modal be resizable? (drag to resize)"""
"COMPASS-3086","Story","Aggregation pipeline",1,"As a user, I would like an improved experience when pasting pre-existing Aggregation Pipelines.","""Let's try if no stage selected and you paste into stage editor, the pipeline fills out. If messy, we'll re-eval    !agg-paste-pipeline.png|width=600!"""
"COMPASS-3099","Bug","Compass|Connectivity",1,"Connection string autofill does not recognize authMechanism=PLAIN","""https://jira.mongodb.org/browse/INT-3921 is marked done and hence I was testing the connection string autofill  I am using compass 1.15.0. I tried having the following strings in clipboard and open compass     mongodb+srv://:@cluster0-prc3c.mmscloudteam.com/%24external?authMechanism=PLAIN    mongodb+srv://test:@cluster0-prc3c.mmscloudteam.com/%24external?authMechanism=PLAIN    mongodb+srv://cluster0-prc3c.mmscloudteam.com/%24external?authMechanism=PLAIN    The 1st two looks good. But when i had the last string in my clipboard, LDAP option is not selected automatically."""
"COMPASS-3100","Task","Installation",3,"Windows msi supports unattended installation","""Allow users to silently install Compass to a specific directory and set of users."""
"COMPASS-3113","Task","CI",8,"Refactor .evergreen.yaml for improved build times and functional tests","""Refactor .evergreen.yaml to be sane so we can debug during setup for executing functional tests."""
"COMPASS-3110","Task","Language Modes",8,"Support the python language-types as input to java","""Expressions, literals, arrays, objects, comparisons. First output java code. Blocked on COMPASS-3108"""
"COMPASS-3109","Task","Blog",5,"Start on Symbol Table/Template blog post","""Write a first draft for the team to edit!"""
"COMPASS-3125","Task","UI / UX",1,"Warn users instead of hiding replica set field for SSH tunneling","""See https://jira.mongodb.org/browse/COMPASS-3057"""
"COMPASS-3137","Task","schema.rs",5,"wasm: compass plugin to send data to mongodb-schema.rs","""things to watch out for: types! Rust might be particular about the types passed in as input, so we might have to figure out a way to create proper generics which have been currently avoided."""
"COMPASS-3136","Task","schema.rs",5,"wasm: compass plugin to consume mongodb-schema.rs data","""compass should be able to consume and output correct data provided by mongodb-schema.rs."""
"COMPASS-3150","Task","Build",8,"Update to Electron 3/Node 10.2.1","""Currently blocked by: https://github.com/atom/node-keytar/issues/125"""
"COMPASS-3157","Story","CRUD|Query|Schema",3,"Enforce maxTimeMS for every query sent to the server","""Currently query filters that can be entered in the """"Documents"""" panel don't use the {{maxtimems}} parameter. It is possible with non selective filters not supported by indexes to cause to run very heavy queries (COLLSCAN) on the MongoDB server causing possibly performance issues for the other clients. The parameter {{maxTimeMS}} is not set in the count and in the find commands sent.    For example I loaded 5.7M tweets on a test MongoDB instances and I tried to use the filter  {source: """"a""""} which causes a full collection scan over 5.7M documents:        The query is limited to 20 documents but has no {{maxTimeMS}} set.    If you use the schema tab and you run the same filter, {{maxTimeMS}} is used, but I noticed that the same queries are then run without the timeout set:        I tested this with Compass 1.16.0 beta 7."""
