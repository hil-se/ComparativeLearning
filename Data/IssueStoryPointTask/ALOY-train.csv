"issuekey","type","components","storypoint","title","description_text"
"ALOY-344","Improvement","Titanium Studio",8,"CLONE - Studio Dashboard: ""default"" and ""Default Project"" does not give clear information about Alloy and Project unless description is read.","""Steps To Reproduce:    1. On dashboard on studio 3.0, navigate to Develop tab.  2. Notice """"default"""" and """"Default Project""""  & """"two-tabbed"""" and """"Tabbed Application"""" names.    Actual:  User does not get clear information from names that one is alloy project and another one is Titanium project unless he reads the description below.    Expected:  Naming convention or icon corresponding must suggest type of Project."""
"ALOY-440","Improvement","Models|XML",8,"Ti.UI.Picker has no collection binding","""h3. original discussion    http://developer.appcelerator.com/question/145992/databinding-on-picker    h3. problem    Collection binding is not implemented for Ti.UI.Picker as it is for Ti.UI.TableView and other generic Titaniums views (View, Window, ScrollView, etc...).     h3. solution     Support collection binding on Ti.UI.Picker just as it is on TableView. It will need special handling as the Ti.UI.Picker requires custom parsing for columns and rows. Something like this should be how it would work for devs:    """
"ALOY-443","Improvement","Models|XML",8,"Enable more complex notation in binding","""Allow developers to use syntax like the following in collection/model bindings:        Basically, instead of assuming the whole property needs to be wrapped in \{\}, allow developers to put as many of them in the attribute as they want."""
"ALOY-488","Bug","Tooling",3,"Orphan file cleanup deletes builtins and widget assets","""During the compile process Alloy will attempt to remove files from the Resources directory that are no longer present anywhere in the """"app"""" folder. Alloy searches a number of locations in the """"app"""" folder to see if the file is an orphan or not. False negatives should be avoided as they will leave unused files in the project. False positives on the other hand are not really worrisome since those resources will be recreated on the next compile anyway.     With that in mind, there are currently false positives for orphan file deletion for builtins and widgets. Builtins and widgets will be pulled in fresh each time. Again, this will not negatively impact a developer's build process or app in any way, it would just be more true to the logic if these files were left alone during the orphan cleanup phase."""
"ALOY-540","Sub-task","XML",5,"Resolve suboptimal compression from uglify-js v2 update","""The v2 update of uglify-js in Alloy, specifically version 2.2.5, has some suboptimal compressions, which are causing the optimizer.js test spec to fail in certain cases. Specifically the issues are around booleans and cascading of variables in assignments. These issues have been logged with the Uglifyjs2 project in the following links:    * https://github.com/mishoo/UglifyJS2/issues/137  * https://github.com/mishoo/UglifyJS2/issues/138    When these issues are resolved and distributed in an npm release, we need to revisit these compressions and testing to ensure that the fixes are in place, and that new uglify-js version has no regressions that impact alloy."""
"ALOY-544","New Feature","Runtime|XML",3,"Ability to define a custom namespace to enable Alloy to generate custom widgets","""Alloy should allow the user to specify a custom namespace for each widget in XML which modifies the generated code to use the widgets within the specified namespace.    As an example, <Window id=""""win""""> generates Ti.UI.createwindow(). The user should be able to specify <Window ns=""""mcd"""" id=""""win""""/>, which Alloy would in turn use to generate mcd.createwindow(). This is useful if the user has their own custom framework with custom widget attributes."""
"ALOY-592","Improvement","Widgets",3,"Widget: default new widget platforms do not respect tiapp.xml deployment targets","""Widget: default new widget platforms do not respect tiapp.xml deployment targets.    Test Steps:    1. Create Alloy project with all deployment targets (including blackberry and tizen).  2. New > Alloy Widget.    Test Results:    Observe the platforms listed in the widget, only a few targets are present."""
"ALOY-716","Bug","Models|XML",13,"When using view-model binding, whitespace inside curly braces disables binding","""h2. problem    http://developer.appcelerator.com/question/153856/alloy-update-view-with-fetched-collection    h2. expected    Both labels in the example below should be data bound, regardless of the superfluous whitespace.    """
"ALOY-1514","New Feature","I18N",1,"Add a CLI command to extract i18n strings from alloy code and update the strings.xml files (ALSO for XML files)","""Now that Alloy 1.2 allows to use L() in XML files, this tool must scan XML files, apart the classic JS and TSS files.    I've been tested it and it is not doing it actually."""
"ALOY-1518","New Feature","Widgets",13,"ListView: Custom widget support in templates","""Currently there does not seem to be support for adding custom widgets in Listview templates. Please add widget support to ListView."""
"ALOY-829","Improvement","Models",5,"Add a shorthand for fetch() adapter","""If I get a reference to an ID would be nice to have a shortend like     var model =  Alloy.createModel(""""..."""");  model.fetch({ id: 123 });    instead of have to provide a full sql statement    I suggest an implementation approach like this one   https://github.com/viezel/napp.alloy.adapter.restsql#extended-sql-interface  which would make querying the database more object friendly.    Thanks, Luca    (for original Q&A see http://developer.appcelerator.com/question/157222/fetch-single-record-by-id-via-alloy-models)"""
"ALOY-859","Bug","Tooling",13,"Compile failing on OSX Mavericks when targeting Windows Server network drives","""h2. update (10/24/2013)    A correlation between [~jamesdraper] and [~core13] shows that the likely culprit for this issue is when a network drive sourced from a Windows Server is used as the project folder when building Alloy on OSX Mavericks.     h2. original    Q&A: http://developer.appcelerator.com/question/158722/titanium-studio-and-os-x-mavericks---error-generating-ast-file-with-jquery    No existing or new Alloy based apps will compile.  Each fails during the """"optimizing"""" process, usually indicating an issue with the base alloy files.    **Error text;**    [INFO] :   ----- OPTIMIZING -----  [INFO] :   - alloy.js  [INFO] :   - alloy/widget.js  [INFO] :   - alloy/sync/localStorage.js  [INFO] :   - alloy/sync/properties.js  [INFO] :   - alloy/sync/sql.js  [INFO] :   - alloy/sync/util.js  [WARN] :   : ERROR: Unexpected character '' [alloy/sync/util.js:7,1]  [ERROR] :  Error generating AST for """"/Volumes/concepts/tests/Test44-Vanilla/Resources/alloy/sync/util.js""""  [ERROR] :  Unexpected character ''  [ERROR] :  line 7, column 1, position 183  [ERROR] :  Alloy compiler failed    **util.js** (system file - after being compiled by Alloy)    function S4() {       return (((1+Math.random())*0x10000)|0).toString(16).substring(1);  };     exports.guid = function() {       return (S4()+S4()+'-'+S4()+'-'+S4()+'-'+S4()+'-'+S4()+S4()+S4());  }     The problem occurs in different files in different code positions and when it is triggered always appears to denote the last character as being at fault.  Simply changing the positions of code in the app does NOT change where the error is triggered - it always appears to be the end of a file that is getting snagged."""
"ALOY-858","New Feature","XML",8,"Alloy: Theme ""i18n"" and ""platform"" folders","""I would like to be able to theme the {{i18n}} and {{platform}} folders so that for a white-label app I can keep all brand-specific stuff in the theme folder.    h1. Use case  For example, the i18n strings would include brand-specific texts in multiple languages and the platform folder would include brand-specific Android themes and UrbanAirship configurations.    h1. Implementation  It would be most ideal to not just overwrite the {{i18n}} files, but really merge the strings in the XML. For the platform folder we could just overwrite files, just like we do for {{assets}} and {{lib}} with the {{Resources}} folder."""
"ALOY-932","Improvement","Models|XML",3,"Improve error messages when attempting to bind to complex objects","""When attempting to bind to a complex object, such as the following, the resulting error messages are not clear and meaningful.        Generates:    {{""""'undefined' is not an object (evaluating 'Alloy.Models.photo.on')"""";}}    Which doesn't clearly identify the problem being the attempt to reference the deep object reference {{photo.urls.square_75}}.     As pointed out in the original source of this ticket (http://developer.appcelerator.com/question/161740/alloymodelsphotoon#answer-274198), the solution is to map the object property to an attribute of the model, which could be done by extending the model or collection. Error message could possibly point developers to this solution."""
"ALOY-934","Story","XML",3,"Change androidView behavior for optionDialog and similar components","""We need to change the androidView behavior for optionDialog (and any other components that support an Android-specific view as a child) so that an AndroidView proxy parser is used rather than creating an arbitrary view.    Need also to communicate the change, as it deprecates old behavior.    Instead of an anroidView being assigned like this:        It should instead be like this, like the rest of the generic view proxy properties:      """
"ALOY-950","Improvement","Models",3,"'localStorage' adapter for Alloy Models should be deprecated and no longer used","""h5. Improvement description  We should deprecate the usage of the localStorage adapter for Alloy Models.   It could create confusion as only supports MobileWeb and Tizen and is outdated by the 'properties' adapter (that supports all platforms).     See also http://docs.appcelerator.com/titanium/latest/#!/guide/Alloy_Sync_Adapters_and_Migrations-section-36739597_AlloySyncAdaptersandMigrations-Ready-MadeSyncAdapters    Will need updates to documentation that includes sample code to use Properties rather than localStorage. Tizen support has already been removed, so this will focus on only MobileWeb. Make sure the change is communicated in the release notes."""
"ALOY-952","Bug","Models",3,"Non numeric primary key not escaped during query","""I am having a weird issue with alloy model generating an unescaped query, even though it uses prepared statement.  To recreate it:     1. Create a model with a non integer primary key.   2. Do a simple model.fetch({id: """"your_text_id""""});      It will generate a query like so: SELECT * FROM table_name WHERE some_primary_key = your_text_id  where you would expect something like the following: SELECT * FROM table_name WHERE some_primary_key = 'your_text_id'    quoted from: http://developer.appcelerator.com/question/162301/weird-sqlite-escaping-issue"""
"ALOY-963","Improvement","Tooling",2,"Allow platform specific subfolders in lib and vendor directories","""Platform specific folders (iphone,android,etc.) in the app/lib and app/vendor directories were not compiling to Resources correctly. The following pull request will fix this.    https://github.com/appcelerator/alloy/pull/337"""
"ALOY-964","Improvement","XML",5,"Support AndroidView in addition to View as child of AlertDialog","""While the API name is AndroidView, Alloy expects child views of AlertDialog to be created with the View tag. It throws an error that Ti.UI.createAndroidView is not a valid method name if you use AndroidView. While it's okay to support View as a shorthand, we should also support AndroidView as a tag.    Reference: http://developer.appcelerator.com/question/163125/cannot-getset-textfield-value-in-alloy#answer-275881    Test case attached with commented-out working code that uses View."""
"ALOY-967","New Feature","I18N|Widgets",3,"Support i18n directory in widgets","""Customers have requested support for widget specific i18n localization files.  This would be useful for fully independent UI widgets."""
"ALOY-977","Improvement","Documentation",3,"Add code comments","""Add comments to the alloy scripts, specifically to the compile-related files. Code comment structure should be compatible with the TBD code-doc tool."""
"ALOY-1063","Improvement","Tooling",3,"CLI: `ti clean` should remove/empty `Resources` for Alloy projects","""h4. Problem Description  With the Alloy compiler trying to become smarter in compiling only those files that are changed, it happens more often that for different reasons the {{Resources}} directory is not up-to-date anymore. For this reason I'd like to see the {{Resources}} folder emptied or removed with {{ti clean}} and the Studio options using this CLI command. This way I can instruct people to do a clean as a first attempt to resolve compile/build problems.  """
"ALOY-1021","Improvement","Styling",3,"Alloy: Add support for Alloy.CFG and Alloy.Globals in views","""As the attached sample app shows, you can not use {{Alloy.CFG.}} and {{Alloy.Globals.}} in Alloy views. In the compiled code, they will end up as strings:        I would like to see that just like {{Ti.}} the {{Alloy.}} namespace would be detected and used as variable instead of string."""
"ALOY-1018","Improvement","XML",5,"Add defaultNamespace or module attribute to Alloy Tag","""Alloy currently has a feature of specifying a module attribute against tags, allowing a custom JS module to be used to create the elements, enabling developers to return modified or different elements.    e.g:    <Label module=""""ui'>Foo</Label>    It's a very powerful feature and means we can create our custom tags for elements that are OS specific e.g. TitleControl and have that return a TitleControl for iOS (no change) or a Ti.UI.View for Android, with custom title text etc.    It would be useful to be able to add this namespace / module element ONCE so that you don't have to add it to every / multiple tags in a view.    So, adding the ability to specify it in the Alloy tag would mean for every tag instance, the custom module is checked first.    <Alloy module=""""ui.js""""> for example?"""
"ALOY-1043","Improvement","Tooling",8,"Tooling: add script to compile all test apps and add _generated folders","""To improve our testing, we should have _generated folders (containing generated code for each platform) that can be compared to with each run of the {{jake test:all}} script.     It should:    * Process each project in the test/apps folder tree  * Compile the app for each platform, saving the results to _generated/PLATFORM/alloy/controllers  * Offer a switch ({{--force}}) which if set, will overwrite existing _generated files    The test/testgen.js looks to accomplish this for an individual sample app. There's also the partially complete tools/compiles.js that might serve similar purpose."""
"ALOY-1044","Improvement","Samples & Templates|Widgets",5,"Remove the sample widgets","""The widgets have been deprecated and should be removed in the next release. They should be handled as follows:    * If required for functional test apps or the widget sample apps, either move the required widgets into those apps or implement new simple widgets so as to preserve the goal of the demo apps.  * Contact the original author to see if he/she would like to re-take ownership and maintenance of the widget.  * Remove all remaining widgets."""
"ALOY-1089","New Feature","XML",3,"Alloy support for Windows toolbar[] attribute","""It would be very nice to have direct support for the Window.toolbar[] attribute in Alloy  Something like:    <Window id=""""supportWindow"""" >     <toolbar platform=""""ios"""">      <Button id=""""button1"""" title=""""First"""" />      <Button id=""""button2"""" title=""""Second"""" />     </toolbar>    </Window>  """
"ALOY-1059","Bug","I18N",5,"i18n from app must override i18n from widgets","""Given a language string in the app's i18n strings.xml file with the same name as a value in a widget's strings.xml file, the app's string must override that of the widget.    To create a test app for this:    1. Copy the ALOY-967 test app  2. Modify the app's i18n/en/strings.xml file to add this new key:  {{<string name=""""language__intro_text"""">i18n from app overrides widget</string>}}  3. Build the app and you should see the above string.    Currently, with the 967 test app, you see """"i18n from com.mylanguage.widget"""" which is coming from the widget."""
"ALOY-1064","Bug","Tooling",5,"ListView parser should remove Templates node after processing the templates","""Given a project containing a widget and this in index.xml:        The widget receives an arguments object containing two extra {{null}} values which presumably correspond to the ItemTemplate tags. Those should be removed by the Ti.UI.ListView.js parser.    Generated code without this change:      Using child views of Widget other than ListView (such as using a pair of Views) does not pass those null values via the children array.    Workaround: reference the children array like this:      """
"ALOY-1062","Bug","Samples & Templates",3,"Blackberry: Default Alloy Project shows incorrect app icon for blackberry","""Default Alloy Project shows incorrect app icon for blackberry  Steps to reproduce:  1)Create any default alloy project and install on device.    {color:green}*Expected Result:*{color}  Alloy app icon must be displayed on the device.    {color:red}*Actual Result:*{color}  Instead of Alloy app icon classic app icon is being displayed on device.    This is an issue for Blackberry only.  For Android and iOS it is showing correct app icon."""
"ALOY-1068","Bug","I18N|XML",2,"Runtime error if Label's text attribute starts with L() alias in quotes","""h6. 1. Use following sample      h6. 2. Build and run  Results in Alloy runtime error.  """
"ALOY-1067","Improvement","I18N|XML",3,"Support L() in XML as Label text ","""For following view,  {{L()}} should work if we've set foo equal to some string in i18n. Now it prints out L('foo') instead    """
"ALOY-1096","Improvement","Builtins",3,"Alloy: Update moment.js built-in library to latest version.","""The latest version of the moment.js library is v2.7.0, yet Alloy includes an outdated version 2.1.0 as a built in.      There are new features and bug fixes on the new version that we could use. As of now, we have to include moment 2.7.0 as a stand-alone lib on our Alloy project for these new features and cannot use the built-in."""
"ALOY-1076","Bug","Appcelerator Studio|Tooling",5,"Studio: Distorted console view for alloy project launch on emulator","""Test Steps:  This is specific to windows.    1. Create an Alloy Project.  2. Launch it on emulator. Observe the console view.    Actual Result:  Distorted console view for alloy project launch on emulator is noticed.Please refer attached screenshot."""
"ALOY-1075","Improvement","Models|Tooling",3,"Confirm existing adapters support Backbone 1.x","""Specifically, check Mads' REST adapter. Provide guidance on updating adapters that don't work."""
"ALOY-1074","Improvement","Models|Tooling",8,"Enable developers to specify Backbone version in config.json","""Enable developers to choose whether to use Backbone 0.9x or 1.x. The default should be 1.x. Support for the older version would be to provide backward compatibility for existing projects that depend on 0.9x behaviors or functionality."""
"ALOY-1073","Improvement","Models",5,"Create a Backbone 1.x compatible sync adapter","""To provide for backward compatibility, create a version of the SQL sync adapter that supports Backbone 1.x (current version), leaving the existing adapter for 0.9x compatibility reasons."""
"ALOY-1098","New Feature","XML",3,"Support actionView property of MenuItem in XML markup","""    Set actionView of MenuItem using alloy xml markup"""
"ALOY-1081","Improvement","Models",3,"Improve query selection speed through sync adapter optimizations","""Community-submitted pull request: https://github.com/appcelerator/alloy/pull/471    Speed improvements for selecting data"""
"ALOY-1080","Bug","XML",3,"Compiler fails with misleading message when dataCollection set on ListView rather than ListSection","""If the {{dataCollection}} attribute is set on the ListView, as shown below, the Alloy compiler fails with the message that the ItemTemplate must have a name attribute (which it does in the example).        Moving the {{dataCollection}} attribute to the ListSection tag resolves the issue.    This might be primarily a documentation issue -- that the list section is what you bind to your collection. However, the error message should be more meaningful and accurate."""
"ALOY-1082","New Feature","XML",3,"Allows <Templates> to be children of <Widget>","""h2. Description    When creating a ListView in a widget, it is not possible to add the templates as children of the widget.    h2. Sample  The ListView is created as a Widget. XML code:        The Templates should be added in the index.xml:    """
"ALOY-1085","Improvement","Samples & Templates",3,"Update Alloy templates","""I've prepared a PR with some updates for the Alloy templates:    https://github.com/appcelerator/alloy/pull/480    Changes:    - Re-Organises platform files copied in by new-command to support the next two:  - Moves MarketPlaceArtwork.png to the project root folder to save APK size  - Adds iTunesConnect.png to the project root folder  - Adds iOS7 icons  - Adds iTunesArtwork@2x file (note: upscaled!)  - Optimised all assets, saving more then 1MB or 20%    Ideally the {{iTunesArtwork@2x}} file would be replaced since this one is scaled up."""
"ALOY-1099","Bug","Appcelerator Studio",5,"Alloy: Code Analyzer fails to analyze","""Code Analyzer fails to analyze Alloy Project from Studio on Windows system only. But working fine from CLI.     1. Create a default alloy project.  2. Execute the Code Analyzer against Android/Mobileweb platforms.    Actual Result - Shows error message. Please refer the attached log file and screen shot for more clarification.    Expected Result - Code Analyzer should work fine for Alloy project from Studio.    Notes -   1. The same works fine for Classic project.  2. Code Analyzer works fine for Alloy Project from CLI.  3. Code Analyzer works fine for Alloy/Classic on Mac and Ubuntu systems."""
"ALOY-1118","New Feature","Styling",8,"Allow theming of tiapp.xml e.g. through Alloy themes","""Now Alloy supports theming of {{app/config.json}} and {{i18n}} and {{platforms}} on their way, the last thing to tackle for easily building branded apps of a white label codebase is """"theming"""" {{tiapp.xml}}.    This might me the most challenging one, since I guess the CLI already reads some information from {{tiapp.xml}} before the first hook that Alloy uses is triggered. Also, it will require some serious smarts to know when to overwrite and when to append XML tags and attributes."""
"ALOY-1091","Bug","XML",3,"id property of <Picker> other than 'picker' is treated as a variable","""If you use id name except 'picker' to Picker, that id will be handled as variable.    h5. view  {code:xml}  <Alloy>    <Picker id=""""testpicker""""/>  </Alloy>  {code}    h5. style  {code:css}  '#testpicker': {    type: Ti.UI.PICKER_TYPE_DATE_AND_TIME  }  {code}    h5. compiled code  {code:javascript}  $.__views.testpicker = Ti.UI.createPicker({    type: Ti.UI.PICKER_TYPE_DATE_AND_TIME,    id: testpicker  });  {code}"""
"ALOY-1090","Improvement","XML",3,"Views XML: Support spaces in comma-separated lists of targets in the platform attribute","""After one hour struggling my mind (since the update from 3.2.3 to 3.3.0) why the same code didn't work, I found a little bug, I suppose its in Alloy 1.4, because changing the SDK from 3.3.0 to 3.2.3 didn't work        For JS only $.index.open();    When compiling to Mobile Web it throws an error """"undefined open"""".    The problem was the *space* between *android* and *mobileweb*. After delete it, all works. Previously to the update, the original code worked fine.        Someone have the same issue?."""
"ALOY-1094","Bug","Styling|XML",3,"Date or time pickers: cannot use Ti.UI.* type constants, must use Titanium.UI.* abbreviations","""The following code will generate an error because it uses {{type: Ti.UI.PICKER_TYPE_DATE_AND_TIME}} rather than {{type: Titanium.UI.PICKER_TYPE_DATE_AND_TIME}}. The same is true with any of the date or time type picker type constants.    h5. view      h5. style  {code:css}  '#testpicker': {    type: Ti.UI.PICKER_TYPE_DATE_AND_TIME  }  {code}  """
"ALOY-1093","Bug","XML",3,"Picker: quotes removed from dimension properties with string values during parsing ","""with alloy 1.4 if i run {{alloy compile --config platform=android}}    the code in the tss in the widget      is parsed into      (im using ti.ux templates)  """
"ALOY-1092","Improvement","Styling",3,"Allow more query options / scope in .tss","""The docs state that you have to use Alloy.Globals.* in a .tss query.  You can actually use a local function in a controller too, i.e. `""""#window[if=myFunc()]""""` and that will work too.    What won't work however is basing a query off of params passed to the controller instance.  It would work, but the Alloy compiler doesn't allow it - `""""#window[if=arguments[0].someProp]""""`    This would be a very powerful addition to the new queries available.  It technically already works in the runtime code (I hardcoded it and tried it)...but it just won't compile right now because we're not allowed to put those characters in the tss query."""
"ALOY-1097","Improvement","Samples & Templates",3,"Update Popover samples to use contentView in all cases","""Adding views to contentView is the preferred technique. Adding views directly to the popover might still work, but our samples should not show that technique.    Need to update:    * test/apps/ui/popover  * test/apps/testing/ALOY-983"""
"ALOY-1108","Bug","Samples & Templates",2,"Some .svn directories slipped into the GIT repo of Alloy","""Dear Alloy guru's, I found some .svn folders in the GIT repo that break an SVN checkout. It's minor I know, but just to let you know. Thanks, Wouter Monkhorst"""
"ALOY-1127","Bug","Models",13,"Alloys Data Binding feature does not respect formFactor property","""Similar to ALOY-691 the same example fails if using the {{formFactor}} attribute. See following example using Alloy 1.4.1 . It results in a crash.    {code:title=views/index.xml}  <Alloy>      <Collection src=""""test"""" />      <Window id=""""index"""" platform=""""ios"""" formFactor=""""tablet"""">          <View id=""""content"""" dataCollection=""""test"""" dataFunction=""""render"""">              <View></View>          </View>      </Window>      <Window id=""""index"""" platform=""""ios"""" formFactor=""""handheld"""">          <TableView>              <TableViewRow dataCollection=""""test"""" dataFunction=""""render"""">                  <View></View>              </TableViewRow>          </TableView>      </Window>  </Alloy>      {code:title=models/test.js}  exports.definition = {       configuration : {      """"columns"""": {        """"username"""":""""string""""      },      """"adapter"""": {        """"type"""": """"sql"""",        """"collection_name"""": """"test""""      },    },       extendModel: function(Model) {         _.extend(Model.prototype, {});         return Model;    },       extendCollection: function(Collection) {         _.extend(Collection.prototype, {});         return Collection;    }  }    exports.destroy = function() {      __alloyId5.off(""""fetch destroy change add remove reset"""", render);      __alloyId12.off(""""fetch destroy change add remove reset"""", render);  };    'undefined' is not an object (evaluating '__alloyId5.off')  {code}    Link to Q&A: http://developer.appcelerator.com/question/176639/alloys-data-binding-feature-does-not-respect-handheld-property"""
"ALOY-1103","Bug","XML",5,"<headerview formFactor=""handheld""> not working and throwing an error","""h5. Problem description    formFactor='handheld' is not correctly applied if applied to <HeaderView> object.  Depending on the target, could either be not visible or crashing the app.      h5. Steps to reproduce    Use the following sample code:    h6. index.xml        h6. index.tss      1. Build and run on Android Tablet (tested with Google Nexus 7 4.3)    Expected result:  App runs. Both Headerview and View are not visible.    Result:   App crashes with the following error log:        2. Build run on iOS tablet  Result: app runs. <Headerview> and <View> are not visible as expected    3. Build run on Android and iOS handheld  Result: app runs. <Headerview> however is not displayed, while <View> is correctly displayed as expected.   Expected result: <Headerview> should be displayed."""
"ALOY-1102","Bug","XML",3,"Module for ListView is not working when using SDK 3.2.3","""h2. Description  Following ticket ALOY-1082 I tried to create a module for ListView. While the code (pasted below) works fine using SDK 3.3.0.GA, an error is thrown when building with 3.2.3.GA.    h2. Code  Code as proposed by [~skypanther] is the following:    lib/customlist.js        index.xml        index.js        h2. Error    Following the error when running the app on iOS Simulator:    """
"ALOY-1105","Bug","Tooling",5,"Widget assets are not copied to the compiled app","""In testing widgets, I've found that widget assets are not copied to the compiled app.    Steps to reproduce:    1. Make sure you're using a 1.5.0 branch of Alloy  2. From the repo directory, run {{jake app:run dir=ALOY\-898}} This sample app happens to use the loading widget, which contains a set of graphic assets.  3. When the app opens, click Open Window. You'll see messages in the console that the image assets cannot be found.  4. Copy the file path from one of those log messages. Open Finder and choose Go, Go to Folder. Paste in that path -- before you click Open, change the two instances of %20 to spaces in the path.  5. Right-click Harness.app and choose Show package contents. There should be an images/com.appcelerator.loading folder containing simlinks to a set of PNG assets. It's not there.  6. Change to Alloy 1.4.1 and repeat the preceding steps. The images will be there."""
"ALOY-1104","Bug","Tooling",5,"Fail build with clear message if controllers/index.js is missing","""h6. Problem description  Build fails on Android if the 'asset' folder is being deleted from the app project and is also not present in the Resources files folder.     h6. Steps to reproduce  1. Create a new Alloy project  2. Delete everything in app folder except """"views/index.xml"""" and """"controllers/index.tss"""". Also delete config.json and alloy.js files.   3. Run on Android    Result: app build and does not properly start with error:    """
"ALOY-1107","Improvement","Styling|Tooling",2,"Rollback Theme ""i18n"" and ""platform"" folders implementations","""Remove changes made to Alloy to implement this feature. A better solution has been proposed to handle this at the platform level and Alloy can then use it to more safely theme these folders."""
"ALOY-1220","Improvement","Tooling|Widgets|XML",13,"Widgets can not be used in ListView Templates","""When leveraging templates in a ListView, the alloy compiler fails when trying to compile an ItemTemplate that contains a Widget tag."""
"ALOY-1113","Bug","Samples & Templates",3,"Fix case on 'alloy info adapters' command output","""""""alloy info adapters"""" command returns the contents of description in the tag name """"description"""". However, """"alloy info samples"""" (or even templates) have the contents in """"Description"""" tag/field. Studio is expecting the same tag for all samples, templates and adapters. I believe the tag name has to be """"Description"""" for all commands."""
"ALOY-1112","Improvement","Styling",3,"Styles TSS: Support spaces in comma-separated lists of targets in the platform attribute","""h5. Improvement description  See ALOY-1090  Spaces in comma-separated lists of targets in the platform attribute could be supported also in styles .TSS.    For example:  1. Create a new project and use the following code:      2. Run on android and ios.    Result:  In this case, no errors are displayed and the only the first target is (android) is currently recognized and styles applied.    Expected result:  Both target platforms should be recognized."""
"ALOY-1229","Bug","Tooling|XML",5,"iOS: ListView filling template incorrectly","""The ListView is not filling out incorrectly. The first label """"#faultyLabel"""" should be replace with text and have a backgroundColor=""""magenta"""", but what's happening is a new label is appearing behind the next line, with its backgroundColor=""""magenta"""" and the text either not displayed or displayed out of view.    Create a new Alloy project and drop the three attached files to see the issue. The ListView works correctly in Android (screenshot also attached)"""
"ALOY-1115","New Feature","Samples & Templates|Tooling",3,"CLI command to create a project from an Alloy test case ","""In a recent email thread, [~skypanther] had an idea to add an {{alloy}} CLI to create a new Alloy project from a given sample, e.g. {{alloy create_sample basics/simple}}. Moar:    bq. ...The samples are actually installed to the developer’s computer...as is a shell/template app. Such a command could merge the two, putting the resulting files in the developer’s workspace directory.      There is also a [doc ticket|TIDOC-1849] to better expose the samples, but this type of tool enhancement would be nice, too.  """
"ALOY-1240","Improvement","Styling|Tooling",5,"Date picker type cannot be specified in the TSS","""views/index.xml contains:      styles/index.tss contains:      Result: Date picker shows as expected.    However, when the type definition is moved into the .tss (usual case):    views/index.xml contains:      styles/index.tss contains:      Result: The entire picker is not displayed at all. The class .datePicker is not defined anywhere else in index.tss. Any attempts to assign a date value to the picker results in an app crash.      This was tested on a Samsung Galaxy Note 2 LTE running Android 4.3. Project is based on the Default Alloy Project template."""
"ALOY-1116","Improvement","Models",5,"sql sync adapter: optimize update method for adding/updating models","""Community PR: https://github.com/appcelerator/alloy/pull/518    The proposed change should offer speed improvements but implements no functional changes (in other words, existing code should continue to work).    Per the comment on the PR: Consider adding a batch update method that would be faster because it would process all model changes in a single SQL statement rather than by opening repeated connections to the database. (Likely that's a separate ticket)"""
"ALOY-1221","Improvement","Tooling|Widgets|XML",0,"Support Widgets and Require in ListItem Templates","""Currently, it is not possible to use <Widget> or <Require> within a ItemTemplate like this:        Alloy Compiler fails with error:        as described in https://jira.appcelerator.org/browse/ALOY-611"""
"ALOY-1121","Improvement","Tooling",3,"Update extract-i18n command to extract strings from XML files in addition to TSS","""Community PR https://github.com/appcelerator/alloy/pull/527    Ticket is to test, confirm functionality and applicability."""
"ALOY-1122","Improvement","Tooling",3,"Consistent naming for platform-specific folders","""There is a discrepancy in the naming of the folder for iOS-specific resources in the Alloy file structure.    For assets and libs, the folder is called """"iphone"""".    For controllers, views, and styles, the folder is called """"ios"""".    I think we should have one consistent folder name for Alloy."""
"ALOY-1123","Improvement","Styling",2,"When a new project is created in Appcelerator Studio app.tss should be created","""When a new project is created in Appcelerator Studio app.tss should be created since it is not.    This is similar to the alloy.js file which is included as an empty file with instructions as to what would go inside    app.tss holds global styles"""
"ALOY-1125","Bug","Runtime",8,"Alloy: Button - Click event doesn't trigger","""Click event doesn't trigger correctly. After few (~3) clicks the event is not triggered at all. Button basically behave as it was without any event listener.    Please look at it ASAP.    index.js (only)  """
"ALOY-1124","Bug","XML",3,"When using view-model binding, whitespace outside curly braces for ImageViews crashes the app","""h5. Problem description  When using view-model binding, putting a whitespace outside curly braces, in the quotes, when using ImageViews, crashes the app    h5. Steps to reproduce  1. Grab the sample code for https://jira.appcelerator.org/browse/ALOY-716 : https://github.com/appcelerator/alloy/tree/master/test/apps/testing/ALOY-716  2. Run on iOS  Result: app crashes with following error:      3. Edit index.xml and remove the space outside the curly braces for the ImageView object, changing into something like this:    and run.  Result: app is not crashing but the binding is also lost, therefore also reopening https://jira.appcelerator.org/browse/ALOY-716    h5. Note  Not reproducible with Alloy 1.4.1, therefore is a regression."""
"ALOY-1132","Bug","Samples & Templates",2," 'testing/ALOY-1058' sample code is using quoted type value","""h5. Problem description  Sample code for ALOY-1058 is using a value for the type property with quotes, while, setting the type from the TSS, it should be used with no quotes.  Not a regression.     From the sample code """"index.tss"""", type is defined in this way:      while type should be:      h5. Steps to reproduce  1. Run the sample code  Result: Running the sample, the picker is actually showing DATE as a type when run, but the constant values should be used with no quotes in the TSS.  Here is the compiled code from Resources/iphone/alloy/controller/index.js:      2. Change index.tss picker stile to:      Result: compiled code is:       However, DATE type picker is still shown (not DATE_AND_TIME).  Considering the generated code, this could be a behavior issue relative to how SDK is handling the Picker type property, not Alloy. Investigating and creating a Classic Titanium sample.    3. Change the picker style to:       Result: Picker DATE_AND_STYLE is shown. Compiled code also looks good:      h5. Note  My suggestion for the sample is to use the DATE_AND_TIME picker as type in case of iOS.  i.e.  """
"ALOY-1131","Bug","Samples & Templates",2,"ALOY-1028 sample test is not included in master or 1_5_X branch","""ALOY-1028 sample test is not icluded in master or 1_5_X branch  In present in 1_4_X branch (and works fine with latest 1_5_X). """
"ALOY-1130","Bug","Samples & Templates",2,"""ui/map"" sample code error for mobileweb","""h5. Problem description  Ui/Map module sample is not runnable on MobileWeb for a typo in the code    h5. Steps to reproduce  1. Import ui/map sample  2. Run in MobileWeb  Result: 'Uncaught reference - ti is not defined at /index.html'    The code for MobileWeb is       """"ti.map"""" should be changed into """"Ti.Map"""".  """
"ALOY-1129","Improvement","Models",3,"Delete method shouldn't reset model's id","""Community PR https://github.com/appcelerator/alloy/pull/547    """"Model's ID should not be deleted (reset) in the adapter. The problem is that after the Sync is done Backbone will trigger destroy which will execute a method called _onModelEvent -> remove ,but model doesn't have an id anymore ,so it won't be deleted from a collection - set _byId. If you try to add a new model to the collection with the same ID, backbone will not allow you to do that because the ID already exists in the set."""""""
"ALOY-1134","Improvement","Samples & Templates",3,"Add @3x images and new icon sizes to new-app templates and samples","""To support the iPhone 6/6+ screen sizes, we will need to add new icons and launch screen images to our new-app templates and samples.    See https://developer.apple.com/library/prerelease/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html#//apple_ref/doc/uid/TP40006556-CH27-SW1 for the complete list.    For iPhone 6, launch images:     750 x 1334 (@2x) for portrait  1334 x 750 (@2x) for landscape    For iPhone 6 Plus:    1242 x 2208 (@3x) for portrait  2208 x 1242 (@3x) for landscape    New icons: 180x180, 120x120, 87x87 """
"ALOY-1133","Bug","Models|Tooling",3,"Alloy 1.5b fails to build a project using Napp Drawer if one of the menus is <Required> ed in.","""h4. Expectation  Project to build    h4. Reality  Project doesn't build    """
"ALOY-1135","Bug","Styling",2,"iOS: TextField: Textfield is not visible on window when styles applied in tss file","""Textfield not visible on window when styles applied in tss  Not a regression. Since issue occurs with 3.3.0.GA also    *Steps to reproduce:*  1. Create Alloy Project. Replace the js files with code mentioned below  2. Run the app.    index.js:      index.xml:      index.tss:      {color:green}*Expected Result:*{color}  2. Textfield must be visible.    {color:red}*Actual Result:*{color}  Textfield is not visible.    Note: if the styles are applied on xml file itself. Then Textfield is visible.      """
"ALOY-1137","Bug","Samples & Templates",3,"Jake: not able to run project from Studio on Genymotion if not manually editing tiapp.xml","""h5. Problem description  After using Jake to import, setup and run an Alloy project in Appcelerator Studio, is not possible to run it on Genymotion emulators if not manually editing first tiapp.xml.    h5. Steps to reproduce  1. Import the Harness project in Appcelerator Studio  2. Import any Alloy project using Jake.  ex.    3. Run on Genymotion simulator the Harness project from Studio.    Result:  App fails to build and run      3. Open tiapp.xml and save. Run again.  Result: project build and run and expected.    Seems to be reproducible only when building/running on Genymotion. Android Emulator and Android device launch as expected."""
"ALOY-1139","Story","Tooling",8,"Investigate options for automated testing","""Investigate the use of tiO2 for automated runtime testing to improve our test coverage and improve quality for Alloy development."""
"ALOY-1138","Bug","Appcelerator Studio|Tooling",3,"Error creating a new Widget from Studio if config.json is not present","""h5. Problem description  If no config.json file is present, creating a new Widget returns an error.    h5. Steps  1. Create a new Alloy project  2. Delete config.json file in the root project folder  3. From Appcelerator Studio, left click and create a new Widget    Result: a problem occurred creating a new widget.  Widget folder is created but config.json file is not found and an error is thrown.      Ideal result would probably be to automatically create a default config.json file and add in there the informations regarding the new created Widget.    If config.json file is removed, then, in order to create a new Widget, the user has to re-create manually a new config.json file just including : {{ {} }}      h5. Note  Not a regression.   """
"ALOY-1140","Bug","Appcelerator Studio",8,"Windows: The path format for app.js is different from controller files in sourcemap","""The sourcemap contains different source location path format for app.js file compared to controller files on Windows platform.    The map file for app.js is :      The map file for index.js is :      Due to the difference of path formats, Studio fails to parse the paths and the debugger fails to stop at the expected breakpoints.    We need to investigate the difference in the path generation and ideally, in order to handle the paths consistently across all platforms, it might be better to have the paths in unix format."""
"ALOY-1142","Bug","Samples & Templates",2,"iOS: ALOY-720 sample: <NavigationGroup> object needs to be changed to <NavigationWindow>","""h5. Problem description  <NavigationGroup> is no longer supported for iOS. Instead, NavigationWindow object should be used.     Sample https://github.com/appcelerator/alloy/tree/master/test/apps/testing/ALOY-720 needs to be updated as still using NavigationGroup and currently failing to run.     Ideally, a mobileweb folder using NavigationGroup should be created in the sample."""
"ALOY-1141","Bug","Samples & Templates",3,"iOS, Jake: Harness project from Studio on iPhone simulators might use wrong Sim version","""h5. Problem description  Following https://jira.appcelerator.org/browse/ALOY-956, SDK hardcoded version has been removed from tiapp.xml when importing a project in the Harness project.    Using iOS 8 simulators and Studio this could lead to running a wrong Simulator version if running the project just after importing it without first editing tiapp.xml    h5. Steps to reproduce  1. Import Harness project in Studio (included in <alloy repo>/test/projects/Harness  2. Setup a sample test.  For example:    3. Run the project from Studio on iOS8>iPhone6+ simulator    Result: iPhone 5S/iOS8 simulator is launched instead    4. Edit tiapp.xml from Studio. Studio will add tiapp.xml version selected from """"ti sdk select"""". Change nothing but save and close. Run the project again on iOS8>iPhone6+ simulator  Result: iPhone6+ simulator is correctly launched now.     h5. Note  Apparently this happens only for iOS 8 simulators.   Been able to launch the desired Simulator version choosing OS v7.1 or v7.0.3 """
"ALOY-1145","Story","Testing",2,"Add ALOY-1144 test case app to master branch","""A community pull request for ALOY-1144 was merged to master. It did not include a test app. I added one for the corresponding PR I created to implement the fix in the 1_5_X branch. This ticket is to add that test app to the test/apps/testing folder for the master branch."""
"ALOY-1144","Bug","Styling",3,"Alloy: createStyle turns proxy objects into JS objects","""In Alloy 1.5.0 [{{Alloy.createStyle()}}|https://github.com/appcelerator/alloy/blob/master/Alloy/lib/alloy.js#L233] uses a new utility method [{{deepExtend}}|https://github.com/appcelerator/alloy/blob/master/Alloy/lib/alloy.js#L609] to clone the merged properties. However, because of its implementation a proxy object like the transform passed as a default in the following example [will be turned into a JS object|https://github.com/appcelerator/alloy/blob/master/Alloy/lib/alloy.js#L652]:    {code:js}  $.someView.animate($.createStyle({    id: 'someId',    transform: Ti.UI.create2DMatrix().scale(.5, .5),    duration: 500  }));  {code}    I have a PR to fix {{deepExtend}} by checking for {{.__prototype}} before cloning objects:    - https://github.com/appcelerator/alloy/pull/567"""
"ALOY-1152","Bug","XML",5,"Alloy 1.5.0 RC3: Compiler fails on TextArea with child control","""Problem:    Placing a child control inside a TextArea that is part of a ListView template causes the Alloy compiler to fail with:    {quote}  [ERROR]  Cannot read property 'symbol' of undefined  [ERROR]  Alloy compiler failed  {quote}    Test:     Build the sample code below.    {code:title=index.xml}  <Alloy>   <Window>          <ListView>              <Templates>                  <ItemTemplate name=""""tMsg"""">                      <TextArea bindId=""""cMsg"""">                          <Label bindId=""""lHintText"""" />                      </TextArea>                  </ItemTemplate>              </Templates>              <ListSection>                  <ListItem itemId=""""liMessage"""" template=""""tMsg"""" />                                  </ListSection>          </ListView>   </Window>  </Alloy>  {code}      If you remove {{<Label bindId=""""lHintText"""" />}} from the TextArea control. It compiles fine.      The code above worked fine under Alloy 1.3 and 1.4.    """
"ALOY-1149","Bug","Styling",5,"iOS: Gradient array properties are converted into objects","""h5. Problem description  Gradients contain properties as array, for example the 'color' property.   In Alloy, those properties are now converted and passed as objects and an app is crashing if using those properties.     The issue seems to be introduced after ALOY-1051 as is not reproducible using Alloy version 1.4.1 (and Alloy 1.5.0-rc3 as well - see ALOY-1146, where a regression was introduced breaking Aloy-1051), but is reproducible with Alloy 1.5.0-rc, 1.5.0-rc2 and 1.5.0-rc5.  Is therefore a regression.    h5. Steps to reproduce  1. Grab the sample code for ALOY-717 : https://github.com/appcelerator/alloy/tree/master/test/apps/testing/ALOY-717  2. Run the sample app on iOS (any version)  Result: App crashes with an """"Application Error - Invalid type passed to function at alloy.js""""  See error log attached and screenshot.     3. Edit index.tss and comment the 'colors' property for .bgGradient class:    and run on iOS devices  Result: app runs fine and no error are thrown.   """
"ALOY-1148","Improvement","Samples & Templates",2,"Update model template code to include Backbone 1.1.2 support code","""Per ALOY-1074, if a developer uses Backbone 1.1.2 (rather than the default 0.9.2), he/she must extend the collection definition to account for a breaking change in backbone.    Add this to the modelcode.js template file to provide guidance to developers attempting to use this feature.    """
"ALOY-1150","Bug","Documentation",1,"Release notes: there is no date for the 1.5.0 release","""h5. Problem description  A date for the 1.5.0 release should be added to the release notes.  Alloy CHANGELOG.md in the Github 1.5.0 branch currently says:      Therefore the current release date (09/29/2014) should be added.  """
"ALOY-1156","Improvement","Documentation",2,"Update readme to prune outdated information","""Text in the Getting Started, Additional Notes, Feedback, Contributing, and Contributors sections is perhaps dated. We should confirm that text still applies and prune outdated or extraneous information as needed.    Add info on the new --testapp attribute in the Running Sample Test Apps section    Update jakelib/readme.md to note commands to use with the new iOS8 simulators (how to launch a specific sim)`  """
"ALOY-1163","Bug","Runtime|Styling",5,"Using $.UI.create on a ListView with Custom Data templates causes to hide rows when templates are created programmatically.","""h4. Problem Description  When using the $.UI.create function for ListViews using custom item templates causes the listitems not to show.    h4. Steps to reproduce  1. Create a new mobile project  2. Add this testcase  h4. index.xml:      h4. index.js (Example from docs)      However, switching to Ti.UI.create<Type>() {} works:  index.js:    3. Test in device    h4. Results  According to the Appcelerator documentation Alloy Dynamic Styles """"Since Alloy 1.2.0, Alloy supports changing styles dynamically or during runtime. There are two methods to support dynamic styling in Alloy. You can either generate a dynamic style dictionary that can be passed to applyProperties or a create method, or modify TSS class styles to an existing component on the fly.""""    Using """"$.UI.create"""" in SDK 3.4.0.GA and Alloy 1.5.1 causes listview rows hide. Whether in SDK 3.3.0.GA and Alloy 1.4.0 it works fine.    h4. Extra information  Both examples used to work in Ti SDK 3.3.X and iOS 7.X and Alloy 1.4.X  """
"ALOY-1157","Bug","Tooling",5,"Creating sample app from advanced/android_density doesn't copy resolution-specific image folders ","""*Steps:*    1. Create a new Alloy app from the advanced/android_density sample         Note that the source android_density code includes the following res-* folders each containing 'theImage.png' at different pixel densities.        2. Examine contents of the generated Alloy project's *appname/app/assets* directory.     *Results*    The res-* folders and contents were not copied into the new project's corresponding assets/android/images folder, as shown below:        *Expected*  The res-* folders and their contents are merged in with the existing assets/android/images folder contents.    """
"ALOY-1241","Bug","Widgets",5,"Alloy: Widget is loaded - initialized twice","""Widget within TableViewSection is initialized twice.    index.xml      widget.xml      widget.js      Console output:  """
"ALOY-1158","Improvement","Testing",3,"Alloy Model/Collection tests need to be updated for supporting also Backbone 1.1.2","""h5. Problem description  According to https://jira.appcelerator.org/browse/ALOY-576 we are upgrading Backbone version from 0.9.2 to 1.1.2    Backbone 0.9.2 will still there but will be deprecated in Alloy 1.6.0 - also 1.1.2 is going to break old samples and code, therefore need to be updated.     See also docs: https://jira.appcelerator.org/browse/TIDOC-1895  """
"ALOY-1160","Improvement","Samples & Templates",3,"Replace splash screens & icons for new projects","""We need to replace the draft Alloy icons & splash screens used for new projects prior to the 1.6 release."""
"ALOY-1159","Improvement","Builtins",3,"Update underscore library to latest version","""Update underscore lib, per PR https://github.com/appcelerator/alloy/pull/578    Need to update both runtime and build-time versions of the lib."""
"ALOY-1162","Bug","Models",3,"Backbone 1.1.2 : <model/property> sample returning unexpected data for model attributes","""h5. Problem description  Using Backbone 1.1.2, sample app included in <model/properties> returns unexpected data values when fetching for stored persistent Model data (using properties adapter).    h5. Steps to reproduce  Currently working on narrowing down the sample code. However it can be reproduced by getting the alloy sample for model/properties (https://github.com/appcelerator/alloy/tree/master/test/apps/models/properties )    1. Import the sample code  2. Add backbone support in config.json and in the 'exports.definition = {}' add:    3. Edit models/modelTab.js and add    4. Run  5. Click on Increment a few times. Then close the app.  Result: label is updated accordingly as expected, incrementing the count. Displayed label is something like:    6. Reopen the app  Displayed label is now different than expected, returning a new model with count 0 and the previous created/incremented models.   See attachment.      """
"ALOY-1161","Bug","Models",3,"MobileWeb: using 'backbone 1.1.2' dependency, app crashes on MobileWeb","""h5. Problem description  Accordingly to https://jira.appcelerator.org/browse/ALOY-1074 Backbone 1.1.2 is now selectable in config. json  However, if 1.1.2 is selected, MobileWeb projects are not runnable.     h5. Steps to reproduce  1. Create a new Alloy project  2. Edit config.json and add    3. Run on MobileWeb    Result: Application error is displayed. See screenshot    Using Backbone 0.9.2 it runs as expected."""
"ALOY-1165","Bug","Styling",3,"Compile error when merging backgroundGradient","""PR: https://github.com/appcelerator/alloy/pull/588    Review pull request, create test case / sample app to be added to test suite"""
"ALOY-1167","Improvement","Tooling",3,"Update travis.yml to exit w/non-zero value on errors","""GitHub builds are marked as passing even when errors are encountered by Travis. Our test scripts must be exiting with a non-zero value in the case of errors.    We should add an {{after_script}} section that exits with 0/non-zero to properly signal build state.    http://docs.travis-ci.com/user/build-configuration/"""
"ALOY-1166","Bug","Samples & Templates",2,"Direction arrow in models/binding_dataFunction test sample not correct on Android ","""https://github.com/appcelerator/alloy/tree/master/test/apps/models/binding_dataFunction    1. Build and run for Android and iPhone.    Results: Direction arrow on Android is center-aligned; on iOS, the arrow is left-aligned.    Expected: Arrow position same on both platforms."""
"ALOY-1170","Bug","Samples & Templates",3,"SQL runtime error when running models/listview_binding test app","""Steps:    1. Build/run https://github.com/appcelerator/alloy/tree/1_5_X/test/apps/models/binding_listview for Android or iOS    Results:   On iOS, the following error is generated:    {quote}  [DEBUG] 2014-10-16 10:02:57.854 binding_listview[31708:445138] [ERROR] A SQLite database error occurred on database '/Users/tstatler/Library/Developer/CoreSimulator/Devices/861898C4-B00A-46FE-B8BF-AF20F274270C/data/Containers/Data/Application/8411B43C-2D41-4140-BD17-9F5275B43166/Library/Private Documents/_alloy_.sql': Error Domain=com.plausiblelabs.pldatabase Code=3 """"An error occured parsing the provided SQL statement."""" UserInfo=0x7c93c470 {com.plausiblelabs.pldatabase.error.vendor.code=1, NSLocalizedDescription=An error occured parsing the provided SQL statement., com.plausiblelabs.pldatabase.error.query.string=INSERT INTO info (title,subtitle,image) VALUES (?,?,?);, com.plausiblelabs.pldatabase.error.vendor.string=table info has no column named title} (SQLite #1: table info has no column named title) (query: 'INSERT INTO info (title,subtitle,image) VALUES (?,?,?);')  [ERROR] Script Error {  [ERROR]     backtrace = """"#0 () at file:///Users/tstatler/Library/Developer/CoreSimulator/Devices/861898C4-B00A-46FE-B8BF-AF20F274270C/data/Containers/Bundle/Application/DA7AB9EB-0FAB-4D30-BB29-2E1CD5D26933/binding_listview.app/alloy/models/Info.js:54\n#1 Migrate() at file:///Users/tstatler/Library/Developer/CoreSimulator/Devices/861898C4-B00A-46FE-B8BF-AF20F274270C/data/Containers/Bundle/Application/DA7AB9EB-0FAB-4D30-BB29-2E1CD5D26933/binding_listview.app/alloy/sync/sql.js:245\n#2 () at file:///Users/tstatler/Library/Developer/CoreSimulator/Devices/861898C4-B00A-46FE-B8BF-AF20F274270C/data/Containers/Bundle/Application/DA7AB9EB-0FAB-4D30-BB29-2E1CD5D26933/binding_listview.app/alloy/sync/sql.js:341\n#3 () at file:///Users/tstatler/Library/Developer/CoreSimulator/Devices/861898C4-B00A-46FE-B8BF-AF20F274270C/data/Containers/Bundle/Application/DA7AB9EB-0FAB-4D30-BB29-2E1CD5D26933/binding_listview.app/alloy.js:128\n#4 () at file:///Users/tstatler/Library/Developer/CoreSimulator/Devices/861898C4-B00A-46FE-B8BF-AF20F274270C/data/Containers/Bundle/Application/DA7AB9EB-0FAB-4D30-BB29-2E1CD5D26933/binding_listview.app/alloy/models/Info.js:59"""";  [ERROR]     line = 93;  [ERROR]     message = """"invalid SQL statement"""";  [ERROR]     nativeLocation = """"-[TiDatabaseProxy execute:] (TiDatabaseProxy.m:191)"""";  [ERROR]     nativeReason = """"Error Domain=com.plausiblelabs.pldatabase Code=3 \""""An error occured parsing the provided SQL statement.\"""" UserInfo=0x7c93c470 {com.plausiblelabs.pldatabase.error.vendor.code=1, NSLocalizedDescription=An error occured parsing the provided SQL statement., com.plausiblelabs.pldatabase.error.query.string=INSERT INTO info (title,subtitle,image) VALUES (?,?,?);, com.plausiblelabs.pldatabase.error.vendor.string=table info has no column named title}"""";  [ERROR]     sourceId = 299232704;  [ERROR]     sourceURL = """"file:///Users/tstatler/Library/Developer/CoreSimulator/Devices/861898C4-B00A-46FE-B8BF-AF20F274270C/data/Containers/Bundle/Application/DA7AB9EB-0FAB-4D30-BB29-2E1CD5D26933/binding_listview.app/alloy/sync/sql.js"""";  [ERROR] }   [ERROR] Script Error Module """"alloy/models/Info"""" failed to leave a valid exports object  {quote}"""
"ALOY-1174","Improvement","Models",5,"Update sync adapters to support promises in addition to callbacks","""Per comments at [Hacking alloy to get promises to work|https://github.com/aaronksaunders/tiConnectSampleApp#hacking-of-alloyjs-to-get-promises-to-work], the core model/collection constructors could be modified simply to support using promises in addition to callbacks. As shown in [Aaron's TiConnect sample|https://github.com/aaronksaunders/tiConnectSampleApp/blob/master/app/alloy.js#L22] the change involves returning the results of the sync call.    Resolving this cannot break existing apps, so extensive testing should be done on all platforms."""
"ALOY-1173","Story","Tooling",5,"Add functionality from alloy-smelter to Alloy","""The https://github.com/k0sukey/alloy-smelter offers some nice capabilities that should perhaps be included in Alloy itself. For example, copying/moving/renaming/deleting controllers.    Sub-tickets will be needed to implement the individual features.    Alternately, alloy-smelter could be wrapped, providing """"alloy foo"""" commands that call to smelter."""
"ALOY-1172","Bug","Samples & Templates",3,"Properties test sample: Collection view doesn't update after adding first item on Android","""Steps:    1. Create an Alloy application from the [models/properties|https://github.com/appcelerator/alloy/tree/master/test/apps/models/properties] sample.  2. Build, run on Android.  3. Click Collections tab.  4. Enter text in input and click add/+ buttton.    Results: New item doesn't appear in TableView.  Expected: Item appears in tableview.    Subsequent items added to the collection appear in the TableView, it's just the first one that doesn't. Works as expected on iOS (sim)."""
"ALOY-1177","Improvement","XML",3,"Implicitly set ns attribute for SearchView to Ti.UI.Android","""When declaring a SearchView element in XML markup, Alloy should assign it the 'Ti.UI.Android' namespace.  Alloy is currently doing this for a lot of iOS-specific components.    These two items should be equivalent.      """
"ALOY-1175","Bug","XML",5,"Cannot call methods or access properties on MenuItems declared in markup","""DESCRIPTION:  Cannot call methods or access properties using the `id` attribute of MenuItems created in XML markup.  Related feature ticket: ALOY-1098    REPRODUCTION:  Run the Alloy application below.  Hit the Expand or Collapse action items or try to expand the action view from the overflow menu.    RESULTS:  Trying to call a method or accessing a property results in 'Cannot read property of undefined` or `Cannot call method X of undefined`.                `index.xml`      `index.js`      Classic Examples:      """
"ALOY-1209","Bug","XML",8,"Compile error when a view's attribute contains an escaped quote","""The following view:        Will result in the following compile error:        I'd expect this to work fine since the {{""""}} is escaped?"""
"ALOY-1225","Bug","Builtins",3,"social.js authorize UI crashes on android","""Upon calling the 'authorize' method, the loading view opens and then immediately crashes, resulting in the following error.     [INFO] :   libc: Fatal signal 11 (SIGSEGV) at 0x00000014 (code=1), thread 2206 (KrollRuntimeThr)    The behavior is consistent. However, if I open and close a facebook authorize dialog before opening the twitter authorize dialog, the twitter dialog will usually work. The issue may lie in the """"popIn"""" animation: it appears that the window expands beyond the mobile screen viewport, and will crash at about the time the window should zoom back into the viewport.   See the attached video for a demo of the bug.     Functionality is fine in iOS v 8.1.     Other notes:  * Line 514 of the social.js file makes us of the deprecated """"Ti.UI.AUTODETECT_NONE""""   * The default navigation/action bar at the top becomes visible"""
"ALOY-1195","Improvement","Samples & Templates|Tooling",3,"Alloy Migrations: Template up.down functions do not match documentation","""When generating a migration with the Alloy CLI (1.5.1), the generated file has this code:      But documentation uses 'migrator' in place of 'db' for the function parameter.    Since the passed-in object itself has a 'db' parameter, the 'migrator' naming helps to avoid potential confusion.    migrator.db.execute(...)    vs.    db.db.execute(...)"""
"ALOY-1206","Bug","Tooling",8,"Alloy compiler doesn't regenerate controllers if only change is made to the distribution target","""When building for a different target environment (development, test or production) conditional code in {{app/alloy.js}} is not updated in {{Resources/\[platform\]/app.js}}. This can cause serious errors when relying on the conditions for particular behaviour in ad-hoc and app store builds.    h1. Test case    1. Create a project: {{ti create -t app -p ios -n conditions --id test.conditions -d .}}  2. Make it Alloy: {{cd conditions && alloy new}}  3. Insert the following snippet in both {{app/alloy.js}} and {{app/controllers/index.js}}:        4. Build the production for Simulator: {{ti build -p ios -b}}  5. Confirm that both {{Resources/iphone/app.js}} and {{Resources/iphone/alloy/controllers/index.js}} only have {{console.debug(""""if (ENV_DEVELOPMENT)"""");}} which is correct  6. Build for ad-hoc or to device: {{ti build -p ios --target dist-adhoc}}  7. Confirm that {{Resources/iphone/app.js}} still has {{console.debug(""""if (ENV_DEVELOPMENT)"""");}} while {{Resources/iphone/alloy/controllers/index.js}} is correctly updated to have {{console.debug(""""if (ENV_PRODUCTION)"""");}}"""
"ALOY-1202","Bug","Samples & Templates",3,"Update ti.paint module in HarnessTemplate with a 64-bit compatible version","""The HarnessTemplate includes the ti.paint module for use with the test/apps/advanced/native_modules sample. The version included is 32-bit only. Update to a 64-bit version.    Incidentally, there is an Android version of this module. The sample app could be updated to work on both iOS and Android (it is iOS-only currently)."""
"ALOY-1215","Bug","Samples & Templates",3,"Samples: Alloy RSS Reader sample does not work on iPad","""This is not a regression as the issue occurs in SDK 3.4.0.GA as well.    Steps to Reproduce:  1. Import the Alloy - RSS Reader sample in studio  2. Run the sample project on iPad device or simulator    Actual Result:  The app installs and launches successfully but does not show any content. Only waiting spinner is shown continuously.    Expected Result;  The RSS Reader sample app should show the RSS feeds"""
"ALOY-1205","Bug","Samples & Templates",2,"Alloy launch image for 667h has the wrong filename","""It is named {{Default-Portrait-667h@2x.png}} but should be {{Default-667h@2x.png}} like the classic template has:    https://github.com/appcelerator/titanium_mobile/tree/master/iphone/templates/app/default/template/Resources/iphone    PR: https://github.com/appcelerator/alloy/pull/637"""
"ALOY-1210","Improvement","Runtime",5,"Alloy: Add support for DIST in the Project Configuration File","""Recently, in Alloy 1.4.0 {{DIST_ADHOC}} and {{DIST_STORE}} were added the options for [conditional code in controllers|http://docs.appcelerator.com/titanium/latest/#!/guide/Alloy_Controllers-section-34636384_AlloyControllers-ConditionalCode].    I'd like to also have support the same conditions in {{config.json}}.    The use case would be to have different endpoints, keys or other configuration variables for production ad-hoc builds and production store-builds.    Example:    """
"ALOY-1207","Improvement","Themes",5,"Alloy: Theme ""lib"" folder","""Although there's no real difference between the Alloy {{assets}} and {{lib}} folder, themes should also support the latter so that to theme a utility module you have in {{app/lib/util.js}} you no longer need to put this in {{app/themes/mine/assets/util.js}}.    PR incoming.."""
"ALOY-1232","Bug","Tooling",5,"--deploy-type ignored on android builds for emulator and device","""h4. Problem Description  The argument --deploy-type or -D is ignored if the target is android, always generating 'development' for emulator and 'test' for device, even if specified the other way. iOS works fine. I didn't test all the others platforms.    h4. Steps to reproduce  Since we use these settings to trigger our testing scripts, figured I'd give it a test. Ti.App.deployType seems to work fine here. But your settings from the config.json file do not.  added the following to my alloy.js to test faster:      Results:  Genymotion Google Nexus 5 - 5.0.0 - API 21 - 1080x1920 (5.0.0)        Genymotion Samsung Galaxy S5 - 4.4.4 - API 19 - 1080x1920 (4.4.4)        Device Samsung S4        h4. Steps to reproduce  I used these commands for testing:                  h4. Extra info  Seems like CFG.js doesn't get updated under resources once you switch the deployType flag. Deleting the content of Resources (aka forcing regeneration of CFG.js) will go and use the right config."""
"ALOY-1214","Improvement","Samples & Templates",3,"Button in Inheritance sample app difficult to click on iOS","""Steps    1.Build and run https://github.com/appcelerator/alloy/tree/master/test/apps/advanced/inheritance on an iPhone device or simulator.  2. Try to click the baseDialog button.    Results: Because the button is partially covered by the status bar it's hard to click, even with a mouse pointer.  Expected: Button easy to click with finger or mouse.        """
"ALOY-1285","Bug","Styling",5,"TSS conditional statement is ignored by items dynamically generated on runtime","""Below is the sample of the TSS condition statement:  """".date[if=false]"""": {   backgroundColor: """"#f00""""   }    This always gets executed, even if logically it shouldn't be.  It happens to elements created on runtime by this code:    label = $.UI.create('Label', { text: displayDate, classes: ['date']} );"""
"ALOY-1216","Improvement","Tooling",5,"Speed compilation by enabling selective compiles of specified files","""Community PR https://github.com/appcelerator/alloy/pull/625     * PR needs testing to confirm it works as described and introduces no side-effects/regressions  * Add unit tests  * Open related docs tickets, update ALOY-757 & ALOY-620 as needed.  """
"ALOY-1217","Bug","Tooling|XML",8,"TextField with proxy property causes compile error as ItemTemplate","""h3. index.xml  {code:xml}  <Alloy>    <Window id=""""settingsWin"""" title=""""Settings"""" class=""""container"""" tabBarHidden=""""true"""">      <ListView id=""""listView"""" defaultItemTemplate=""""template"""" allowsSelection=""""false"""">        <Templates>          <ItemTemplate id=""""inputTemplate"""" name=""""inputTemplate"""">            <TextField              platform=""""ios""""              borderStyle=""""Ti.UI.INPUT_BORDERSTYLE_BEZEL""""              keyboardToolbarColor=""""#999"""" keyboardToolbarHeight=""""40""""              top=""""10"""" height=""""35"""" width=""""300""""              value=""""Focus to see keyboard with toolbar"""">                      <!-- Sets the keyboardToolbar property -->              <KeyboardToolbar>                <Toolbar>                  <Items>                    <Button systemButton=""""Ti.UI.iPhone.SystemButton.CANCEL"""" />                    <FlexSpace/>                    <Button systemButton=""""Ti.UI.iPhone.SystemButton.CAMERA"""" />                    <FlexSpace/>                    <Button style=""""Ti.UI.iPhone.SystemButtonStyle.DONE"""">Send</Button>                  </Items>                </Toolbar>              </KeyboardToolbar>                    </TextField>          </ItemTemplate>        </Templates>           <ListSection headerTitle=""""Login Id"""" id=""""idSection"""">          <ListItem template=""""inputTemplate"""" textfield:value=""""""""/>        </ListSection>      </ListView>    </Window>  </Alloy>  {code}    h3. index.js  {code:javascript}  $.settingsWin.open();  {code}    h3. Console output  {code}  Titanium Command-Line Interface, CLI version 3.4.1, Titanium SDK version 3.4.1.GA  Copyright (c) 2012-2014, Appcelerator, Inc.  All Rights Reserved.  Please report bugs to http://jira.appcelerator.org/  [DEBUG] :  Detecting modules in /Users/ndizazzo/Library/Application Support/Titanium/modules  [DEBUG] :  Detected android module: com.appcelerator.apm 1.0.10 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/android/com.appcelerator.apm/1.0.10  [DEBUG] :  Detected android module: facebook 3.0.2 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/android/facebook/3.0.2  [DEBUG] :  Detected android module: facebook 3.0.3 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/android/facebook/3.0.3  [DEBUG] :  Detected android module: ti.cloudpush 3.3.0 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/android/ti.cloudpush/3.3.0  [DEBUG] :  Detected android module: ti.cloudpush 3.3.4 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/android/ti.cloudpush/3.3.4  [DEBUG] :  Detected android module: ti.map 2.1.4 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/android/ti.map/2.1.4  [DEBUG] :  Detected android module: ti.map 2.2.2 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/android/ti.map/2.2.2  [DEBUG] :  Detected commonjs module: ti.cloud 3.2.3 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/commonjs/ti.cloud/3.2.3  [DEBUG] :  Detected commonjs module: ti.cloud 3.2.5 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/commonjs/ti.cloud/3.2.5  [DEBUG] :  Detected commonjs module: ti.cloud 3.2.7 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/commonjs/ti.cloud/3.2.7  [DEBUG] :  Detected iphone module: com.appcelerator.apm 1.0.10 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/iphone/com.appcelerator.apm/1.0.10  [DEBUG] :  Detected iphone module: com.appcelerator.urlSession 1.0.1 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/iphone/com.appcelerator.urlSession/1.0.1  [DEBUG] :  Detected iphone module: facebook 3.1.1 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/iphone/facebook/3.1.1  [DEBUG] :  Detected iphone module: ti.coremotion 1.0.1 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/iphone/ti.coremotion/1.0.1  [DEBUG] :  Detected iphone module: ti.map 2.0.2 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/iphone/ti.map/2.0.2  [DEBUG] :  Detected iphone module: ti.map 2.0.4 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/iphone/ti.map/2.0.4  [DEBUG] :  Detected iphone module: ti.touchid 1.0 @ /Users/ndizazzo/Library/Application Support/Titanium/modules/iphone/ti.touchid/1.0  [DEBUG] :  Detecting plugins in /Users/ndizazzo/dev/Studio_Workspace/TestApplication/plugins  [DEBUG] :  Detected plugin: ti.alloy @ /Users/ndizazzo/dev/Studio_Workspace/TestApplication/plugins/ti.alloy  [DEBUG] :  Detecting plugins in /Users/ndizazzo/Library/Application Support/Titanium/plugins  [DEBUG] :  Detected plugin: com.appcelerator.test @ /Users/ndizazzo/Library/Application Support/Titanium/plugins/com.appcelerator.test  [DEBUG] :  Looking for Titanium plugin id=ti.alloy version=1.0  [INFO] :   Found Titanium plugin id=ti.alloy version=1.0   [DEBUG] :  Titanium SDK iOS directory: /Users/ndizazzo/Library/Application Support/Titanium/mobilesdk/osx/3.4.1.GA/iphone  [INFO] :   Deploy type: development  [INFO] :   Building for target: simulator  [INFO] :   Building using iOS SDK: 8.1  [INFO] :   Building for iOS Simulator: iPhone 5s  [DEBUG] :  UDID: xxxx  [DEBUG] :  Simulator type: iphone  [DEBUG] :  Simulator version: 8.1  [INFO] :   Building for device family: universal  [DEBUG] :  Setting Xcode target to Debug  [DEBUG] :  Setting Xcode build OS to iphonesimulator8.1  [DEBUG] :  Xcode installation: /Applications/Xcode.app/Contents/Developer  [DEBUG] :  iOS WWDR certificate: installed  [DEBUG] :  Building for the following architectures: armv7 armv7s i386  [INFO] :   Minimum iOS version: 6.0  [INFO] :   Debugging disabled  [INFO] :   Profiler disabled  [INFO] :   Forcing rebuild: /Users/ndizazzo/dev/Studio_Workspace/TestApplication/build/iphone/build-manifest.json does not exist  [INFO] :   Initiating prepare phase  [INFO] :   Found Alloy app in /Users/ndizazzo/dev/Studio_Workspace/TestApplication/app  [INFO] :   Executing Alloy compile: /usr/local/bin/node /usr/local/bin/alloy compile /Users/ndizazzo/dev/Studio_Workspace/TestApplication/app --config platform=ios,version=0,simtype=none,devicefamily=universal,deploytype=development,target=simulator --no-colors  [DEBUG] :         .__  .__                  [DEBUG] :  _____  |  | |  |   ____ ___.__.  [DEBUG] :  \__  \ |  | |  |  /  _ <   |  |  [DEBUG] :   / __ \|  |_|  |_(  <_> )___  |  [DEBUG] :  (____  /____/____/\____// ____|  [DEBUG] :       \/                 \/  [DEBUG] :  Alloy 1.5.1 by Appcelerator. The MVC app framework for Titanium.  [DEBUG] :  ----- CONFIGURATION -----  [DEBUG] :  raw config = """"platform=ios,version=0,simtype=none,devicefamily=universal,deploytype=development,target=simulator""""  [DEBUG] :  platform = ios  [DEBUG] :  version = 0  [DEBUG] :  simtype = none  [DEBUG] :  devicefamily = universal  [DEBUG] :  deploytype = development  [DEBUG] :  target = simulator  [DEBUG] :  project path = /Users/ndizazzo/dev/Studio_Workspace/TestApplication  [DEBUG] :  app path = /Users/ndizazzo/dev/Studio_Workspace/TestApplication/app  [DEBUG] :    [DEBUG] :  ----- CONFIG.JSON -----  [DEBUG] :  dependencies = {}  [INFO] :   [config.json] regenerating CFG.js from config.json...  [DEBUG] :  {  [DEBUG] :  """"dependencies"""": {},  [DEBUG] :  """"sourcemap"""": true,  [DEBUG] :  """"autoStyle"""": false,  [DEBUG] :  """"adapters"""": [  [DEBUG] :  """"localStorage"""",  [DEBUG] :  """"properties"""",  [DEBUG] :  """"sql""""  [DEBUG] :  ]  [DEBUG] :  }  [DEBUG] :    [DEBUG] :  ----- CLEANING RESOURCES -----  [DEBUG] :  Removing orphaned controllers ...  [DEBUG] :  Removing orphaned models ...  [DEBUG] :  Removing orphaned styles ...  [DEBUG] :  Removing orphaned sync adapters...  [DEBUG] :  Removing orphaned assets and libs...  [DEBUG] :    [DEBUG] :  ----- BASE RUNTIME FILES -----  [DEBUG] :    [INFO] :   ----- MVC GENERATION -----  [INFO] :   [global style] writing to cache...  [INFO] :   [index.xml] view processing...  [INFO] :   style:      """"index.tss""""  [INFO] :   view:       """"index.xml""""  [DEBUG] :  /usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract._ItemArray.js:58  [DEBUG] :        return state.itemsArray + '.push(' + s.parent.symbol + ');';  [DEBUG] :                                                     ^  [ERROR] :  : Cannot read property 'symbol' of undefined  [DEBUG] :      at Object.CU.generateNodeExtended.post (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract._ItemArray.js:58:52)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/base.js:14:17)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/default.js:10:27)  [DEBUG] :      at parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Ti.UI.Button.js:30:30)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/base.js:11:17)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Ti.UI.Button.js:14:27)  [DEBUG] :      at Object.exports.generateNode (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:316:48)  [DEBUG] :      at Object.exports.generateNodeExtended (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:253:17)  [DEBUG] :      at /usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract._ItemArray.js:55:16  [DEBUG] :      at Array.forEach (native)  [DEBUG] :      at Function._.each._.forEach (/usr/local/lib/node_modules/alloy/Alloy/lib/alloy/underscore.js:79:11)  [DEBUG] :      at parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract._ItemArray.js:37:4)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/base.js:11:17)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract._ItemArray.js:18:27)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract.Items.js:15:48)  [DEBUG] :      at Object.exports.generateNode (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:316:48)  [DEBUG] :      at Object.exports.generateNodeExtended (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:253:17)  [DEBUG] :      at /usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract._ItemContainer.js:51:15  [DEBUG] :      at Array.forEach (native)  [DEBUG] :      at Function._.each._.forEach (/usr/local/lib/node_modules/alloy/Alloy/lib/alloy/underscore.js:79:11)  [DEBUG] :      at parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract._ItemContainer.js:31:4)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/base.js:11:17)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract._ItemContainer.js:20:27)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Ti.UI.iOS.Toolbar.js:11:52)  [DEBUG] :      at Object.exports.generateNode (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:316:48)  [DEBUG] :      at Object.exports.generateNodeExtended (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:253:17)  [DEBUG] :      at /usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/_ProxyProperty.js:43:14  [DEBUG] :      at Array.forEach (native)  [DEBUG] :      at Function._.each._.forEach (/usr/local/lib/node_modules/alloy/Alloy/lib/alloy/underscore.js:79:11)  [DEBUG] :      at parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/_ProxyProperty.js:32:4)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/base.js:11:17)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/_ProxyProperty.js:16:27)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/_ProxyProperty.KeyboardToolbar.js:12:37)  [DEBUG] :      at Object.exports.generateNode (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:316:48)  [DEBUG] :      at Object.exports.generateNodeExtended (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:253:17)  [DEBUG] :      at /usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Ti.UI.TextField.js:48:14  [DEBUG] :      at Array.forEach (native)  [DEBUG] :      at Function._.each._.forEach (/usr/local/lib/node_modules/alloy/Alloy/lib/alloy/underscore.js:79:11)  [DEBUG] :      at parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Ti.UI.TextField.js:30:4)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/base.js:11:17)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Ti.UI.TextField.js:20:27)  [DEBUG] :      at Object.exports.generateNode (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:316:48)  [DEBUG] :      at Object.exports.generateNodeExtended (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:253:17)  [DEBUG] :      at /usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract.ItemTemplate.js:64:15  [DEBUG] :      at Array.forEach (native)  [DEBUG] :      at Function._.each._.forEach (/usr/local/lib/node_modules/alloy/Alloy/lib/alloy/underscore.js:79:11)  [DEBUG] :      at parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract.ItemTemplate.js:54:5)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/base.js:11:17)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Alloy.Abstract.ItemTemplate.js:10:27)  [DEBUG] :      at Object.exports.generateNode (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:316:48)  [DEBUG] :      at Object.exports.generateNodeExtended (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:253:17)  [DEBUG] :      at /usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Ti.UI.ListView.js:131:17  [DEBUG] :      at Array.forEach (native)  [DEBUG] :      at Function._.each._.forEach (/usr/local/lib/node_modules/alloy/Alloy/lib/alloy/underscore.js:79:11)  [DEBUG] :      at /usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Ti.UI.ListView.js:122:6  [DEBUG] :      at Array.forEach (native)  [DEBUG] :      at Function._.each._.forEach (/usr/local/lib/node_modules/alloy/Alloy/lib/alloy/underscore.js:79:11)  [DEBUG] :      at parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Ti.UI.ListView.js:48:4)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/base.js:11:17)  [DEBUG] :      at Object.exports.parse (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/parsers/Ti.UI.ListView.js:29:27)  [DEBUG] :      at Object.exports.generateNode (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:316:48)  [DEBUG] :      at /usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:391:29  [DEBUG] :      at Array.forEach (native)  [DEBUG] :      at Function._.each._.forEach (/usr/local/lib/node_modules/alloy/Alloy/lib/alloy/underscore.js:79:11)  [DEBUG] :      at Object.exports.generateNode (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/compilerUtils.js:386:5)  [DEBUG] :      at /usr/local/lib/node_modules/alloy/Alloy/commands/compile/index.js:577:28  [DEBUG] :      at Array.forEach (native)  [DEBUG] :      at Function._.each._.forEach (/usr/local/lib/node_modules/alloy/Alloy/lib/alloy/underscore.js:79:11)  [DEBUG] :      at parseAlloyComponent (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/index.js:566:5)  [DEBUG] :      at /usr/local/lib/node_modules/alloy/Alloy/commands/compile/index.js:258  [DEBUG] :  :6  [DEBUG] :      at Array.forEach (native)  [DEBUG] :      at Function._.each._.forEach (/usr/local/lib/node_modules/alloy/Alloy/lib/alloy/underscore.js:79:11)  [DEBUG] :      at /usr/local/lib/node_modules/alloy/Alloy/commands/compile/index.js:247:6  [DEBUG] :      at Array.forEach (native)  [DEBUG] :      at Function._.each._.forEach (/usr/local/lib/node_modules/alloy/Alloy/lib/alloy/underscore.js:79:11)  [DEBUG] :      at module.exports (/usr/local/lib/node_modules/alloy/Alloy/commands/compile/index.js:243:4)  [DEBUG] :      at Object.<anonymous> (/usr/local/lib/node_modules/alloy/Alloy/alloy.js:103:46)  [DEBUG] :      at Module._compile (module.js:456:26)  [DEBUG] :      at Object.Module._extensions..js (module.js:474:10)  [DEBUG] :      at Module.load (module.js:356:32)  [DEBUG] :      at Function.Module._load (module.js:312:12)  [DEBUG] :      at Module.require (module.js:364:17)  [DEBUG] :      at require (module.js:380:17)  [DEBUG] :      at Object.<anonymous> (/usr/local/lib/node_modules/alloy/bin/alloy:3:1)  [DEBUG] :      at Module._compile (module.js:456:26)  [DEBUG] :      at Object.Module._extensions..js (module.js:474:10)  [DEBUG] :      at Module.load (module.js:356:32)  [DEBUG] :      at Function.Module._load (module.js:312:12)  [DEBUG] :      at Function.Module.runMain (module.js:497:10)  [DEBUG] :      at startup (node.js:119:16)  [DEBUG] :      at node.js:906:3  [ERROR] :  Alloy compiler failed  {code}"""
"ALOY-1219","Bug","Models",3,"ALLOY: prevent parsing of {{ }} in alloy views.","""Alloy is currently catching and interpreting {{ }} as an alloy binding when it should only catch { }.    This change is needed for https://github.com/dbankier/nano."""
"ALOY-1222","Bug","Testing",3,"Fix failing Travis test `[FAIL] alloy install plugin --> is supported`","""Travis builds are failing with {{\[FAIL\] alloy install plugin --> is supported}}    Failures are caused by recent changes for ALOY-1173 and ALOY-1207"""
"ALOY-1226","Bug","Samples & Templates",3,"To Do sample app - validate() fails to prevent invalid (empty) items from being added","""The model definition in the test/apps/models/todo app includes a validation check. If a model doesn't pass this check, it should not be added to the database. However, empty items are being added.     Per the [Backbone docs|http://backbonejs.org/#Model-validate], you override the validate function with your own code. If a model fails validation, you return any string and save() will be prevented. """
"ALOY-1228","Bug","Runtime|Tooling",3,"Selective compilation can fail with platform-specific controllers and throws Exception incorrectly","""Per email from David Bankier, the compilation-optimization technique implemented in [PR625|https://github.com/appcelerator/alloy/pull/625] will fail in certain cases. He suggests the following changes be made to fix these issues:    * https://github.com/xavierlacot/alloy/pull/1  * https://github.com/xavierlacot/alloy/pull/2     Investigate and implement, add tests"""
"ALOY-1231","Improvement","Samples & Templates",2,"Mapping sample: add readme, remove map key","""Add a readme file to the samples/mapping app that describes the steps that an Android developer would need to follow to run the app (obtain a key, which file to update, etc.) Include a reference to the Guides where the we describe how to obtain a key.     Also, update the JMK file to remove the old key (commented out currently). Replace it with something like {{// Paste your key here}}"""
"ALOY-1234","New Feature","Documentation",2,"Annotate Alloy API docs with GitHub URL","""To support TIDOC-2058, the following PR adds an {{@editurl}} field to the JSDuck docs for each public class.    https://github.com/appcelerator/alloy/pull/659    Ideally, this would be done by a doc build script (like we do for Titanium), but since there are just a few Alloy docs to annotate, this seemed a more direct approach."""
"ALOY-1238","Bug","Tooling",3,"Can't re-create index controller after renaming original one","""h5. Scenario  I want to refactor an existing Alloy app by moving/re-naming the current index.xml/js/tss controller triad to something else, and then create a new index controller.    h6. Steps:  1. Create a new Alloy app.  2. Rename views/index.xml, styles/index.tss, and controllers/index.js to views/main.xml, styles/main.tss, and controllers/main.js.  3. Create a new """"index"""" controller:      h6. Results:  Actual:    Expected: I can create a new index controller w/o error.    """
"ALOY-1237","New Feature","Runtime",8,"Alloy: Remove all event listeners added via view in $.destroy()","""Too make it easier for developers to clean up the event listeners they've added via the XML view ({{onClick}} and other attributes), could we make it so that if you add an event listener that way, that it would also be removed in the {{$.destroy()}} method?    The developer would still be responsible for calling that method and for removing listeners he added in the controller, but it would align nicely with the current behaviour of the method where it also cleans up a listener added via the view, which is for the {{<Collection>}} or {{<Model}}> tag.    For reference:  https://github.com/appcelerator/alloy/blob/master/test/apps/basics/markup_events/_generated/ios/alloy/controllers/index.js#L44-L49    Perhaps the {{__defers}} object could be used for this in some way?    We could even go as far as extending the Backbone {{$.listenTo()}} method that if its first argument is a proxy, then it would both pass it on to that proxies' {{addEventListener}} method and queue it for removal in {{$.destroy}} at the same time."""
"ALOY-1239","Improvement","Tooling",5,"Set Node 0.10 as minimum supported version","""Update the minimum supported version of Node to 0.10.x. Make sure to check for and update any version checks in the code as well as updating the package.json file."""
"ALOY-1249","Bug","Runtime",5,"iOS: Misleading error message when controller file not found","""When Alloy can't find a controller on iOS, it gives a message saying that a module (controllerName) for architecture (arm7/arm64) can't be found. very confusing, becuase it sounds like there's a native module problem.    {code:title=index.js}  Alloy.createController('foo');  {code}"""
"ALOY-1252","Bug","Tooling",3,"restrictionPath missing in parseAlloyComponent for controller without corresponding view","""As reported at https://github.com/dbankier/TiShadow/issues/388#issuecomment-73190579 Alloy optimizes all JS files when using the selective compile feature implemented in ALOY-1216.    Community PR to resolve this: https://github.com/appcelerator/alloy/pull/661    Needs verification and testing.    """
"ALOY-1257","Bug","XML",1,"Map DocumentViewer to Ti.UI.iOS instead of deprecated Ti.UI.iPad namespace","""The {{DocumentViewer}} tag is currently [mapped|https://github.com/appcelerator/alloy/blob/master/Alloy/common/constants.js#L195] to the {{Ti.UI.iPad}} namespace, while that has been deprecated since Ti SDK 3.0.0 in favour of {{Ti.UI.iOS}}.    * PR on master: https://github.com/appcelerator/alloy/pull/673/files"""
"ALOY-1262","Bug","Runtime",5,"a directory ending with "".js"" causes Alloy compiler error","""This bug is related to [ALOY-920], which introduced a fix for the specific case of {{should.js}}.    When building an Alloy project containg a library directory named with a {{.js}} suffix, the compiler fails:        The {{getJsFiles()}} Alloy compiler method filters which files have to be optimized, as in https://github.com/appcelerator/alloy/blob/master/Alloy/commands/compile/index.js#L1017  This method fails to exclude items which are directories ending with {{.js}}, and {{uglifyjs.parse()}} then throws an error.    A pull request has been submitted at https://github.com/appcelerator/alloy/pull/683"""
"ALOY-1278","Improvement","Models",3,"Pass model config to migration functions","""It will be nice if sql sync adapter will pass model config to migration functions. It will get access to model columns inside migration for example.        Community PR: https://github.com/appcelerator/alloy/pull/684"""
"ALOY-1265","Sub-task","Builtins",5,"Update builtin moment.js library to 2.10.6 (or latest)","""Moment.js has changed how it handles time zones/UTC. Took me forever to figure out why my calls to {{moment().utcOffset();}} didn't work."""
"ALOY-1273","Bug","Documentation",2,"Code documentation contains links to out-dated Titanium docs","""The (code) documentation in the Alloy repository contains links to the now out-dated Titanium documentation, where it should be updated to link to the Platform documentation:    https://github.com/appcelerator/alloy/search?utf8=%E2%9C%93&q=%22titanium%2Flatest%22"""
"ALOY-1276","Bug","Runtime",5,"Alloy's deepExtend is broken","""Since [this commit|https://github.com/appcelerator/alloy/commit/84c9470d9932a5ad762f8220db79802d91ec4c86], the {{deepExtend()}} method present in Alloy is broken, as deeply merged properties get overwritten three line below.    The method should not state:      but:        As a consequence, this method is purely useless."""
"ALOY-1280","New Feature","XML",5,"Support CommandBar in XML markup","""Windows Phone has a platform-specific feature called the CommandBar, similar to the Android Action Bar or iOS Toolbar.  The Titanium.UI.Windows.CommandBar object is assigned an array of buttons and separators to its items property for it to display.    For a classic Titanium example, see: https://appcelerator.github.io/appc-docs/latest/#!/api/Titanium.UI.Windows.CommandBar    Example of an Alloy view using the CommandBar  """
"ALOY-1281","Improvement","Samples & Templates",3,"RSS sample should be removed in favour of Studio version","""The RSS sample in the Alloy repository...  https://github.com/appcelerator/alloy/tree/master/samples/rss    .. should be removed to avoid confusion now Studio has an updated version:  https://github.com/appcelerator-developer-relations/Sample.RSS"""
"ALOY-1283","Bug","XML",5,"ActionView views with an ID cannot be found under $ because they are created after merge","""ALOY-1175 fixed this issue for IDs set on {{<MenuItem>}} but it is still an issue for views under {{<ActionView>}}. Because they are created after the controller merges {{$.__views}} with {{$}} you cannot access the views via {{$.<id>}}.    *index.xml*    {code:xml}  <Alloy>      <Window>          <Menu>              <MenuItem title=""""Open"""" showAsAction=""""Titanium.Android.SHOW_AS_ACTION_ALWAYS"""">                  <ActionView>                      <View id=""""myViewInActionView"""" backgroundColor=""""red"""">                       <Button onClick=""""changeColor"""">Change Color</Button>                      </View>                  </ActionView>              </MenuItem>          </Menu>                  </Window>  </Alloy>  {code}    *index.js*    {code:javascript}  $.index.open();     function changeColor() {    $.myViewInActionView.backgroundColor = 'green';  }  {code}"""
"ALOY-1287","Bug","Styling",5,"Alloy styles compilation does not produce the same results accross successive compilations","""In some cases, when the developer overloads in a stylesheets some styles defined in the {{app.tss}} files, the alloy compilation won't produce the same resulting javascript accross successive compilations.    Alloy's styler orders style rules to define their priority, but there's a bug with the {{app.tss}} global styles being cached and therefore not correctly being counted by the styler during a compilation phase when {{app.tss}} didn't change.    Steps to reproduce:     * create a new alloy app, replace its {{app}} folder with the one contained in the attached app.zip file   * compile once: {{alloy compile --config platform=ios}}. Check in {{Resources/iphone/alloy/controllers/sum.js}} that the style rules defined in {{app/styles/sum.tss}} are applied correctly   * compile again, the generated javascript in the {{Resources}} directory differ. In particular, the {{Resources/iphone/alloy/controllers/sum.js}} does only contain rules from the {{app.tss}} file.    A PR is being proposed to fix this problem."""
"ALOY-1288","Bug","Samples & Templates",3,"Windows: Label not visible when using default app.tss","""The [default app.tss|https://github.com/appcelerator/alloy/blob/master/Alloy/template/app.tss] sets the Window backgroundColor to white for all platforms. on Windows the default color of a label is white, making them invisible when using the default {{app.tss}}. Just like we do for Android, we should set the Label color to black.    Note: There might still be issues with other elements that default to white on Windows, like titles in ListViews."""
