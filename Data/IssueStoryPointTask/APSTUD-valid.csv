"issuekey","type","components","storypoint","title","description_text"
"APSTUD-4726","Improvement","Outline",5,"Improve error messages in Outline view when external content is invalid","h3. Steps to reproduce:    # Create a new HTML file  # Add the following content:\\    # Expand each of the nodes in the outline  ## ""Cannot recover from syntax error""  ## ""Unable to resolve file""    For both error messages, it writes them out to the log file as errors. They should instead be trace messages, and in both cases, they should contain the file trying to be read to make diagnosis easier."
"APSTUD-4725","Bug","Publishing",8,"HttpFileStore.toLocalFile() fails to cache remote file if parts of local cache directory are already present","# Create a new HttpFileStore pointing to http://www.google.com  # Call toLocalFile() on it  # Find the path it saved to on disk  # Re-call toLocalFile() again. It should fail given that the path it cached to already exists (in my case, the http folder was already there)"
"APSTUD-4724","Improvement","HTML|Validation",5,"Not to show validation warning on empty HTML script tag with src attribute","Currently for the following code in HTML,        each line will show a validation warning on trimming empty the empty script tag, but in these cases, the tag should not be considered empty since the src attribute is taking the place of inline code, and removing the lines would cause issues.  "
"APSTUD-4722","Story","JS|Parsing",13,"Create stand-alone project so JSParser can be run from the command-line outside of Eclipse","Our current implementation of our JS parsing infrastructure does not allow the parser to be run outside of Eclipse. We need to extract the minimal set of classes that will de-couple our implementation from Eclipse and allow the parser to be run from the command-line. This code and any scaffolding should live in a separate repository."
"APSTUD-4721","Bug","Analytics",5,"Error log about aptanaDB database not being found","We've had this error spitting out to our logs _forever_! Can we please get rid of it?  "
"APSTUD-4718","Improvement","File|Project Explorer",20,"Allow setting the permissions for both the upload and download of FTP files","File permissions are not preserved on file-download from ftp-remote-site.    * File permissions always switch to 600 and folder permissions to 755.  * No default permissions can be defined during ftp-download.    (The FTP settings under ""preferences"" > ""Aptana Studio"" > ""publishing"" > ""ftp"" only work for the upload process and publishing. See attached file. Same as ""advanced settings"" while syncing. There should also be download-permission-settings.)    In order to improve the process, suggest adopting a similar UI to Cyberduck (see attached image).    * Upload section  ** Preserve permissions  ** Choose specific settings for files and folders  * Download section  ** Preserve permissions  ** Choose specific settings for files and folders    "
"APSTUD-4738","Bug","Editor|PHP",8,"PHP constants defined in define() statements outside of a class, but included, cannot be CTRL-clicked to locate the source of the definition","I used to work with Zend Studio where it was possible to go to the definition for constants using hyper-linking ""ctrl+click"" (as for functions, vars, etc.) I switched to Aptana studio 3.0 and customized my way well except on this point. Does anyone knows if it's possible to manage PHP constants in Aptana the same way as with Zend Studio?  Originally from StackOverflow: http://stackoverflow.com/questions/8658594/move-to-the-definition-for-php-constants-in-aptana    Steps to reproduce:  1. Create two php files in the same PHP project:      2. Hold Ctrl and hovering over the TEST_CONST1 in b.php.  3. Click link.     Actual result: No link appears.  Expected Result: Clicking that link opens a.php on line 3."
"APSTUD-4737","Bug","Indexing|PHP|Project|Validation",8,"Building workspace hangs forever on file save","After updating to Aptana Studio 3, build: 3.1.1.201204131931, I immediately started experiencing the issue where ""Building workspace"" would hang forever upon each file save.  A particular file I was editing was a PHP file (.php) and/or a PHP template file (.tpl).  Unfortunately, before ""Building workspace"" operation is completed, I am not able to save the file.  Since the mentioned operation never completes, the files in the Editor will never get saved.  I've checked ""[x] Save automatically before build"" in Workspace preferences, and it lets me save the file first time, but consequent saves fail since the ""Building workspace"" operation occurs right after file save and is stuck indefinitely.    Attached is the screens shot demonstrating the issue."
"APSTUD-4734","Bug","Editor|Indexing",3,"Task markers should be recognized on word boundaries only","It looks like our current task detection mechanism looks for raw strings instead of looking for words. For example, if I have the following in a JS file:    {code:js}  // TODOC: document this  var xyz = 10;  {code}    We show a TODO task for that comment. I verified in JDT and they recognize whole words. We should do the same."
"APSTUD-4731","Bug","Editor",13,"Files outside of projects do not get validated by jsLint","Since the last update to 2.0.1.201204132053-13042012205605, js files that are opened - and are not part of a Titanium project - do not get validated by jsLint. If you open a js file that is in a project and make an error, the error appears straight away.  The same is not true for files outside projects, they don't get validated at all.    h3. To Test    # Create a new JS file on your desktop. Ensure that JSLint validation is on in preferences  # Add the following content: \\    # Drag the file from the desktop into the editor area of Studio to open it (or open it via the File menu or Local Filesystem node)  # In 3.0.9, you will be warned about the duplicate assignment of a. In 3.1.1, the validation doesn't happen."
"APSTUD-4742","Epic","JS|Validation",0,"Write unit tests to verify JSLint rules","Based on the findings for APSTUD-4690, we implement the rules in a new validator."
"APSTUD-4758","Improvement","Usability",8,"Improve header and add icon for JIRA ticket submission","As seen in attached image, when submitting a ticket, it's not clear what the user is actually being asked to do    # Get some sort of wizard image  # Submit a ticket to Appcelerator  # Add the text at the top: ""We encourage you to file issues or enhancements into Appcelerator's issue tracker. Please fill out as much information below as possible to allow us to better assist you.""  # Don't start validation until the user has actually typed something  # If it's a bug, they need to specify severity  # Once a bug has been filed, do we open the bug in a browser? How can they go amend their description?    ----  No. 5 is updated to allowing user to specify priority instead."
"APSTUD-4757","Improvement","CSS|Parsing",13,"Add support for specific not() syntax in CSS","From normalize.css (https://raw.github.com/necolas/normalize.css/master/normalize.css)    It appears there are at least two syntaxes we don't currently support, but should:        Both return ""unexpected token ':'"" (or '[')"
"APSTUD-4756","Bug","Validation",13,"Unable to reliably disable syntax validation","# Ensure Preferences > Studio > Validation > CSS > CSS Syntax Validation is on  # Open a new CSS file  # Paste in ""body {""  # It should show as a syntax error  # Go to preferences, and turn off syntax validation    Note that the error above persists. You can do the same thing inside JavaScript.    Note that I was able to turn off validation, restart Studio, edit the CSS file and save it, and the error went away...so somehow validation can be turned off."
"APSTUD-4752","Bug","Editor|Theme",5,"Intermittent ""squiggly"" artifacts from removed warnings/errors in syntax coloring","After the changes from APSTUD-4684, there are sometimes leftover single character ""squiggly"" artifacts from old errors/warnings. I was unable to reproduce under a debugger, and this only happens intermittently for me. It appears to possibly be a timing issue."
"APSTUD-4750","Technical task","Editor",5,"Perform multi-line find when enter/find is issued","When performing the search, convert new lines and spaces into an appropriate regular expression and perform the search"
"APSTUD-4749","Technical task","Editor",5,"Add multi-line support to find text boxes","Update the find toolbar UI to include multi-line text boxes. Update the text box to insert new line characters when CTRL+ENTER is entered"
"APSTUD-4748","Technical task","Editor",13,"Add Search scope action to find toolbar","Search action has a drop-down menu that specifies the scope of the search. If the scope is anything other than 'current file', then it will trigger a search. This provides a quick way of executing a search across multiple files.    The items in the drop-down are as follows:    Search current file - current file  Search Open Files - search opened editors  Search Enclosing Project - search across the project that contains the targeted file  Search Workspace - search the entire workspace    New icons is also needed for the scopes:  Current file (file icon)  Open files (multiple file icon)  Enclosing project (project icon)  Workspace (Globe icon)"
"APSTUD-4747","Technical task","Editor",13,"Add history support to the find bar","Add a dropdown menu action for both the find and replace multi-line text boxes. The items in the dropdown will be the last 5 used text values. Upon selecting a value, it is used to replace the contents in the corresponding text box"
"APSTUD-4746","Technical task","Editor",13,"Update find toolbar to reflect new layout and add resize support","The layout of the actions needs to be updated to reflect the spec: https://wiki.appcelerator.org/display/guides2/Multiline+Search+and+Replace    The height of the toolbar needs to be adjustable"
"APSTUD-4745","Improvement","Usability",8,"Improve behavior for validating JIRA login","When validating the user's credentials for the JIRA login, clicking Validate behaves a little odd: the Validate button stays blue, and then a couple seconds later we get a beach ball.    * Maybe we need to run the process outside the UI and then react when we get the result?  * Also, the error message when it fails is a little obtuse since it shows the exception name - we can probably handle the specific case of bad credentials with a custom message?  * Once we've validated the user's information, we should remove the username/password field"
"APSTUD-4763","Improvement","Validation",8,"Improve handling of ""Failed to parse"" for Validation","Found in a log file. It appears to happen when a file is edited outside Eclipse, ""refreshing workspace"" is turned off, and we attempt to build        Suggested approach:    # Catch the specific exception  # Call refresh of the resource  # Try again  # If it still fails, alert the user (similar to how search fails)  # Write out this message as an [WARNING] to the log"
"APSTUD-4762","Bug","Editor",5,"java.lang.IllegalArgumentException: Index out of bounds in LineBackgroundPainter.paint()","Found in a log file:    "
"APSTUD-4765","Bug","Ruby",13,"Ruby auto 'end' insertion no longer working?","The ruby live formatter/code-injection no longer seems to work in Aptana Studio 3.1.      In previous versions typing        and hitting return would auto inject:      This behavior no longer occurs after upgrading to 3.1 (same issue for if statements, etc).  "
"APSTUD-4774","Bug","Scripting",13,"Deadlock in creating new Ruble project","# Open Titanium Studio  # Create a new Ruby Project, choosing to use the Ruble template.  # On ""Finish"" Studio deadlocks.  # No files were created    On a subsequent run, I was not able to replicate the issue, so it must be one of timing.     "
"APSTUD-4780","Bug","Performance|Update",0,"After upgrading to version 3.1.1.201204131931 Aptana frequently crashes when shutting down","After the latest automatic upgrade, Aptana has frequently started crashing when closing the application. It usually happens when Aptana has been running for some time, and never happened when opening and closing it fast. I attached the dump that was automatically generated to be sent to Apple."
"APSTUD-4776","Bug","Usability",8,"JavaScript: Outline view does not descend into conditionals","Aptana Studio 3, build: 3.2.0.201204291023    The outline view doesn't display functions defined inside conditionals:    "
"APSTUD-4775","Bug","Editor",5,"Commenting lines with Ctrl+/ removes carriage return in line breaks","When commenting a series of lines with Ctrl+/ the editor uses Linux line breaks regardless of the style of line breaks chosen for the rest of the file or the default configuration.    Steps to reproduce:  1. Turn Whitespace characters on (Prefences > General > Editors > Text Editors > Whitespace)  2. Create a file that uses carrage returns in it's line breaks.  3. Type some text with a few line breaks  4. Comment them with the keyboard shortcut (ctrl/cmd + /)    Expected results: The lines should comment without changing the line returns  Actual results: The line terminators change to Linux style regardless of setting."
"APSTUD-4783","Bug","Theme",13,"Using Pydev Dark theme switching between different file types changes colors / colours","Selected ""Pydev Dark"" theme, have a *py file open, file looks fine.    Open a *.txt file, which looks ok then switch to the tab for the python file and the display is messed up. See attached screen shot, note the background is grey/gray where there is no text.    Problem does NOT occur with Aptana Studio theme (I think this is the default?) - NOTE have to quit out an restart to ""fix"" display, see APSTUD-4782"
"APSTUD-4782","Bug","Theme",5,"Changing Theme in Aptana Studio 3 makes selection color / colour opaque - code/text can not be read / seen","Changing Theme in Aptana Studio 3 via round color/colour wheel with drop down button makes selection color / colour opaque, i.e. looses transparency. Selected code/text can not be read / seen.    Quitting out of Aptana Studio 3 and then re-loading fixed problem.    See attachment from head of a python script after changing theme"
"APSTUD-4801","Improvement","Usability",13,"Add portal controller to run a launch configuration for a particular project","Related to APSTUD-4800, once we have the name of a project, we need to ""run"" it.    In this case, we'll have a project name and an action (""run"") in this case. The project may not yet have a launch configuration.    In the most basic example, we'd run a new Mobile Web project in the browser. However, we need to do some specification on which actual action we are activating. Perhaps we can do it based on the IDs of the items in the menu."
"APSTUD-4800","Improvement","Usability",8,"Improve current dashboard project controller to return name of created project","When a user creates a project from the dashboard, it pops up the New Project wizard. At the end of that wizard, we need to return the name of the created project back top the dashboard.    We need to provide a callback mechanism to the dashboard that returns that project name."
"APSTUD-4799","Improvement","Usability",5,"Add portal controller to switch perspective","Regarding TISTUD-1634, we want the user to be able to switch Studio to a specific perspective. Add a controller that takes in a perspective ID and performs the switch.    We may be able to use the existing ""command"" controller for this."
"APSTUD-4798","Improvement","Usability",5,"Add portal controller to switch themes","Regarding TISTUD-1634, we want the user to be able to switch Studio to a specific theme. Add a controller that takes in a theme name and performs the switch.    We may be able to use the existing ""command"" controller for this."
"APSTUD-4797","Bug","Content Assist|PHP",3,"PHP Autocomplete throws an NPE and shows error dialog","Trying to resolve APSTUD-190, I copied the original (incorrect) block from the description into a php file and tried to invoke content assist after ""parent::"". I get an error dialog complaining of an NPE. Here's the stack trace from the log:  "
"APSTUD-4795","Story","Documentation",13,"Document project build path architecture","* We may want to discuss how items in project build paths should be handled  * Ideally, each library is indexed only once regardless of how many projects reference it  * Metadata should be handled with the same system  ** This may allow metadata files to auto-update on changes instead of relying on the JS index version number we maintain manually right now  ** Then again, changes to the structure of the index content will still require a version number change"
"APSTUD-4794","Story","Documentation",13,"Document current and proposed approaches in the JavaScript Outline View","We have talked about having different outlines for JS. It may be that the current outline and the JS node in the Index View will cover this topic already, but it's probably worth capturing thoughts here to see how those fit with what we have already."
"APSTUD-4793","Story","Documentation",13,"Document how we do JavaScript parsing","* Discuss the recovery strategy interface used by JSParser. Note that these types of recoveries have been exposed in such a way as to make them available to all languages that use Beaver  * Show examples of how discovery strategies are defined  ** Discuss rules based on the last good token  ** Discuss rules based on the current failed token  * Suggest how the parser can stand alone and be integrated into the IDE. The current stand alone version of JSParser was a quick-and-dirty extraction from Eclipse purely to allow Bryan to start working with it to see if it will work for his needs."
"APSTUD-4792","Story","Documentation",13,"Document the content assist architecture","* Briefly discuss the notion of ""location type"" and how that is calculated in HTML, CSS, and JS  * Briefly discuss the notion of ""replacement range"" and how that is calculated in HTML, CSS, and JS  * Briefly discuss how JS and CSS CA are hacked into HTML"
"APSTUD-4791","Story","Documentation",20,"Document the JavaScript inferencing architecture","* Discuss the classes involved and their roles  * Discuss the hacks put in place to get around issues exposed by jquery-style functions  * Discuss possibilities for reducing indexing time (particularly not doing any reads during writes)  * Discuss why the ""Function<>"" wrapper is bad and how it might be removed. This relates to the ""hacks"" mentioned above  * Discuss the differences in handling of sdocml files during metadata loading versus during indexing. Ideally, these should be treated in the same way."
"APSTUD-4790","Story","Documentation",13,"Document the JSCA processing architecture","We had tried to come up with a system for JSCA that was comparable to how our XML metadata works: SAX-like parsing and event driven handlers. However, the result is much too complicated and harder to maintain than it should be.    It's worth documenting how the handler works at a minimum. Additionally, it might be good to discuss an alternate approach, that, although tied directly to the JSCA structure, is easier to maintain and update."
"APSTUD-4789","Story","Documentation",13,"Document additional facets of the scripting architecture","We may have documentation on this already, but the most complicated area in the current implementation revolves around visibility events. These events are driven by changes in visibility of commands and such based on bundle precedence rules.    * We may want to consider removing all notions of augmentation, which would simplify this area a bit  * Discuss how ""inputs"" and ""outputs"" should be pulled out into extensions to  ** Improve code  ** Allow other input/output types to be contributed  * Discuss a possible way to fix bundle loading issues we've seen on Windows.  ** We need to be able to lock the loading of a bundle until its bundle.rb has been processed. This sounds easy, but I think it will have a big impact on the code, unfortunately"
"APSTUD-4788","Story","Documentation",8,"Document Beaver parser architecture","* Discuss the general structure of the Beaver files we have.  * Briefly describe the process of generating a parser from a Beaver grammar. This is how you run it from the command-line or within Eclipse to generate the associated files.  "
"APSTUD-4787","Story","Documentation",8,"Document Jflex scanner architecture","* Discuss the general structure of the jflex files we have. I think someone familiar with regular expressions could pick up jflex really quickly and this could be a good head start for them  * Briefly describe the process of generating a scanner from a jflex file. This is how you run it from the command-line or within Eclipse to generate the associated Java file.  * Discuss how jflex scanners are modified to work with Beaver"
"APSTUD-4786","Story","Documentation",13,"Publish Studio Javadocs as part of nightly builds","We are now generating Javadocs for the Studio and Titanium core plugins as part of our continuous 'release' builds. We should publish the latest versions out for nightlies.    The docs live in the build-artifacts/docs folders of the studio3-core-release and titanium-core-release builds."
"APSTUD-4802","Bug","Editor|File",0,"Exception arises when trying to comment a selected text block, while editing a javascript file, on random occasions.","Aptana studio failed to comment a selected block of text, while editing a javascript source file.    The error produced a stack trace on the console:    "
"APSTUD-4810","Bug","Scripting",40,"Scripting keybindings don't work in Eclipse 4.2","In doing testing locally, the scripting bindings don't appear to work at all under Eclipse 4.2. I did some quick debugging, and it just seems like we don't get called back on our listener."
"APSTUD-4821","Bug","Project Explorer",8,"Pasting a file into a project does not ask for confirmation when there is an existing file with the same name","# Have two projects with a file name 'a.html' in each.  # Copy the file on one project and paste it into the other.    Expected: an overwrite confirmation.    Result: the file is overwritten without any warning."
"APSTUD-4819","Bug","Editor|PHP",13,"High CPU while working on a HTML + PHP file","I've just shared some tweets with @bingomar (Ingo Muschenetz) and he told me to attach this file (.html with PHP code inside) because when opening in Aptana Studio 3.1.2 with Mac OS X I get a very high CPU usage and sometimes it makes my system unresponsive.    Confirmed also on Win7 64 bits."
"APSTUD-4815","Technical task","Editor",13,"Add Search in Selection option","The find bar does not currently support a search in selection option. Comparing to other IDEs, this is a standard feature."
"APSTUD-4823","Bug","PHP",8,"The PHP documentation hover is not displaying docs that were defined in other files","PHPDocs are no longer working from external files.   {quote}  /**  *Documentation for test  */  function test($a,$b) { }  {quote}  If you type ""test"" on a new line of the same file, you get the auto-completion list with the documentation box showing ""Documentation for test"", but if you type ""test"" *on a different file* of the same project, it will say: ""No available documentation""  "
"APSTUD-4826","Bug","Source Control",8,"GIT: Existing branches are not always shown","If there are too many branches, the Aptana GIT Implementation will not show them. Only the current branch is shown in the list, but all others are not.    See attached screenshot."
"APSTUD-4830","Bug","Editor",8,"Font size changes the when you open up a new file","When I open a file, the font size looks 1pt or 2pt smaller than the selected font size.  If I then force a refresh, like selecting ""block selection mode"", everything resets to normal.    Both ""General -> Appereance -> Colors and Fotns"" and ""Aptana Studio -> Themes"" seems ok, showing the correct font size.  Is there another config to look at and try find a font-size mismatch?"
"APSTUD-4836","Bug","Indexing|JS",8,"Unable to construct JS instances from built-in types using the ""new"" operator","As seen in https://wiki.appcelerator.org/display/tools/JS+Type+Inferencing+-+Primer the inferencing for instantiating predefined classes seems to be broken when using new.    Here are two examples from that page that show as broken:  "
"APSTUD-4835","Bug","Installer",5,"Normalize copyright dates in GPL license","See attached image. Note that one GPL license has a 2011 copyright date, and another has a 2012 copyright date. Move all dates to 2012"
"APSTUD-4834","Improvement","Editor",8,"Auto-normalize newlines in Find Bar","Related to APSTUD-4750, I tried a multiline search that matched, then I changed the file's line endings from between the settings and also pasted mismatched versions (between editor and find bar) in the find box and was able to get a case where they did not match (I think I searched with the version containing \r line endings and the file/editor had \n endings).    Looking at Sublime Text, even if I changed the carriage returns in the file, the text still matched. This should be the default behavior. If a user wishes to override that setting, they can do so by using explicit regular expressions (neither TextMate nor Sublime Text offer a setting for that, so it must not be very important)"
"APSTUD-4832","Bug","Formatting",8,"Parentheses in a PHP comment may cause code-formatting failure","Once applied to the file mysql.php [attached below], formatter doesn't do anything.    I have also attached my PHP formatter profile file."
"APSTUD-4838","Improvement","Usability",3,"Double quotes in JIRA ticket summary field breaks ticket submission dialog","h3. Steps to Reproduce:    # Choose Help > Titanium Studio > Submit Ticket...  # Add a summary like 'This is a ""ticket""' (no single quotes)    h3. Actual:  The ticket will fail to submit with an error    h3. Expected:  The ticket submits  "
"APSTUD-4850","Story","Build",3,"Remove deprecated references to ScriptingActivator.logError()","We replaced the individual logError calls in plugins with calls to IdeLog.logError(). Some of the deprecated original calls still remain in the ScriptingActivator plugin."
"APSTUD-4845","Technical task","JS|Validation",13,"Investigate Lexing/Parsing warnings from JSLint","The following are Lexing/Parsing Warnings generated by JSLint.    ||Id||Description||Details||JSLint Option||JSHint Option||  |{color:green}expected_a_b{color} | Expected '\{a\}' and instead saw '\{b\}'. | ? see this as relating to braces around for/while loops (line 3003, approx), and eqeq (line 2744) and semicolons (2391) | eqeq/es5 | curly/eqeqeq/asi |  |expected_a_b_from_c_d | Expected '\{a\}' to match '\{b\}' from line \{c\} and instead saw '\{d\}'. | ? |  |identifier_function | Expected an identifier in an assignment and instead saw a function invocation. | ? |  |missing_property | Missing property name. | Looks for missing property when defining ES5 getters. |  |{color:green}missing_a{color} | Missing '\{a\}'. | ? | newcap | newcap |  |missing_a_after_b | Missing '\{a\}' after '\{b\}'. | ? |  |statement_block | Expected to see a statement and instead saw a block. | Looks for braces in statement context (i.e. to start a line). | | |  |unclosed | Unclosed string. | Checks for unclosed strings |  |unclosed_comment | Unclosed comment. | Checks for unclosed comments. |  |unclosed_regexp | Unclosed regular expression. | checks for unclosed regexps. |  |unexpected_comment | Unexpected comment. | Looks for comments in JSLint directive sections, html. |    * Check to see if each of these items are covered by our current parser  * If not, write a unit test to cover the case(s) encapsulated by this rule."
"APSTUD-4842","Technical task","JS|Validation",40,"Investigate JS Warnings from JSLint","||Id||Description||Details||JSLint Option||JSHint Option||  |a_label|'\{a\}' is a statement label.| Looks for references to label identifiers in code (not as break/continue jumps). | | |  |a_not_allowed|'\{a\}' is not allowed.| {color:red}Appears to be unused.{color} | | |  |a_not_defined | '\{a\}' is not defined. | {color:red}Appears to be unused.{color} | | |  |{color:green}a_scope{color} | '\{a\}' used out of scope. | {color:red}Unable to trigger, even with example at http://stackoverflow.com/questions/2485171/jslint-out-of-scope-error{color} | | funscope |  |{color:green}already_defined{color} | '\{a\}' is already defined. | Looks for variables defined multiple times (not in global scope). | | shadow |  |and | The '&&' subexpression should be wrapped in parens. | Looks for && inside \|\| expression. Warning. |  |assign_exception | Do not assign to the exception parameter. | Looks for assignment to errors in catch blocks. Warning. |  |{color:green}assignment_function_expression{color} | Expected an assignment or function call and instead saw an expression. | Looks for statements without any assignment or function call - which indicates unused code. (say 1+2;) | | expr |  |{color:green}avoid_a{color} | Avoid '\{a\}'. | Looks for calls to 'arguments.callee' and 'arguments.caller'. Warning. | | noarg |  |bad_assignment | Bad assignment. | Checks for assignments to non-identifiers, or to arguments array/object. Warning. |  |bad_constructor | Bad constructor. | Looks for construction where an expression is used in place of identifier (like a ternary to choose the function) | | |  |bad_in_a | Bad for in variable '\{a\}'. | Looks for non-local vars in for in loops. | | |  |bad_invocation | Bad invocation. | Looks for '()' calls with a non-identifer left-hand side (and not '.', '[', '(', '&&', '\|\|', or '?') like ""/regexp/(7);'. See https://github.com/douglascrockford/JSLint/blob/master/jslint.js#L3599 | | |  |bad_new | Do not use 'new' for side effects. | Looks for new Foo() without assignment. | | |  |bad_number | Bad number '\{a\}'. | Looks for numbers outside the allowable range of -1.7976931348623157e+308 to 1.7976931348623157e+308 (Number.MAX_VALUE). Warning. |  |{color:green}bad_operand{color} | Bad operand. | Looks for ++ and -- operands with non-identifier first tokens (i.e. '!foo++') | plusplus | plusplus |  |{color:green}bad_wrap{color} | Do not wrap function literals in parens unless they are to be immediately invoked. | Checks for functions wrapped in parens that are not immediately invoked (followed by paren pair). | | immed |  |combine_var | Combine this with the previous 'var' statement. | Looks for variable declarations on separate lines/statements that can be combined. | | vars |  |{color:green}conditional_assignment{color} | Expected a conditional expression and instead saw an assignment. | Looks for assignments inside if/switch/while/do-while/for(second statement)/left-side of ternary/either side of \|\| and && | | boss |  |confusing_a | Confusing use of '\{a\}'. | Looks for use of '+++', '---' and specific cases of '!' negation. | | |  |confusing_regexp | Confusing regular expression. | Looks for '/' or '*' at end of regexp. (i.e. '/regexp//') | | |  |{color:green}constructor_name_a{color} | A constructor name '\{a\}' should start with an uppercase letter. | Looks for calls to 'new something()' where 'something' is just a lowercase identifier. Warning. | newcap | newcap |  |control_a | Unexpected control character '\{a\}'. | checks for control characters in strings (checks if character is less than ' ') |  |{color:green}dangling_a{color} | Unexpected dangling '_' in '\{a\}'. | if 'nomen' option is false (default is true) and identifier starts or ends with '_' character | | proto |  |dangerous_comment | Dangerous comment. | Looks for comments with content matching /@cc\|<\/?\|script\|\]\s*\]\|<\s*!\|&lt/i | safe | |  |deleted | Only properties should be deleted. | Looks for delete keyword before identifiers to ensure it's a property using '.' or '[' access. Warning. |  |duplicate_a | Duplicate '\{a\}'. | Looks for duplicate case, duplicate ES5 getter/setter, duplicate JSON property string. | | |  |{color:green}empty_block{color} | Empty block. | Looks for blocks with no code (for/if/else/catch/function/etc) | | noempty |  |empty_case | Empty case. | Looks for empty case blocks in switch statements. Warning. | | |  |empty_class | Empty class. | Looks for an empty '[]' inside a regexp. Warning. | | |  |{color:green}es5{color} | This is an ES5 feature. | Looks for ES5 getters, or line continuations inside strings (\ before EOL in middle of string). | es5 | es5  |{color:green}evil{color} | eval is evil. | Looks for calls to 'eval' or 'execScript' (globally, on object, on object using [] notation) if 'evil' option is false. Warning. | evil | evil |  |{color:green}expected_a{color} | Expected '\{a\}'. | If in JSON mode and string doesn't use double quotes (expects '""'). ? Also relates to unexpected spaces | white/es5 | trailing |  |expected_identifier_a | Expected an identifier and instead saw '\{a\}'. | Looks for missing identifiers (say in var decls)  | | |  |{color:green}expected_identifier_a_reserved{color} | Expected an identifier and instead saw '\{a\}' (a reserved word). | Looks for use of a reserved word in place of an identifier (say in var names or function names) | es5 | esnext |  |expected_number_a | Expected a number and instead saw '\{a\}'. | Looks for digits 0-9 inside \{\} counts in regexps. | | |  |expected_operator_a | Expected an operator and instead saw '\{a\}'. | {color:red}Unable to reproduce.{color} | | |  |{color:green}for_if{color} | The body of a for in should be wrapped in an if statement to filter unwanted properties from the prototype. | Looks for for (x in foo) with an if statement in the block. Basically looking for checking properties in objects. | forin | forin |  |function_block | Function statements should not be placed in blocks . Use a function expression or move the statement to the top of the outer function. | Looks for functions declared in blocks (for/while/do/else/if/etc). | | |  |{color:green}function_eval{color} | The Function constructor is eval. | Looks for calls to Function() constructor if 'evil' option is false. Warning. | evil | evil |  |{color:green}function_loop{color} | Don't make functions within a loop. | Looks for functions or get/setters defined inside loops. (function_block is checked first, so to trigger you need to assign function to something so we get ""prefix"" function rule rather than ""statement"" function rule). | | loopfunc |  |function_statement | Function statements are not invocable . Wrap the whole function invocation in parens. | Looks for parens after function declaration. (self-invoking, but no assignment) | | |  |function_strict | Use the function form of 'use strict'. | Looks of ruse of ""use strict""; in top-level/global scope, or as part of multiple statements on same line (not the first statement in that list.) | | |  |html_confusion_a | HTML confusion in regular expression '<\{a\}'. |Looks for '</' or '<!' in regexps when JS is inside a script tag. | | |  |{color:green}implied_evil{color} | Implied eval is evil. Pass a function instead of a string. | Looks for calls to 'setTimeout' or 'setInterval' with string as first arg. Warning. | evil | evil |  |infix_in | Unexpected 'in'. Compare with undefined, or use the hasOwnProperty method instead. | Looks for use of 'x in y' outside of forin loops. (i.e. ""if (x in y) {}"") | | |  |{color:green}insecure_a{color} | Insecure '\{a\}'. | Looks for use of '.' or '[^' in regexps. | regexp | regexp |  |isNaN | Use the isNaN function to compare with NaN. | Checks left and right hand side of comparators ('==','===','!=','!==','<','>','<=','>=') for 'NaN'. Warning. |  |label_a_b | Label '\{a\}' on '\{b\}' statement. | {color:red}Unused.{color} | | |  |leading_decimal_a | A leading decimal point can be confused with a dot: '.\{a\}'. | Looks for numbers with leading '.'. Warning. |  |missing_use_strict | Missing 'use strict' statement. | Looks for ""use strict""; at top of function/try bodies. | | sloppy |  |move_invocation | Move the invocation into the parens that contain the function. | Looks for self-invoking function where invocation parens are outside the set of parents wrapping the function declaration. | | |  |move_var | Move 'var' declarations to the top of the function. | Looks for var declarations inside 'for' first segment. | | |  |name_function | Missing name in function statement. | Looks for 'function ()' (function with no name). Error. |  |nested_comment | Nested comment. | Looks for nested '/*' inside multiline comments. | | |  |not_a_constructor | Do not use \{a\} as a constructor. | Don't call constructor for 'Number', 'String', 'Boolean', 'Math', 'JSON' | | |  |not_a_defined | '\{a\}' has not been fully defined yet. | {color:red}Appears to be unused.{color} | | |  |not_a_function | '\{a\}' is not a function. | Looks for calls to Math/JSON as a function. | | |  |not_a_label | '\{a\}' is not a label. | Looks for break/continue jumps to labels that don't exist. | | |  |{color:green}not_a_scope{color} | '\{a\}' is out of scope. | {color:red}Unable to reproduce.{color} | | funscope |  |not_greater | '\{a\}' should not be greater than '\{b\}'. | Looks for use of \{\} counting in regexps with first number greater than second. |  |octal_a        | Don't use octal: '\{a\}'. Use '\u....' instead. | Looks for escaped 0-6 digit in string (i.e. \0). | | |  |parameter_a_get_b | Unexpected parameter '\{a\}' in get \{b\} function. | Looks for ES5 getter with parameters (should have none). | | |  |parameter_arguments_a  | Do not mutate parameter '\{a\}' when using 'arguments'. | Looks for assignment to any function's params when body refers to arguments array. | | |  |parameter_set_a | Expected parameter (value) in set \{a\} function. | Looks for ES5 setter function, ensures it has one parameter with name 'value'. |  |radix | Missing radix parameter. | Calls to parseInt with one arg. Warning. |  |read_only | Read only. | Looks for assignment to predefined objects like Array or Object. | | |  |redefinition_a | Redefinition of '\{a\}'. | {color:red}Appears to be unused{color} | | |  |{color:green}reserved_a{color} | Reserved name '\{a\}'. | checks if an identifier token is '\_\_iterator\_\_' or '\_\_proto\_\_'. Error. | | iterator/proto |  |slash_equal | A regular expression literal can be confused with '/='. | Looks for '/='. | | |  |{color:green}strange_loop{color} | Strange loop. | Checks do, for, while loops for break/return/continue/throw (at top-level of block, not inside condition). Warning. | | curly |  |{color:green}strict{color} | Strict violation. | Looks for access to this inside function after ""use strict""; or access to arguments in global scope after ""use strict"";. | strict | strict |  |{color:green}subscript{color} | ['\{a\}'] is better written in dot notation. | Checks for [''] notation property access when 'sub' option is false. String must be an identifier and not reserved. Warning. | | sub |  |sync_a | Unexpected sync method: '\{a\}'. | Looks for method calls containing 'Sync' in their name if 'stupid' option is false. Warning. | stupid | |  |trailing_decimal_a | A trailing decimal point can be confused with a dot: '.\{a\}'. | Checks for numbers ending in '.' character. Warning. |  |{color:green}unescaped_a{color} | Unescaped '\{a\}'. | Looks for unescaped '/', '^', [', ']', ')', '(', '+', '-', '*' in regexps | | regexp |  |{color:green}unexpected_a{color} | Unexpected '\{a\}'. | if a hex character is . Also, looks for use of ++ and -- if 'plusplus' option is false. {color:red}Is this definition complete? Seems to relate to a number of things{color} | bitwise/plusplus/debug | bitwise/plusplus/debug |  |unexpected_property_a | Unexpected /\*property\*/ '\{a\}'. | Looks for assignment/use of a property (in code) that is declared in special properties directive in comments. | | |  |unnecessary_initialize | It is not necessary to initialize '\{a\}' to 'undefined'. | Looks for 'var foo = undefined;' statements. | | |  |unnecessary_use | Unnecessary 'use strict'. | Looks for multiple ""use strict""; in scope. | | |  |unreachable_a_b | Unreachable '\{a\}' after '\{b\}'. | Looks for unreachable statements (after break/continue/return) | | |  |unsafe | Unsafe character. | Looks for any control character in the source with a match against:  |  |{color:green}url{color} | JavaScript URL. | Checks string or range tokens, label names, combined 'primitive' strings from '+' concat against regexp:  | | scripturl |  |use_array | Use the array literal notation []. | Checks for 'new Array();', 'new Array', and 'string.split(1)'. Warning. |  |{color:green}use_braces{color} | Spaces are hard to count. Use \{\{a\}\}. | Checks regexps for continuous spaces and asks user to replace with explicit count of spaces using \{2\} notation. Warning. |  | curly |  |use_charAt | Use the charAt method. | {color:red}Appears to be unused/unchecked{color} |  |use_object | Use the object literal notation \{\}. | Checks for 'new Object()' or 'var foo = Object()'. Warning. |  |use_or | Use the \|\| operator. | If a ternary's first and second objects (before and after '?') are 'similar'\*. Warning. |  |use_param | Use a named parameter. | Checks for access to 'arguments' array with a number. Warning. |  |{color:green}used_before_a{color} | '\{a\}' was used before it was defined. | If 'undef' option is false and if the variable is not in scope, and is not predefined, and if we are not in the global scope, then we have an undefined variable error. Or if a function is called inside another function and has not yet been defined. Warning. | undef | latedef/undef |  |var_a_not | Variable \{a\} was not declared correctly. | Checks for broken var assignment (here 'foo') of form . Error. |  |weird_assignment | Weird assignment. | Checks if left and right of '=' assigment are 'similar\*. Warning |  |weird_condition | Weird condition. | Checks if left and right of '\|\|' or '&&' are 'similar\*. Also checks if condition keyword is followed by a non-infix '-'. Lastly checks if condition keyword is followed by '\{' or '(.<number>'. Warning. |  |{color:green}weird_new{color} | Weird construction. Delete 'new'. | Checks for 'new function'? Warning. | | supernew |  |weird_program | Weird program. | Checks if we've hit a 'disrupting' statement (return/break/continue/throw) at the top-level? Warning. |  |weird_relation | Weird relation. | Checks if left and right of comparators are 'similar'\*, or both are either numbers or strings. Checks '==', '===', '===','!=', '!==', '!==', '<', '>', '<=', '>='. Warning.  |  |weird_ternary | Weird ternary. | If the two values we're choosing between are 'similar'\*. Warning. |  |{color:green}wrap_immediate{color} | Wrap an immediate function invocation in parentheses to assist the reader in understanding that the expression is the result of a function, and not the function itself. | Checks if function  is declared and then immediately invoked for it's return value. See http://stackoverflow.com/questions/939386/immediate-function-invocation-syntax. Warning. | | immed |  |wrap_regexp | Wrap the /regexp/ literal in parens to disambiguate the slash operator. | Checks for regexp following a 'return' keyword. Warning |  |write_is_wrong | document.write can be a form of eval. | If 'evil' option is false and there's a call to 'document.write' or 'document.writeln'. Warning. |"
"APSTUD-4839","Bug","Usability",8,"When submitting a bug via Studio, using invalid credentials results in a successful login message","Steps:  1. Help->Titanium Studio->Submit a ticket...  2. In the login, input an email address for the login  3. Input some password  4. Click ""Validate""    Expected:  Error message stating the login failed    Actual:  Message stating the login was successful"
"APSTUD-4853","Bug","Usability",8,"Inputting CTRL+ENTER/CMD+ENTER in the FindBar inputs a \n in the Editor","When the find bar has focus, and the user inputs CTRL+ENTER/CMD+ENTER, a newline character (\n) is inputted in the editor. When the findbar is in focus, the shortcuts contributed via the rubles should be disabled.    This requires the Ruble context to be disabled when the findbar is in focus"
"APSTUD-4860","Bug","Project Explorer",5,"menu items disappear from Team menu in Project Explorer after adding a new Git repository in ""Remotes""","Steps to reproduce:    1) In Project Explorer, select a project with an existing Git repository configured under ""remotes"".      2) Team -> Remotes -> Add...    3) Save/confirm    4) Exit the menu, then open the Team menu again in Project Explorer - all menu items are now invisible (see attached screenshot).  Restarting Studio or rebooting the PC doesn't help.    Other projects' Team menus are not affected, only the one that just had another repository added."
"APSTUD-4867","Improvement","Colorization|Editor",8,"Add editor preference to configure column cutoff for code coloring","h3. Steps to Reproduce  Syntax colors seem to break after reaching a certain column in PHP code.    h3. Actual Result  Code appears in white as a regular text.    h3. Expected Result  "
"APSTUD-4864","Bug","JS",13,"JS Type Inferencing fails to check local scope for variable type before checking globals","JS Type Inferencing will infer ""self"" here to be of type ""Window"" because we defined a Window.self global property in our metadata. When the type inferencing looks up the type of a property (self), it looks in the globals in the index, and if none are found then tries to infer the symbol. The logic likely should be reversed. In this case the self variable is defined in the local scope and we need to infer it's type there, rather than first consulting the Window.self property in the index.    "
"APSTUD-4861","Bug","Editor|PHP|Usability",20,"Slow text entry with large PHP files","When typing code into a text window, and using PHP syntax highlighting, text entry is around 1 character every 500 milliseconds. Issue started 2 nights ago (on current nightly builds)    Is there a way to roll back to a few days before ?"
"APSTUD-4875","Bug","HTML",5,"HTML validator should not flag no-value boolean attributes in HTML 4","Updated Aptana in STS this morning and now have a slew of warnings. They don't show up in the Problems area, however.    This one is perplexing. Until today, the proposed value of the disabled property was ""disabled"". Now, ""disabled"" produces an invalid value warning and the proposed values are ""true"" and ""false"".    I'm not that up on the standard, but I haven't seen, anywhere, that HTML5 properties can be ""turned off"" by specifying a value of ""false"". This appears, to me at least, to be a serious error."
"APSTUD-4874","Improvement","HTML",13,"Add ability to toggle HTML Tidy rules on and off","I appreciate your wanting to enforce the standard, but... I deliberately use duplicate id attributes because I also use jQuery to create small search contexts. Creating unique id attributes is both cumbersome and makes searching by id more complex. Ideally, I would like to be able to toggle this warning off."
"APSTUD-4873","Bug","HTML|Validation",5,"""button proprietary attribute onclick"" is invalid warning","<button> onclick is called proprietary."
"APSTUD-4883","Story","JS|Validation",13,"Need ability to specify JSLint settings on a global level","h3. Steps to Reproduce  We just upgraded to Studio 3.1.3, and now we get a ton of JSLint errors in our code. (Seems to be because of changes to default settings?)    We could put the settings into jslint comments to make it work how we want it to, but that would require adding the settings to the 300+ JavaScript files that we have on our site. That is unacceptable.    We need a place to be able to specify JSLint's settings on a global level. We use JSLint on ""reconcile"" mode, and seeing all of the errors (for things like supposedly ""messy"" whitespace, using multiple 'var' statements, etc) makes the tool downright useless for the actual errors that we need it to catch.    h3. Actual Result  (See above)    h3. Suggested solution    Remove the filter box from the validator main page and have the pencil icon open up a new window (similar to how formatting works). See screenshots. For JSLint (and all validators), we would keep a filter text box, as well as have another text box where a user can specify whatever JSLint commands they'd like to issue    I'm assuming this would be in the form of a string of options that would then be injected into the comments of a file before parsing."
"APSTUD-4880","Bug","Editor|Formatting",5,"Toggle comment shortcut messes up html formatting","When placing the mouse cursor on the line you want to comment and pressing the shortcut to comment (ctrl + slash), the comment will remove any indents on that line.  The same thing happens when you use the shortcut to uncomment. This only happens if you place the cursor anywhere on that line without highlighting the specific text.    In the screenshot, the <body> tag loses its indent and unnecessary space is added inside the comment. The comment should begin where the <body> tag is inside the comment to be aligned and organized.      It's not a huge deal, but i thought it would be worth mentioning for a future fix.    Thanks.  "
"APSTUD-4887","Bug","HTML|Validation",3,"link tag's rel attribute value marked as warning","The following tags are marked with warnings for the ""rel"" attribute's ""invalid value"". We should add ""*"" as a value for that attribute (and rev). See http://www.w3.org/TR/html401/struct/links.html#edef-LINK  "
"APSTUD-4895","Bug","Editor",5,"Highlighted text opaque, color schemes broken in PyDev","  My notebook computer, also running Aptana 3, now has the same issue as my desktop.  I have now verified this issue on two different computers, both Windows 7 x64.      -----    I followed all of instructions in email, attached my theme, reset defaults on annotations and set defaults on theme and as you can see from the attached stillbuggy.png the issue remains.  In order to fix this I need to go to preferences > aptana studio > themes and press ""reset defaults"" *without changing anything*    Every time I start I need to go do that reset defaults.  I don't think it's the theme: something buggy happens when Aptana initializes that changes something in my settings.  Having to go through settings to undo it is lame, and it has to be a change that happened with the latest upgrade.  Please get someone to fix it... :)    -----    After latest upgrade, highlighted text color (PyDev editor) is opaque and changing theme colors does not work reliably.  All themes show behavior like the attached screenshot: the highlighted text foreground and background are the same color.  Changing selected foreground colors does not work as expected: selecting a dark-colored selection background results in a light-colored background.    Selecting the theme override for pydevOccurrenceIndication seems to fix the issue for the current session, but when I shut down Aptana and restart the highlight is broken again, even though the little 'B' icon next to pydevOccurrenceIndication is still selected.  I need to click it off and back on again to fix the highlight, which again only works until I restart.    I've been using Aptana without issues for at least 6 months prior to this issue, and have not touched color settings in months.  The latest update seems to have broken theme handling.    MOTE UPDATES: See screen2.png attached.  If you look closely, I selected a very dark gray(almost back) color for the line highlight and Aptana is using a bright gray.  Any color I choose for the line highlight is ignored, and Aptana chooses a much brighter color.  Aptana is just ignoring my setting for selected text altogether.      MORE UPDATES: I have had two instances today where I started Aptana, went in and changed pydevOccurrenceIndication so that I could see highlighted text (the broken same-background-and-foreground bug is 100% repeatable).  After switching to another window and switching back the highlight was broken again, requiring me to change the pydevOccurrenceIndication setting again.      This is profoundly irritating.  I hope whatever change broke color handling was awesome enough to cause this much pain."
"APSTUD-4892","Bug","Documentation|Editor",8,"Issue showing documentation for two functions with similar names on different files ","When you have the same function declared in two different files (not included at the same time on the project, so it doesn't affects run time), auto-completion and mouse hover use different documentation sources. Hovering keeps using the same file as the above screenshots (plugin.php) while hover uses the other file (load-scripts.php), I'm guessing it uses alphabetical order.    !http://cl.ly/H93M/rare.png!    We need a way to exclude a file as documentation source to avoid this.  "
"APSTUD-4896","Improvement","PHP",13,"PHP Autocompletion for parent methods + namespace","When you tried to access to parent methods which are in different namespace it doesn't work:  {code:php|borderStyle=solid}  <?php    namespace Package1;    class Foo {      public function __construct(){   }      public function fooMethod(){       }  }      namespace Package2;    class Foo extends \Package1\Foo {      public function __construct(){    parent:://Nothing is proposed while __construct() or fooMethod() should be listed   }  }  {code}"
"APSTUD-4899","Technical task","JS|Validation",40,"Implement JSLint-identical rules for most common subset of JS rules","Implement checks for these rules:    already_defined*  and*  assign_exception*  avoid_a*  bad_assignment*  bad_new*  bad_number*  bad_wrap*  conditional_assignment*  constructor_name_a*  dangerous_comment*  dangling_a*  empty_block*  empty_class*  evil*  -expected_identifier_a_reserved-(causes a parse error, so we shouldn't need to do this)  expected_number_a*  function_eval*  implied_evil*  leading_decimal_a*  -name_function-(causes a parse error, so we shouldn't need to do this)  not_a_constructor*  not_greater*  parameter_arguments_a*  radix*  reserved_a*  strange_loop*  subscript*  sync_a*  trailing_decimal_a*  unescaped_a  unnecessary_initialize*  unreachable_a_b*  use_array*  use_braces*  use_object*  use_param*  used_before_a*  var_a_not*  weird_new*  weird_program*  wrap_immediate*  write_is_wrong*"
"APSTUD-4903","Bug","Parsing|PHP",8,"PHP parse exception for a specific content","PHP parse error when working on the attached file.        "
"APSTUD-4906","Bug","Publishing",8,"No deployment option exists in Deploy My Application dialog for Web project","1. Create a web project via File > New > Web Project;  2. Right-click on the project and select Publish > Run Web Deployment Wizard.    Expected result: the dialog should contain options for FTP, Capistrano, Heroku, etc.    Actual result: the list is empty.    I suspect this has to do with the refactoring of deploy.ui plugin, and the compilation errors we saw and somehow fixed could be related as well.  "
"APSTUD-4912","Story","Usability",5,"Add portal controller to return the currently active perspective","Related to APSTUD-4799, this would be a call to return the currently active perspective."
"APSTUD-4909","Bug","HTML",3,"HTML validation filters don't work","I am using custom HTML tag - lets call it <specialtag>. I added rules in:   Options -> Aptana Studio -> Validation -> HTML -> HTML Tidy Validator (I tried all validators on the list)    To test:  * create a new document with <specialtag></specialtag> in it  * add new validation filter .&lowast;specialtag.&lowast; to the HTML Tidy validator  * See ""specialtag is not recognized"" in the problems view    The editor still shows warning message and underscores the content of the <specialtag>."
"APSTUD-4917","Bug","Formatting|Ruby",8,"Ruby: Problem formatting Ruby source code where block contains only comments","ctrl-shift-f can't format source code of the attached file."
"APSTUD-4920","Bug","Editor",8,"AssertionFailedException in ThemeingDamagerRepairer.storeScope()","Found in a customer's log file. Unfortunately no reproduction case ATM.    Suggested solution:  * Catch/rethrow the error message with additional information to that we can possibly fix it in the future.  * Or...figure out the root cause and fix it    "
"APSTUD-4919","Bug","Terminal",13,"Terminal displays incorrectly after real estate is exhausted with content.","When the terminal screen is filled up after typing commands and the output goes passed the bottom, the text jumbles up so typing in the terminal no longer works.    I attached on screenshot of what happens but it does other things in that it won't work when the content goes passed the bottom.    Possibly an issue with buffer flushing."
"APSTUD-4921","Bug","CoffeeScript|Colorization",5,"Coffee script colorization bug with @","0. create new coffee script file  1. create class with new variable @scale_3d_effect  2. variable colorization is bad after ""3"""
"APSTUD-5380","Improvement","PyDev",5,"Code Formatter - Right trim lines should trim also comments","Please make option ""Right trim lines?"" in Code Formatter also trim trailing white-spaces after comments, as no-one probably want spaces at end of line there."
"APSTUD-4941","Bug","Validation",2,"NumberFormatException in JSStyleValidator.enterNumber()","While attempting to run the JS Style validator against ext-debug-all.js, I get the following sequence of errors:        Searching the code, it appears to be on this set of code:    "
"APSTUD-4939","Story","Indexing",5,"Add trace-level logging for indexing files","In Aptana Studio, we have various complains about how long it takes for Studio to index a set of files. Suggest adding trace-level logging for users to be able to turn on/off additional information about how long indexing is taking."
"APSTUD-4946","Bug","Usability",5,"Cannot add new lines in ticket submitter","When trying to submit a ticket through the Help->Aptana->Submit Ticket interface, I'm unable to add newlines. This is inconvenient for the ""Steps to Reproduce"" field, as I cannot format the information into steps, just a single line.    Second, pressing enter tries to submit the ticket."
"APSTUD-4945","Improvement","Indexing|PyDev",5,"Add support for indexing egg-links","Steps to reproduce:  - Install a package using an egg-link: eg, pip install -e /path/to/project  - Reference the package from within another project    Actual result:  - Unresolved symbols.    Expected results:  - Should be able to use the symbols without errors"
"APSTUD-4944","Bug","Validation",8,"JSLint inside Aptana runs far slower than on the command line","As a check, time the approximate time it takes to lint ext-debug-all.js    # Create a new web project  # Add ext-debug-all.js into the project  # Turn JSLint on as a build validator  # Clean the project  # Time how long it takes to finish indexing. It will be about 200 seconds for me.    Now, download http://code.google.com/p/jslint4java/ and run from the command line    Make sure to use java -jar jslint4java-2.0.2.jar --maxerr 1000 ext-all-debug.js to replicate the same number of warnings as we output.    It runs in a fraction of the time."
"APSTUD-4951","Bug","Colorization|PHP",0,"php code comments /** bug with */ in preg_match","Try this code and notice the incorrect colorization        "
"APSTUD-4949","Bug","Formatting|PHP",8,"PHP Formatter inserts tab as indent when formatter settings are ""Use Editor settings"" and edit is set to use spaces","I have my PHP editor policy set to spaces, indent width of 4; and after formatting (which is set to use editor settings) I get a tab as the indent.  Before:        After:  "
"APSTUD-4957","Bug","Indexing|PyDev",8,"Pydev nightly: indexer only indexes open files","Python indexing seems to have broke with the latest nightly.  To reproduce:  - Create new python project  - Create three files in the project: __init__.py test1.py test2.py  - Add the following contents:      - Close all editors except test1.py  - Add space and delete, to trigger reindexing    Actual result:  ""Spam"" is marked as an unresolved import    Expected result: ""Spam"" should be recognised.    If you then open test2.py again, and retrigger indexing, the symbol is recognised again."
"APSTUD-4962","Bug","Editor|PHP",5,"No content assist documentation for Zend Framework","I added zend framework to the php libraries.. but autocomplete does not seem to be working for any of the zend framework"
