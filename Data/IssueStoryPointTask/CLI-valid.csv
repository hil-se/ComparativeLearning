"issuekey","type","components","storypoint","title","description_text"
"CLI-1024","Bug","Titanium",5,"ti info returned the invalid json output","Here's a bunch of stack traces from my session this morning:    "
"CLI-1028","Improvement","Core",3,"Add EU region to appc-cli","Appc-CLI should allow a new environment for the eu region. Currently if the environment is not recognized, the cli will exit. We should create a new environment such that the CLI can point to the new region."
"CLI-1037","Story","Core",1,"reference to latest acs cli 1.2.1","we just released a new acs cli 1.2.1 please include in the cli. "
"CLI-1036","Improvement","Core",5,"Hyperloop: Entitlement verification when building","Currently, even thought we implemented a way for developers to be able to only obtain the hyperloop module if they have the entitlements, anyone can still build it as long as they get their hands on the module.   We need to modify the CLI such that during the build, if hyperloop is enabled, we will check the entitlements to ensure that the developer has permissions to build using hyperloop.  "
"CLI-1035","Improvement","Core",2,"Update appc-app-preview-cli-hook to latest version","I've just made some improvements to appc-app-preview-cli-hook to show better logging messages in Studio.  This needs to gets included in the core CLI distribution.  Current version is 0.4.1 and has been published to NPM."
"CLI-1040","Story","Core",2,"MobileWeb Platform is deprecated","With 5.4.0 CLI/SDK, MobileWeb platform is deprecated.    While running a build against ""MobileWeb"", show a warning message on the console that ""MobileWeb Platform has been deprecated!""    This also applicable for creating and packaging modules.  "
"CLI-1046","Improvement","Core",5,"Getting the correct module versions from dashboard","When Ti SDK 6.0.0 is released, we'll be support a new version of android v8. And because of that, all titanium modules have to be recompiled to support it, and it's not backward compatible.   i.e. ti.facebook v3.X.X works for ti.sdk 6 and newer vs ti.facebook v2.X.X works for ti sdk 5.4.0 and older.    Therefore, the following modules:  Hyperloop, ACA, APM that are downloaded automatically with CLI, has to be smart enough to be able to obtain the right versions when doing appc run or appc new. Its ok to have both versions co-exist in the local machine. And it's also ok that we can't control the developer if he chooses to use a 5.4.0 module on a 6.0.0 project.    Dashboard has recommended that the payload can be expanded to provide different urls for both versions. This will be a cross-team effort."
"CLI-1044","Bug","Titanium",5,"CLI 5.4.0-31 can not create apps in EU region","When testing out CLI 5.4.0-31 I could not create an arrow app in the EU region.    `$ appc use 5.4.0-31`  `$ appc logout; appc config set defaultEnvironment production-eu; appc login`  `$ appc new`      expected behavior: app to be created succesfully  actual behavior: CLI prompts for user signin. session issue?  "
"CLI-1048","Improvement","Core",1,"appc switch and appc login org selection should be consistent ","h5.Description    Currently {{appc switch}} and {{appc login}} are inconsistent in the style of org selection. They should be consistent in displaying the same information.    {code: title=appc switch}  ? To which organization would you like to switch? (Use arrow keys)  > Accenture Preprod (100000559)    Appcelerator Staff (100000295)    APPTS-5484-developer (100001665)    APPTS-5484-enterprise (100001668)    APPTS-5484-individual (100001666)    APPTS-5484-team (100001667)    APPTS-6045-Chrome (100001594)  (Move up and down to reveal more choices)  "
"CLI-1051","Story","Core",1,"appc login: Deauthorize message does not include -D flag","When using {{appc login}} for the first time on a new machine (or after Deauthorizing one) the CLI will return a message stating the ID of the system being authorized, as well as instructions on how to deauthorize the machine. However the command given to do so is {{appc logout}},  which does not deauthorize the machine.     h2. Steps to Reproduce   1. {{appc login}} to an unauthorized machine / {{appc logout -D}} to deauthorize a machine and then {{appc login}}.  2. Enter credentials.  3. You will be prompted to enter an authorization code, which is sent to your account email.  4. Enter the authorization code.    h2. Expected Result     CLI should return the message ""You can deauthorize this computer by logging out with appc logout *-D*""    h2. Actual Result     CLI returns the message ""You can deauthorize this computer by logging out with appc logout"""
"CLI-1052","Story","Titanium",3,"Fix Jenkins and travis for appc-cli-titanium","There's a number of things.  1. Currently the jenkins build is failing because it didn't fulfil the required coverage threshold.  2. While unskipping this unit test https://github.com/appcelerator/appc-cli-titanium/blob/master/test/new_test.js#L217, we realise that travis (and jenkins) will break because it prompts for ""Do you wish to install Hyperloop?"" we may need a flag to suppress this prompt.  3. This configuration is messed up. https://github.com/appcelerator/appc-cli-titanium/blob/master/test/travis_configure.sh#L23 it installs 4.0.0.GA when we should be either installing the latest G.A. version available, or latest master build  4. If we use master branch (6.0.0) it will complain about node version 0.10.x is not supported. which is correct so we should consider changing the CI script to support node 4.x  5. Same issue with jenkins. the ci script is here:  https://github.com/appcelerator/jenkins_dsl/blob/master/jobs/appc_cli_dependencies.groovy"
"CLI-1054","Bug","Core",3,"Set connection timeout for appc use command","*Details:*  {{appc use -o json --full}}  command is not getting timed out if it's unable to get the response.    *To reproduce:*  # Configure invalid proxy server through CLI  Example: {{appc config set proxyServer https://""username:password""@10.10.12.13:4567}}  # Run {{appc use -o json --full}} command    *Actual:*  It's waiting for indefinite time and command is not returning at all.    *Expected*  As we provided invalid proxyServer, it should timeout after 10sec    "
"CLI-1065","Improvement","Core",5,"CLI doesn't relay the error message to Studio when login failed","Studio and CLI will exchange the data in the form of json format through socket connection.    If a trial plan is expired, studio is keep asking for login credential without showing what was wrong with the credentials. As studio depends on CLI for login, CLI should return the error message as part of the socket communication message protocol.    For example:  *CLI request for login prompt:*  {code:json}  {""type"":""question"",""question"":[{""type"":""input"",""name"":""username"",""message"":""Appcelerator ID:""},{""type"":""password"",""name"":""password"",""message"":""Password:""}]}      If the password is wrong or it was unable to login due to some other issue(ex: trial account expired),CLI should also send the error message.    *Here is my proposal for expected response:*  {code:json}  {""type"":""question"",""question"":[{""type"":""input"",""name"":""username"",""message"":""Appcelerator ID:""},{""type"":""password"",""name"":""password"",""message"":""Password:""}], ""errormessage"":""Unable to login, your trial plan is expired. Renew your subscription today!""}  {code}"
"CLI-1068","Bug","Core",3,"Windows: A iPhone module folder is downloaded for Windows OS","h4. Description  A iPhone folder containing {{com.appcelerator.apm}} and {{hyperloop}} module is downloaded for Windows OS.  h4. Steps to reproduce:  # {{appc new}} create an application with Hyperloop enabled, this will download Hyperloop.  # Navigate to {{C:\ProgramData\Titanium\modules\iphone}}    h4. Actual  The iPhone folder containing {{com.appcelerator.apm}} and {{hyperloop}} is present.    h4. Expected  There should be no iPhone folder on Windows OS"
"CLI-1067","Bug","Core",5,"We don't see ""Would you like to enable hyperloop for the app"" prompt while enabling services for new app","h5.Steps To Reproduce:  1. Create a new project in appc studio.  2. Fill in all the necessary details in the ""New mobile app project"" dialog.  3. Make sure you have ""Enable appcelerator platform services"" enabled.  4. Click next & then finish.    h5.Actual Results:  1. We do not get the ""Would you like to enable hyperloop for this app"" prompt.  2. Hyperloop is enabled & the module is included in the project default.  *NOTE*: CLI prompts you if you would like to enable hyperloop for the app.    h5.Expected Result:  1. We should get a prompt ""Would you like to enable hyperloop for this app"".   "
"CLI-1066","Bug","Core",5,"Hyperloop: If you have an older version of Hyperloop in your module global space, you cannot get the newer Hyperloop version","*Details:* If you have an older version of Hyperloop in your module global space, you cannot get the newer Hyperloop version.    *Notes:* To workaround this issue, you will need to remove both (Android and iOS) Hyperloop modules from the global space.    *Steps to reproduce:*  # In your global module space, {{~/Library/Application Support/Titanium/modules}} or {{C:\ProgramData\Titanium\modules}}, rename your Hyperloop module version to an older version e.g. {{modules/android/hyperloop/1.2.5}} -> {{modules/android/hyperloop/1.2.4}}.  # On Mac, you should remove {{modules/iphone/hyperloop/<ver>}} folder.  # Get the latest Hyperloop module via {{appc new}}; go through all the prompts  # Check your module global space again    *Actual:* The latest Hyperloop module is not downloaded.  *Expected:* The newest Hyperloop module should be downloaded if you have an older version of it."
"CLI-1069","New Feature","Core",5,"Install hyperloop module directly through CLI command","*Current behaviour:*  While creating a new project CLI identifies whether it's required to install or update the hyperloop module based on the selected SDK version.      *CLI way to update Hyperloop:*  # Find the selected SDK  # Fetch {{api/v2/downloads}} from 360 dashboard  # Identify what version is installed in the system  # Identify what is available on the dashboard 360  # If required to install - download the zip, identify folders based on the OS(for example for windows we shouldn't install iOS module) and extract to the target location.    *Appcelerator Studio way to update Hyperloop:*  Repeat above steps 1-5 again in Java    Can we do something like this to avoid duplicate effort and also to maintain the consistency across the tooling (studio/CLI)        This command will follow the above steps and install the appropriate Hyperloop module    Studio will also use the same command to install the Hyperloop.     "
"CLI-1075","New Feature","Core",5,"Unable to configure which IP should the LiveView use","h4. Problem Description  When your windows machine has several network adapters (either physical or virtual) you can't configure the LiveView to use certain IP.     In this case, I have two IPs, one internal for Virtual Box and other external connecting with the Wifi Access Point. For testing liveview with genymotion, I would like to use the internal, when using a device, it should be using the external network adapter (wifi).     Any suggestion on how to modify the liveview IP is more than welcomed. "
"CLI-1077","Bug","Titanium",3,"CLI outputting non-JSON warning to Studio","While doing some Studio work, I saw that the CLI is spitting out warning text in it;s output, when it's being invoked by Studio (presumably with some command asking for JSON output). Since the warning test is not JSON, Studio's parsing breaks:    "
"CLI-1085","Story","Titanium",3,"limit the size of a symbol file uploaded to crashserver to 250Mb","in CRASH-65 we limit the size of a symbol file that can be uploaded to the crashserver to 250Mb. this is based on discussions that incorporate competing products and the likely size of a symbol file in the near future weighed against the requirements to support large files.    Ideally, the Studio and CLI components should also prevent anything larger than 250Mb from even being posted to the server. This can allow the user to know about the limitation as well.    "
"CLI-1079","Bug","Core",1,"Modules and plugins are not overwritten if the files already exist","Hyperloop plugin is picked to illustrate the issue, but this should be reproducible with any modules, plugins or components.    *Steps to reproduce*  1. Make sure Hyperloop plugin is installed  2. Modify {{../plugins/hyperloop/package.json}} to a different version, i.e 1.1.1  3. Do {{appc config set lastUpdateCheckTiDownloads null}} or remove Hyperloop module folder to trigger an update  4. Do {{appc new}}     *Actual Results*  Once the project is created, verify that {{../plugins/hyperloop/package.json}} is not updated.    *Expected Results*  The Hyperloop plugin should be updated ."
"CLI-1081","Bug","Core",1,"Modules update failed with Error: Invalid URI ","*Steps to reproduce*  1. {{appc config set lastUpdateCheckTiDownloads null}}  2. {{appc new}} or {{appc run}}    *Expected result*   There should be no {{Error: Invalid URI}} error.    *Actual result*  The process terminates with {{Error: Invalid URI}} error."
"CLI-1080","Bug","Core",3,"'SyntaxError: Unexpected end of input' on appc use --prerelease","h5.Description    When I ran {{appc use --prerelease}} I got the following error, I can't reproduce this, error comes from [this line|https://github.com/appcelerator/appc-install/blob/master/lib/util.js#L605],     *Notes*  After this I checked whether http://software-preprod.cloud.appctest.com/ was up, it was but I was met with [this|https://github.com/appcelerator/appc-registry-server/blob/master/web/views/index.hbs#L55], both issues appear related to me, maybe to do with caching registry side? I ran this command around 12:30 BST 22/08/2016 incase that is useful for any logging        h5.Steps to reproduce  *This steps probably won't reproduce the error, but are what I did*    # run {{appc use --prerelease}}    h5.Actual result    You will get the error above    h5.Expected result    You should not get an error"
"CLI-1090","Bug","Core",1,"update-notifier still getting installed","h5.Description    API-1310 removed update-notifier, however when installing appcelerator npm package it still gets installed, this is because the npm shrinkwrap file still references the package [here|https://github.com/appcelerator/appc-install/blob/f5025900a1f056bc9c404f16d9d51a573dc447a1/npm-shrinkwrap.json#L579].     h5.Steps to reproduce    # Install appc npm using {{npm i -g appcelerator@4.2.8-6}}    h5.Actual results    update-notifier is installed    h5.Expected results    update-notifier should not be installed as it's not used"
"CLI-1089","Improvement","Core",3,"Allow more than one attempt at entering an auth code","h5.Description    Currently the CLI only allows a user 1 attempt at entering an auth code. This should be changed to allow the user unlimited attempts until the auth code expires, like the online login, or exit after a certain number of retries while outputting some information to the user.    h5.Steps to reproduce    # {{appc logout -D}}  # {{appc login}}  # Enter an incorrect auth code    h5.Actual result    The CLI will exit on one incorrect auth code    h5.Expected result    CLI should allow some retries on auth code"
"CLI-1088","Improvement","Core",3,"CLI should not re-prompt a user once their account has been locked out","h5.Description    APPTS-8562 introduced the ability for accounts to be locked out after a certain amount of failed login attempts, the CLI does not handle this appropriately and outputs an access privileges error while also re-prompting the user.    The CLI should inform the user what has happened and provide any other details deemed necessary      h5.Steps to reproduce    # Run {{appc login}} and enter an incorrect password  # GOTO 1    h5.Actual result    After 6 attempts the error message changes to {{You do not have access privileges to view this content.}} the CLI will keep prompting the user to login    h5.Expected result    If a user is locked out of their  account, the CLI should not re-prompt and inform the user of the lockout, while displaying any information that is deemed helpful e.g Directing them to check their emails to disable the lockout"
"CLI-1094","Bug","Core",5,"Build got stuck at validating the session","*Details:*    While I'm building a project with iOS simulator - build got stuck at {{check if session is invalidated}} state for more than {color:red}4mins{color}.    You can observe the time from the below trace log.          *Expected:*    It should timeout after 10sec or so."
"CLI-1100","Improvement","Core",5,"appc new to use SDK compatible version of soasta plugin","At the moment, {{appc new}} and enable test service will always use the latest installed soasta plugin regardless of SDK version.    In APPTS-8874,  there'll be different versions of the plugin for ti sdk 6.0.0/newer, and ti sdk 5.5.X. {{appc new}} will need to be updated to use the compatible plugin version."
"CLI-1099","Bug","Core",1,"appc login error when specify arrowcloud url without protocol","*Step to Reproduce*  Do {{appc login --cloud admin.cloudapp-enterprise.appcelerator.com}}    *Expected Result*  Login should succeed.    *Actual Result*  Login failed with error:  {{ERROR  | Invalid URI ""admin.cloudapp-enterprise.appcelerator.com/login""}}"
"CLI-1097","Improvement","Core",1,"Include Hyperloop ""version"" to plugin tag in the tiapp.xml","At the moment, when enabling Hyperloop, no version property is assigned to the plugin tag. Under {{tiapp.xml}} you see:       Since we started versioning Hyperloop plugin, we should specify the plugin version in tiapp.xml.    "
"CLI-1107","Bug","Core",1,"deprecated minimatch. Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue","We should update all the places this appears    appcelerator@5.5.0 /Users/ingo/.appcelerator/install/5.5.0/package  ├─┬ acs@1.2.1  │ ├─┬ npm@2.14.22  │ │ ├─┬ node-gyp@3.3.0  │ │ │ ├─┬ glob@4.5.3  │ │ │ │ └─┬ minimatch@2.0.10  │ │ │ ├─┬ minimatch@1.0.0  ├─┬ arrow@1.8.6  │ ├─┬ babel@5.8.38  │ │ ├─┬ babel-core@5.8.38  │ │ │ ├─┬ minimatch@2.0.10  │ ├─┬ forever-monitor@1.7.0  │ │ ├─┬ minimatch@2.0.10  ├─┬ recursive-readdir@1.3.0  │ └─┬ minimatch@0.3.0  ├─┬ tar.gz@1.0.2  │ ├─┬ mocha@2.5.3  │ │ ├─┬ glob@3.2.11  │ │ │ └─┬ minimatch@0.3.0"
"CLI-1114","Bug","CLI",1,"appc switch org: errors when I only have one org","When I run {{appc switch org}} while I only have one org it errors:        Instead, it should simply say there are no other orgs to switch to."
"CLI-1115","Improvement","Core",2,"Set Node 4.x as minimum supported version","h5.Description    In 6.0.0/4.8.0 it's planned to move to 4.X as the minimum supported version. This is implemented in the [SDK/Titanium|TIMOB-23448] and in [TISTUD|TISTUD-8509] but there is no implementation for this in the CLI. It seems to me like we should want to restrict the version in the CLI also and maybe introduce something similar to Titanium i.e warnings for node versions higher than a certain version etc    h5.Steps to reproduce    # Set node 0.12.7 as your selected node version using your favourite node version manager or the official installer  # Download a 6.0.0 CLI, {{appc use 6.0.0-47}}  # Use the CLI for non titanium tasks (as Titanium has this already implemented)    h5.Actual result    The appc cli is perfectly happy with you using 0.12.7    h5.Expected result    As we are moving to a minimum of 4.X for every other product. So should the CLI"
"CLI-1117","Bug","Core",1,"checkSession endpoint is hit twice when building","h5.Description    When building an application (and other commands that require a user to be logged in) the CLI appears to be hitting the checkSession endpoint twice, once before executing the command and then once again in the command that has been executed.             h5.Steps to reproduce    # Run {{appc -p ios -l trace}} in a titanium project    h5.Actual result    checkSession endpoint is hit twice    h5.Expected result    checkSession endpoint only needto be hit once"
"CLI-1122","Bug","Titanium",5,"Hyperloop is downloaded everytime lastUpdateCheckTiDownloads expires on Windows","h5.Description    When building a project on Windows, during the build if lastUpdateCheckTiDownloads has expired it performs a check for any modules that need to be downloaded, on Windows as we now do not extract the iphone for hyperloop the CLI will download and extract hyperloop every day, When combined with CLI-1106 (the download and extraction process taking anywhere from ~3-10 minutes) this a real nuisance    h5.Steps to reproduce     # appc config set lastUpdateCheckTiDownloads null  # Build a project  # appc config set lastUpdateCheckTiDownloads null  # Build a project    h5.Actual result    The CLI will download it hyperloop every time    h5.Expected result    The CLI should only check for an iphone folder on OSX"
"CLI-1123","Bug","CLI",3,"Incorrect APM module version is set in tiapp.xml module tag","**Reproduce Steps**  1. {{appc new -t titanium}}  2. check {{tiapp.xml}} {{modules}} tag for {{com.appcelerator.apm}}    **Expected Result**  the module version should be in the format of a.b.c.     **Actual Result**  the module version is set to a long string of digits. "
"CLI-1125","Improvement","Titanium",3,"Remove version attribute from tiapp.xml when creating new app","In 6.0 prerelease, when a new project is created, we added the modules version in tiapp.xml to prevent incompatible modules being used when building a project.  i.e       With TIMOB-23912 fixed, we should not set version, so project build will pickup the latest compatible module version.  So the modules tag should be like this:       Unless developers want to use a specific version, they can do so by knowingly update the project's tiapp.xml.  "
"CLI-1131","Bug","CLI",2,"appc use does not show 6.0 version when selected","*Description:*  In prod environment, when entering ""appc use"" or ""appc use --prerelease"", the resulting list does not show release 6.0.0-61, although that release was selected to be used.    *Steps to reproduce:*  1. Type in Mac terminal ""appc use 6.0.0-61""  2. Type ""appc use""  3. Type ""appc use --prerelease""    *Result:*  The following output shows the results. These results always occur (not intermittent).  amukherjee:Titanium amukherjee$ appc use 6.0.0-61  6.0.0-61 is now your active version  amukherjee:Titanium amukherjee$ appc use  The following versions are available:    5.5.1      Installed (Latest)                        5.5.0      Installed                                 5.4.0      Not Installed                             5.3.1      Not Installed                             5.3.0      Not Installed                             5.2.2      Not Installed                             5.2.1      Not Installed                             5.2.0      Not Installed                             5.1.0      Not Installed                             5.0.4      Not Installed                             5.0.3      Not Installed                             5.0.2      Not Installed                             5.0.1      Not Installed                             5.0.0      Not Installed                             4.1.3      Not Installed                             4.1.2      Not Installed                             4.1.1      Not Installed                             4.1.0      Not Installed                             4.0.2      Not Installed                             4.0.1      Not Installed                             4.0.0      Not Installed                               amukherjee:Titanium amukherjee$ appc new  Appcelerator Command-Line Interface, version 6.0.0-61  Copyright (c) 2014-2016, Appcelerator, Inc.  All Rights Reserved.    *Expected Result:*  6.0.0-61 should have been on the list from ""appc use"", or ""appc use --prerelease"", but it is not in either case.  Note from the results, when ""appc new"" is typed, the correct version is used, it is just not appearing in the list of versions available/installed."
"CLI-1126","Bug","Core|Titanium",3,"ACA and APM being downloaded everytime when lastUpdateCheckTiDownloads has expired","h5.Description    When building an application in an enterprise org, when lastUpdateCheckTiDownloads has expired I am always seeing ACA and APM modules downloaded.    After placing some console logs I believe the reason that these modules are always downloaded is because the CLI is checking for the iOS modules in {{/Users/eharris/Library/Application Support/Titanium/modules/iOS/com.appcelerator.apm}} and {{/Users/eharris/Library/Application Support/Titanium/modules/iOS/com.appcelerator.aca}}, because these folders aren't fuond the CLI returns null for the iOS module version on the system and decide to download a new one, *related code is [found here|https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/util.js#L471]*    It may be that the payload data from 360 is incorrect as that is where the platforms are sourced from I believe    *This happens on both run and new*      h5.Steps to reproduce    # Login to an enterprise org in preprod  # {{appc config set lastUpdateCheckTiDownloads null}}  # {{appc run -p ios -l trace --build-only}}    h5.Actual result    ACA and APM are downloaded every time, CLI is checking incorrect location for iOS module    h5.Expected result    ACA and APM should not be downloaded every time, CLI should check for correct locations"
"CLI-1128","Improvement","Core",2,"Update cli to include acs cli 1.2.2 ","We have just released arrowcloud 1.5.3 and new acs cli 1.2.2. Please update cli to include latest acs cli. "
"CLI-1130","Improvement","Core",3,"Use node.js os.homedir to get homedir","Currently we use a custom way of getting a users home dir, which isn't perfect and can break CLI-949. When I made the fix for that ticket I couldn't replace it with os.homedir as it was introduced in node v4 and we still supported 0.12. Well, now we no longer support 0.12 so lets use it :)    Refs:  https://nodejs.org/dist/latest-v4.x/docs/api/os.html#os_os_homedir  https://github.com/nodejs/node/pull/1791"
"CLI-1134","Bug","CLI",5,"When unpublish an arrow app the version in package.json is not considered","Steps to reproduce:  1. Publish arrow app with version 1.0.0 specified in package.json        2. Change the version in package.json from ""1.0.0"" to ""0.0.3"". Type      in the root folder of the app. Your app will be unpublish.    Desired behavior: It should display some message that the local version of the app is different from that in the cloud, i.e. 'Missing app with version v.0.0.3' or kind of.  "
"CLI-1133","Story","CLI",2,"Update dependencies of appc-inquirer","Building PRs on Travis for appc-cli currently fails due to a bug in the outdated {{inquirer}} module which is part of {{appc-inquirer}}, which in turn is a dependency of {{appc-cli}}. This just occurred recently and only affects Travis builds.    Testing with a fork of appc-inquirer with updated dependencies fixed the appc-cli build on Travis. "
"CLI-1140","Bug","Core",2,"Arrow app crashes with Uncaught Exception Cannot find module './ReactHostOperationHistoryHook'","h5.Description    When attempting to run an arrow app the app will crash with the below, while at first glance this may appear to be an issue with arrow, the root cause lies in the {{appc publish}} command as checking jenkins shows that this file is being excluded as it matches one of these[regexes|https://github.com/appcelerator/appc-cli/blob/96ca28c6b63482d9a956beaf8c321f4bd910fa56/lib/publish.js#L113-L116], changing them to use the {{^}} character will fix the issue to include {{./ReactHostOperationHistoryHook}} but will then fail to include two files called {{History.js}} from react-router (these do not cause a crash to my knowledge, but they should be included) and also the {{logs}} folder from arrow-admin-api (this does cause a crash), this folder is required        h5.Steps to reproduce    # Download 6.1.0-300 {{appc use 6.1.0-300}}  # Create an arrow app {{appc new -t arrow -n myarrowapp && cd myarrowapp}}   # Run the app {{appc run}}    h5.Actual result    Crash with the above error    h5.Expected result    App should not crash"
"CLI-1143","Bug","CLI",2,"appc-inquirer skips predefined answers","In CLI-1133 the inquirer dependency of appc-inquirer was updated because of issues in Travis builds. There was a slight behavior change in inquirer which removes unasked question from the answers object. To remain backwards compatible we need to get the unaltered answers object with any default answers provided through options arguments in the CLI."
"CLI-1142","Bug","Node Utilities",2,"""Fatal error: The config file ""node_modules/grunt-appc-js/.jscsrc"" was not found"" if grunt-appc-js is called within another grunt plugin","*Details:* {{Fatal error: The config file ""node_modules/grunt-appc-js/.jscsrc"" was not found}} error is returned if grunt-appc-js is called within another grunt plugin; see attachment.    *Steps to reproduce:*  # Clone or pull https://github.com/appcelerator/appc-registry-server from master branch  # Run {{npm install}}  # In Gruntfile.js, comment out these lines: https://github.com/appcelerator/appc-registry-server/blob/master/Gruntfile.js#L68-L70  # Run {{grunt appc_js}}    *Actual:* Fatal error is returned; see attachment.  *Expected:* Fatal error should not be returned and {{jscs:src}} task should be executed without any issues."
"CLI-1163","Story","CLI",0,"Integrate with latest acs cli 1.2.3","we just published acs npm 1.2.3 please update appc cli to include it "
"CLI-1166","Bug","CLI",1,"Correct NSP errors in appc-cli-titanium","nsp check flags minimatch@0.3.0.  update dev to fix the issue: tar.gz@1.0.2 > mocha@2.5.3 > glob@3.2.11 > minimatch@0.3.0 "
"CLI-1169","Bug","Core",1,"TypeError: Data must be a string or a buffer thrown when running commands if sid is undefined in config","h5.Description    *To fix this delete your appc-cli.json and login again, using preproduction not preprod*    When running commands I am seeing the following error get thrown {{TypeError: Data must be a string or a buffer thrown when running commands}}, full stacktrace below. The error is coming from [this line|https://github.com/appcelerator/appc-cli/blob/e9b5892216ec43b98ae592473aaba032fdcd41c4/lib/commands/config.js#L158]    The CLI is calling config.get('sid') which has somehow gone walkabouts from my config so it is undefined, I believe this is during the {{appc config set defaultEnvironment}} step below.        h5.Steps to reproduce    # Switch to production {{appc logout && appc config set defaultEnvironment production && appc login}}  # Switch back to preproduction  {{appc logout && appc config set defaultEnvironment preproduction && appc login}}  # {{appc config set defaultEnvironment preprod}}  # appc whoami/appc login    h5.Actual result    Above error is thrown    h5.Expected result    Error not thrown"
"CLI-1175","Bug","CLI",1,"appc-cli/Gruntfile.js is not loading ""grunt-bump""","In https://github.com/appcelerator/appc-cli/blob/master/Gruntfile.js, needs to load {{grunt-bump}} i.e. {{grunt.loadNpmTasks('grunt-bump');}}."
"CLI-1173","Bug","Core",3,"Error: Error attempting to login to Arrow Cloud","Logging in via the appc-cli, we get the following:    "
"CLI-1171","Bug","Core",1,"cannot find module session","When trying to perform an *appc install* i got the following message:            "
"CLI-1177","Bug","CLI",3,"appc-cli build is not passing ""appcJs:check""","The appc-cli master branch is not passing {{appcJs:check}} when running Grunt:        This will prevent the appc-cli from building on Jenkins."
"CLI-1176","Bug","Installer",1,"appc -v with no cores installed throws TypeError","h5.Description    *This only occurs in Node 6 and greater*    When running {{appc -v}} on a machine with no cli cores installed the cli will error with the below.        h5.Steps to reproduce    # Rename ~/.appcelerator/install to ~/.appcelerator/foo  # Run {{appc -v}}    h5.Actual    TypeError is thrown    h5.Expected    TypeError should not be thrown"
"CLI-1180","Improvement","Installer",3,"CLI rebuild check should determine if a rebuild is needed from the modules version property in node","h5.Description    Currently the rebuild check works off process.version which represents the node version. This rebuild is needed because native modules need to be rebuilt when moving between node versions that have a different ABI version (process.versions.modules), CLI-827.     I propose that rather than rebuilding on a node version change the rebuild should be determined from the process.versions.modules version, this should lead to less rebuilds. I admit that it wont get us much other than that though :)    From an end user (read customer) standpoint this should be invisible, I do not believe that many users switch between CLIs or node versions that often, the main benefit of this would probably be time savings internally."
"CLI-1186","Improvement","Core",2,"Update appc-cli devDependencies to latest and handle false positive assertions","The {{devDependencies}} in appc-cli should be updated to the latest version: https://github.com/wluu/appc-cli/blob/master/package.json#L123-L136    And after updating the {{devDependencies}} to the latest versions, will need to fix the false positive assertions from the {{should}} module: https://github.com/shouldjs/should.js/wiki/Breaking-changes#changes-for-7x"
"CLI-1187","Bug","Core",1,"Unable to run appc cloud publish","*This is a regression from 6.1.0*    *Workaround*    Add your global node_modules to the NODE_PATH env variable in your bash_profile (or similar)    h5.Description      When running {{appc cloud publish}} the CLI will error out with {{\[ERROR\] npm not found. Please install npm and try again.Error: Cannot find module 'npm'}}. Originating from acs [here|https://github.com/appcelerator/arrow-cloud-docker/blob/f657ac582f1fa17e35c36b84865593d7515fc6e8/nettle/lib/util.js#L685]. This works fine when using the acs directly, i.e one installed using npm i acs -g. I believe the require in the gobal install of acs works because when require traverses looks npm, acs has added the necessary directory to NODE_PATH [here|https://github.com/appcelerator/arrow-cloud-docker/blob/ae6b4951889ebb82364dd741a3cbf2315a14fdf4/nettle/lib/nettle.js#L20-L26] it ensures my NODE_PATH includes the global node_modules directory, however when this is run in the context of the appc cli all it does is add {{/Users/eharris/.appcelerator/install/6.2.0-master.54/package/node_modules}} to my NODE_PATH.     npm being required from the global space can be confirmed by    1. Edit the require to the below, check the log. It will point to your global npm install     2. Change the folder name of the global npm to something that isn't npm. The global acs will now no longer work    This may just be a documentation issue and a duplicate of NODEJS-2851    h5.Steps to reproduce    # Run appc cloud publish in a directory    h5.Actual results    The CLI will error out with {{\[ERROR\] npm not found. Please install npm and try again.Error: Cannot find module 'npm'}}    h5.Expected results    No error or output that can inform a user/point a user to how to rectify the issue  "
"CLI-1195","Bug","CLI",1,"Pass app original org_id with every build upload","https://github.com/appcelerator/appc-cli-titanium/pull/217"
