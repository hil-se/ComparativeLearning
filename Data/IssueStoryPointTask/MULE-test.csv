"issuekey","type","components","storypoint","title","description_text"
"MULE-12891","Task","Extensions",1,"Failure to validate extension model","""When trying to start the attached application, the following error is thrown:    """
"MULE-12887","Bug","sdk",1,"SchedulingStrategy parameter should be required","""Parameter should be required"""
"MULE-12886","Enhancement Request","Core: Logging",0,"Change logger default log level to INFO","""What title says :)"""
"MULE-12880","Bug","Tooling Client",8,"Cannot load extension models in Windows","""Currently, the extension models are not loaded for any extension.    It seems to be an issue with the paths and how we interact with them.    It is failing to get the tools jar from the JDK. The path of that is trying to use is *C:\Program Files\Java\jre1.8.0_131/../lib/tools.jar*  """
"MULE-12916","Task","Build: Integration Tests",0,"MuleDeployment should delete distributions quietly","""MuleDeployment should delete distributions quietly"""
"MULE-12914","Enhancement Request","Test: Testing Framework",1,"Mask password args in system tests.","""The passwords of the maven repos are being logges as tehy are currently"""
"MULE-12911","Enhancement Request","sdk",8,"MetadataKeys and Value resolvers should type the parameters","""*MetadataKeys and Options resolvers should type the parameters*  * In the same way as Metadata resolvers return a ComponentModel with the resolved type as the input or ouput, the MetadataKeys and Options resolver should """"type"""" -> add a model property indicating the possible values for these parameter.  * This JIRA is highly related to -> https://www.mulesoft.org/jira/browse/MULE-12855"""
"MULE-12910","Bug","Transport: File",3,"File connector errors being mapped to MULE:UNKNOWN","""The following File connector errors been mapped to MULE:UNKNOWN    h2. javax.activation.MimeTypeParseException  Triggered by passing a value of """"invalid"""" to the file:read outputMimeType attribute.            h2. java.nio.file.FileSystemException  Triggered by setting mode OVERWRITE and passing a directory as path value to the file:write operation.              h2. java.nio.file.AccessDeniedException  Triggered by setting a path to a non writable folder to the file:rename operation.          """
"MULE-12906","Bug","sdk",8,"Extensions that use the soap service fails with Provider com.ctc.wstx.stax.WstxInputFactory not found","""Soap Connect Extensions fail with: Provider com.ctc.wstx.stax.WstxInputFactory not     The XmlInputFactory.newInstance() is being executed with the Soap extension Classloader that does not have the Woodstox classes.     As a workaround including woodstox in the extension pom.xml will make it work  """
"MULE-12901","Bug","Tooling Client",8,"Sometimes, a fatal error is thrown while loading extension models","""While loading te extension models sometimes we get this fatal error, crashing studio even before it finishes loading.    """
"MULE-12930","Bug","Tooling Client",2,"Cannot do datasense for JMS connector","""It's not possible to do datasense over JMS connector since the extension model cache is closing the class loader after returning the extension model"""
"MULE-12924","Bug","Core: (other)",0,"Fix extension model test","""assertion:      should be change to:      to avoid having unnecesary failures due to any changes on versions"""
"MULE-12918","Bug","sdk",3,"Soap Connect: Invoke Operation is being added to the extension model twice","""Soap Connect: Invoke Operation is being added to the extension model twice"""
"MULE-12937","Enhancement Request","Core: Deployment",8,"Artifacts using heavy package must should not depend on maven for classloader model resolution","""Artifacts packaged with all their dependencies (ie: heavy packages) still depend on the artifact pom.xml and Maven in order to resolve the classloader model.    This is a problem as it requires access to the same set of dependencies that where used to resolve the artifact at compile time. So, maven artifacts that were discarded during the compile time (because they were excluded or there was a newer version of the artifact) are still required on runtime. (wasting space)    A better approach is to resolve the dependencies on compile time, generate a maven repository only with the required jars, and then generate metadata that indicates which files must be loaded in the artifact's classloader model. (this could use a new classloader model loader)"""
"MULE-12934","Bug","Tooling Client",0,"Cannot load extension model for JMS connector","""See ignored test in StaticDataSenseTestCase. To load the extension model, the JMS connector depends on the JMS API to be in the classpath but it's currently being defined as provided dependency.    Since the JMS connector won't work unless the jms-api is in the classpath and is the 2.x version of it, then it seems it should come with the connector. We need to review how classloading would work in this case since adding activemq in the app classpath would also contribute the JMS spec."""
"MULE-12955","Task","Core: Expressions",0,"DW: Support instantiation through builders","""Considering most of our API interfaces implementations are hidden and immutable, DW should interpret their builders in order to instantiate them. If we settle on a builder convention this could work for any interfaces."""
"MULE-12954","Bug","Transport: File",1,"file:copy not throwing error when file already exists on directory","""file:copy not throwing error when overwrite=""""false"""", no renameTo value is provided and file already exists on directory    *App details*      To reproduce run   com.mulesoft.mule.distributions.server.integration.scenarios.errorhandling.FileExtensionErrorHandlingTestCase#copyFileAlreadyExistsIfTargetPathAlreadyExistsAndOverwriteIsFalse"""
"MULE-12953","Bug","Extensions",2,"Mule Core operations don't expose any error models","""Several Mule Core's operations (like """"logger"""", """"foreach"""", """"splitter"""") don't expose any error models ([https://github.com/mulesoft/mule/blob/mule-4.x/modules/extensions-support/src/main/resources/META-INF/mule-extension-model.json#L572)] although they do throw (ie. an invalid expression in a logger message)"""
"MULE-12952","Bug","Transport: File",1,"file:move not throwing error when file already exists on directory","""file:move not throwing error when overwrite=""""false"""", no renameTo value is provided and file already exists on directory    *App details*      To reproduce run   com.mulesoft.mule.distributions.server.integration.scenarios.errorhandling.FileExtensionErrorHandlingTestCase#moveErrorIfFileAlreadyExistsNoRenameToIsGivenAndOverwriteIsFalse"""
"MULE-12949","Enhancement Request","Extensions",8,"Refresh socket extension","""Bump it to incorporate all the UX changes since the inception moment"""
"MULE-12948","Enhancement Request","Extensions API",8,"Expand External Lib functionality","""Allow to also specify that a dependency is needed"""
"MULE-12947","Bug","Transport: File",1,"file:move error messages say 'Can't copy ... ' instead of 'Can't move ...'","""file:move error messages says 'Can't copy ... ' instead of 'Can't move ...'    """
"MULE-12946","Bug","Core: Deployment",5,"ClassLoader leak on DeclarationEnrichers generate an OOM Metaspace when calculating Metadata for DataSense","""When doing DataSense for Salesforce connector a OOM Metaspace has happened. The first reason for this was a classloader leak in the connector, once that was removed more were found related to DeclarationEnrichers as they are keeping a reference to classes from the Extension and the ClassLoader itself.    I found the first *on org.mule.runtime.module.extension.internal.loader.enricher.DynamicMetadataDeclarationEnricher* once that one was fixed a found another one *on org.mule.runtime.module.extension.internal.loader.enricher.ImportedTypesDeclarationEnricher*. See screenshots attached with VisualVM."""
"MULE-12942","Bug","sdk",1,"MetadataContext returns a ConfigurationInstance instead of the Configuration it self","""MetadataContext returns a ConfigurationInstance instead of the Configuration it self"""
"MULE-12941","Bug","Core: API",1,"Bootstrap properties should not be exported","""Bootstrap properties resources are still exported on the core module."""
"MULE-12961","Enhancement Request","Modules: WS Consumer",8,"WSC: Add support for WS-SecurityPolicy.","""Add support for WS-SecurityPolicy in 3.9.x and 3.8.x.    Here you can find how CXF supports this to add it to the Soap Service.   [http://cxf.apache.org/docs/ws-securitypolicy.html]    Then we should expose some configuration for the WSC."""
"MULE-12970","Bug","sdk",1,"Error generating parameter validation error message.","""Error generating the exception error message here:    https://github.com/mulesoft/mule/blob/mule-4.x/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/loader/java/ParameterModelsLoaderDelegate.java#L162    Caused by: java.lang.IllegalArgumentException: Component 'org.mule.runtime.api.meta.model.declaration.fluent.ConnectionProviderDeclarer@7603abce' is not an instance of any known model type [configuration, connection provider, operation, source, source callback]      at org.mule.runtime.extension.api.util.NameUtils.getComponentModelTypeName(NameUtils.java:313)      at org.mule.runtime.module.extension.internal.loader.java.ParameterModelsLoaderDelegate.declaredAsGroup(ParameterModelsLoaderDelegate.java:161)      at org.mule.runtime.module.extension.internal.loader.java.ParameterModelsLoaderDelegate.declare(ParameterModelsLoaderDelegate.java:100)      at org.mule.runtime.module.extension.internal.loader.java.ParameterModelsLoaderDelegate.declare(ParameterModelsLoaderDelegate.java:84)      at org.mule.runtime.module.extension.internal.loader.java.ConnectionProviderModelLoaderDelegate.declareConnectionProvider(ConnectionProviderModelLoaderDelegate.java:103)      at org.mule.runtime.module.extension.internal.loader.java.ConnectionProviderModelLoaderDelegate.lambda$declareConnectionProviders$0(ConnectionProviderModelLoaderDelegate.java:53)      at java.util.ArrayList.forEach(ArrayList.java:1249)      at org.mule.runtime.module.extension.internal.loader.java.ConnectionProviderModelLoaderDelegate.declareConnectionProviders(ConnectionProviderModelLoaderDelegate.java:53)      at org.mule.runtime.module.extension.internal.loader.java.ConfigModelLoaderDelegate.declareConfiguration(ConfigModelLoaderDelegate.java:76)      at org.mule.runtime.module.extension.internal.loader.java.ConfigModelLoaderDelegate.declareConfigurations(ConfigModelLoaderDelegate.java:46)      at org.mule.runtime.module.extension.internal.loader.java.DefaultJavaModelLoaderDelegate.declare(DefaultJavaModelLoaderDelegate.java:120)      at org.mule.runtime.module.extension.internal.loader.java.AbstractJavaExtensionModelLoader.declareExtension(AbstractJavaExtensionModelLoader.java:121)      at org.mule.runtime.extension.api.loader.ExtensionModelLoader.loadExtensionModel(ExtensionModelLoader.java:71)      at org.mule.runtime.module.extension.internal.resources.BaseExtensionResourcesGeneratorAnnotationProcessor.parseExtension(BaseExtensionResourcesGeneratorAnnotationProcessor.java:106)      at org.mule.runtime.module.extension.internal.resources.BaseExtensionResourcesGeneratorAnnotationProcessor.lambda$null$0(BaseExtensionResourcesGeneratorAnnotationProcessor.java:85)      at org.mule.runtime.core.api.util.ClassUtils.lambda$withContextClassLoader$10(ClassUtils.java:848)      at org.mule.runtime.core.api.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:176)      at org.mule.runtime.core.api.util.ClassUtils.withContextClassLoader(ClassUtils.java:901)      at org.mule.runtime.core.api.util.ClassUtils.withContextClassLoader(ClassUtils.java:867)"""
"MULE-12969","Bug","Core: Routing / Filters",0,"Inconsistent behaviour in foreach with collection attribute","""The foreach by default uses the org.mule.routing.Foreach$CollectionMapSplitter to split the collections. If you use a batch size greater than 1, this returns a list of objects, however, if the payload is a map or you use the collection attribute, the generated payload is a list of messages.    I've seen that the difference is that then you don't set the collection attribute in the foreach scope and the payload is not a map, then this fragment of the code is triggered:  [https://github.com/mulesoft/mule/blob/mule-3.8.4/core/src/main/java/org/mule/routing/Foreach.java#L289]    That uses an [EventToMessageSequenceSplittingStrategy|https://github.com/mulesoft/mule/blob/mule-3.8.4/core/src/main/java/org/mule/util/collection/EventToMessageSequenceSplittingStrategy.java#L31] which by the code returns a list of objects and then is wrapped in a CollectionMessageSequence. On the other hand, the ExpressionSplitter which is used if the collection attribute is set always returns a CollectionMessageSequence wrapping a list of mule messages: [https://github.com/mulesoft/mule/blob/mule-3.8.4/core/src/main/java/org/mule/routing/ExpressionSplitter.java#L61]."""
"MULE-12965","Enhancement Request","Extensions API",1,"CraftedExtensionModelLoader should set ClassLoaderModelProperty","""ExtensionModel loaded with crafted loader should also have the ClassLoaderModelProperty set."""
"MULE-12972","Task","Tooling Client",8,"Refactor MetadataCache API on Tooling","""We have identified that the cache API exposed as it is in Tooling has conflicts with the whole story of having a Tooling API in order to avoid clients to use mule-api."""
"MULE-12977","Enhancement Request","sdk",2,"DefaultImplementingTypeModelProperty is not populated for streaming strategy parameter models","""In order to properly generate the UI for streaming strategy, its parameter model needs to be populated with the DefaultImplementingTypeModelProperty.  """
"MULE-12983","Bug","Core: Deployment",8,"Embedded container does not resolve local artifacts ","""When running the embedded container from inside MUnit          The container deploys the application when doing so it disregards the applications dependencies installed locally and those packaged and it always tries to resolve them from the remote reopositories.          The only way to avoid this is to only set a remote repository as your local, if you convine your local m2 with other repositories there is no waranty that the artifacts will be resolved from the local.          To make this clear, the embedded container should look for the application dependencies in the repository packaged with the application           """
"MULE-12981","Task","sdk",3,"@DefaultEncoding annotation does not work without @Parameter","""HttpListener requires the default encoding of the application and it's taking it from the MuleContext. In order to decouple HttpListener from MuleContext I tried to use @DefaultEncoding but it does not work if the attribute is not also annotated with @Parameter. In this case the default encoding is needed but is not configurable."""
"MULE-12980","Bug","sdk",3,"Operation metadatakey is usind the ID as display name for @Soap based extension ","""When creating a @Soap based extension, the keys retrieved have a display name for the services, but the operations display name is the same as the Id.  For example:  Issue_Management service generates a key with name *Issue_Management* and display *Issue Management*  Get_Records operation generates a key with name *Get_Records* and display name *Get_Records*    Both display names should be generated using the same format"""
"MULE-12991","Bug","sdk",1,"Soap connect missing default value for body","""Soap connect missing default value for body"""
"MULE-12987","Bug","Tools",1,"Line ending formatter validation fails in windows","""Format validation is checking line endings are unix styles, which causes the validation to fail on windows."""
"MULE-12986","Task","Modules: HTTP",2,"Refactor HTTP input data","""Now that HTTP no longer parses responses/requests, we need to make sure it's not evaluating input data either to match those types it used to work with. We need to decide whether we force InputStreams or continue to handle Objects that we turn to ByteArrays if need be."""
"MULE-13003","Task","Core: Sessions|Modules: Security (Spring Security, Acegi, PGP, WS-Security)",2,"Review mutability of Authentication object","""Authentication object is now being exposed through DW (MULE-12226). But this object is still mutable. It should be reviewed the possibility of making it immutable"""
"MULE-13002","Task","Core: Components",8,"Move/migrate uses of component to compatibility module","""This is to move <component> and it's dependencies like:   - <*-entry-point-resolver>   - <spring-object> // This one may require integration the new spring module   - <singleton-object>    - <prototype-object>   - etc.    """
"MULE-13000","Bug","Core: DSL processing",8,"ObjectFactoryClassRepository is destroying proxies for container entities","""When doing connectivity testing the dispose of an application is also destroying from the ObjectFactoryClassRepository the callback for org.mule.runtime.module.extension.internal.config.dsl.connection.ConnectionProviderObjectFactory therefore if there was another application already deployed when trying to do connectivity testing it fails as the lazy mule artifact context cannot initialize the connection provider bean. """
"MULE-12998","Task","Core: API|Core: Event/Message",2,"Event API is inconsistent and implementation is not immutable after addition of properties and parameters.","""Event API is inconsistent and implementation is not immutable after addition of properties and parameters.   * variables has method for names, value, but not map, whereas properties/params returns map.   * map returned is not immutable either.    Ideal solution is to use same pattern for additions"""
"MULE-12997","Task","Core: Expressions",2,"ExpressionLanguage should expose GroupCorrelation","""ExpressionLanguage should expose GroupCorrelation"""
"MULE-12993","Task","Core: API",0,"Include and export javax.jms on the API","""As the EE version of the container requires to include and export javax.jms, in order to provide the same user experience for both CE/EE users (regarding how to build apps), the CE container must do the same. """
"MULE-13010","Bug","Extensions API",8,"SDK should no longer deal in terms of Attributes","""At some point, the Mule Message was composed by a payload TypeValue and Attributes pojo. The Attributes pojo then got replaced by another TypedValue, but the SDK didn't follow.         We need to align these things and potentially kill the Attributes pojo """
"MULE-13009","Task","Extensions API",8,"Inconsistent error propagation in extension operations depending on operation type","""Inconsistent error propagation in extension operations depending on operation type.    In order for tests to pass the following is required to maintain a difference in behaviour between blocking an non-blocking operations.    Need to work out what correct behaviour is and update tests etc.      """
"MULE-13008","Task","Core: Exception Handling",1,"Review ""catch all"" policy in error handlers considering source errors","""SOURCE_RESPONSE typed errors (including children) are not handleable by on-error-continue, which sort of makes them non """"catch all"""". This means that if an empty handler is defined (catch ANY) some types won't be handled. We may need to consider adding a propagate in those cases or check whether that is working already since ANY is injected."""
"MULE-13021","Task","sdk",0,"ModuleException message is lost","""ModuleException has a couple of constructors that take a message meant to override the cause exception one yet when reaching the ModuleExceptionHandler the ModuleException is unwrapped and that message is lost."""
"MULE-13017","Enhancement Request","Tooling Client",2,"Tooling Runtime Client should allow to use an Executor to control threads","""Clients of Tooling Runtime should be able to provide an executor service to control threads and allow them to track logs by using ThreadLocal variables as many frameworks do.     """
"MULE-13016","Bug","Build: Integration Tests",1,"Fix scheduler polling tests","""Fix the polling scheduler tests"""
"MULE-13015","Task","Build: Distributions",2,"Move CE distributions out of the mule project","""Move CE distributions to a new mule-distributions project"""
"MULE-13011","Story","Core: API",0,"Add privileged API for plugin artifacts","""There are scenarios, where a plugin A must be extended on another plugin B, and to be able to do it, iB must use some A classes that makes no sense to be available on the A's public API.    To avoid exposing those classes, will be better to have a privileged API that the plugin A can define to enable extension on those scenarios. Similar to what is supported on container's modules."""
"MULE-13025","Enhancement Request","Extensions API|sdk|soap",1,"Enable Test Connectivity on SOAP connectors","""SOAP Connect connectors do not support Test Connectivity. We need to have it so we can offer the same features Mule 3 connectors had."""
"MULE-13024","Task","sdk",8,"Review and fix the list of exported packages for Mule Extensions API","""*Review and fix the list of exported packages for Mule Extensions API*    Configuring the Maven plugin that checks the exported packages the analysis throws the following report:    To configure the Maven Plugin in Mule Extensions API add the following plugin in each module of Ext API:  """
"MULE-13037","Bug","Extensions API",3,"Make TLS inside POJOs work the same as parameter","""Right now, mule-oauth-module is using the TLS inside a POJO, but the parameter model generated is not marked as an infrastructure parameter and because of that the DSLSyntax information is completely wrong."""
"MULE-13032","Task","Core: API",8,"Review all interfaces builders to match DW standard","""DW will now instantiate interfaces through a static builder() method. We need to decide and make sure all builders follow the same standard."""
"MULE-13031","Task","Build: Integration Tests|Modules: HTTP",0,"Move HTTP test from integrations to connector","""It's getting really difficult to change HTTP related code because one has to change the connector AND integrations since the tests are mostly there. The tests were separated at one point because it was an OSGI thing but now it's no longer necessary. """
"MULE-13030","Bug","Core: Classloading",1,"Possible deadlock in RegionClassLoader","""While working on another task, i stumbled upon the following deadlock:         RegionClassLoader shouldn't be calling *getClassLoadingLock* since it doesn't do the actual class load (it is delegated). Also, the loading of the class is not protected from changes in the inner state from calls to *addClassLoader* or *removeClassLoader*, so a ReadWriteLock should be a better option for this case."""
"MULE-13029","Enhancement Request","sdk",8,"Expose the Event in NestedProcessor process result in privileged API","""Expose the Event in NestedProcessor process result in privileged API"""
"MULE-13028","Task","Core: Routing / Filters",8,"All routers should use processor chains rather than processors as their routes","""All routers should use processor chains rather than processors as their routes"""
"MULE-13041","Task","Core: Event/Message|Core: Streaming",8,"Allow non-repeatable streams to be registered for closure when Flow completes","""Allow non-repeatable streams to be registered for closure when Flow completes"""
"MULE-13060","Task","Build: Integration Tests",0,"Upgrade Allure report framework","""Upgrade Allure framework to latest version"""
"MULE-13059","Enhancement Request","sdk",8,"Update Extension DTO to support missing features","""*Update Extension DTO to support missing features*   * Element References   * Path   * Whatever"""
"MULE-13052","Task","Core: Routing / Filters",8,"Migrate Splitter and Foreach implementation to non-blocking","""Migrate Splitter and Foreach implementation to non-blocking"""
"MULE-13051","Task","Tooling Client",2,"Disable statistics when deploying a Tooling application","""When deploying an application for Tooling it no needed to have statistics enabled, this can be disabled from MuleContext."""
"MULE-13088","Bug","Core: (other)",2,"Component location not properly computed for ForEach router","""Component location is not being correctly computed...  In example:      """
"MULE-13074","Bug","Extensions API",13,"Value Resolvers should stack up","""It's not possible to combine a ParameterResolver with a TypedValue. Although this is just a concrete example which is affecting http and vm connectors, this applies to an infinity of possible combinations.    We need to change how we apply resolvers, so that we have one single component which knows how to stack resolvers together.     For example:         ParameterResolver<TypedValue<String>> should resolve to the following chain:    valueResolver -> typeValueResolver -> ParameterResolver. In christian, from right to left.    There's another case to consider which is annotations such us @DefaultEncoding. For these one we need to think what to do, but I believe they should be applied before the right to left chain is resolved.     """
"MULE-13070","Bug","Extensions API",13,"Enrichers are applied in wrong order","""Right now, the Loader's enrichers are executed before the ExtensionModelFactory ones. This should be the other way around.      Plus, we also need the concept of POST enrichers, which are enrichers also defined in the ExtensionModelFactory, but which run after the loader enrichers"""
"MULE-13067","Bug","Core: (other)",0,"Default Oauth2 token expression fails if JSON has multiple lines","""The regex uses hardcoded spaces between parts of the json attributes, but it doesn't work when using \s. A first pass removing all blank characters works, before calling regex()."""
"MULE-13065","Task","Core: API",2,"Privileged API packages must take into account other exported privileged APIs","""If I define in mule-api a package as privileged and then try to use it from mule-core it fails. After discussing this with [~pablokraan] it seems to be a known issue where privileged APIs are not taken into account as the should by the API analyzer.          Searching for this issue ID in the code it will show a TODO with the exported packaged in mule-core that should be exported in mule-api instead."""
"MULE-13064","Bug","Core: Deployment",1,"Wrong method name in ArtifactArchiveInstaller","""The method _desinstallArtifact_ should be renamed to _uninstallArtifact_ or something similar, but the word desinstall does not exist."""
"MULE-13063","Bug","Extensions API",1,"Schema generation for Enum should rely on name and not in toString values","""Schema generation for Enum should rely on name and not in toString values, so if we have:         \         Then the schema should use consistently """"VALUE"""" as defaultValue and union element instead of mixin """"VALUE"""" and """"Value"""""""
"MULE-13090","Bug","Core: DSL processing",1,"ComponentBuildingDefinition for Try is not setting default values for transactionalAction and transactionType","""This is causing an error when resolving metadata for Tooling:  """
"MULE-13101","Bug","sdk",5,"Email connector pop3 does not delete all emails with deleteAfterRetrieve","""Email connector pop3 does not delete all emails with deleteAfterRetrieve"""
"MULE-13097","Task","sdk",5,"SDK: Inject connection on PagingProvider#close() method","""Currently the connection is not being injected in the PagingProvider#close(), it would be ideal to have it in case the user needs it to perfom something when closing the PagingProvider.     the email connector for example would take advantage of this feature"""
"MULE-13094","Bug","Core: Containers",2,"Embedded Container: If app fails to deploy, trying to deploy same app again ends instantly","""If an app is deployed and fails, (for example due to a missing file referenced in an import). And then you try to deploy the application again (but now we different files), the embedded container ends immediately without deploying the application nor throwing any exception.  Not sure exactly where the problem comes from, but it may come in the org.mule.runtime.module.deployment.internal.DefaultArchiveDeployer#deployExplodedArtifact method, specifically when checking isUpdatedZombieArtifact."""
"MULE-13131","Bug","Modules: HTTP",2,"HttpListenerConnectionManager should not used dedicated acceptor thread on hardware with small number of cores","""HttpListenerConnectionManager should not used dedicated acceptor thread on hardware with small number of cores"""
"MULE-13124","Task","Core: Expressions",2,"Hide registry from EL and create function to access beans","""We need to remove the registry functionality from binded server/app and instead provide a function to access the spring beans defined."""
"MULE-13122","Task","Core: Configuration",2,"Allow key parameters not exposed in XML configuration to be configured via system properties","""This is for exceptional cases where these values need to be changes and also to allow tuning and testing, to improve defaults in future versions."""
"MULE-13119","Bug","Extensions API",2,"Unable to use registered DW functions when extension prefix has dash (-)","""If an extension has a dash in its prefix (in our case munit-tools). When trying to evaluate a DW function registered for that extension (in our case munit-tools::equalTo). The evaluation fails, it tries to evaluate the _munit_ separately from the _tools_ word."""
"MULE-13115","Bug","Tooling Client",2,"Cannot test connection when using global references inside the config or the connection provider","""When doing a test connection of the HTTP Listener, or the Request, if you configure a global reference to the TLS, the app fails because it cannot find the TLS config in the registry.  This applies to any parameter that can be configured as a reference.    The following app should have executed the test connection sucessfully yet it fails  """
"MULE-13114","Task","sdk",1,"Add a flag to skipDocumentation generation","""Add a flag to skipDocumentation generation"""
"MULE-13112","Enhancement Request","Core: Expressions",8,"CXF compatibility module does not support DW expressions on properties","""As gateway WSDL proxy I would like to dynamically resolve values for proxy-service configuration properties, like for example:        Wsdl function is already registered by GW in the DefaultExpressionManager provided by mule, but proxy-service is initialized in a not DW context aware."""
"MULE-13106","Task","Core: Non-Blocking|Core: Routing / Filters",8,"Migrate aggregators and resequencer  to non-blocking","""Migrate aggregators and resequencer  to non-blocking"""
"MULE-13104","Task","Core: Exception Handling|Core: Non-Blocking",8,"Rework error handler invocation to be event context based rather than rely on handler propagation","""Rework error handler invocation to be event context based rather than rely on handler propagation"""
"MULE-13103","Task","Tooling Client",0,"Remove backward compatible method on Tooling API for extension models, DataSense and Metadata","""Once MULE-13044 is done the methods for ExtensionModel, DataSense and Metadata should be removed. """
"MULE-13102","Bug","Extensions API",8,"Sources transaction support is fundamentally broken","""Right now, Sources can use the @COnnection annotation in order to get a connection, which might be transactional.    This has two problems:   * Because an established connection is being injected instead of a ConnectionProvider, sources which rely on the listener pattern such as JMS are very difficult to implement. The ones which rely on the consumers pattern such as VM are plain and simply impossible   * Also because of this, the transaction is begun once the message is pushed to the flow, but most transactional sources require the transaction to start on the source itself. For example, JMS and VM need the transaction started when the message is polled, not when it's pushed    We need to change sources so that they can obtain multiple connections, with transactions begun when necessary     """
"MULE-13133","Bug","sdk",2,"AttributesDefinition for tlsContext for HTTP extension is not setting the referenceSimpleParameter","""When Mule is building the MinimalApplication for Tooling the applicationModel and its componentModels are traversed in order to check the AttributesDefinitions and get which parameter has a reference to another componentModel. When HTTP listener-connection has a tlsContext parameter (not inline declared) the method on AttributeDefinitionVisitor#onReferenceSimpleParameter visitor is not being called therefore the dependencies cannot be inferred."""
"MULE-13132","Task","Test: Testing Framework",0,"Add support to access privileged API class from test case","""We need to add support for being able to access a privileged API class from our test infrastructure"""
"MULE-13151","Task","Tooling Client",8,"Tooling should allow access the application class loader to resolve resources","""For DataSense and also for configuration properties Tooling would need to load the Application classloader."""
"MULE-13150","Bug","Core: Deployment",2,"javax.xml.bind.DatatypeConverterImpl generates a class loader leak when used by plugins","""javax.xml.bind.DatatypeConverterImpl keeps a reference to the application classloader when a plugin used by the application has as compile dependency com.sun.xml.bind:jaxb-impl.  We should find a way to avoid this, one approach could be to load the class when Mule initialized and use the System ClassLoader."""
"MULE-13147","Story","Core: API",2,"Avoid having spring-module as privileged plugin","""Temporarilly adding spring-module as privileged enable to provide access to privileged classes.    This must be removed and make classes part of the API or avoid to use them from the plugin"""
"MULE-13146","Task","Core: (other)",2,"Review elements in the XML that are intercepting and blacklist them","""We need to go through all the XML components that are intercepting, create a list of them, and plan to upgrade them in GA to not be intercepting. Those components that, by making them not intercepting, would require changes in the XML must be documented so Studio can blacklist them for the RC. This will allow us to do the update in GA of those components without breaking backward compatibility at the XML level.    For instance, the splitter element should no longer be intercepting, should be an scope. That would cause the XML to change so we have to add it to the blacklist."""
"MULE-13144","Task","sdk",8,"Add targetOutput to all operations in the SDK","""Since most of the time users just want to work with the payload of the returned message by the operations, we need to, by default, assign the payload to the variables and not the whole message. Optionally, the user must be able to set a """"targetValue"""" (other names are welcome) so he can assign the message instead of the payload. Possible values would be MESSAGE and PAYLOAD """
"MULE-13143","Bug","Modules: File",1,"Add commons-lang3 dependency to file-commons extension","""commons-lang is used in the toString of FileAttributes, but the dependency is not there. The module compiles because it depends on mule-core, but on runtime that lib is isolated."""
"MULE-13161","Bug","sdk",3,"Extension Documentation Generator does not document configless operations","""Extension Documentation Generator does not document configless operations"""
"MULE-13160","Enhancement Request","Core: ObjectStore",8,"CleanUp ObjectStore API","""ObjectStore API as inherited from 3.x is a mess:   * ObjectStoreManager   * ListableObjectStore   * User ObjectStore   * Constants hell   * Unclear extension path    All of the following need to be address or simply removed."""
"MULE-13158","Enhancement Request","Modules: File",1,"File: Improve workingDir parameter definition","""Currently, when configuring the File extension connection provider, the working directory is not marked with @Path annotation, making it show just as a string field editor.    The Javadoc has the information that when it is not configured the user.home will be used, but since the parameter has a @Summary, this information is lost.     Please, update the @Summary to contains this information."""
"MULE-13164","Bug","Transport: VM",2," Inconsistent null return from one-way VM inbound endpoint.","""When there is no error, a one-way vm inbound endpoint returns null, but in the case of an handled error it returns the message."""
"MULE-13175","Story","Modules: HTTP",1,"Upgrade ahc and grizzly to 1.13 and 2.3.31 respectively","""Upgrade ahc and grizzly to 1.13 and 2.3.31 respectively"""
"MULE-13172","Task","Modules: WS Consumer",5,"WSC should not use MultiPartPayload anymore","""MultipartPayload -> don't"""
"MULE-13189","Bug","Core: Expressions",0,"EL returns String instead of Enum instance when accessing a variable","""When evaluating `vars.initialHealth` in Heisenberg extension tests, DW is returning the String of that Enum, """"CANCER"""" instead of the Enum instanced bound. As a result, if the String is, as originally, """"Cancer"""" you will get a transformation error because the StringToEnum transformer cannot handle it. DW should simply return the Enum.    To reproduce, change the `HealthStatus` Enum ids to lower case and run `org.mule.test.module.extension.config.ParameterizedConfigParserTestCase`."""
"MULE-13188","Bug","sdk",13,"ValueProviderService creates a connection although this may not be required","""*ValueProviderService creates a connection although this may not be required*   * This happens because the LazyValueProviderService relies on the {{LazyMuleArtifactContext}} to initialize just the components that are required, but the problem is that the whole dependency graph is resolved for a component.   * Email case, we need just to initialize the {{email:send}} operation, not the connection or configuration, because these are not used and the resolution could fail if the configuration is not created correctly.   * Also, this will be a blocker for WSC because the value provider works in the ConnectionProvider, so when {{LazyMuleArtifactContext}} tries to resolve a value, it will try to start the connection, which will lead to a resolving failure because the connection provider won't have required values.uuiu"""
"MULE-13187","Bug","sdk",3,"ArtifactSerializationService is failing to handle custom parameters in flow tags","""When defining an artifactDeclaration with custom parameters in a flow declaration (at flow level), the ArtifactSerializationService is failing to serialize the custom parameters in the xml."""
"MULE-13184","Bug","sdk",2,"Validate ""name"" is not used as a parameter model name","""Currently, it is possible to declare a """"name"""" parameter model in a config using the fluent API.    The user can generate the model and no errors will be shown even when running the mule app, but since the convention is that all global elements have a name parameter model by default, they should not be allowed to add it, as the tools already consuming the model are already adding it.     Spring module is creating such an extension model."""
"MULE-13182","Task","Core: Routing / Filters",2,"Remove failureExpression attribute from routers that currently support it","""Remove failureExpression attribute from routers that currently support it"""
"MULE-13181","Task","Service: HTTP",2,"Differentiate between end-to-end and hop-by-hop headers in Http Attributes to avoid user needing to filter manually","""Not differentiating between these forcing the user, who may not have the required knowledge to filter headers within the flow.  This would be much simplified if we had    getHeaders()  getAllHeaders()    getHeaders should not included:  - Connection  - Keep-Alive  - Public  - Proxy-Authenticate  - Transfer-Encoding  - Upgrade  - Content-Length (spec doesn't dictate this, but this cannot be conserved and Mule may mutate payload invalidating value, so best not to ever propagate)."""
"MULE-13180","Bug","Core: Streaming|Modules: HTTP",3,"Migrate code to use new cursor stream provider mechanism","""ManagedCursorStreamProvider does not implement InputStream yet there is still code in Mule, including in org.mule.extension.http.internal.listener.HttpResponseFactory#create and potentially elsewhere that depends on InputStream instanceof test to determine behaviour.    Fixed on HTTP but still other components could have this problem."""
"MULE-13198","Bug","sdk",5,"FTP list content is empty after first read","""If the cursor for a given file is opened and consumed, next time is opened the content results empty. Attaching a test that reproduce this in MULE-13198 for ftp connector. """
"MULE-13196","Bug","Tooling Client",0,"Classloader issue with metadata propagation","""Whenever you propagation is executed in Studio, you get a classloader issue because of some dom classes:  """
"MULE-13192","Task","Core: Configuration",1,"Remove global processor-chain","""Remove global processor-chain. This has been deprecated since 3.2."""
"MULE-13213","Task","Core: Configuration",2,"Remove redundant component path element in routers that now use <route>","""Remove redundant component path element in routers that now use <route>"""
"MULE-13212","Task","Core: API",2,"Move GroupCorrelation to Message","""When dealing with collections of messages that have been aggregated in a foreach of scatter-gather router it is important to be able to identify which message is which, in terms of which part it corresponds to or which route it is a result of.  Sometimes it may be possible to aggregate into a List and use the index, but this is not a robust solution as when there are errors, the success list won't including a result for each input message, and if the results need to be streamed or processed unordered then this approach is not possible.    The solution is to more GroupCorrelation to Message, such that when Messages are aggregated and then processed (for example for custom merging of results in DW), the messages can be accessed by sequence number or an optional label.    Also:  - Add Optional<String> label.  - Make Sequence not-optional."""
"MULE-13211","Enhancement Request","Debugger|Interception API",1,"Correlation information is not exposed in the interception API.","""From the debugger side we use the correlation id to switch between debugging contexts when there is more than one message going through the flow. Right now the InterceptionEvent does not expose that information."""
"MULE-13209","Task","Core: Routing / Filters",2,"Cleanup scatter-gather configuration","""1) Use <route>  (also make changes to first-successful)  2) Don't allow individual processors  3) Remove parallel attribute.  4) Remove custom aggregation strategy  5) Move AggregationStrategy out of API if required."""
"MULE-13204","Task","Extensions",2,"Remove dom4j and jaxen exported packages from core libs","""Remove the following packages from the exported packages list:  * org.dom4j.rule  * org.dom4j  * org.dom4j.tree  * org.jaxen  * org.jaxen.expr  * org.jaxen.expr.iter  * org.jaxen.saxpath  The are exported by spring/extensions support"""
"MULE-13217","Task","Core: Routing / Filters",8,"Rework foreach to be non-blocking and decoupled from splitter","""Rework foreach to be non-blocking and use aggregation API"""
"MULE-13216","Task","Core: Routing / Filters",8,"Rework scatter-gather to be non-blocking and use ForkJoinStrategy API","""Rework to be non-blocking and use aggregation API"""
"MULE-13215","Task","Core: Routing / Filters",8,"Define ForkJoinStrategy API and implement must-have strategies for RC","""Define AggregationStrategy API and implement must-have strategies for RC    - legacy  - join  - collect   (only limited functionality)"""
"MULE-13223","Bug","Core: API",2,"MultiMap simple selector is not consistent with DW","""When multiple values are available for a key, MultiMap currently returns the last value. This is inconsistent with DataWeave where the first value is the one returned. We need to make them consistent since most of the time MultiMap will be access through DataWeave the simple selector will work differently than in all other scenarios."""
"MULE-13230","Bug","sdk",1,"MetadataOutputDelegate generating metadata type with wrong type annotation","""     When using sql connector, select operation to retrieve array of resulting records...    Expected payload metadatype was:    But it generates...  """
"MULE-13228","Enhancement Request","Extensions API",5,"Expose source's config and connection parameters","""Our use case is to be able to retrieve path, protocol, host and port of a HTTP Listener.    - Part of the path of the HTTP Listener is defined as a parameter of the source. This can be achieved since MULE-11955.  - Base path (the remaining part of the path) is defined as a parameter of the source's config.  - Host, protocol, and port are defined as parameters of the config's connection.    So, we need a way to access the last two groups of parameters: parameters of the configuration and parameters of the connection"""
"MULE-13225","Task","Core: Deployment",2,"Add required product type property in mule-artifact.json file","""We need a property in mule-artifact.properties that let us decide what is the required product type (CE, EE) to run an artifact.     This cannot be done through dependencies since the application may be using the ee namespace which does not require any particular dependency in the pom file.    So the idea is to add a field in mule-artifact.properties of the artifact to define the required feature, CE or EE Mule Runtime. This can be used by MUnit, Studio to run the application using the appropriate runtime."""
"MULE-13224","Story","Core: API",2,"Remove script transformer and use script component instead","""Scripting plugin was added as privileged in order to provide access to privileged transformer classes as the plugin provide scripting transformer that requires access to it.    Scripting transformer must be removed and usages replaced by scripting component, after that, the scripting plugin can be removed from the privileged API     """
"MULE-13237","Bug","sdk",5,"Validate that tlsContext is present either as a reference or as a child.","""Right now there is no validation and if you don't configure the tlsContext in the xml, the connector using the tlsContextFactory will throw an NPE."""
"MULE-13236","Bug","Tooling Client",2,"DataSenseService cannot resolve properties in Tooling Client test cases","""Using properties loaded through Spring's {{context:property-placeholder}} the Connectivity test runs OK but the MetaData key test fails:    The bug can be reproduced with this project: [connectors-integration-tests|https://github.com/mulesoft-labs/connectors-integration-tests/tree/06f2748665a13ead1a8a3d6ec1a499adce5d6bd8] by running the Salesforce suite: {{mvn clean -Dit.test=SalesforceIT verify}}    This is the test code: [SalesforceIT.java|https://github.com/mulesoft-labs/connectors-integration-tests/blob/06f2748665a13ead1a8a3d6ec1a499adce5d6bd8/src/test/java/org/mule/module/netsuite/integration/SalesforceIT.java]  This is the test application: [mule-config.xml|https://github.com/mulesoft-labs/connectors-integration-tests/blob/06f2748665a13ead1a8a3d6ec1a499adce5d6bd8/src/test/resources/salesforce-app/mule/mule-config.xml]"""
"MULE-13245","Enhancement Request","Extensions API",8,"Revamp SDK support for validators","""Some extensions such as JSON and XML need to contribute with validators. Need to rethink the overall approach to that so that those validators are consistent across the board"""
"MULE-13244","Task","Extensions API",8,"Remove the description concept from all annotations","""Annotations such as @Extension should not have a description attribute. Remove and use jdocs instead. Verify that those descriptions are properly obtained"""
"MULE-13259","Task","Modules: HTTP",2,"Use TypedValue length in HTTP service/connector","""Use TypedValue length in HTTP service/connector"""
"MULE-13255","Bug","Build: Maven",2,"Invalid versioning for Mule Module Maven Plugin","""The following is scattered all across the uber:    <groupId>org.mule.tools.maven</groupId>  <artifactId>mule-module-maven-plugin</artifactId>  <version>$\{muleModuleMavenPluginVersion}</version>    The version placeholder is resolved to 1.0-SNAPSHOT but should be 1.0.0-SNAPSHOT"""
"MULE-13254","Bug","Tooling Client",2,"Leak resolving metadata on try scope","""When resolving datasense for a processor inside the error handler of a try scope, it fails creating the scope because there are no processors within the try element and the factory bean fails. Since it's during the creation of the component, it never gets created. Later on, no a dispose of the artifact, mule tries to get from the registry all the objects to dispose and it fails again since spring tries to create the singleton object of the try. This error prevents the execution of stop and dispose over the rest of the components leaving threads running with references to the application class loader."""
"MULE-13249","Task","sdk",1,"Annotation processor should not reference implementation classes from com.sun","""The  org.mule.runtime.module.extension.internal.capability.xml.schema.ExtensionAnnotationProcessor is making explicit references to com.sun. implementation classes instead of using the interfaces of the annotation processing APIs.    This will prevent us from developing any IDE support as it happened with the DevKit plugin in the past. We had to remove all usages of com.sun for it to work.    There should be no need to explicitely import the implementations from that specific JDK as everything that is being done can be achieved using the actual APIs provided for processing annotations.    Any use of com.sun should not be encouraged and removed."""
"MULE-13247","Enhancement Request","Extensions API",8,"Find a way to represent synthethic types","""Right now we don't have a good way to represent synthethic types such as the streaming strategy.     Find the solution which better suites Studio, Flow Designer and is compatible with DW"""
"MULE-13272","Enhancement Request","sdk",5,"TargetValue attribute should accept expression","""Remove TargetType enum and accept expression which must be evaluated against a reduced binding context containing message, attributes and payload."""
"MULE-13264","Bug","Test: Testing Framework",2,"Test Runner exposes test resources from plugin classloader","""When running on standalone, Mule doesn't allow to access the application resources from the plugin classloader.    However, when using the isolated runner, the lookup in the end falls back ti the surefire classloader, which has access to the test resources and allows to load them. They must be filtered out to emulate the behavior of standalone."""
"MULE-13273","Bug","jms-module",1,"JMS ActiveMQ brokerUrl is not visible from main view","""JMS ActiveMQ brokerUrl is not visible from main view due to unnecessary dropdowns. Remove invalid options from the connector."""
"MULE-13284","Enhancement Request","Core: Deployment",0,"Maven settings proxy and mirror configurations are not considered for resolving dependencies","""When using mule-maven-client to resolve dependencies, the configuration under <proxies> and <mirrors> in settings.xml is not yet taken into account."""
"MULE-13282","Bug","Core: (other)",2,"Add a mechanism from the API to access MetadataService, ConnectivityService and ValueProviderService","""We need to add a mechanism to access those services from the API since we are not exposing them anymore."""
"MULE-13291","Task","Core: Exception Handling",2,"Implement ""raise-error""","""We need to create a component to raise errors with a certain ID and message."""
"MULE-13290","Bug","Core: Exception Handling",2,"Extension model is missing types and extensions declare own any","""The extension model is mistakenly declaring certain error types such as critical and missing others. Additionally, every extension is declaring it's own ANY type."""
"MULE-13289","Bug","Tooling Client",8,"ConnectivityTesting should not use retry policy","""It should not honor any retry policy when running connectivity testing"""
"MULE-13300","Bug","Build: Maven",0,"Transitive dependencies of plugin not resolved","""When the following conditions meet for a mule-plugin:  * It depends on another mule-plugin  * It depends on another jar  * Those both dependencies, in turn, depend an another artifact, the same for both  * The dependency of the plugin is declared before the other dependency    The classloader for the plugin do not contain the transitive dependecny.  """
"MULE-13293","Enhancement Request","Modules: FTP",3,"Allow relative path for IdentityFile","""IdentityFiles in src/main/resources are not recognised and will trigger an exception: *Root Exception was: File 'mule_sftp' not found. Type: class java.lang.IllegalArgumentException*     {color:#205081}3.8.4{color}    {color:#205081}4.0.0-BETA.4{color}  """
"MULE-13301","Task","Core: (other)",2,"Remove ignore from MUnitComponentPathTestCase","""Remove ignore from MUnitComponentPathTestCase once MUnit is updated"""
"MULE-13313","Bug","Build: Maven",0,"Dependency resolution for Mule plugins is not honoring semantic versioning on mule-maven-client","""When the following conditions meet for an application:  * It depends on a mule-plugin X version 1.0  ** mule-plugin X depends on mule-plugin Z version 1.0  * It depends also on mule-plugin Y version 1.0  ** mule-plugin Y depends on mule-plugin Z version 1.1  * The expected dependency graph for the application should include:  ** mule-plugin X version 1.0  ** mule-plugin Y version 1.0   ** mule-plugin Z version 1.1    No matter if the nearest algorithm or the dependency was defined before (in application's pom.xml) the rule for defining conflicts for mule-plugin versions should be by semantic versioning instead of default Maven's rules.  """
"MULE-13310","Bug","Core: (other)",2,"Fix MessageProcessorNotificationTestCase.firstSuccessful","""After changes in MULE-11553 the post notifications in first-successful are not being sent. If DefaultMessageProcessorChainBuilder.LazyProcessor.apply is comment out, then notifications work. """
"MULE-13309","Bug","sdk",3,"Same error is reported multiple times when compiling an invalid extension","""When compiling an extension with multiple errors (in this case 2) the errors are logged several times.    The same message is shown 4 times:     - The errors should be shown only once.   - WARNINGS: NONE message should not be displayed if there are no warnings.   - We shouldn't display WARNINGS using error log level.    *Full error log*  """
"MULE-13322","Bug","Core: Exception Handling",8,"Error type not logged when exception is not ME","""Some code was added to MessagingException to log the error type but it depends on that exception being the one logged. However, the most specific exception is the one logged so often it does not show up. We need to rework it so that it's added as info instead, which is propagated among exceptions when the root is searched for. This is important because it can hint the user regarding errors missing in their handling also help us identify them.    To reproduce, run org.mule.test.integration.exceptions.OnErrorContinueTestCase#onErrorTypeMatchSeveral for example and see the logs where MULE:UNKNOWN should be shown.         We should some a way of testing all this. Somehow we should support asserting the message logged when an exception is thrown and also force different exception chains to check logging behaviour."""
"MULE-13318","Bug","Extensions API",5,"Name Clash validator doesn't validate clashing between elements","""*Name Clash validator doesn't validate clashing between elements*    Cases:   * Content parameters and other elements like Operations, Sources, Etc   * Content parameters with other elements with childElement support   * Operations/Sources/Configurations   *  with other elements with childElement support """
"MULE-13317","Task","sdk",0,"Support calling operations defined in the same module","""There should be a way to call operations defined in the same module """
"MULE-13314","Bug","Core: Streaming",1,"Wrong DataType set adapting repeatable stream","""When an InputStream is transformed into a CursorStreamProvider, the DataTYpe still says InputStream, which leads to failing transformations"""
"MULE-13359","Bug","Modules: WS Consumer",5,"WSC: NPE when doing Test Connection","""*Steps to reproduce*  # Create a WSC config with the followed settings   *WSDL*: http://services.mythicalcorp.com:86/OrderService.svc?wsdl  *Service*: service  *Port*: BasicHttpBinding_IOrderService     # Test Connection     *Issue*: The followed NPE is thrown and the test connection fails        """
"MULE-13329","Bug","Service: SOAP",5,"WSC fails to resolve metadata for wsdl.","""The provided wsdl contains one operation that throws an exception when resolving metadata for it.    Use the attached wsdl with the following configuration:    Service: GCS6010CService  Port: GCS6010Port    Error is:    org.mule.runtime.api.metadata.MetadataResolvingException: Could not load part element name [    \{http://www.GCS6010CO.com/schemas/GCS6010COInterface}    GCS6010CDATA] """
"MULE-13326","Bug","Modules: HTTP",0,"Http non-blocking error handler nor cleaning thread local","""The problem might be caused by a combination of load and theads shortage, which might be causing processes to run on grizzly's timeout thread.    The leak itself, as seen from the reports, is the theadlocal of the timeout thread keeping a reference to a MuleEvent."""
"MULE-13350","Bug","Transport: VM",1,"Transaction Exception when using vm:listener without transactions","""If a listener founds no messages and no transaction is begun, a transaction exception is thrown"""
"MULE-13347","Task","Core: Exception Handling",2,"Remove use of flow error handler in async scope","""Remove use of flow error handler in async"""
"MULE-13345","Task","Tooling Client",8,"Tooling should be able to load Mule Runtime Services in order to avoid class loading issues","""DataSense and Weave should accessed through its Services interfaces. Tooling should be able to create the class loader and load services as Runtime does."""
"MULE-13342","Task","Core: Deployment",1,"Review package and runtime structure of application/domain/plugins/policy artifacts","""Need to review the final format of the mentioned artifacts before the final RC to avoid introducing backward compatibility issues in the near future."""
"MULE-13341","Task","Tools",1,"Rename the maven plugin used to package plugins/extension/services","""We are using the """"mule-app-plugins-maven-plugin"""" plugin to package different artifact (plugins/services) and """"mule-extensions-maven-plugin"""" to package """"extension plugins"""".    As this plugins will be moved to be part of the mule-maven-plugin, we need at least to get the proper names to avoid confusion in the future."""
"MULE-13336","Bug","Service: HTTP",1,"Update Grizzly to version 2.3.33","""We need to update the Grizzly version to 2.3.33 since that one fixes a performance issue quite severe and a regression introduced by that fix."""
"MULE-13334","Bug","Core: Exception Handling",2,"Log entry for source errors does not show the location of the failing source","""When the MessagingException for a source error is created, it should pass along the failing source, so it is properly appended to the log for troubleshootung.         Currenty it shos just *Element: null*"""
"MULE-13332","Bug","Service: HTTP",1,"ERR_INVALID_RESPONSE when using HTTP listener an a DW transformation that has errors","""Provided configuration has an HTTP listener (GET) and does a transformation, it is expecting to get a query parameter and if users don't pass this param the script fails but the response cannot be interpreted by browser as it has the following content:    Headers:    This in Google Chrome ends up with a page saying that ERR_INVALID_RESPONSE which is very annoying.    Seems that content-type: application/java is causing this issue, wondering if there is a better way to handle it."""
"MULE-13356","Bug","Core: Logging",1,"Application's log config logs to console when no appender is configured","""When an application contains a log4j2.xml configuration file that defines loggers but no appenders, the log output is directed to the console.    It makes more sense, if in those scenarios, the output is directed to the default application log file instead."""
"MULE-13354","Story","Core: Routing / Filters",8,"Introduce split-aggregate router consistent with scatter-gather","""Consistent with scatter-gather and using ForkJoinStrategies but operating on split parts instead of routes."""
"MULE-13353","Task","Core: Exception Handling",1,"Migrate exceptionPayload from message to new error handling mechanism","""Right now, the implementation of error propagation relying on the ExceptionPayload being set on the message is still present in the Message.    This is used only by the compatibility module.    Uses in the compatibility module must be migrated to the new Mule 4 error handling mechanism and the ExceptionPayload from the message removed."""
"MULE-13364","Bug","Core: (other)",2,"Getting java.lang.NoClassDefFoundError and java.lang.IncompatibleClassChangeErrorafter including CGLIB on core","""After the adding of CGLIB as a dependency of mule-core, the execution of the uber project started to fail with errors as  java.lang.NoClassDefFoundError and java.lang.IncompatibleClassChangeError related to using CGLIB classes."""
"MULE-13361","Task","sdk",0,"Make TNS (aka: this) references be implicit in a <module>","""Once MULE-13317 is implemented, there will be possible to call operations defined within the same module, but the current approach forces the user to add a specific prefix as xmlns:tns with its correpondant namespace Uri and location.    Ideally, all of that can be inferred by the runtime code, making the developer's life easier."""
"MULE-13378","Task","Core: Policies",0,"Wrong classloader being disposed when multiple policy templates are present","""When a policy is undeployed, the first present template is being disposed (and its classloader) instead of the one corresponding to that particular policy"""
"MULE-13376","Task","Tooling Client",0,"Adding validation method to DataWeave service","""Adding validation method to DataWeave service."""
"MULE-13373","Task","Core: Policies",0,"Implement a way to have access to the MuleContext of the policies","""Gateway needs to have access to the MuleContext of the policies in order to enable ServerNotifications for it."""
"MULE-13369","Task","Core: (other)",1,"Disallow reserve characters in global element names","""We need to disallow the use of '/', '[' and ']' as allowed characters in global elements name attributes. This is required so we don't have to scape characters in the component location paths which would make the use of them by clients much more cumbersome. """
"MULE-13367","Task","Core: Deployment",1,"Replace ""maven"" descriptor loaders ID ","""Descriptor loaders ID """"maven"""" used to identify bundleDescriptorLoader and classLoaderModelLoaders in the artifact descriptors has to be renamed to """"mule"""". The reason is that, at least in the case of the classloaderModelLoder, we are using """"maven"""" as the ID, but we are not always using Maven to load it.    We support heavy/light packaging of artifacts. Both are currently using """"maven"""" as the ID, but in the case of heavy package, we are using the classloader-model.json to load the classloader model instead of using Maven."""
"MULE-13383","Bug","Core: Exception Handling",2,"Fix ExceptionReader exceptionReaders list","""ExceptionHelper.exceptionReaders is global for the runtime, but a reader specific for a plugin/app can be registered.         The problem happens when a plugin Reader can process exceptions from the runtime and said plugin is used by more than one application. In that case, the reader selection could be messed up.    The registered readers must be partitioned by app."""
"MULE-13380","Task","Core: Exception Handling",0,"Provide a way to unregister ExceptionReader from ExceptionHelper","""If an extension/application registers an Exception Reader and it isn;t remove un underlay, a class loader leak occurs."""
"MULE-13390","Enhancement Request","Extensions",2,"Missing annotations to describe synthetic type's names","""There's a field named """"type"""" that can be found in severals extensions under TLS -> trust-store -> type, that has a synthetic type that looks like the following:        Those types are missing some annotation (typeAlias?) that we can use to show to the users. Synthetic types are displayed in the same way as regular subtypes, as options in a dropdown, but these above end up rendered as blank options since there's no description/label/annotation we can use as display name."""
"MULE-13389","Enhancement Request","Build: Maven",0,"Provide a reusable utils to query properties from a class artifact's pom","""This is needed for querying pom properties from embedded test cases."""
"MULE-13388","Task","Core: (other)",8,"Spike to support DataSense on MUnit components","""MUnit defines different resources for the application that would be needed in order to define the ApplicationModel needed by DataSense, this story is about researching and implementing support for it."""
"MULE-13385","Bug","Service: HTTP",2,"HTTP server does not close connection with chunked encoding","""Since all content-length/transfer-encoding header logic remains in the HTTP connector, the service server suffers the consequences there mitigated. For example, when used with a simple ByteArrayEntity it sends chunked encoding but never closes the connection meaning no """"0"""" message is sent and clients wait out for it. Silver lining is the client does not explode but takes longer to complete."""
"MULE-13391","Task","Core: API",1,"Clean up BulkOperationResult API","""Clean up that API"""
"MULE-13393","Bug","Core: Deployment",0,"DeployableFileBuilder is including repository folder in artifact jar even with light package","""DeployableFileBuilder, used for building tests artifacts jars, has an option to make the artifact heavy or light. But when light is selected, the final jar still has the repository folder in it."""
"MULE-13399","Bug","Core: Lifecycle",2,"ExtensionManager not stopped while undeploying operation","""Because CompositeExtensionManager doesn't propagate lifecycle to its child extension manager, a memory leak can occur while undeploying operations.     """
"MULE-13397","Bug","Extensions API",8,"SourceConnectionProvider doesn't work as expected","""*SourceConnectionProvider doesn't work as expected*   * _SourceConnectionProvider_ is what is injected into the Sources to be able to create connections.   * {{testConnectivity(Connection connection)}} it should make a test connection with the given connection as the parameter, but what does, is not use the connection and finally fails with an StackOverflow due to a nonstop recursive call.   * {{disconnect(Connection connection}})  it should disconnect and stop the connection but it depends on the kind of the specified ConnectionProvider strategy:   ** If cached or pooled, it will just release it, but won't destroy it.   ** If none, it will disconnect it totally.   * The problem with the disconnect if you want to stop it totally you can't because the connection provider logic in charge of doing that won't be executed."""
"MULE-13396","Bug","Core: (other)",0,"ClassCastException: org.codehaus.plexus.util.xml.Xpp3Dom cannot be cast to org.codehaus.plexus.util.xml.Xpp3Dom when using Tooling Runtime Client","""When loading Tooling Runtime Client on Studio, a class cast exception due to class loading issue is happening:        Full stacktrace:  """
"MULE-13395","Task","Core: Deployment",8,"Fix ignored test DeploymentServiceTestCase#deploysApplicationWithPluginDependingOnPlugin","""After MULE-13393, test deploysApplicationWithPluginDependingOnPlugin of DeploymentServiceTestCase class is failing because now as the test jar is light, it tries to get the plugin from maven repo, and is not there since it needs to be installed first"""
"MULE-13394","Bug","Core: (other)",8,"Reconnect forever retry policy doesn't reconnect at all","""*Reconnect forever retry policy doesn't reconnect at all*   * If you choose the {{reconnect-forever}} retry policy, a {{SimpleRetryPolicy}} is created with the value of  {{-1}}.   * This {{SimpleRetryPolicy}} doesn't have any kind of special logic to handle this case and threats as a common one and no retry is executed.    *Update:*  If the Retry is executed in a blocking way, it works correctly, because it checks if the value is {{-1}} but, if is executed in a non blocking way, it will update the value to {{0}} and stop before any retry is executed    [https://github.com/mulesoft/mule/blob/mule-4.x/core/src/main/java/org/mule/runtime/core/internal/retry/policies/SimpleRetryPolicy.java#L60]"""
"MULE-13411","Bug","Core: Routing / Filters",1,"Foreach counter type should be number and not string","""Foreach counter type should be number and not string to support == with Datsense."""
"MULE-13409","Task","sdk",0,"Add properties that are mapped to config provider rather than config","""To complete the JIRA around MULE-12545, it would be ideal to mark <property>s as configProviders"""
"MULE-13408","Task","Build: Integration Tests",2,"Fix flaky test org.mule.test.module.scheduler.cron.CronSchedulerTestCase.test","""Test fails from time to time  h3. Error Message    reactor.core.Exceptions$ReactiveException: java.lang.AssertionError: Expected: is <5> but: was <7> at reactor.core.Exceptions.propagate(Exceptions.java:219) at org.mule.runtime.core.api.rx.Exceptions.propagateWrappingFatal(Exceptions.java:177) at org.mule.runtime.core.api.util.func.CheckedSupplier.handleException(CheckedSupplier.java:32) at org.mule.runtime.core.api.util.func.CheckedSupplier.get(CheckedSupplier.java:27) at org.mule.tck.probe.JUnitLambdaProbe.test(JUnitLambdaProbe.java:40) at org.mule.tck.probe.JUnitProbe.isSatisfied(JUnitProbe.java:34) at org.mule.tck.probe.PollingProber.poll(PollingProber.java:60) at org.mule.tck.probe.PollingProber.check(PollingProber.java:51) at org.mule.test.module.scheduler.cron.CronSchedulerTestCase.test(CronSchedulerTestCase.java:69) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:748) Caused by: java.lang.AssertionError: Expected: is <5> but: was <7> at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.mule.test.module.scheduler.cron.CronSchedulerTestCase.lambda$test$0(CronSchedulerTestCase.java:71) at org.mule.runtime.core.api.util.func.CheckedSupplier.get(CheckedSupplier.java:25) ... 19 more  h3. Stacktrace    java.lang.AssertionError: reactor.core.Exceptions$ReactiveException: java.lang.AssertionError: Expected: is <5> but: was <7> at reactor.core.Exceptions.propagate(Exceptions.java:219) at org.mule.runtime.core.api.rx.Exceptions.propagateWrappingFatal(Exceptions.java:177) at org.mule.runtime.core.api.util.func.CheckedSupplier.handleException(CheckedSupplier.java:32) at org.mule.runtime.core.api.util.func.CheckedSupplier.get(CheckedSupplier.java:27) at org.mule.tck.probe.JUnitLambdaProbe.test(JUnitLambdaProbe.java:40) at org.mule.tck.probe.JUnitProbe.isSatisfied(JUnitProbe.java:34) at org.mule.tck.probe.PollingProber.poll(PollingProber.java:60) at org.mule.tck.probe.PollingProber.check(PollingProber.java:51) at org.mule.test.module.scheduler.cron.CronSchedulerTestCase.test(CronSchedulerTestCase.java:69) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:748) Caused by: java.lang.AssertionError: Expected: is <5> but: was <7> at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.junit.Assert.assertThat(Assert.java:956) at org.junit.Assert.assertThat(Assert.java:923) at org.mule.test.module.scheduler.cron.CronSchedulerTestCase.lambda$test$0(CronSchedulerTestCase.java:71) at org.mule.runtime.core.api.util.func.CheckedSupplier.get(CheckedSupplier.java:25) ... 19 more at org.mule.tck.probe.PollingProber.check(PollingProber.java:52) at org.mule.test.module.scheduler.cron.CronSchedulerTestCase.test(CronSchedulerTestCase.java:69) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298) at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:748)     """
"MULE-13405","Task","Core: API",8,"Cleanup MuleContextListener and DeploymentListener","""MuleContextListener and DeploymentListener must be updated so they don't provide access to MuleContext.     The also need to provide access to the application objects that are part of the API in the right notification method. For instance, the ConfigurationComponentLocator service should not be acceded during MuleContextListener.onCreate(..) since it won't have a valid state at that point. This is related to MULE-13375"""
"MULE-13404","Bug","Transport: VM",5,"VM Listener fails to release transacted message with numberOfConsumers greater than 1","""See VMTxTestCase.listenerRollback(). When the fake scheduler service was used or if numberOfconsumers=""""1"""" is configured in the vm:listener, then it works. Logging the execution of the transaction methods, it seems a message is poll from the queue within a transaction but the transaction is never rolled back."""
"MULE-13401","Task","Modules: HTTP",1,"Adapt multipart test once DW bugs are fixed","""Several bugs have been reported to DW regarding multipart handling, including:  * mixed subtype having wrong content disposition type  * failure to read content because content type is not inferred  * Binary being forced as type of unknown mime types  * errors trying to read nameless part    As a result some tests are ignored and in others the scripts contain workarounds so when those are fixed they'll need updating."""
"MULE-13400","Bug","Core: Services",2,"All schedulers view allows changing their state","""The scheduling service provides a way of obtaining all schedulers for monitoring purposes. However, this view is not truly read only so users can actually retrieve all schedulers and stop all of them, for example.   We need to avoid this because people are already mistakenly using that to stop their schedulers when leaking them and if done in prod it could be a severe problem."""
"MULE-13422","Bug","sdk",3,"SDK registers invalid errors for extension sources.","""The SDK is registering invalid errors for extension sources, for example """"MULE:SOURCE_ERROR_RESPONSE_GENERATE"""" which is an internal error.    Maybe a simple solution would be to just modify the ExtensionErrorsRegistrant#getErrorType method to use    instead of the    Check tests!       ----  There are some tests ignored because of this issue in ErrorHandlingConfigurationFailuresTestCase. please fix     """
"MULE-13421","Bug","Core: Deployment",0,"MavenUtils is locking pom files","""When reading pom files, the MavenUtils in mule repository is not closing the FileReader, creating a resource leak.   The issue is located at method org.mule.runtime.module.deployment.impl.internal.maven.MavenUtils#getPomModelFolder"""
"MULE-13440","Enhancement Request","Extensions API",13,"Support hooks for before/after execution of chain inner components","""Support hooks for before/after execution of chain inner components"""
"MULE-13435","Bug","Tooling Client",2,"DataSense medatadata fails when the application is running","""Description   The metadata generation fails when the application is running.    Steps to reproduce   1- Create an application with a single flow with a listener and a logger.   2- Run the application.   3- Go to the listener configuration and then just click OK to trigger the metadata calculation.   4- An error message will appear saying that it can't start the application because the address is already in use.     """
"MULE-13432","Bug","Core: Classloading",2,"java.lang.StackOverflowError while loading resource with plugin class loader","""Once XSD were removed there is code that is still trying to load xds and end up in an stackoverflow."""
"MULE-13429","Task","Core: Exception Handling",2,"Separate wrapping logic from ErrorMessageAwareException","""When ErrorMessageAwareException was first introduced, a wrapping logic was added to it. However, this proved to be only necessary for compatibility purposes. It's confusing to use and since it will be the way of propagating error messages we need to fix it ASAP."""
"MULE-13443","Task","Modules: CXF",2,"Upgrade CXF to 2.7.19-MULE-002 patch release.","""Since some fixes were cherrypicked in our fork and a new release is available, we must update this library in runtime."""
"MULE-13450","Enhancement Request","Core: Flow",1,"Do reactiveInterceptorAdapter initialization once per chain","""The injection of ReactiveInterceptorAdapater's must be done at flow initialization instead of event processing."""
"MULE-13453","Bug","Tooling Client",1,"ToolingException: Error while getting URI","""When DataSense tries to resolve the classes root folder an URISyntaxException is thrown:  """
"MULE-13466","Task","mule4",0,"Refactor code in smart connectors","""the module that does the macro expansion is messy.   Fix it."""
"MULE-13460","Enhancement Request","Core: ObjectStore",3,"Add get all keys to actual object store implementation","""Please provide a way to retrieve all keys as in 3.x    Use case:    As a user I want to retrieve a list of objects stored previously using object store.    The idea is to provide an APIKit example to documentation for the RC, as in 3.x and this is the only pending implementation.     """
"MULE-13459","Enhancement Request","Extensions API",8,"Add the concept of Stereotype to connection providers","""Complete later"""
"MULE-13458","Bug","sdk",0,"TNS references with global elements are not macro expanding correctly","""When using TNS references (cyclic) in a module with global elements the references to the global elements went nuts."""
"MULE-13456","Task","Build: Integration Tests",8,"Fix flaky test  org.mule.test.core.context.notification.processors.ComponentLocationTestCase.flowWithAsync","""Test fails frequently on the continuous build and locally  Here is the  log    Error Message    Expected: an empty collection       but: <[IO - [ComponentLocationTestCase#flowWithAsync].io@org.mule.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationInstance.doInitialise:297@668bb2ff{    executor: java.util.concurrent.ThreadPoolExecutor@1ca2c01b[Running, pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 191]    shutdown: false  }]>  Stacktrace    java.lang.AssertionError:     Expected: an empty collection       but: <[IO - [ComponentLocationTestCase#flowWithAsync].io@org.mule.runtime.module.extension.internal.runtime.config.LifecycleAwareConfigurationInstance.doInitialise:297@668bb2ff{    executor: java.util.concurrent.ThreadPoolExecutor@1ca2c01b[Running, pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 191]    shutdown: false  }]>   at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)   at org.junit.Assert.assertThat(Assert.java:956)   at org.junit.Assert.assertThat(Assert.java:923)   at org.mule.tck.junit4.AbstractMuleContextTestCase.verifyAndStopSchedulers(AbstractMuleContextTestCase.java:417)   at org.mule.tck.junit4.AbstractMuleContextTestCase.disposeContext(AbstractMuleContextTestCase.java:382)   at org.mule.tck.junit4.AbstractMuleContextTestCase.disposeContextPerTest(AbstractMuleContextTestCase.java:357)   at sun.reflect.GeneratedMethodAccessor94.invoke(Unknown Source)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:498)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)   at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)   at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)   at java.util.concurrent.FutureTask.run(FutureTask.java:266)   at java.lang.Thread.run(Thread.java:748)  Standard Output    ================================================================================  = Testing: flowWithAsync                                                       =  ================================================================================  WARN  2017-09-04 08:22:23,122 [[MuleRuntime].timer] org.mule.service.scheduler.internal.DefaultScheduler: org.mule.runtime.core.api.scheduler.SchedulerBusyException scheduling next execution of task org.mule.runtime.core.api.util.monitor.ExpiryMonitor(repeatable). Message was: Task org.mule.runtime.core.api.util.monitor.ExpiryMonitor(repeatable) rejected from java.util.concurrent.ThreadPoolExecutor@48406d9d[Running, pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 0]"""
"MULE-13455","Task","Core: Deployment",1,"Remove deployment support for 3.x style domain bundle","""Domain deployment is still using the 3.x bundle format where applications are contained inside the domain artifact.  A new domain bundle deployment will be added on MULE-13454. In the meantime the support to deploy the old bundle format must be removed."""
"MULE-13454","Story","Core: Deployment",8,"Add domain bundle deployment","""Domain bundle consist of a domain artifact and the set of applications that belong to that it.  Deployment service must support the deployment of domain bundles, this implies:  * Detecting new bundles  * Redeploy domain/applications when a new domain bundle is found  * Notify the deployment status of domain bundles  * Provide an API to request deployment of domain bundles from the deployment service"""
"MULE-13482","Bug","Core: (other)",0,"ToolingAetherServiceRegister not a subtype","""Tooling Runtime Client is having class loading issues when loading Aether classes for mule-maven-client:    Full stacktrace:  """
"MULE-13479","Task","Core: API",1,"Bump to JDK8","""Bump mule-common to JDK8"""
"MULE-13497","Bug","Core: ObjectStore",2,"PrivateObjectStore should not have a storeName parameter","""It's to confusing to explain the difference with the name on the os:object-store one. Plus, it's very easy to generate it automatically."""
"MULE-13494","Task","Core: (other)",8,"Cleanup Event downcasts","""Remove the downcasts to BaseEvent, BaseEventContext, InternalEvent and PrivilegedEvent added as part of MULE-13363. This will include some review/move of stuff currently in api to internal.         The change that introduced this is https://github.com/mulesoft/mule/pull/5678"""
"MULE-13492","Task","Build: Maven",2,"Use Java source version 1.8 in pom for 3.9","""Mule 3.9 will support Java 8, not 7. So we should change the corresponding build version in the POMs."""
"MULE-13491","Bug","Core: (other)",0,"Tooling Runtime Client - NoClassDefFoundError: com/beust/jcommander/internal/Lists","""Tooling Runtime Client is having class loading issues when loading descriptors if the parent class loader (Eclipse) doesn't have the jcommander included in classpath. Still the jcommand class should not be used on Tooling Client classes:    """
"MULE-13485","Task","mule4",0,"Improve macro expansion go from O(n^2) to a better order","""Macro expansion for smart connectors takes n*n, improve it."""
"MULE-13509","Task","Build: Integration Tests",0,"Add a watermark test case","""Add a test which simulates a watermark use case."""
"MULE-13507","Bug","sdk",2,"DW Functions namespace should have package in lowercase","""DW Functions namespace should have package in lowercase, and only the last element of the namespace in PascalCase.     We are now setting everything in PascalCase, including the package."""
"MULE-13521","Bug","jms-module",3,"JMS does not communicate properly it's ExternalLibs","""JMS does not communicate properly it's ExternalLibs, thus the IDEs cannot help the user to configure the application."""
"MULE-13516","Task","Test: Testing Framework",2,"TestRunner not validating override of lookup strategy","""When a plugin exports a package already exported as privileged by the runtime, the applications fail with the error:      But the integration tests that tests the same code run without problem. The integration tests must fail consistently in the same way as an application.    Also, the message mentions `system package`, but in this case it should say it is privileged."""
"MULE-13513","Bug","soap",5,"SOAP Service does not support One Way operations","""When calculating output metadata with SOAP Service, I am getting a NullPointerException.    1. Get the code from here: https://github.com/mulesoft/oracle-ebs-connector/commit/bd817b2cc3bfdf971274ac68c8020994f815bd7e  2. Build the connector with {{mvn clean install -DskipTests}}  3. Set a breakpoint on PLSQLTypeMetaDataResolver, line 60 (getOutputType method).  4. Run PlSqlMetadataTestCase in debug mode.  5. When the breakpoint reaches the aforementioned line, evaluate it. It will throw a NullPointerException, with the following stacktrace:    This is using the absolute latest SDK (1.0.0-SNAPSHOT), since it fixes another bug we were having, MULE-13481.        It should be noted that when the Output Metadata logic fails, Input Metadata, although successfully calculated, is discarded and not provided. I'm not sure if this is by design, but I just wanted to point that out."""
"MULE-13548","Enhancement Request","Core: Registry",1,"Ensure the following components can be injected","""Ensure the following Classes can be injected by @Inject in any bean that required so.    This also includes those beans that are bootstraped:   * ErrorTypeRepository   * ExtendedExpressionManager   * SchedulerService   * MuleRegistry      """
"MULE-13546","Task","Core: Deployment",0,"Support deployment time configuration in Mule 4","""Move changes done in 3.x to support customization of deployment with properties to mule 4"""
"MULE-13540","Task","Core: API",8,"Remove processor from API","""Processor should not be part of core API.    Only internal/privileged usages.    Provide support to give callback to test:processor if necessary"""
"MULE-13535","Task","sdk",3,"Remove ParameterRoleTypeAnnotation","""No longer makes sense, fields are always BEHAVIOUR"""
"MULE-13533","Task","Core: (other)",1,"Support includeTestDependencies when resolving classloader model as deployment property ","""Support to includeTestDependencies from deployment """
"MULE-13532","Task","Core: (other)",2,"EmbeddedContainer should allow to do an Application lazyInit with parsing validations on ","""EmbeddedContainer should allow to do an Application lazyInit with parsing validations on"""
"MULE-13530","Bug","Core: ObjectStore",2,"Queue and ObjectStore managers not properly overriden when in Cluster","""The SpringRegistryConfigurator is handling the entries in the customization service wrongfully, causing queues and object store to not work correctly when in cluster."""
"MULE-13557","Bug","Core: (other)",1,"Jar content cannot be read by URL.openStream() on Windows","""Jar content cannot be read by URL.openStream() on Windows    This is making CompressedTypeResolverLoaderTestCase tests on metadata-model-api module fail on     {{org.mule.metadata.catalog.internal.builder.TypesResolverBuilder#createFromUrl}}    when executing     _schemaUri.toURL().openStream()_    with message    _JAR entry schemas/type1-schema.json not found in C:\Users\HERNAN~1.WIT\AppData\Local\Temp\junit7575768859740793034\catalog-001.jar_    Tests are successfully executed on Ubuntu. Also if resource is on jar root no exception is thrown."""
"MULE-13555","Bug","Extensions API",3,"Extension cannot extend a stereotype from another extension","""StereotypeDefinition interface is missing the concept of namespace.    Otherwise, it's impossible to do something like this:              In the example above, there's no way to specify that the parent definition is to have the FTP namespace. This is made even worse by the fact that the stereotype that I'm trying to extend is an implicit one.    Things that should happen:   * StereotypeDefinition should have the concept of namespace   * It should not be necessary for an extension to implement the getNamespace() method on each of their StereotypeDefinition implementations   * No extension should be able to declare a stereotype of a namespace other than its own, but they should be able to use a stereotype from another extension   * MuleStereotypeDefinition class should no longer be a marker interface but an actual class which namespace is a final method returning MULE     """
"MULE-13552","Bug","Transport: FTP / SFTP",2,"SFTP SecureRandom implementation hangs on OpenJDK 8","""OpenJDK 8 on Linux is configured by default to use securerandom.source=file:/dev/random    This implementation will hang when the entropy pool is empty, until there is enough environmental noise.    See [http://bugs.java.com/view_bug.do?bug_id=6521844]    To reproduce, just run the FTP connector tests on Ubuntu 16.04 and OpenJDK8_u131 and see they will hang while generating the SecureRandom.    A workaround, is to change the SecureRandom implementation on the OpenJDK.    This can be achieved by editing the {{java.security}} file inside    {{/etc/java-8-openjdk/security}}    and commenting the following line    {{securerandom.source=file:/dev/random}}    or changing it to    {{securerandom.source=file:/dev/urandom}}         The SFTP connector should be able to select an appropriate SecureRandom implementation to avoid this issue.    If this is not possible, it should be properly documented.     """
"MULE-13571","Bug","Modules: HTTP",2,"Request hanged if response statusCode is less than 200","""When setting the response/error-response status code in the listener, if the number is less than 200, the request gets hanged.  There are certain statuses that may have particular behaviour. We should analyse what to do on each of them, but the main goal here is to fail when receiving the invalid ones."""
"MULE-13570","Bug","Tooling Client",2,"Missing default values in Core Extension Model","""Default values are missing from some operations when walking over the core extension model. For instance, frequency, start delay and time unit default values are missing in the scheduler operation.   Also, we need configuration-properties in the core extension model so we can add <configuration-properties file=""""mule-artifact.properties""""/> to the config"""
"MULE-13561","Bug","sdk",3,"Extensions Generated Documentation does not include descriptios for types.","""When generating the extensions documentation. the types are not being populated with description nor if they are required or not."""
"MULE-13575","Bug","Modules: File",8,"File connector tests using locks fail on Windows","""File locks and permissions in File connector appear to be causing issues when running on Windows.    To reproduce, run the following tests which are failing on Windows:  """
"MULE-13574","Bug","Core: (other)",0,"Fix ContainerConfigurationTestCase","""Fix ContainerConfigurationTestCase after agent changes the response of the API"""
"MULE-13595","Bug","Tooling Client",0,"Resource File not found in Tooling Test","""The situation is as follows:  We have a connector (Kafka, see [https://github.com/mulesoft/kafka-connector/tree/develop-4.x)] that has 2 connection properties (keyStoreLocation and trustStoreLocation) that are Files.  When setting the relative path of the files and configuring the mule-artifact.json file to export them, they work as expected when running the application. But when we try to do a Test Connection, they fail with a NullPointerException due to the class loader returning null when fetching those properties.  We've also created a Tooling Client Test ([https://github.com/mulesoft/connectors-integration-tests/blob/kafka/src/test/java/org/mule/module/netsuite/integration/KafkaIT.java)] that is also failing due to the same error."""
"MULE-13593","Bug","Extensions API",5,"SDK Non Blocking operations only work with the ReflectiveOperationExecutor","""*SDK is not following the Liskov Substitution Principle for privileged non blocking extensions.*    When having a privileged extension that contains a non blocking operation with a custom executor, the operation defined in the `Operation` class receives a CompletionCallback in order to mark the operation as non blocking, but when implementing the actual executor such callback is not used so we end up waiting forever to that callback to be executed.        this can be seen in ReactiveOperationExecutionWrapper#process , which is used to execute nonblocking operation """
"MULE-13592","Task","Core: API",0,"Remove mention to spring on api packages for mule-module-spring-config ","""The api package for the module contains spring, there should not be mentions to spring on the package:    A possible change could be  """
"MULE-13606","Bug","sdk",3,"Soap connect is fetching services multiple times","""Soap connect is fetching services multiple times"""
"MULE-13601","Task","Core: (other)",1,"Add missing License Header in core extensions","""Add missing License Header in core extensions"""
"MULE-13600","Task","mule4",2,"Fix ExpiredShutdownTimeoutRequestResponseTestCase Tests","""*Fix ExpiredShutdownTimeoutRequestResponseTestCase Tests*    There are two tests failing and we lost track of when both of this started failing.    # testScriptComponent()   # testExpressionTransformer() """
"MULE-13599","Bug","sdk",3,"WSC is putting the body DataType in the response object instead of in the body field","""WSC is putting the body DataType in the response object instead of in the body field    This is breaking Message History when serializing the whole payload."""
"MULE-13608","Bug","Tooling Client",3,"ClassNotFoundException in HTTP Request","""Trying to configure """"HTTP Request"""" setting to any URL i.e [http://www.google.com|http://www.google.com/] throws an exception.    App:         Stacktrace:  """
"MULE-13607","Bug","Modules: HTTP",2,"HTTP requester is using body media type to determine response one","""While attempting some other changes I realised the HTTP request component was using the request body mime type in case the received response didn't return a content type. This is fundamentally wrong since sending a JSON payload does not mean expecting one back. It is specified that when an HTTP message has no content type then application/octet-stream should be used as default (https://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7.2.1)."""
"MULE-13623","Bug","Core: Deployment",2,"muleRuntimeConfig.maven.repositoryLocation property ignored when set in command line","""Using command line property to set repository location doesn't affects mule.  ./bin/mule M-DmuleRuntimeConfig.maven.repositoryLocation=/Users/username/.m2/repository    When following line is executed, the mavenConfig is built with a default value based on muleBase directory:    https://github.com/mulesoft/mule/blob/mule-4.x/modules/global-config/src/main/java/org/mule/runtime/globalconfig/api/GlobalConfigLoader.java#L61"""
"MULE-13619","Enhancement Request","Core: Deployment",1,"Enable Lazy init to run XSD validations ","""Lazy init allow an invalid application to start as this is not a problem for tooling use case.    For the MUnit use case if an application containing an invalid XML (invalid because it doesn't match the XSD definition) deployment/starting of the application should fail with the proper error. """
"MULE-13631","Bug","Extensions API",5,"Processing two Chains in parallel halts execution ","""Given the following operation:  {code}    public void myRouters(@Optional BeforeCall beforeCall,                          @Optional AfterCall afterCall,                          RouterCompletionCallback callback) {      Result result1 = Result.builder().build();      Result result2 = result1.copy().build();      Thread thread1 = new Thread(new RunChainThread(beforeCall.getChain(), result1));      Thread thread2 = new Thread(new RunChainThread(beforeCall.getChain(), result2));      thread1.start();      thread2.start();      try {        thread1.join();        thread2.join();      } catch (InterruptedException e) {        callback.error(e);      }      callback.success(Result.builder().build());    }      private class RunChainThread implements Runnable {        private final Chain chain;      private final Result result;        RunChainThread(Chain chain, Result result) {        this.chain = chain;        this.result = result;      }        @Override      public void run() {        Latch latch = new Latch();        chain.process(result, (result -> {          System.out.println(""""Finished running """" + result);          latch.release();        }), (error, result) -> {          System.out.println(""""Finished with error """" + error);          latch.release();        });        try {          latch.await();        } catch (InterruptedException e) {          e.printStackTrace();        }      }    }  {code}    Where BeforeCall and AfterCall are *Router*.    And having the following flow in a FunctionalTestCase    {code:xml}      <flow name=""""testTwoThreadsSameChain"""">          <munit-tools:my-routers>              <munit-tools:before-call>                  <logger message=""""EXAMPLE""""/>              </munit-tools:before-call>          </munit-tools:my-routers>      </flow>  {code}     Makes the execution halt    Things to take into account:  * The processing of the chain is made blocking  * Wrapping the chain in a synchronized block solves the issue     """
"MULE-13628","Task","Tooling Client",2,"Create ExtensionModel DTO Serializer","""Create ExtensionModel DTO Serializer so it can be used by Mozart and Exchange. """
"MULE-13636","Bug","sdk",1,"wsdlLocation is in the wrong group in WSC.","""wsdlLocation is in the wrong group in WSC."""
"MULE-13660","Bug","Core: Concurrency / Threading",1,"SimpleUnitTestScheduler keeps recurrent tasks running after stop()","""Ensure that when a test is finished, all recurrent tasks created as part of that test are cancelled."""
"MULE-13659","Enhancement Request","Extensions API",2,"Add the concept of ConnectionProvider which doesn't support connectivity testing","""ExtensionModel needs to communicate that to allow tooling not to show the testing button"""
"MULE-13647","Task","Tooling Client",1,"Use Deployment Properties to disable logging on tooling applications","""Revert MULE-13253"""
"MULE-13637","Enhancement Request","Extensions API",5,"String and Binary operations should always have a mime type","""Operations which return a String or an INputStream should always be forced to specify a mimeType. That miemType needs to be automatically set on the return value but needs to also be overridable from a Result object"""
"MULE-13673","Bug","sdk",1,"Wrong prefix used when generating extension documentation","""Wrong prefix used when generating extension documentation"""
"MULE-13671","Enhancement Request","Transport: FTP / SFTP",5,"Split FTP and SFTP connectors","""Split them up"""
"MULE-13670","Task","Core: (other)",2,"Make sure all serializable classes have serial version uid","""Make sure all serializable classes have the serialversionUid defined so they can still be read after being changed in future versions."""
"MULE-13668","Bug","Core: Configuration",2,"Lazy Init should refresh ConfigurationComponentLocator","""Lazi init should refresh the content of the ConfigurationComponentLocator before each initialisation.     This way the locator should only show those element that belong to the current minimal app.     Now, as it's not being refreshed, successive runs in the same container accumulates components in the ConfigurationComponentLocator causing that searches in the locator return components in unstable states (not init for instance). """
"MULE-13667","Bug","Core: Configuration",2,"Component locations file is not well populated","""The component locations in the application model provide the file in which the element is located as well as the line number.    Sometimes this value only holds the name of the file.    Some other times this value holds the relative path of the file.    Suppose the file is located under src/main/mule/my/pacage/file.xml, it can come as:   * *file.xml*   * *my/pacage/file.xml*    It should always be the full(relative) path: *my/pacage/file.xml*          """
"MULE-13665","Task","Core: Event/Message",2,"Move BaseEventContext to privileged API","""-Also, rename it to CoreEventContext.-    Check usages in MUnit and apikit"""
"MULE-13687","Bug","Tooling Client",2,"ExtensionModel DTO missing the ErrorModel attribute","""ErrorModel DTO is not being used, although it was implemented.   Add test to validate. """
"MULE-13686","Task","Tooling Client",2,"ExtensionModel DTO missing the ErrorModel attribute","""ErrorModel DTO is not being used, although it has been implemented.  Add test to validate. """
"MULE-13682","Bug","Modules: Email",5,"Rework Email Errors","""*Rework Email Errors*    Email errors don't cover a lot of cases, we need to review it ASAP."""
"MULE-13679","Task","Core: Exception Handling|Core: Non-Blocking",2,"Remove reactor operator error hook","""The current mechanism for handling error in reactor relies on registering a hook to translate any exception to a MessagingException.    It should be migrated to use https://projectreactor.io/docs/core/release/api/reactor/util/context/Context.html keeping into account that many plugins with just api access may want to use that.    Ref: http://projectreactor.io/docs/core/release/reference/docs/index.html#context"""
"MULE-13677","Enhancement Request","Build: Integration Tests",0,"Add a way to export additional container packages for integration tests","""Some integration tests for the container need to access packages that are not part of the API. There has to be a way to be able to export those packages for testing purposes as it is not possible to refactor all the tests to avoid it.    This new feature must be available only until those tests can be adapted to avoid using non public APIs."""
"MULE-13675","Bug","Core: Exception Handling",2,"Cannot use ConfigurationComponentLocator to get a component of the default error handler for a flow","""When using a default error handler, its chain is used as a template to create an error hadler in the flows.    When using ConfigurationComponentLocator, it is impossible to get the processors of the default error handler for a flow. The components hava a path like:        Note there is no *processors* as expected and an extra index.    Also, when using such path to query the component, the template is retrieved instead of an actual processor in a flow. So, at leats the lifecycle status of it is wrong (see ignored test ErrorHandlerLifecycleTestCase#testLifecycleDefaultErrorHandler)"""
"MULE-13703","Bug","Extensions API",2,"ExtensionModelJsonSerializer is removing errorModels for Mule Core ExtensionModel","""When serializing and deserializing Mule Core extensionModel the errors are not persisted.   ExtensionModel object has:    But the json output only has one and empty array in all the errors fields:    Even if the same json serialized is deserialzed the ExtensionModel instance has no errors (assuming that at least the whole hierarchy should be dynamically generated). """
"MULE-13702","Task","Build: Integration Tests",2,"Fix flaky tests that uses test maven artifacts","""Tests like ApplicationDescriptorFactoryTestCase and  DomainDescriptorFactoryTestCase use Mule artifacts that depend on connectors that are not part of the project Maven's reactor. (ex: HTTP and Sockets connectors)    This causes that those tests to be flaky, as those dependencies are not always on the Maven repo used to build the project and aether is not able to download them for some reason.    Besides that problem, Mule CE must not depend on any connector to avoid implicit cyclic dependencies and building against out of data versions"""
"MULE-13701","Enhancement Request","Core: Classloading",8,"Add a way to patch partially Mule 4 services","""Like in Mule 3.x plugins, it would be useful to be able to provide partial patches for services like DataWeave. Currently this forces to provide full patch replacements for services, making it very complex to handle and tracking multiple fixes in the same installation.    It could be implemented as a new directory that takes precedence in the classloader, like lib/user for provided libraries."""
"MULE-13696","Task","Tooling Client",0,"Update to Agent Version 1.9.0 on Tooling Client","""."""
"MULE-13695","Bug","Core: Deployment",1,"Wrong validation of product type in mule-artifact.json files","""When an artifact indicates an invalid required product (like MULE_CE when only MULE and MULE_EE are valid) the error message obtained when the plugin is used is the following:    When it should say something like """"MULE_CE is not a valid product"""""""
"MULE-13694","Bug","Core: (other)",8,"Provide support for fetching all the xsd dependencies from a xsd file","""We should include a new functionality to obtain all the dependencies (import/include) from a XSD file in order to copy all the necessary files when the user uses that kind of files."""
"MULE-13715","Bug","Core: (other)",2,"Logger component does not support parse in DW","""Logger component does not support parse in DW"""
"MULE-13727","Task","Core: (other)",1,"Update spring schemas to 3.9","""Update spring schemas to 3.9  """
"MULE-13725","Bug","Transport: VM",5,"No way to limit VM Listener message consumption","""VM Listener consumers are consuming messages from the queue right after dispatching the message to the flow. This causes that if I have maxConcurrency=""""1"""" in the flow and numberOfConsumers=""""1"""" in the listener, the listener will still consume messages from the queue and fail when dispatching the message to the flow with an OVERLOAD error type.    I should have a way to consume messages one by one without losing them.    There are a couple of system tests ignored because of this."""
"MULE-13723","Bug","Modules: HTTP",0,"Support out-of-browser applications in OAuth module redirect url","""In case an out of browser redirection, avoid creating the http listener."""
"MULE-13720","Bug","sdk",5,"WSC value providers should use the same mechanism as the runtime to parse de wsdl","""WSC value providers should use the same mechanism as the runtime to parse de wsdl"""
"MULE-13739","Bug","Extensions API",5,"Wrong HTTP and WSC stereotypes ","""In the WSC connection provider there's a field with the following stereotype model:        And the HTTP's request config has the following stereotype:        The stereotype model in the WSC field should have the http namespace in upper case, and the type of the stereotype of the HTTP config should be """"requestConfig"""" instead of """"CONFIG"""".    Also, there's an inconsistency between regular parameters and fields (ie, inside a pojo), because the parameterModel accepts an array of allowedStereotypes, while the fields accept only one stereotypeModel."""
"MULE-13733","Enhancement Request","Extensions: Maven Plugin",0,"Avoid the need of the UBER_BRANCH in extensions-maven-plugin","""Avoid having to maintain an extra branch for mule-extensions-plugin, while keeping a practical way to disable extension model generation in uber builds for reduced build time."""
"MULE-13732","Bug","Core: Transformers",8,"GraphTransformerResolver is not handling correctly concurrency access","""GraphTransformerResolver is not correctly synchronizing the access to the graph implementation through the strategy (graph implementation does not support concurrency).  """
"MULE-13750","Bug","Core: API",2,"UntilSucessful and FirstSuccessful are missing from Mule ExtensionModel","""UntilSucessful and FirstSuccessful are missing from Mule ExtensionModel,"""
"MULE-13749","Bug","Core: (other)",2,"FixedFrequencyScheduler and CronScheduler should be API but has package Internal","""{{org.mule.runtime.core.internal.source.polling.FixedFrequencyScheduler}}    and    {{org.mule.runtime.core.internal.source.polling.CronScheduler}}    should be moved to `core.api`"""
"MULE-13743","Enhancement Request","sdk",8,"Support for Dynamic metadata for SourceCallback response parameters","""Add support for Dynamic metadata for the types of these response parameters, since metadata makes no sense for configuration parameters, but add's value for parameters that support expressions, which is the case for the response parameters.     """
"MULE-13757","Bug","sdk",1,"@Export annotation not exporting resources","""When using the @Export in a SDK extension and specifying both classes and resources, the resources don't end up being exported in the mule-artifact.json    Example Extension definition      Resolved json    """
"MULE-13755","Bug","Core: Deployment",1,"Is not possible to determine if a serialized MuleDeployableModel is valid","""When a MuleDeployableModel is deserialized form a mule-artifact.json is not possible to determine if the json file contained a given attribute or not.     For example, if a mule-artifact.json does not contains the configs attribute, then the generated     MuleDeployableModel will have a null configs attribute, until the getConfigs method is invoked. At this point, an empty list will be assigned to that field. So, if we want to determine if the configs element was configured or not, there is no way to distinguish a non configured attribute from an attribute configured with an empty list.    This distinction is needed from the packager plugin in order to determine whether or not a default value has to be autogenerated for it."""
"MULE-13774","Task","Modules: HTTP",2,"Add notifications to HTTP request","""Notifications were removed from the HTTP requester because the API to handle them from extensions had not been defined yet. We need to bring those back."""
"MULE-13773","Bug","Tooling Client",8,"OOM Metaspace while resolving DataSense on Tooling Runtime Client","""Seems that when Tooling Runtime Client has heavy load the approach of keeping ClassLoaders alive for ExtensionModels is generating a Metaspace issue."""
"MULE-13760","Enhancement Request","Extensions API",1,"ConfigOverride type annotation should be private","""Make it private"""
"MULE-13785","Task","Build: Distributions",1,"Remove support for properties descriptors in service and server plugins","""Container still supports services and server plugins packaged using the old model. This support must be removed before going GA."""
"MULE-13784","Task","Build: Distributions",1,"Remove support for properties descriptors in service and server plugins","""Container still supports services and server plugins packaged using the old model. This support must be removed before going GA."""
"MULE-13783","Task","Core: Components",2,"Update logger to use DW logging function","""Update logger to use DW logging function"""
"MULE-13782","Task","Test: Testing Framework",2,"Tests plugins must be used on tests only","""There are a couple of Mule plugins used for testing purposes or for compatiblity plugin.    We need to add extra checks to avoid having those plugins deployed on a productive application, as they are intended to be used only by us."""
"MULE-13797","Task","Tools",1,"Create maven plugin to packager Mule server plugins","""Need a maven plugin to package server plugins for Mule 4"""
"MULE-13792","Enhancement Request","sdk",3,"Soap Service: add flag to log request/response","""Soap Service: add flag to log request/response"""
"MULE-13791","Bug","Tooling Client",1,"Add minMuleVersion method to ExtensionModel DTO","""Add minMuleVersion method to ExtensionModel DTO"""
"MULE-13790","Bug","Core: API",1,"Configs in MuleApplicationModel should be a Set not a List","""Right now the MuleApplicationModel has the configs field which is a list, but this may lead to inconsistent behavior since it allows duplicate values. The field should be a Set."""
"MULE-13804","Bug","Extensions API",5,"extension-model.json still ship in extension binary","""extension-model.json is still shipped in the binary.    Just like the schema, it needs to only be generated as a test-resource but not shipped in the end product"""
"MULE-13802","Task","Core: (other)",2,"Clean up notification helpers to improve performance","""Review, cleanup and simply to avoid the use of caches where not needed in order to improve performance.    - NotificationHelper    - NotificationFiringProcessingPhase    - (maybe others too)"""
"MULE-13820","Bug","sdk",5,"Soap Service is not passing the real soapAction but the soap operation name","""Soap Service is not passing the real soapAction but the soap operation name"""
"MULE-13819","Bug","Core: Classloading",1,"MuleDeployableArtifactClassLoader not registered as parallelCapable","""This may cause contention in classloading."""
"MULE-13818","Bug","Tooling Client",1,"Missing DefaultImplementingTypeModelProperty from Tooling API","""Add mapping and include in API DefaultImplementingTypeModelProperty."""
"MULE-13815","Bug","Core: DSL processing",5,"DslSyntaxResolver should not use class to resolve information about it","""When resolving DslSyntax the class should not be used in order to run this on contexts where class loader for extension is not available."""
"MULE-13837","Task","Core: Flow",1,"Avoid validating flow name for each new source request event","""Avoid validating flow name for each new source request event"""
"MULE-13836","Enhancement Request","Extensions API",5,"SDK Router to  be void","""In MUnit we have an operation called spy which is implemented with an SDK Router     We would like to have that router to return the same even that received regardless what happened in each possible route.     Assuming we have *E1* (event 1) entering the following SDK spy router, where before-call & after-call are routes:     We wish that the event coming out of the spy to be *E1.*     That is, variables, attributes, properties, sessions, message and its payload to remain those that were in E1"""
"MULE-13835","Enhancement Request","sdk",8,"Make the Schema and ExtensionModel generated at compile time","""Make the Schema and ExtensionModel generated at compile or package time. """
"MULE-13833","Bug","Core: (other)",2,"Change default sslType to use the JVM's one.","""Current default sslType is being set to TLSv1 which is old and removed from our infrastructure. Though this does not mean it's being used it does alter the default cipher suites to use in socket scenarios since the list will be very limited. I believe we should use the JVM's default instead."""
"MULE-13831","Task","Core: Flow",8,"Use shared reactor stream(s) rather than once per event  for performance and back-pressure","""Create reactor stream once per source thread rather than once per event.    This issue is required for:  - Performance (but also requires MULE-14113)  - To support back-pressure.    There are a number of options:  - Use single shared stream and synchronize onNext  - Use single shared stream with ringBuffer  - Use a shared stream for each source thread.    Before implementing this, some tests to decide the best approach for performance will be required.  Also need to determine if back-pressure per source thread works in some scenarios, or if we will always need more global back-pressure.    It will be hard to do performance testing of the different options without MULE-14113 complete."""
"MULE-13828","Task","Core: (other)",1,"Avoid resolving notification simple name whenever a notification is instantiated","""Avoid resolving notification simple name whenever a notification is instantiated"""
"MULE-13827","Task","Core: Flow",2,"Remove unnecessary internal message processors in AbastractPipeline and DefaultFlow ","""Remove unnecessary internal message processors in AbastractPipeline and DefaultFlow """
"MULE-13826","Task","Modules: HTTP",1,"Create error message in HttpListenerPolicyPointcutParametersFactory lazily ","""Create error message in HttpListenerPolicyPointcutParametersFactory lazily """
"MULE-13824","Task","Core: API",1,"Add ability to evaluate error message lazily when using preconditions.","""Add ability to evaluate error message lazily when using preconditions."""
"MULE-13850","Enhancement Request","Tooling Client",2,"Make dependencies to distro and agent explicit in tooling modules","""Some tooling modules require the mule distribution to run tests, referencing the maven dependency from a maven plugin.    But not having those dependencies as dependencies of the module causes that module to not wait for the distro build when building the uber, but tries to download it from the repo. This may cause problems because tooling tests end up running with an out-of-date distro."""
"MULE-13847","Bug","Extensions: Maven Plugin",1,"Upgrade maven-shade-plugin to 3.1.0","""Using previous version has the bug https://issues.apache.org/jira/browse/MSHADE-258 which causes the build of the extensions-maven-plugin to fail"""
"MULE-13842","Bug","mule4|sdk",2,"Stereotype name is lost after deserialization of tooling client model","""Stereotype models generated from a POJO field cannot be properly consumed because the name is lost and you only get the information about the namespace and the parent stereotype.    This is affecting the WSC, as the HTTP requester config reference in the transport never reaches to studio, and cannot properly generate the link between the WSC and the HTTP extension models"""
"MULE-13841","Task","Test: Testing Framework",0,"Allow to reuse runner config without inherit all the config attributes","""ArtifactClassLoaderRunnerConfig annotation used to configure test that run with    ArtifactClassLoaderRunner are currently scanned and the attributes for all the found configurations are merged into a new config.    This approach is useful to inherit some attributes like testInclusions/inclusions or providedExclusions but not so useful for attributes like sharedRuntimeLibs and     extraPrivilegedArtifacts. The difference between those attributes is that the latest ones are validated against the pom for each executed test, requiring that the dependencies defined on those attributes are also defined on the pom.    As some base test classes are reused from other modules, we want to reuse the code on those tests, but not necessarily to have the same classloader configuration. (shared libs for example)    So, the idea is to inherit all the attributes that define inclusions/exclusions but only use the attributes that define dependencies from only one configuration."""
"MULE-13853","Bug","sdk",3,"MetadataKey Serializer brokes with MetadataKeys with more than two levels","""*MetadataKey Serializer brokes with MetadataKeys with more than two levels*    * The *MetadataKeyTypeAdapter* is not reusing correctly the *gson* instance and looses the capability of deserialize correctly child keys.    """
"MULE-13852","Task","Tooling Client",2,"Create master branch and 0.9.x on Tooling Runtime Client","""This will allow to deliver the two versions of Tooling (0.9.x and 1.x). Also define the mapping for implementation version on 0.9.x and review deployment scripts."""
"MULE-13864","Bug","Core: Policies",2,"LinkageError when disposing app with policy","""When an app with a policy applied is disposed, a stack trace with a LinkageError appears:        This can be reviewed executing most of the tests in ApplicationPolicyDeploymentTestCase in mule's project. The stack trace appears in the console"""
"MULE-13863","Bug","Core: (other)",2,"Notifications fail in test:processor when flow executions wait","""In the test HttpListenerOverloadTestCase, remove enableNotifications=""""false"""" from http-listener-overload-config.xml so that notifications are enabled and run it."""
"MULE-13860","Bug","Core: Event/Message",2,"Unable to fetch the CorrelationId from message","""*Unable to fetch the CorrelationId from message*    In Mule4 the user is unable to fetch the Correlation ID of the message.    Review if this is still necessary for Mule 4"""
"MULE-13856","Bug","Core: Transactions",8,"Begin a TX inside of another should make the app fail instead of commit the original TX","""With the current Mule Config:    *Current Behaviour*:   When trying to execute the second *try* scope, the original TX will be committed, as consequence the *operations1* will be executed inside the first TX, *operations2* will be executed in the second TX, and *operations3* which statically should be executed inside the first TX, it will be executed outside of any TX because the corresponded TX is already closed.    *Expected Behaviour* :   If a TX is tried to be opened inside other TX this should fail.    *Things to consider*:   * *ALWAYS_BEGIN* loses any kind of sense to keep existing, because in any case that you force to create a new TX, or it will be created because no previously was created this means the same behaviour as *BEGIN_OR_JOIN*.   * The current behaviour of the *ALWAYS_BEGIN* as the JavaDocs say is the equivalent of the J2EE's *RequiresNew*, but the expected behaviour if the *RequiresNew* is totally different when a new one is required, the original TX is suspended for the execution of the new one, behaviour that doesn't occur in Mule.   * If *ALWAYS_BEGIN* keeps existing, and this construction is invalid, this could be validated in a future when """"compiling"""" the application."""
"MULE-13871","Bug","Transport: VM",5,"VM consume operation collides with listener","""Publish operation validates that no message is posted to a queue for which a listener doesn't exist. However, the consume operation exists. This generates two problems:   * Race condition between the consume operation and the listener   * If two apps in a domain are using VM to communicate with each other and one gets undeployed, the other would fail to publish messages because there's no listener anymore.    This validation needs to be lifted. On the contrary, the consume operation has to validate it's not trying to pull from a queue for which a listener exists."""
"MULE-13867","Bug","sdk",2,"Enum config parameters are not set correctly","""We are migrating ServiceNow from RC to SNAPSHOT.  Its SoapServiceProvider implementation, BasicServiceProvider, has this configurable parameter:        When attempting to run the functional tests, it's trying to set that default string into the config, and fails because the attribute is not a string.  This used to work fine in RC.    Log is attached.    Steps to reproduce:    1. Get the code from https://github.com/mulesoft/servicenow-wsdl-connector/tree/SNOWW-71  2. Run any of the functional tests  If an automation-credentials.properties file is needed, let me know."""
"MULE-13884","Bug","Tooling Client",2,"Exception are logged everytime you invoke metadata propagation","""Whenever Studio invokes the tooling client to get propagation in an app, the following exception is logged:      The app has the following lof4j.xml configuration:      This is the default configuration we are creating for every single app."""
"MULE-13877","Bug","Core: Configuration",2,"ComponentModel#getNameAttribute for configuration tag return null","""Have a mule config with a configuration tag (for instance, for setting a global error handler).    When calling ConfigurationComponentLocator#findAllLocations(), the location for the configuration returns the string """"null"""". I traced this to ComponentLocationVisitor line 98, where it returns null."""
"MULE-13876","Bug","Tooling Client",2,"MetadataKeyIdModelProperty NotExportedClassException on Tooling Client when loading extension model",""""""
"MULE-13874","Bug","Core: Concurrency / Threading",2,"DefaultScheduler#shutdownNow returns tasks that have already ran","""The tasks that are returned in shutdownNow are stored in the scheduler.    It is storing the tasks that shouldn't be returned ant they end up taking a lot of memory that is not GC'd."""
"MULE-13873","Bug","sdk",3,"SFDC Connector failing while trying to delete records by id","""Referred to the attached Mule App, SFDC Connector fails while trying to delete a record by id.    As:    is being ignored, the dafault value #*[payload]* is taken. The result is the following exception:              Steps to reproduce:   # Unzip sfdc-example.zip   # Import to Studio 7.rc with File - Import Projects from System or Archive   # Run the Mule App   # Make a POST call to [http://localhost:8081/]          """
"MULE-13894","Bug","Core: (other)",8,"DataSense not working for plugins that defined Routes with SDK","""Tooling Client is not able to load the componentBuidlingDefinitionProvider for plugins that define Routes.    It is trying to access a class for resolving the parsers for Route:  """
"MULE-13893","Task","Core: Non-Blocking",1,"Upgrade reactor to 3.1.1","""https://github.com/reactor/reactor-core/releases/tag/v3.1.1.RELEASE"""
"MULE-13891","Bug","Core: Streaming",5,"Non repeatable streams are not managed to guarantee closing them","""When using non repeatable streams these are not managed since none of the repeatable capabilities will be """"injected"""". However, another part of that management is guaranteeing that the streams are closed once the root event is completed. As a consequence, when the scheduler is unavailable and a MULE:OVERLOAD error raised there's no way to close the payload stream.   In the case of the HTTP request operation, zombie streams end up taking over all selector threads and blocking."""
"MULE-13889","Bug","sdk",3,"Stereotype information is lost when used in extension types","""The object store extension contributes with 2 object stores, both annotated with the following annotation:      But this information is not being serialized into the JSON that represents it making impossible for the tooling client to retrieve it.    Because of this, the object store extension cannot be used properly from Studio, as we don't have the necessary information to link all the elements."""
"MULE-13902","Enhancement Request","Extensions API",5,"Support initialisable operation parameters","""Operations can only take parameters defined as method arguments, which are only available when the operation is invoked.    There are cases in which it is necessary to have some parameters already resolved during the lifecycle phase. We should support annotating fields with @Parameters (no expressions supported).         Those parameters should already be resolved at deployment time."""
"MULE-13897","Bug","Extensions: Maven Plugin",2,"Mule Maven plugins must shade mule dependencies","""Otherwise, the mule-uber build fails."""
"MULE-13896","Bug","Service: HTTP",8,"Improve how URIs are created","""URI creation is done in several classes (e.g. HttpResponseToResult, HttpRequestFactory, NameResolvingRequestBuilder), so many are being created more than once."""
"MULE-13905","Task","Core: Exception Handling",1,"Fix flaky error handling unit tests","""Fix those flaky tests"""
"MULE-13906","Task","Build: Integration Tests",2,"Update system test to use a server plugin packaged with the maven plugin","""Migrate com.mulesoft.mule.distributions.server.plugin.MuleManagementTestCase to use server plugins with the new format instead of the one using the old properties descriptor.     Ideally, those server plugins have to be packaged using the mule-server-plugin-maven-plugin"""
"MULE-13915","Bug","Core: Streaming",5,"Streaming Temporal files reused if mule is restarted","""Because of the naming algorithm used when generating the streaming buffer files, if the runtime is restarted, the content from past streams is used instead of the ones from the current streams"""
"MULE-13913","Task","sdk",1,"Move WSDL parser to 1.0.0-SNAPSHOT","""Move WSDL parser to 0.9.0-SNAPSHOT"""
"MULE-13926","Bug","Transport: VM",3,"VM listener drops messages in overflow scenarios","""If the listener generates messages faster than the flow can process them, MULE-13925 and MULE-13924 manifest and the messages are lost.    As a work around, use a <scheduler /> with a transactional <vm:consume> instead"""
"MULE-13923","Bug","sdk",3,"If an SDK Java operation has an Alias with an invalid character a ConfigurationException is thrown ","""If an operation declares an invalid alias an error is thrown:    The following error is thrown:    It would be better to handle this while extension model is generated and hyphenized     """
"MULE-13922","Bug","Core: Deployment",8,"NoClassDefFoundError: org/mule/runtime/core/internal/connection/HasDelegate","""When running any functional test in Oracle EBS Connector, we are getting the attached stacktrace.    The same happens when attempting to run a Mule application using the connector in Mozart QAX.    Not 100% sure if this is an SDK issue or if it's something in the connector. But I know the RC connector used to work.    Steps to reproduce:  1. Checkout oracle-ebs-connector develop branch. This is the latest commit at this moment: https://github.com/mulesoft/oracle-ebs-connector/commit/f74044c6171ed1d3f847e4b5b298b9832bb9b143  2. mvn clean install -DskipTests  3. Attempt to run any functional test case, such as CrudDeltaServicesMetadataTestCase."""
"MULE-13921","Enhancement Request","Connector: DB",1,"Add Value Providers for SubSubProtocols in Derby Connection Provider","""Add Value Providers for SubSubProtocols in Derby Connection Provider"""
"MULE-13920","Bug","sdk",5,"@Stereotypes annotation is not being exported","""@Stereotypes annotation is not being exporteed, there is something is the routers schema generation that is failing when this annotation is being exported."""
"MULE-13919","Bug","Core: Policies",2,"Plugin classloader not re-used when policy has it as a transitive dependency","""When a policy has a direct dependency on a plugin that the app also has, then the plugin classloader is reused. This is not happening when that plugin is not a direct dependency but a transitive one. For example, a policy that defines APIKIT, which has HTTP as transitive.    Was not able to create a test to reproduce this, but we have one in our repo that is failing because of this: https://github.com/mulesoft/mule-raml-validator-policy/blob/1.x/integration-tests/src/test/java/com/mulesoft/anypoint/templates/RamlValidatorPolicyTestCase.java    #badEndpointRequest     Placing a breakpoint in *org.mule.extension.http.api.policy.HttpListenerPolicyParametersTransformer*   in the line     you can verify that *HttpPolicyResponseAttributes* class, was loaded by two different classloaders (one the App's plugin, and the other, the policy's plugin)"""
"MULE-13937","Bug","Tooling API",2,"ConstructModel class is not consistent with ComponentModel in tooling api","""The Construct class (https://github.com/mulesoft/mule-tooling-api/blob/master/mule-runtime-tooling-api/src/main/java/org/mule/tooling/client/api/extension/model/construct/ConstructModel.java#L24) does not include errorModel related information and its getDisplayModel method is inconsistent with the rest of the componentModel implementations as it should return an Optional instead of the sole object."""
"MULE-13935","Bug","Core: Routing / Filters",0,"In Message Filter, unacceptedMessageProcessor is not being notified","""Having the following configuration:           The logger inside the subflow is not being notified through the _MessageProcessorNotificationListener_  This causes that Studio cannot debug MPs inside the subflow and that munit cannot report coverage of the MPs inside the subflow."""
"MULE-13932","Bug","Batch|Debugger",1,"Information of the event is not exposed on the BatchNotification","""For the debugger to work I need to know when a batch job is started and when it's finished. As the interception API does not provide this I added the notifications back to get this information. Right now the BatchNotification does not expose any data on the event that was the source of that job which I need (the correlation id specifically) in order to continue the execution for a particular event."""
"MULE-13928","Enhancement Request","sdk",8,"CorrelationId should be propagated from flow to other flows or systems via connector operations","""When a JMS/AMQP or other messaging connector operation is used (e.g. jms:publish) the Flow correlationID should be propagated via the outbound message as an external correlationID (as defined in the relevant specification).    This is important both from a functional perspective to allow for traceability of transactions across multiple flows and external applications via analytics/insights, log output and customer use of Splunk and other such tools. But is also very important for the supportability of customer solutions by our support team.    Given traceability and supportability is a cross-cutting concern of huge value to users of our platform, propagation of correlationID's for this purpose should happen by default and the user should not need to i) turn it on specifically ii) have any specific knowledge of what specific headers should be configured manually in order to achieve the necessary propagation to achieve traceability and supportability.    This applies to all connectors where the concept of correlationId is present in the spec, but we should seriously consider also using """"X-Correlation-ID"""" on outbound HTTP messages too. (this is not a standard but is best practice). See: http://hilton.org.uk/blog/microservices-correlation-id https://blog.logentries.com/2016/12/the-value-of-correlation-ids/ See: MULE-14085     We already allow for the correlationID to be customised using a DW expression (in some connectors) but the default behaviour, if this is not configured, should be to propagate the flow correlationID.    Note that to achieve traceability/supportability and functionally match Mule 3 in this regard MULE-13927 is also needed.    A future improvement, if there is need for it, would be to not only allow the outbound correlationId to be customized, but to allow it's use to be disabled completely. See MULE-14086."""
"MULE-13927","Enhancement Request","Extensions API",5,"CorrelationId is not propagated from connector sources to Flow","""When a JMS/AMQP or other messaging connector source is used the inbound correlationID (as defined in the relevant specification) should be propagated to the Flow by creating the EventContext using this external correlationID instead of passing null and allowing it to generate a UUID.    This is important because:  - It is a regression from 3.x  - The EventContext javadoc states that external correlationId is available via getCorrelationId()  - This was discussed in detail with use case and reviewed by support when new eventContext/event/message model was defined and current implementation does not match what was defined.  - From a user perspective, it is important that if an external correlationId is present that this is seen in log entries and in insights/analytics records instead of a UUID in the platform.  - From a supportability perspective not maintaining the external correlationID makes it much harder for users and our support team to find/resolve issues.    This applies to all connectors where the concept of correlationId is present in the spec, but we should also consider using """"X-Correlation-ID"""" if present in inbound HTTP messages too.  (this is not a standard but is best practice)    A future improvement should allow the correlationID to be customised in the source using a DW expression DW, but the default behaviour should be to use an external correlationID. See MULE-13930.      """
"MULE-13947","Task","Tooling API",1,"Add search methods by name to ConfigurationModel and ExtensionModel DTO on Tooling API","""Create a way to find an OperationModel in a ConfigurationModel by name. ([link title|https://github.com/mulesoft/mule-api/blob/master/src/main/java/org/mule/runtime/api/meta/model/operation/HasOperationModels.java#L41])    Create a way to find a ConfigurationModel in an ExtensionModel by name. ([link title|https://github.com/mulesoft/mule-api/blob/master/src/main/java/org/mule/runtime/api/meta/model/ExtensionModel.java#L97])"""
"MULE-13942","Bug","Core: Concurrency / Threading",1,"Race condition on Executors startup with SynchronousQueue","""When using a SynchronousQueue on an Executor, even if calling prestartAllCoreThreads(), a race condition may occur where the worker threads are started but before it starts to take elements from the queue, the user of the Executor dispatches some task to it. <p> In that case, the task will be rejected. To avoid this, a wait is forced until the core thread is actually taking tasks from the queue."""
"MULE-13966","Bug","Core: Expressions",2,"Lookup function is propagating previous message mime type","""It should only handle java inputs but it's taking those values with the mime type of the previous message."""
"MULE-13965","Bug","Test: Testing Framework",1,"HttpServerRule port range starts at 0","""Fix HttpServerRule and FreePortFinder"""
"MULE-13956","Bug","Core: Exception Handling",2,"Mule should not log OVERLOAD errors caused by flow back-pressure at ERROR level","""Mule should not log OVERLOAD errors at ERROR level to ensure that when mule is overloaded is performance is not degraded."""
"MULE-13954","Bug","Core: Transactions",2,"Tests using TransactedPollingMessageReceiver generate very big logs","""The receiver is continuously polling which fails because a transaction is not active. Tha exceptions is handled and logged.    Since the polling is continuous, the logging generated is very big."""
"MULE-13953","Bug","Tooling API",1,"Serialization error for MavenConfiguration on Tooling API","""An error ocurred while bootstraping Tooling:  """
"MULE-13951","Bug","Tooling Client",1,"Tooling client bootstrap hangs because of missing org.slf4j.impl.StaticMDCBinder","""Tooling client bootstrap hangs at start because of missing MDC binder:    Error:  """
"MULE-13950","Bug","Test: Testing Framework",1,"NullPointerException in performance tests that create a MuleContext","""When running the benchmark tests that create a MuleContext, a NullPointerException occurs in the ObjectStoreManager initialization"""
"MULE-13949","Bug","Tooling API",2,"Tooling MetadataCache should allow clients to know if metadata resolution has failed","""This will allow clients to avoid caching failure metadata results. Or if needed they could allow customers to invalidate the failure metadata."""
"MULE-13979","Task","Core: Logging",2,"Find a workaround for not having to detect policy logger context in runtime","""After resolution of MULE-13918, an additional conditional for detecting if a classloader owner is a policy was added in ArtifactAwareContextSelector.    This might reduce performance a bit since this is calculated at runtime. The idea is to find a way to cache this, to avoid that calculation"""
"MULE-13977","Bug","Tooling API",1,"ClassDefNotFound when using MetadataCache","""When using MetadataCache the proxy tries to create an internal class and when using this on different contexts (isolated, such Eclipse/Studio) the implementation class has to be exported too.    Instead Tooling API should already provide an implementation on API for this class. """
"MULE-13973","Task","Service: HTTP",1,"Improve header handling performance in ResponseCompletionHandler","""Avoid querying the headers map after iterating it, to avoid the performance cost of the case insensitiveness of headers."""
"MULE-13971","Bug","Core: Event/Message",1,"Improve performance of cluster UUID generation","""Improve performance of cluster UUID generation"""
"MULE-13987","Task","Extensions API",8,"PoC on how make the SDK work with the AST","""Think about all the things are required to make the SDK work with AST and be able to support the SDK IDE.    In a long-term this work should imply:   # The AbstractAnnotationProcessor should work with either Java Classes and AST.   # Improve Error Reporting   ## Indicate which are the fields/classes/methods/annotations with issues   ## Errors should be communicated as errors, warnings as warnings   ## Work over SyntaxValidators and how current validators will work with the AST.     """
"MULE-13983","Bug","Tooling API",0,"Metadata propagation for output variables on a batch job does not work.","""After defining custom metadata for the output variables on a batch job, those variables are not propagated through the flow."""
"MULE-14011","Bug","Tooling Client",1,"ClassCastException: org.mule.runtime.api.meta.model.display.DisplayModel cannot be cast to org.mule.metadata.api.annotation.TypeAnnotation","""When using DSLSyntaxResolver for MUnit Tools munit-tools-2.0.0-SNAPSHOT the following exception on Tooling serialization layer is thrown:  """
"MULE-14009","Bug","Test: Testing Framework",1,"Mule context not disposed if doTearDown method fails","""If an AbstractMuleContextTestCase overrides de doTearDown() method and it fails, the muleContext of the test is not disposed before bubbling the exception up"""
"MULE-14005","Bug","Extensions",8,"Core extensions disposed before flows finish","""When running SchedulerClusterAppTestCase a message appears in the log showing that the Hazelcast core extension was disposed before the flow scheduler executed for the last time.    This might happen in other cases too."""
"MULE-13998","Task","Core: Non-Blocking",2,"Optimize implementation of MULE-13756 for setting TCCL","""Current implementation using zipWith() has overload"""
"MULE-13997","Task","Core: Non-Blocking|Core: Policies|Modules: HTTP",8,"Use IO pool to execute blocking policies","""Currently all policies run on selector."""
"MULE-13994","Bug","Core: Expressions",2,"Registry object is not accesible from DW script","""Try using registry from the a DW script (logger). It does not recognize the """"registry"""" keyword. It should be part of the binding context as in the scripting module"""
"MULE-14015","Bug","Core: Deployment",2,"Race condition on .mule directory creation using parallel deployment","""Under parallel deployment there's a race condition between checking for the existence of the .mule directory and its creation:    with unfortunate timing an application may fail to deploy due to the IllegalStateException         a possible solution could be checking if the dir exists after the call to mkdirs() returns false, and only throw the exception if it does not exist"""
"MULE-14026","Enhancement Request","Connector: DB",5,"Add a MSSQL connection provider in the DB connector","""Need a MSSQL connection provider just like we do with mysql and oracle"""
"MULE-14025","Bug","Connector: DB",5,"Can't get SP result with MSSQL","""Consider this case:    It fails with:    This is because MSSQL doesn't support multiple open ResultSets. This works with the 3.x connector because streaming is disabled by default. Now that streaming is always on, it always fails.    We need to change it so that streaming is automatically disabled if the RDBMS doesn't support multiple open results.    The driver's GAV is:  """
"MULE-14022","Enhancement Request","Extensions API",2,"Introduce the concept of Path location classification","""The PathModel needs to be enhanced so that parameters representing a file path can have more information regarding where those paths are going to point to. This will be helpful for tooling.    A location attribute will be added to the PathModel. This attribute is an enum:   * EMBEDDED: The path points to a resource inside the mule app. UI should render this as a file picker   * EXTERNAL: The path points to a resource outside of the mule application. Most likely (but not necessarily) in the file system or an external URL. No file picker, just a regular text box   * ANY: Resource can point to any of the above. A file picker can be offered, but the user needs to be able to also specify any random path"""
"MULE-14050","Task","Connector: DB",8,"Create a DB Connector Jenkins Plan which runs tests with all the available vendors","""*Create a DB Connector Jenkins Plan which runs tests with all the available vendors*    * Currently DB Jenkins plans only runs their tests with Derby, make a Jenkins plans which is able to execute tests with all the possible vendors: MySQL, Oracle, MSSQL, etc... """
"MULE-14048","Bug","Core: Streaming",5,"Don't reuse cursors on reconnection","""If an operation receives an InputStream and it throws ConnectionException, the same InputStream is provided but a new Cursor should be made available instead. """
"MULE-14047","Task","Test: Testing Framework",2,"JMH Flow performance tests should use real scheduler service","""JMH Flow performance tests should use real scheduler service"""
"MULE-14042","Enhancement Request","Extensions API",5,"Add the concept of class parameter to the extension model","""Figure out a way to signal that a String parameter represents a class FQN. It should also specify if the class is suppose to extend any classes or implement any interfaces"""
"MULE-14039","Bug","sdk",5,"MetadataService starts Sources when resolving Metadata","""*MetadataService starts Sources when resolving Metadata*    Continue the work done in MULE-14029 to do the same for Metadata resolution"""
"MULE-14038","Enhancement Request","Extensions API",13,"Support static custom types","""Add support for custom input and output types.    The main use case for this is to create operations/sources which return/receive non java types loaded from a schema, which is required to be available at design time.    It should be somehting like this:    The Type provider should be an interface, as similar to the TypeResolver as possible, ini which the user can manually create the MetadataType. The TypeResolver is required to have a default constructor and to be usable in compile time, since the returned type will be statically assigned to the ExtensionModel.    Also, because the main (but not only) use case of this is to support schemas, it should be easy to generate a MetadataType from an XML, Json and CSV schema"""
"MULE-14033","Task","Test: Testing Framework",1,"Log a threaddump when a test fails due to timeout for troubleshooting","""Log a threaddump when a test fails due to timeout for troubleshooting"""
"MULE-14071","Bug","Extensions API",2,"Extensions archetype doesn't handle special characters in extension name","""When prompted for the extension name, use """"Hola Don Pepito""""   * The generate .java file has spaces   * The class name has spaces   * The generated test config has the same problem    Now try the name i-have-hypens. A similar problem happens to the generated .java files and the class name. """
"MULE-14069","Bug","Extensions API",1,"Extensions archetype uses wrong parent version","""The parent pom of the generated extension should default to 1.0.0. The user should prompted to manually upgraded if needed. """
"MULE-14068","Bug","Extensions API",1,"Extensions archetype doesn't respect api-internal convention","""The extensions archetype generates a extnsion class, CP, confg and operations. All of them should be in an internal package."""
"MULE-14064","Task","Core: Exception Handling|Core: Expressions",2,"Add a causedBy function to easily match errors through their type","""To users, error types are just strings yet in reality they are more complex objects so matching with a simple equals does not cut it. You also need to take into account inheritance, so in order to fully match the behaviour of the on-error components we need to expose a custom function."""
"MULE-14062","Bug","sdk",1,"Exclusive Optionals validations doesn't consider Tooling Execution","""The following validation makes DataSense resolution fail:        Disable this validation when in tooling mode."""
"MULE-14060","Task","Modules: CXF",8,"Upgrade to CXF 3.2.1","""CXF 3.0.x is deprecated. (last planned release was 3.0.15)    We need to upgrade to CXF 3.2.x (being 3.2.1 the latest one as of today)"""
"MULE-14093","Bug","sdk",5,"Sources don't support maps as parameters","""*Sources doesn't support maps as parameters*    Just having a parameter like :      Will make the application fail when parsing the XML.    """
"MULE-14092","Bug","Core: Streaming",1,"Repeatable streams don't respect the mark(int) contract","""When mark(int) is called on a repeatable stream, the readLimit parameter is used as the reset() position instead of the actual position"""
"MULE-14087","Bug","Connector: DB",3,"DB Connection is closed after the result set is consumed completely in TXs","""*DB Connection is closed after the result set is consumed completely in TXs*    * When doing a Select, this returns a streaming result set, which when this is consumed completely the connector closes the result set, which is correct, but also the connection who create it.  * In a normal scenario this is correct because each DB Operation is executed with an exclusive connection, but in a TX scenario where the connection is the TX resource shared between all the operations that participate in the transaction, so as consequence if one result set is consumed inside the TX, the connection get's closed and can't be used anymore. """
"MULE-14086","Enhancement Request","Extensions API",0,"Allow the sending on correlationId be default to be disabled in outbound operations","""Allow the sending on correlationId be default to be disabled in outbound operations"""
"MULE-14082","Task","Core: (other)",8,"Add CRL feature to Mule 4 Runtime","""Support for CRL was added to Mule 3.9. However, the feature has yet to be added to Mule 4."""
"MULE-14080","Task","Core: Non-Blocking",8,"Spike: Attempt to simplify and improve performance of MessageProcessorChain","""- Create JMH microbenchmarks.  - Optimize where possible.  - Attempt to remove the concatMap that mean that using a single stream does not improve performance."""
"MULE-14097","Bug","sdk",2,"PagingProviders are closed two times ","""*PagingProviders are closed two times*    For some reason when a paging provider is closed by the SDK, it gets closed twice, this may lead to unexpected behaviours if the connector developer expects that the close will be called once."""
"MULE-14095","Bug","sdk",5,"Soap Connect default transport should not be bounded in mule soap support","""Soap Connect default transport should not be bounded in mule soap support"""
"MULE-14111","Task","Extensions",3,"Add support to indicate whether an error is handleable or not in extension model","""Today, all errors are equals as to their role in Mule. However, some errors cannot be handled by users, such as UNKNOWN and CRITICAL. Since these are no different in the extension model tooling services cannot tell which could be suggested in handlers and which should be hidden."""
"MULE-14110","Task","Extensions",5,"Add support for chainless routes in extension model","""Chain are mandatory in routes right now, therefore you cannot have reference routes as in the """"on-error"""" component."""
"MULE-14108","Enhancement Request","Core: Deployment",2,"If a temporary application resource couldn't be deleted a warning message should be displayed","""Whenever a temporary resource from an application from {{.mule}} folder Mule is throwing an error instead of just log a warning message that says that the resource couldn't be deleted and may generate an OOM.  This is reproducible on Windows environments as Linux/MacOS allow to delete a file no matter if a process is still using it."""
"MULE-14107","Task","Core: (other)",8,"Spec for aggregators and resequencer","""Specification for aggregators and resequencer routers in Mule 4"""
"MULE-14104","Task","Core: Expressions",1,"Adapt test cases considering DW error message trunking","""Need to fix test cases that were matching with equals since now error messages will be truncated to avoid large blobs."""
"MULE-14112","Bug","Core: Streaming",1,"Iterators are not converted into repeatable iterators when using StreamingUtils","""*Iterators are not converted into repeatable iterators when using StreamingUtils*   * When using StreamingUtils to find all the streams and iterators to convert them into repeatable ones, doesn't take into account {{Iterators}}, just {{StreamingIterators}}, which is wrong.   * See: [https://github.com/mulesoft/mule/blob/mule-4.x/modules/extensions-support/src/main/java/org/mule/runtime/module/extension/internal/runtime/streaming/DefaultStreamingHelper.java#L87] """
"MULE-14113","Task","Core: Non-Blocking",8,"Rework MessageProcessorChain to use error mode instead of concatMap for error handling.","""Rework MessageProcessorChain to use error mode instead of concatMap for error handling.    See SPIKE: MULE-14080    Depends on: https://github.com/reactor/reactor-core/issues/629"""
"MULE-14119","Task","Extensions: Maven Plugin",1,"Fix Mule-Extensions-Maven-Plugin tests","""Mule-Extensions-Maven-Plugin tests fail almost consistently."""
"MULE-14125","Task","Build: Integration Tests",1,"Fix integrations CompositeSourceStartDelayTestCase","""The test is verifying a functionality that at best will remain in compatibility and at worst will never work in Mule 4, it's flaky so we'll delete it."""
"MULE-14124","Bug","Extensions API",2,"Operation field parameters don't work if used with a ParameterGroup","""The work done in MULE-13902 did not consider the case of ParameterGroups"""
"MULE-14122","Bug","Extensions API",3,"Pointing to modules parent 1.1.0-SNAPSHOT still generates minMuleVersion 4.0.0","""Creating an extension with the parent pom pointing to mule-core-modules-parent version 1.0.0-SNAPSHOT, generates a mule-artifact.json in the target which has a minMuleVersion 4.0.0. This should be 4.1.0."""
"MULE-14129","Task","Build: Integration Tests",0,"ArtifactClassLoaderRunner - Use semantic versioning for resolving plugins","""Current logic for test runner when classifying the plugins is not honoring semantic logic and not taking into account transitive versions of plugins as it goes over each plugin and reads the direct dependencies.  There are issues with this as if we use Mule Maven Client logic that honors the algorithm for resolving plugins will leave out the cases when plugins have scope tests."""
"MULE-14137","Enhancement Request","Extensions API",5,"Implement Partial fetching in Multilevel DataSense","""Enable partial fetching, with free levels included"""
"MULE-14134","Bug","sdk",8,"For TopLevelObjectStore, DSLSyntax information doesn't match the TypeDslAnnotation information","""For the Object Store module, there are 2 types that define a private object store and a top level object store.    The private object store supports inline definition, while the top level object store doesn't. But the information retrieved after resolving the DslSyntax element states that the top level object store supports it.    This information should match or the UI generated by Studio and Mozart will allow the users to write invalid XML apps"""
"MULE-14141","Enhancement Request","Core: DSL processing",0,"Support ConnectivityTesting on Domains","""Add support to do connectivity testing on domain artifacts."""
"MULE-14145","Bug","Extensions API",1,"TopLevel parameters not parsed when used as reference","""If an extension defines a top level object, which is also used in an operation as reference only, then the parser for that top level object is never generated."""
"MULE-14151","Task","Core: Components",0,"AbstractExecutableComponent doesn't complete/terminate created Eventcontexts","""When using AbstractExecutableComponent#execute methods, the created eventContexts are never terminated, causing any termination callbacks to not be executed.    This manifests as a problem when declaring generic termination callbacks to do clean up tasks, such as first intended to implement MULE-13700 (see TODOs referencing this issue) or the repeatable streams cleanup."""
"MULE-14164","Task","sdk",5,"Provide a FlowExecutor for SDK Modules","""Provide a FlowExecutor for SDK Modules:    https://docs.google.com/document/d/1rTFJCh9yodcLnj9z6E0IqlpzPt17_RJraDUfYhhuXi8/edit#heading=h.5qzxde9sr307"""
"MULE-14155","Task","Core: Policies",8,"Flowstack on policies","""When executing a component in a policy chain, the flowstack at that point must reflect that, indication on which part of the policy (source or operation, before or after) it is located."""
"MULE-14173","Enhancement Request","Core: Concurrency / Threading",2,"Add a splash information about the thread configurations calculated by Mule 4","""In Mule 4, the io scheduler max size will be calculated based on the hardware available. because of this, it is important to display this information so the customer can tell which configuration was picked up by the runtime."""
"MULE-14171","Bug","sdk",3,"SDK loses the Map DataType generics","""*SDK loses the Map DataType generics*    * When returning Maps in an operation, the SDK doesn't consider the generics when generating the output datatype."""
"MULE-14176","Bug","Core: Expressions",2,"When melDefault property is set to true, dw: prefix in expressions is ignored","""In the described case, the expression is evaluated with MEL instead of DW as one would expect."""
"MULE-14188","Bug","sdk",5,"Character parameters are not supported","""*Character parameters are not supported*    The SDK doesn't consider the possibility of having Character parameters and it fails when executing the operation.    *Operation*:      *Runtime:*      *Tooling*:  """
"MULE-14184","Task","sdk",8,"Support notifications in the SDK","""As part of MULE-13774, a spec and POC was done to support the firing of notifications in the SDK. This task is to take that POC and fully implement the feature, including the HTTP part."""
"MULE-14183","Enhancement Request","Core: Deployment",8,"Remove patching scenarios","""With the inclusion of deployment of patched artifacts on mule 4.0.0, some inconsistencies were introduced in the way artifacts are identified and how deployment notifications are sent.    Artifacts are identified by the file/folder name, so when a patch for app1.0.0 is deployed, it will be installed in app-1.0.1 and the identifier for the patched app will be app-1.0.1. When the patch is deployed, the old one must be undeployed, so this must send undeployment notifications. These notifications will use the app-1.0.0 ID. This makes hard to correlate all the notifications send on this deployment. (and in particular, it makes hard to implement MULE-14118 in a consistent way).    The deployment must manage the patching scenarios (on both the folder and artifact ID) in a similar way to the used to manage the artifact data folder (see DeployableArtifactDescriptor#getDataFolderName), that consist of removing the bug fix version  from the folder/ID.     Additionally, as the full version is not part of the ID, it could make sense to include a new field on the deployment notifications to provide this value"""
"MULE-14189","Enhancement Request","sdk",1,"Add the capability of attaching multiple icons in an extension","""*Add the capability of attaching multiple icons in an extension*    Nowadays the extension developer can only attach one icon for the extension, modify the mule extension maven plugin to be able to attach multiple icons."""
"MULE-14192","Task","Module: Aggregators",8,"Spec for aggregators","""Specification for aggregators module in Mule 4"""
"MULE-14201","Task","Core: API",1,"Document ExecutableComponent's errors","""There's currently nothing indicating that a specific exception is generated."""
"MULE-14197","Task","sdk",8,"Adapt Problems Reporter to work with the AST.","""Adapt Problems Reporter to work with the AST."""
"MULE-14196","Task","sdk",13,"Create AST Type Loader","""Create AST Type Loader"""
"MULE-14195","Task","sdk",3,"Don't let the user define Result without Generics as Operation return type","""*Don't let the user define Result without Generics as Operation return type*    * Force to the user define the generics of *Result* if this is used as the return type of an operation, so the developer is forced to think which is the return payload and attributes types."""
"MULE-14213","Task","Test: Testing Framework",8,"Upgrade Mockito in CE, API, Extensions API","""Upgrade Mockito to the latest version that doesn't break backwards compatibility"""
"MULE-14204","Bug","Core: Flow",2,"Error count of flow statistics not tracked","""The flow error count is not being tracked.    The following methos always return 0:      This is because the attribute statistics of  _AbstractExceptionListener_ is always null when the application doesn't have an exception strategy."""
"MULE-14203","Task","Core: Concurrency / Threading",2,"Make IO thread pool have an optimal core size","""As a workaround for MULE-14179 the core size of the IO pool was reduced to 0.    Based on the performance impact (recreation/disposal of threads), determine an appropriate number of threads to use for core pool size.    Bear in mind that some custom implementation of the ThreadPoolExecitor/BlockingQueue will have to be done, in order to avoid reintrouducing MULE-14179 or MULE-13942"""
"MULE-14202","Bug","sdk",3,"Tooling services doesn't work if operation contains a List as parameter with reference support","""*Tooling services (AKA: DataSense & ValueProviders) doesn't work if operation contains a List as parameter with reference support and is not filled.*    In this case there is an Operation with a *List* as parameter which accepts expressions as references and is not completed because is not a parameter that participates of the DataSense resolution, but the mule app fails to start because is not filled.    """
"MULE-14260","Enhancement Request","Core: Deployment",8,"Add the ability to specify the data folder location for an application","""In Mule 3 it was possible to deploy an updated version of an application using the exact folder/zip name of a previous one in order to reuse the temp data folder.   In Mule 4 since the data folder gets created based on the GAV of the artifact (without consider patch version) then it's no possible to do this unless the updated application GAV is the same one as the previous app or only differs on the patch version which it would be just a hack to make it work.    We need to properly define a mechanism so an updated version of an application that changes the major or minor version, can reuse the same data folder."""
"MULE-14272","Enhancement Request","Extensions API",1,"[Model] Allow operations to not have a target","""The extension declarer automatically adds everything related to the target feature. However, some operations may not require that, as is the case of the transform processor which defines it's own targets.  It should be possible to indicate that somehow so that the extension model does not feature those unsupported attributes."""
"MULE-14267","Bug","Core: DSL processing",0,"Parser sets rootContainerName for non Component children of prototype objects","""A definition provider may define an element to be parsed to, for instance, a Collection type. In that case, setting the root container will cause an error when spring tries to set the annotations attribute to the created collection."""
"MULE-14281","Bug","Core: API",2,"API broken by MULE-10912","""API was broken while fixing MULE-10912.    The original issue must be fixed without changing the API"""
"MULE-14280","Bug","Core: API",2,"API broken by  MULE-14082","""API was broken while fixing +MULE-14082+.    The original issue must be fixed without changing the API"""
"MULE-14279","Bug","Core: API",1,"API broken by MULE-14171","""API was broken while fixing MULE-14171.    The original issue must be fixed without changing the API"""
"MULE-14278","Task","Core: (other)",2,"Move modules/policy-api to a separated repository","""Module is using 1.0.0 version instead of 4.0.0/4.1.0 as in the rest of the mule repository.    Need to extract this code to a separate repository, create a build plan and update the uber project     """
"MULE-14277","Task","Core: (other)",2,"Move modules/http-policy-api to a separated repository","""Module is using 1.0.0 version instead of 4.0.0/4.1.0 as in the rest of the mule repository.    Need to extract this code to a separate repository, create a build plan and update the uber project"""
"MULE-14276","Task","Core: (other)",2,"Move modules/dsl-api to a separated repository","""Module is using 1.0.0 version instead of 4.0.0/4.1.0 as in the rest of the mule repository.    Need to extract this code to a separate repository, create a build plan and update the uber project"""
"MULE-14288","Enhancement Request","Extensions API",8,"SDK sources need to be cluster aware","""to be filled"""
"MULE-14301","Bug","Extensions API",1,"Scope/Routes error callback called twice","""The callback error method in SDK scopes and routers is called twice because of the following code in org.mule.runtime.module.extension.internal.runtime.operation.ImmutableProcessorChainExecutor.Executor#execute:        The result of the first doOnError will be an error so I think that's why the next doOnError evaluates as well."""
"MULE-14300","Bug","Tools",2,"NullPointerException running API compatibility check maven plugin","""After the inclusion of the Revapi plugin to ensure API compatiblity, when the Mule uber project is being built, a NullPinterException is being thrown.    Apparently the error is related to the usage of the uber profile:    """
"MULE-14299","Task","Core: Non-Blocking",2,"Update reactor to 3.20-M1 with error handling support","""This depends if 3.1.3 release includes error handling support or not."""
"MULE-14296","Bug","Core: Exception Handling|Core: Policies",2,"Double exception received to error handler when there is an Internal Server Error","""Steps to reproduce:  -deploy:    - a proxy    - an operation policy to handle the request of the proxy    - a server that throws an exception when it is called.    After hitting the proxy, the request is performed to the server. The operation policy detects an Internal Server Error because of the exception in the server, but after that, a second (Unknown) error is thrown.   As the second exception happens when running the error handling of the policy, all the error handling fails.    """
"MULE-14294","Bug","Core: Exception Handling|Core: Policies",2,"NPE when setting a payload, using on-error-continue in an operation policy ","""The following NPE appears when using a set-payload inside of an on-error-continue in an operation policy. This behaviour does not happen when using on-error-propagate.    A way to reproduce this issues, is by using this policy:        NPE:        """
"MULE-14302","Bug","sdk",5,"SDK implemented functions fail to receive TypedValue wrapped elements.","""When a weave function is implemented with the SDK and receives a  TypedValue as parameter, either directly or in the generic of a collection, it fails with a ClassCastExeception saying, for example, that Integer cannot be cast to TypedValue."""
"MULE-14310","Bug","sdk",2,"Empty configuration name causes extension to fail","""If the name attribute is not specified in a configuration annotation, building of the extension fails:        The error is not clear also:    """
"MULE-14305","Bug","Core: Logging",0,"Source errors do not contain app location info when logged","""When the error described in MULE-14168 occures, the element path and element XML of the source where the error occurs is not logged"""
"MULE-14311","Task","sdk",8,"Make ExtensionResourcesGeneratorAnnotationProcessor work in compile time","""Now the ExtensionResourcesGeneratorAnnotationProcessor works in the package phase, this let the annotation processor work with classes.  The annotation processor should stop working with the classes and definitely work with the AST."""
"MULE-14317","Task","Documentation / Website",1,"Update required java and maven versions in .md files","""Many aspects of the .md files are outdated"""
"MULE-14315","Task","sdk",3,"Move AST Loader to another module","""Move AST Loader to another package """
"MULE-14313","Task","sdk",13,"Replace class references with the Type abstraction in the extension java loader","""Replace class references with the Type abstraction in the extension java loader"""
"MULE-14312","Enhancement Request","sdk",5,"Add the capability of mark components as deprecated","""*Add the capability of mark operations as deprecated*    Sometimes an operation or source can be deprecated because you need to implement something new, but you don't want to break backwards compatibility and also you don't want new users to keep using the operation, so the solution is to mark the operation/source/router/etc as deprecated.    A deprecated component should mean:  * The user is discouraged from using the component.  * The IDE may hide it from the UI Palette  * Communicate by all possible ways that the user must not use that component.  * Also can it be deprecated parameters or connections"""
"MULE-14328","Bug","Core: API",8,"Invalid API defined on mule-metadata-model because of missing mule-module-maven-plugin","""Some modules defined on mule-metadata-model define a mule-module.properties, but the APIs declared on those modules is not being validated, as the mule-module-maven-plugin is not declared on corresponding pom.xml file.  A first attempt to include the mentioned plugin (along with the revapi maven plugin to check API consistency across versions) shown that the modules are incorrectly defined, ie, the list of exported modules is not complete or it exports unwanted packages.  So, API must be cleaned up, but need to check first if those APIs are really needed."""
"MULE-14326","Enhancement Request","Extensions",3,"Improve notifications serialization","""Just like errors, notifications could be optimise to only declare them once at the extension level and then referencing them in operation and sources."""
"MULE-14324","Bug","Core: API",1,"API broken by MULE-13927","""API was broken while working MULE-13927.  The original issue must be completed without changing the API    """
"MULE-14323","Bug","Core: API",1,"API broken by MULE-14048","""API was broken while working MULE-14048.  The original issue must be completed without changing the API    """
"MULE-14322","Bug","Core: API",0,"API broken by MULE-14124","""API was broken while working MULE-14124.  The original issue must be completed without changing the API    """
"MULE-14321","Bug","Core: API",1,"API broken by MULE-14288","""API was broken while working MULE-14288.  The original issue must be completed without changing the API    """
"MULE-14320","Bug","Core: (other)",2,"MessageProcessor post-invoke notification missing when an error occurs","""When an error happens on transform Mule Runtime is missing a post-invoke notification."""
"MULE-14343","Task","sdk",8,"Create an Extension Object Field handler for the AST Type Loader","""Create an Extension Object Field handler for the AST Type Loader"""
"MULE-14342","Task","Extensions API",1,"API broken by MULE-13774","""The introduction of notifications in the SDK cause several API problems. Though most seem like candidates to ignore, we need to review them carefully."""
"MULE-14337","Task","Extensions",2,"Only support back-preasure configuration in HTTP","""Until we clearly define an implementation for each of the back preasure strategies, we should only support WAIT as an option in all sources. Having a default implementation for other strategies make no sense since each of them require proper treatment and if we don't do that then we would be breaking backwards compatibility in the future"""
"MULE-14335","Bug","Connector: ObjectStore|Extensions API",5,"ObjectStore connector does not work properly with lazy init","""In the following configuration    The os operation contains fails when running with lazy init due to the objectStore attribute not being recognised as a reference attribute to a bean"""
"MULE-14334","Task","Core: Classloading",2,"Move MessageProcessors from privileged package to an accessible one","""Move MessageProcessors.flatMap to a package accessible by APIKit"""
"MULE-14346","Task","Core: Deployment",0,"Support lazyInit for Domains","""LazyInit is only support for applications with default domain only or domains, this ticket is about supporting lazyInit for an application that depends on domains that are not empty (case of default one)."""
"MULE-14350","Task","Extensions API",1,"Make BackPressureContext differentiate between DROP and FAIL back pressure","""Leverage MULE-14284 to allow BPContext to differentiate between FAIL and DROP (currently it always says DROP)"""
"MULE-14358","Task","Core: Classloading",1,"APIKit needs access to MessageProcessors class","""APIKit needs access to MessageProcessors but this class is located in a privileged mule package.    Allow APIKIT access to org.mule.runtime.core.privileged.processor package"""
"MULE-14353","Bug","Extensions API",1,"NPE when creating an ImmutableOperationModel without notifications","""Changes added to ExtensionModel implementation classes are not backward compatible so whenever a new instance of the ImmutableOperationModel is created within an old model (that doesn't have notifications) an NPE is thrown."""
"MULE-14361","Bug","Core: Routing / Filters",2,"For each executes first processor even that an execution failed","""While doing a test on Tooling client, with a configuration like:     Even though that in the first iteration the http request fails, we received notifications from the logger as it's being executed the more than once. Putting a breakpoint on the LoggerMessageProcessor shows that the logger is being executed the whole 3 times, instead of only once.      """
"MULE-14377","Task","Extensions API",1,"Change default back pressure strategy to WAIT only","""By default, only the WAIT strategy should be added automatically"""
"MULE-14375","Bug","Core: Classloading|Test: Testing Framework",2,"FunctionalTestCase#getConfigFile should always support / slash","""Right now, the getConfigFile() method in the FunctionalTestCase class, must be used with the slash corresponding to the OS (/ for UNIX and \ for Windows). But this means that a forward slash / cannot be used in Windows.  The forward slash should always work, as it does in Java.    This should also work when looking for resources, not only in the FunctionalTestCase."""
"MULE-14374","Enhancement Request","Core: API",8,"Update mave-revapi-extension to support mule-api-annotations","""Add support to mule-revapi-extension to ignore API differences based on the annotations defined on mule-api-annotations"""
"MULE-14373","Task","Core: API",2,"Define annotations to exclude java elements from the API","""We need a way to mark which parts of what is exposed on the API is NOT considered API. This could sound counterintuitive, but consider this examples:    • Interfaces that are not supposed to be implemented by clients, they are only provided in the API for consumption only   • Classes that are not supposed to be extended by clients, they are provided in the API as a generic type for consumption only   • Classes that are not supposed to be instantiated by clients, they are provided in the API as a generic type for consumption only   • Methods that are not supposed to be overridden by clients, they are provided for internal usage only   • Types that not supposed to be directly referenced by clients"""
"MULE-14388","Task","Modules: WS Consumer",8,"Extensions Client must use the correct event when  used in an operation","""There're flaky test in the WSC build. Make sure they are not because of an actual race condition in the component and fix."""
"MULE-14387","Bug","sdk",3,"Extension documenter fails on document on elements that make usage of @Alias","""*Extension documenter fails on document on elements that make usage of @Alias*    * When a param, operation, or whatever uses {{@Alias}} the documenter fails to document the parameter because it uses the Model name to find the Java Element, which won't be found in the case that the Alias is different from the element name."""
"MULE-14386","Bug","sdk",3,"Soap Connect extensions not comunicating HTTP Stereotype in http config paraemter","""Soap Connect extensions not comunicating HTTP Stereotype in http config paraemter"""
"MULE-14391","Enhancement Request","sdk",1,"Change the way that repeated model names are validated","""*Change the way that repeated model names are validated*    Currently to validate the repetition of model names a validation is made on {{AbstractComplexModel}} when instantiating an {{ExtensionModel}} throwing an IllegalModelException.  Throwing an exception when building the extension model makes impossible to have a Model Validator that could communicate correctly the repetition of model names, and in the AST Loader, indicate the configurations with infractions."""
"MULE-14402","Bug","Core: Policies",8,"Error handler of operation policies can't handle invalid requests","""There is no possible way to handle invalid requests from the error handler of the operation policy.   An invalid request would be, for example, making a request to an inexistent resource (500 server error), or receiving a 403 from the server.  After executing the 'execute-next' operator, if the request is invalid, the operation result is catched by the application error handler instead of using the policy one.    This test reproduces the problem: https://github.com/mulesoft/mule-ee/commit/9ba58d92f083f26f061f544a0a69f3c7ef9b2f4b"""
"MULE-14395","Task","Core: (other)",1,"Update IO scheduler pool size based on capacity performance tests","""Update IO scheduler pool size based on capacity performance tests    {{org.mule.runtime.scheduler.io.threadPool.maxSize=cores + ((mem - 245760) / 5120)}}"""
"MULE-14394","Task","core: Notifications",2,"Notification listener errors should not be propagated to runtime","""Notification listener exceptions should not be propagated to runtime. Currently, exceptions are caught, but errors aren't, this needs updating to catch Throwable and not Exception."""
"MULE-14409","Enhancement Request","Extensions API",8,"Introduce PollingSource ","""to be added """
"MULE-14415","Enhancement Request","Extensions API",8,"Variables set by <set-variable> should be exposed outside route","""When using <set-variable> inside a route (aggregation-complete route in an aggregator for example), the value set can't be accessed outside the route.        We need it to work this way for the aggregators module."""
"MULE-14431","Bug","Core: Non-Blocking|Core: Transformers",1,"Transformers should use IO pool if they may read or write a stream","""Transformers should use IO pool if they may read or write a stream"""
"MULE-14426","Task","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",2,"Add secure configuration properties for 4.x","""Implement secure-configuration-properties, analog to configuration-properties but encrypted."""
"MULE-14436","Task","sdk",1,"Make extensions parent pom use the AST Extension Loader","""Change the extensions parent pom to make they start using the AST based extension loader."""
"MULE-14435","Bug","Core: Policies",2,"Policies: HTTP Requester status code validator doesn't log processor location","""When an http requester sends a request and receives an error status, the logged error is:        Note that the {{Element}} and {{Element XML}} entires show {{(None)}} instead of the location of the requester operation."""
"MULE-14446","Bug","Modules: OAuth",2,"OAuth Module exports internal classes","""Current exported pacakges:    """
"MULE-14444","Bug","Connector: VM",1,"VM Connector exports internal classes","""Current Exported Packages:      Is required to review which class is used as API and making the entire package to be exported."""
"MULE-14443","Task","Build: Integration Tests",2,"Fix tests broken by DW error message changes","""Some tests have broken because DW has changed it's error message to indicate possible bugs in the app, particularly for invalid expressions. Most of those tests were asserting against whole error messages instead of checking for the specific errors they caused."""
"MULE-14453","Task","Core: DSL processing",0,"When creating ApplicationModel and ComponentModels inner beans should have a name so they can be later retrieved","""mule-aggregators-module added a new kind of reference, an aggregator listener can reference to an aggregator that is a source component.    This needed to be handled by LazyInit and DataSense in order to support it. At the same time the org.mule.runtime.config.internal.BeanDependencyResolver had to be patched to work on this case as whenever the code to resolve dependencies from ApplicationModel was also returning as bean name the aggregatorName (needed for LazyInit) but the aggregator which is a source is created as inner child bean with Spring therefore the name declared on the aggregator is not the name that goes to the Spring bean and it couldn't be retrieved later in order to set as dependency."""
"MULE-14451","Task","Service: HTTP",1,"Change default response streaming to false in HTTP service","""This must be turned off until on par performance can be achieved with streaming since it will affect users of the HTTP client."""
"MULE-14465","Enhancement Request","sdk",3,"Make the SDK Validate extension's exported packages","""Validate extensions exported packages"""
"MULE-14461","Bug","Core: Transactions",0,"transactional element not propagating flowConstruct","""TransactionalInterceptingMessageProcessor must propagate the flowConstruct to the exception listener."""
"MULE-14478","Enhancement Request","Extensions",2,"Make ParameterGroupObjectBuilder#fieldsCache shared","""when different ParameterGroupObjectBuilder objects are build, each populates it's own fields cache, even if the class for which they are being requested is the same. This produces a performance penalty."""
"MULE-14477","Bug","Core: DSL processing",2,"Nested flows/subflows not being initialized when executing tests on MUnit","""Having a munit test that executes a flow containing nested flow references, fails due that those flows are not initialized.     """
"MULE-14474","Bug","sdk",3,"Add the information about metadata category at the parameter model level","""When a connector has several metadata categories, the API allows us to retrieve all keys associated with a config. The result is a Map<String,Set<MetadataKey>>.    But the fields marked as metadata keys do not have a property that allows us to determine the category associated with the key.    We need this information in order to retrieve the correct set of keys associated with an operation"""
"MULE-14471","Task","Core: Properties",2,"Add field in mule-artifact.json to declare configuration properties that must be secure","""In Mule 3 it was possible to declare which properties must be handled as secure by the platform through a property in mule-app.properties (https://docs.mulesoft.com/runtime-manager/secure-application-properties).    We need a similar approach for Mule 4 in order to maintain the same functionality until we properly implement discovery of artifacts configuration at deployment time."""
"MULE-14470","Bug","Extensions",1,"Avoid pattern matching for every notification fired","""This will do pattern matching of this string for each and every notification created/fired. This has an impact on performance. If we do what to format string like this then it should only happen if argument is invalid.    {{    checkArgument(expectedDataType.isCompatibleWith(actualDataType),                    format(""""The action data type (%s) does not match the actual data type received (%s)"""",                           expectedDataType,                           actualDataType));  }}"""
"MULE-14509","Bug","Service: HTTP",1,"Extra host and port copies to get URI","""The current implementation of GrizzlyRequestAdapter getUri method, though it caches the result to only calculate it once, accesses the host and port in a manner that makes Grizzly save those results. We could easily avoid that."""
"MULE-14508","Bug","Core: API",1,"Immutable transformations are chained in MultiMap","""Since we cannot guarantee that a certain MultiMap is immutable, there are several places where we are forcing that transformation, to the point where it could turn into a chain of going through elements over and over when it's already been made immutable."""
"MULE-14501","Task","Documentation / Website",2,"Documentation for target and targetValue attributes in Mule 4","""Documentation for target and targetValue attributes in Mule 4"""
"MULE-14500","Task","Documentation / Website",2,"Migration guide entry for enrichment in Mule 4","""Migration guide entry for enrichment in Mule 4"""
"MULE-14516","Bug","sdk",1,"NameClashValidator fail when function parameters clash with another name","""If a Function has a Parameter which is a Pojo and it's name clashes with another TopLevelElement or ComponentName, the NameClashValidator will fail to validate the extension model."""
"MULE-14514","Task","Core: Non-Blocking",1,"Update processing strategy subscriber count based on performance testing","""Update processing strategy subscriber count based on performance testing"""
"MULE-14512","Bug","sdk",3,"StackOverflow when compiling an extension with recursive structures","""When compiling an extension with recursive structures the build fails with a stack overflow error:  """
"MULE-14526","Bug","Core: Non-Blocking",2,"Optimize to avoid contention in emission of event to flow","""Remove contention in emission of event to flow"""
"MULE-14524","Bug","Service: Scheduling",2,"Schedulers don't indicate which one is exhausted","""When a scheduler is exhausted, a RejectedExecutionException is thrown which results in an OVERLOAD error being raised and logged by the CRITICAL handler. This provides information on the error and it's location yet it says nothing about which scheduler has failed to schedule work, making it difficult to asses at once what could be wrong."""
"MULE-14520","Bug","Service: HTTP",1,"HTTP: CaseInsensitiveMultiMap loses case insensitiveness after making it immutable","""When using the result of calling toImmutableMultiMap on a CaseInsensitiveMultiMap, the returned MultiMap is not case insensitive."""
"MULE-14534","Bug","sdk",1,"Extension's processor plugin configuration doesn't consider generated sources","""Extension's processor plugin configuration doesn't consider generated sources"""
"MULE-14544","Enhancement Request","Core: API",2,"Provide a singleton MultiMap instance","""This is in order to avoid the creation of empty maps everywhere just to pass an empty map."""
"MULE-14540","Bug","Core: Lifecycle",0,"Use an independent lock to synchronize the lifecycle of the MuleContext","""This is a part that was done as part of MULE-13000 in mule 4."""
"MULE-14558","Bug","Service: Scheduling",1,"Unclear error with missing parameter in scheduler configuration","""In scheduler-pools.conf commented the line for org.mule.runtime.scheduler.io.workQueue.size. After restarting the runtime it fails to start successfully with an unclear error message. Adding -Dmule.verbose.exceptions=true will point that the error is related to scheduler configuration.    The expected result should be that there is an error indicating which parameter is invalid or undefined."""
"MULE-14556","Task","sdk",3,"Add Icons in all the extensions","""None of the actual connectors packages their connectors inside the mule plugin, start doing this."""
"MULE-14553","Bug","Build: (other)",2,"TypeWrapper should not load class until needed","""Performance changes made by MULE-14495 introduced a dependency to the classes that breaks ToolingServices as the provided dependencies by users need to be on classpath now.  """
"MULE-14552","Enhancement Request","Service: Scheduling",1,"Allow to override the location of the scheduler config file via system property","""do it"""
"MULE-14561","Bug","Core: Expressions",5,"Expressions containing a opening bracket are not considered as a expression","""The following expression is not considered as a one:         \{\{#['[']}}    *(This is just a reduced expression, but happens with any expression that contains a closing bracket in some place of the expression)*    Considering the value as non-expression makes the value be considered as String, with all that this entails.    ----------    The original expression:    This is a big problem because:   # The user doesn't have a workaround.   # The user won't know why the expression doesn't get evaluated   # In this particular case is worse because of: https://www.mulesoft.org/jira/browse/MULE-14560     """
"MULE-14560","Bug","Core: (other)",2,"Not understandable exception is thrown when a transformation fails over a String with '%d'","""If a transformation of a {{String}} value with a {{%d}} value fails, (like the header of DW: {{%dw 2.0}} ) makes the creation of the transformation exception fail. This could be reproduced because of: https://www.mulesoft.org/jira/browse/MULE-14561.  """
"MULE-14566","Enhancement Request","Core: Logging",2,"Use a CG free thread context implementation for logging","""https://logging.apache.org/log4j/2.x/manual/garbagefree.html"""
"MULE-14565","Task","Modules: HTTP",3,"Load static REMOTELY_CLOSED_EXCEPTION","""Load REMOTELY_CLOSED_EXCEPTION using service classloader"""
"MULE-14573","Task","Core: Routing / Filters",1,"Improve flaky until successful test cases","""org.mule.test.core.NonBlockingFunctionalTestCase.untilSuccessfulWithRetryExceptionAfter  org.mule.test.routing.UntilSuccessfulTestCase.executeSynchronously"""
"MULE-14572","Bug","Service: Scheduling",2,"Scheduler#scheduleAtFixedRate cancels task if triggered while previous is still running","""When Scheduler#scheduleAtFixedRate is called on a Custom Scheduler with maxConcurrentTasks=1 or a pool with just 1 thread and a SynchronousQueue,         if a tasks takes longer than the rate, the next one is rejected, but then no more tasks are triggered.    Any subsequent tasks must be triggered normally after a rejection."""
"MULE-14569","Enhancement Request","Core: Deployment",2,"Ensure that exported resources in artifact descriptor always use linux file separator","""Mule artifact descriptor (mule-artifact.json) contains the list of artifact's resources that are exported. These resource path's must be declared using Linux file separator.    As the descriptor can be manually edited, instead of just failing when the resources are not correctly written, the runtime can convert them to the expected format. """
"MULE-14582","Bug","Core: Exception Handling",1,"Error has no string representation","""When one tries to log the error to see what happen, you get the default object toString. """
"MULE-14581","Bug","Core: Concurrency / Threading",1,"Reduce level of log for RejectedExecutionExceptions that occur when shutdown timeout is exceeded.","""Reduce level of log for RejectedExecutionExceptions that occur when shutdown timeout is exceeded."""
"MULE-14577","Bug","Service: Scheduling",2,"Delayed task is triggered when target scheduler is busy is lost","""This happens when using the Scheduler#schedule method and the scheduler is busy at the trigger time.    The task must be run when a thread in the scheduler is available instead of being lost."""
"MULE-14587","Bug","Core: Components",2,"Properly handle InterruptedException in blocking processors api","""On MessageProcessors#processToApply, when an InterruptedException is thrown, it is not properly handled. It must set the interrupted flag on the thread."""
"MULE-14590","Bug","Service: Scheduling",1,"ThrottlingScheduler active tasks count breaks when tasks are cancelled.","""ThrottlingScheduler active tasks count breaks when tasks are cancelled."""
"MULE-14594","Task","Documentation / Website",2,"Document raise-error component","""We need to document how the component works and the use cases."""
"MULE-14600","Bug","Tools: Archetypes",3,"Mule Extension Archetype is not Camel Casing Extension Name for Classes","""When an extension module is generated using mule-extension-archetype, extension name is not camel cased while generated classes.     Example command -     mvn archetype:generate -DarchetypeCatalog=http://repository.mulesoft.org/releases/ -DarchetypeGroupId=org.mule.extensions -DarchetypeArtifactId=mule-extensions-archetype -DarchetypeVersion=1.1.0 -DgroupId=com.javastreets -DartifactId=mule-modules-zip5 -Dpackage=com.javastreets -Dversion=0.0.1-SNAPSHOT *-DextensionName=zip5* -DextensionNameNoSpaces=zip5         Generated Classed -     mule-modules-zip5  ├── README.md  ├── pom.xml  └── src   ├── main   │   ├── java   │   │   └── com   │   │   └── javastreets   │   │              └── internal   │   │                       ├── zip5Configuration.java   │   │                       ├── zip5Connection.java   │   │                       ├── zip5ConnectionProvider.java   │   │                       ├── zip5Extension.java   │   │             └── zip5Operations.java   │   └── resources   └── test             ├── java   │                       └── com   │                                 └── javastreets   │                                           └── zip5OperationsTestCase.java   └── resources             └── test-mule-config.xml    This is NOT the behavior when modules are generated using plugin -  mvn org.mule.extensions:mule-extensions-archetype-maven-plugin:generate    with extension name as zip3, Class Names generated are -      │   │                      └── internal      │   │                           ├── Zip3Configuration.java      │   │                           ├── Zip3Connection.java      │   │                           ├── Zip3ConnectionProvider.java      │   │                           ├── Zip3Extension.java      │   │                           └── Zip3Operations.java  """
"MULE-14599","Bug","Tools: Archetypes",3,"Unexpected extensionNameNoSpaces archetype parameter value","""When creating a new extension using Archetype, an unexpected parameter `_extensionNameNoSpaces_` value is being asked by maven. It should actually be derived from already specified `_extensionName_` parameter. _Note: Module generation completes successfully._    +*Command Run -*+    _mvn archetype:generate -DarchetypeCatalog=http://repository.mulesoft.org/releases/ -DarchetypeGroupId=org.mule.extensions -DarchetypeArtifactId=mule-extensions-archetype -DarchetypeVersion=1.1.0 -DgroupId=com.javastreets -DartifactId=mule-modules-test2 -*DextensionName=test*_         _*Here is the output:*_    [INFO] Scanning for projects...  [INFO]  [INFO] ------------------------------------------------------------------------  [INFO] Building Maven Stub Project (No POM) 1  [INFO] ------------------------------------------------------------------------  [INFO]  [INFO] >>> maven-archetype-plugin:2.4:generate (default-cli) > generate-sources @ standalone-pom >>>  [INFO]  [INFO] <<< maven-archetype-plugin:2.4:generate (default-cli) < generate-sources @ standalone-pom <<<  [INFO]  [INFO]  [INFO] --- maven-archetype-plugin:2.4:generate (default-cli) @ standalone-pom ---  [INFO] Generating project in Interactive mode  [INFO] Archetype repository not defined. Using the one from [org.mule.extensions:mule-extensions-archetype:1.0.0 -> https://repository.mulesoft.org/nexus/content/repositories/releases] found in catalog http://repository.mulesoft.org/releases/  [INFO] Using property: groupId = com.javastreets  [INFO] Using property: artifactId = mule-modules-test2  [INFO] Using property: version = 1.0.0-SNAPSHOT  [INFO] Using property: package = org.mule.extension  [INFO] Using property: extensionName = test  Feb 11, 2018 10:23:07 PM org.apache.velocity.runtime.log.JdkLogChute log  INFO: FileResourceLoader : adding path '.'  Feb 11, 2018 10:23:07 PM org.apache.velocity.runtime.log.JdkLogChute log  {color:#ff0000}_*INFO: Null reference [template 'extensionNameNoSpaces', line 1, column 1] : $\{extensionName.replace(""""-"""", """" """").replace("""" """", """""""").replaceAll(""""(?i)extension"""", """""""").replaceAll(""""(?i)connector"""", """""""").trim()} cannot be resolved.*_{color}  {color:#ff0000}_*Define value for property 'extensionNameNoSpaces': $\{extensionName.replace(""""-"""", """" """").replace("""" """", """""""").replaceAll(""""(?i)extension"""", """""""").replaceAll(""""(?i)connector"""", """""""").trim()}: :*_{color}  {color:#ff0000}_*Confirm properties configuration:*_{color}  {color:#ff0000}_*groupId: com.javastreets*_{color}  {color:#ff0000}_*artifactId: mule-modules-test2*_{color}  {color:#ff0000}_*version: 1.0.0-SNAPSHOT*_{color}  {color:#ff0000}_*package: org.mule.extension*_{color}  {color:#ff0000}_*extensionName: test*_{color}  {color:#ff0000}_*extensionNameNoSpaces: $\{extensionName.replace(""""-"""", """" """").replace("""" """", """""""").replaceAll(""""(?i)extension"""", """""""").replaceAll(""""(?i)connector"""", """""""").trim()}*_{color}  {color:#ff0000} _*Y: :*_{color}  {color:#ff0000}_*[INFO] ----------------------------------------------------------------------------*_{color}  [INFO] Using following parameters for creating project from Archetype: mule-extensions-archetype:1.1.0  [INFO] ----------------------------------------------------------------------------  [INFO] Parameter: groupId, Value: com.javastreets  [INFO] Parameter: artifactId, Value: mule-modules-test2  [INFO] Parameter: version, Value: 1.0.0-SNAPSHOT  [INFO] Parameter: package, Value: org.mule.extension  [INFO] Parameter: packageInPathFormat, Value: org/mule/extension  [INFO] Parameter: package, Value: org.mule.extension  [INFO] Parameter: version, Value: 1.0.0-SNAPSHOT  [INFO] Parameter: groupId, Value: com.javastreets  [INFO] Parameter: extensionName, Value: test  [INFO] Parameter: extensionNameNoSpaces, Value: test  [INFO] Parameter: artifactId, Value: mule-modules-test2  [WARNING] Don't override file /Volumes/MM/codebase/mule/mule4/mule-modules-test2/src/main/java/org/mule/extension  [WARNING] Don't override file /Volumes/MM/codebase/mule/mule4/mule-modules-test2/src/test/java/org/mule/extension  [WARNING] Don't override file /Volumes/MM/codebase/mule/mule4/mule-modules-test2/src/test/resources  [INFO] project created from Archetype in dir: /Volumes/MM/codebase/mule/mule4/mule-modules-test2  [INFO] ------------------------------------------------------------------------  [INFO] BUILD SUCCESS  [INFO] ------------------------------------------------------------------------  [INFO] Total time: 9.094 s  [INFO] Finished at: 2018-02-11T22:23:15-05:00  [INFO] Final Memory: 21M/314M  [INFO] ------------------------------------------------------------------------              _*Maven Envrionment -*_     _*mvn -version*_  _*Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T03:58:13-04:00)*_  _*Maven home: /Users/manik/.sdkman/candidates/maven/current*_  _*Java version: 1.8.0_161, vendor: Oracle Corporation*_  _*Java home: /Users/manik/.sdkman/candidates/java/8u161-oracle/jre*_  _*Default locale: en_US, platform encoding: UTF-8*_  _*OS name: """"mac os x"""", version: """"10.13.3"""", arch: """"x86_64"""", family: """"mac""""*_"""
"MULE-14603","Bug","Core: Expressions",8,"Expression Regex fails on detect expression when this have an unbalanced opening bracket","""The following expression is not considered as a one:         \{\{#['[']}}    *(This is just a reduced expression, but happens with any expression that contains a closing bracket in some place of the expression)*    Considering the value as non-expression makes the value be considered as String, with all that this entails.    The problem is inside -> {{org.mule.runtime.core.privileged.util.TemplateParser}}    ----------    The original expression:    This is a big problem because:   # The user doesn't have a workaround.   # The user won't know why the expression doesn't get evaluated   # In this particular case is worse because of: https://www.mulesoft.org/jira/browse/MULE-14560     """
"MULE-14602","Bug","Documentation / Website",8,"Make the generated connector documentation compliant with the Mulesoft Docs renderer.","""Make the generated connector documentation compliant with the Mulesoft Docs renderer.    Here is a list of typos and fixes required to make the generated docs compliant with the asciidoc renderer used in our docs web page.     https://docs.google.com/spreadsheets/d/11idVtarnmRbBqw4EOLawrUqojNYAOsFCiLCbMHPHmV8    We should fix/review all the entries"""
"MULE-14606","Bug","Transport: Email",2,"Email connector doesn't work with IMAP gmail OOTB","""Email connector doesn't work with IMAP gmail OOTB"""
"MULE-14616","Bug","sdk",2,"StreamingHelper doesn't support TypedValue properties","""*StreamingHelper doesn't support TypedValue properties*    When processing a Map containing InputStreams wrapped in TypedValues the StreamingHelper doesn't consider these cases and doesn't generate a Repeteable stream of it."""
"MULE-14615","Bug","Connector: DB",5,"DB Connector returns Clob objects instead of InputStreams","""*DB Connector returns a Clob object instead of returning an InputStream*    * DB Connector when doing a SELECT to a Table which contains Clob values, nowadays the raw Clobs are returned to the flow and those are unhandables using DW."""
"MULE-14620","Bug","SDK AST",5,"Extension Loader load incorrectly generic types.","""*AST Extension Loader fails to find the connection type for DynamoDB Connector*    * The AST Loader is lost when walking between generics in the hierarchy of Connection Providers that the connector provides.  * Find and fix it /shrug    ===========    Update: Also happens when the following thing :     {{SomeListener extends AbstractListener<AttributesType>}}    {{AbstractListener<T extends SomeAttributes> extends Source<Object, T>}}"""
"MULE-14632","Bug","sdk",3,"WSC: Invalid property name on class java.lang.String.","""WSC: Invalid property name on class java.lang.String."""
"MULE-14627","Enhancement Request","sdk",3,"SDK should log when trying to reconnect a connection for an operation","""*SDK should log when trying to reconnect a connection for an operation*    * Nowadays when a Source stops and request for a working connection this is logged:    communicating that a reconnection is being done.    The problem comes that when this is done for an operation, nothing is being logged.    """
"MULE-14636","Bug","sdk",5,"HTTP Connector is not including in its type catalog the declaration for Origin type","""The extension DTO for """"org.mule.connectors:mule-http-connector:1.1.0"""" does not include in its types and entry for """"Origin"""" which used to declare subTypes:    This is not allowing Tooling to get associate these subTypes to an extension, therefore it is not going to be rendered.  """
"MULE-14640","Bug","Core: Policies",8,"Various variable scoping errors between Operation Policies, Source Policies and Flow's error handlers","""While fixing MULE-14414 I found out that variables set in the on error propagate of a policy operation, then it would be accesible from the flow's on error continue/propagate.    Just in case, the error wasn't introduced by the fix in MULE-14414.   I added a test in mule-ee:  (ignored)    (Edit)  While looking through this issue, I found many variable scoping issues:   - Flow variables that were visible in operation policies and source policies' error handlers  - operation policies and source policies' variables that were visible in the flow's error handler  - Operation policies' error handler variables that were visible in the flow's error handler   - Operation Policies' variables that weren't visible to source policies' error handler  Some more issues similar to the described above.   """
"MULE-14661","Enhancement Request","Tools: Archetypes",3,"Archetype not using connector name in the generated packages","""Archetype not using connector name in the generated packages.    today is generating this `org.mule.extension.internal` and it should be something  like this `org.mule.extension.<nombredelconector>.internal`    :B"""
"MULE-14677","Enhancement Request","Extensions API",5,"Need a way to specify differnet defualts for the primaryNodeOnly parameter","""By default, the primaryNodeOnly parameter defaults to false, which makes sense most of the times. However, some cases like the jms:listener need to default to true. We need a way to enable this."""
"MULE-14680","Bug","Module: Aggregators",2,"Aggregators module README.md suggests a dependency with no classifier","""The README.md of the aggregators modules is telling users that in order to add it to a project the can just add the dependency:        When it should be:  """
"MULE-14686","Bug","Core: ObjectStore",1,"Expiration of an ObjectStore doesn't run if there is another one running","""When 2 ObjectStore expirations are triggered near in time, the second one to be triggered is skipped and a warning is logged.    In that case, both expirations should run in parallel."""
"MULE-14683","Bug","Transport: VM",0,"Mime Type Disappears Dissapears in VM inbound when under load","""DataType of the message is lost when messages are batch in a VM inbound endpoint."""
"MULE-14681","Bug","Extensions API",0,"Returned stream is closed when using pooled connections","""When an operation returns an InputStream which depends on an open connection, the SDK will close that connection by default. That means that for the stream to keep open for the rest of the flow, the user must manually implement certain design patterns like:    * Manually obtaining a new connection that is bundled into a custom input stream (e.g: FTP connector)  * Use a cached connection provider which returns a client, which in turn knows how to obtain the connection (e.g: HTtp connector)    This problem has already been solved for the case of auto paging operations (e.g: db:select), we need to extrapolate the same solution to the InputStream case. Something to consider is that in the InputStream case, a corner case exists which doesn't on the auto paging one. That case is that the operation might end up returning a stream which is NOT associated with the connection (e.g: EDI Connectors which first writes to a temp file and then streams from it)"""
"MULE-14696","Bug","sdk",8,"Static Metadata resolvers doesn't work with nonblocking operations","""*Static Metadata resolvers doesn't work with nonblocking operations*    Having an Operation like that uses {{@OutputJsonType}}:      Will make the compilation fail saying:  """
"MULE-14694","Bug","sdk",3,"Cannot access application resources from KeyResolver for Configurations","""  When resolving the component keys the Thread.current().getContextClassLoader() is not being set therefore the connector's code implementation cannot rely on it and has to use the class loader that loaded the resolver class.  It should do it as   that sets the context class loader correctly."""
"MULE-14693","Enhancement Request","Core: Concurrency / Threading|Core: Event/Message|Core: Non-Blocking",2,"Minor performance improvements","""Some minor improvements on CPU usage based on the snapshot for the HTTP requester cases."""
"MULE-14698","Bug","Documentation / Website",2,"Data format documentation for DW is wrong/incomplete","""The current docs regarding the supported data formats has a number of problems:  * the URL encoded docs are incomplete and have no full read/write example  * the multipart docs are wrong, it features an example using postman but mistakenly identifies each part and does not really feature a full read/write example.    Additionally, the migration docs lack an entry on message attachments that links to DW's multipart doc, HTTP migration docs and possibly Email docs. This means Mule 3 users cannot clearly see how to approach migrating attachment usage."""
"MULE-14705","Task","Build: Integration Tests",1,"Fix tests broken by DW error stack changes","""Some tests broke due to changes in DW's stack printing during errors."""
"MULE-14700","Bug","Core: Deployment",2,"Artifact deployment phases are not displayed on Mule logs when deploying applications from Tooling Runtime Client ","""Only the following messages are displayed whenever an artifact is deployed from Tooling Runtime Client:    There should entries for """"new artifact"""", """"install"""", """"dispose""""."""
"MULE-14710","Task","Core: Classloading",8,"Define tools and tasks required to simplify UX around classloading isolation","""This task is to define the whole UX around classloading isolation and potencial issues, for instance:  * When there's a CNFE, what information should we show to the user for troubleshotting at design time?  * When it's using a java module or any other extension that requires access to resources within the app, how we can simplify experience so we automatically export resources through the packager  * etc."""
"MULE-14709","Task","Documentation / Website",2,"Add MEL migration examples","""Need to complete and publish all examples in the MEL migration doc."""
"MULE-14735","Bug","Core: Policies",8,"Avoid iterating parameters map on operation policies","""The iteration adds performance overhead"""
"MULE-14724","Task","Documentation / Website",2,"Initial Mule 4 architecture documentation / TB splitted - Cont.","""Initial Mule 4 architecture documentation / TB splitted    * Define mechanism to document architecture  * Main Mule Runtime components diagrams  * Main Mule Runtime activity diagrams  * Some other stuff"""
"MULE-14723","Enhancement Request","Core: Components",1,"Provide a way for intercepting processors to override the publisher of the event context","""."""
"MULE-14721","Task","Core: Non-Blocking",1,"Minor tweaks to use of reactor based on feedback","""Based on feedback from reactor team"""
"MULE-14740","Bug","Connector: DB",3,"Credentials leak in error messages","""DB connector is printing out the whole connections URL in the exception payload in case of any exception without stripping out/masking out the DB passwords... this becomes a security vulnerability    Cannot get connection for URL jdbc:oracle:thin:username/password@sdsoralpd0a-scan.dev-data.qts.fni:1521/dt2dtasvc : IO Error: Unknown host specified    Credentials should be masked. Also check other logs or possible places where the same thing might happen"""
"MULE-14736","Bug","Service: Scheduling",1,"Custom scheduler shutdown from a thread from the same scheduler fails","""This may lead to a memory leak of the scheduler's thread group when a scheduler is being cancelled from within one of its threads. This seems to be a common way for reactor to handle some situations.    When this happens, the stack leading to the shutdown call is:       """
"MULE-14750","Enhancement Request","Connector: DB",0,"Add the capability of configuring the Service Name for an Oracle Connection","""Add the capability of configuring the Service Name for an Oracle Connection    Mule Ticket for SE-1791"""
"MULE-14749","Bug","Core: Logging",1,"Logger extension model claims DEBUG is default","""Changes were made in MULE-12886 to make the log level INFO by default. However, it is set to DEBUG by the MuleExtensionModelDeclarer."""
"MULE-14763","Task","Transport: HTTP(S) / Jetty",2,"Upgrade Jetty to 9.2.24.v20180105","""Jetty must be upgraded to a supported version."""
"MULE-14760","Bug","Service: HTTP",2,"HTTP request connection limit reached error is not descriptive","""When the maxConnections attribute is set and the number of requests exceed it, the following HTTP:CONNECTIVITY error is seen:      The """"No slot available"""" message has been copied from AHC code and does not match the semantics we are given to the feature. It should be something like: Maximum connection limit reached, request cannot be processed."""
"MULE-14757","Bug","Core: Components",2,"Foreach with child with different processing types behaves asynchronously","""When mixing compoennts with different processing types inside a freach (for instance, logger and scripting), or just putting a non CPU-LITE processor, each child is executed asynchronously.    This breaks the scenario where each iten has side effects (for instance, a file write) and that state is needed after the foreach, resulting in a race condition."""
"MULE-14773","Task","Documentation / Website",2,"Update first-successful and round-robin Mule 4 documentation","""We need to update first-successful and round-robin documentation for Mule 4"""
"MULE-14768","Bug","sdk",2,"Extension with an operation with raw List return type breaks at compile time.","""*Extension with an operation with raw List return type breaks at compile time.*    Output is:   [ERROR] diagnostic: error: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0    org.mule.runtime.api.exception.MuleRuntimeException: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0    Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0"""
"MULE-14779","Task","Core: API",8,"Spike for an Application Model API including spec. - Part1","""This is the spike which outcome is going to be a first version of the API and an specification explaining it and the use cases to be solved with it."""
"MULE-14778","Bug","Core: API",1,"NameUtils should a compiled regular expression for camelScatterConcat function","""https://github.com/mulesoft/mule-api/blob/master/src/main/java/org/mule/runtime/api/util/NameUtils.java#L91  when doing split should use a compiled regular expression."""
"MULE-14794","Task","Core: Expressions",1,"Update DW dependency to 2.1.3-SNAPSHOT","""Upgrade DW dependency that includes fixes for some flaky tests, among other things"""
"MULE-14789","Bug","Connector: DB",5,"DB input parameters names are not parsed correctly","""If you have an input parameter named `first-name` the `-` char is breaking the parser, so it results in an error like:     """
"MULE-14788","Bug","Core: DSL processing",1,"TypeAwareConfigurationFactory should lazily add annotations to the configurationType  ","""TypeAwareConfigurationFactory is adding annotations to the configurationType when the factory is instantiated instead of when the factory is used. This means that cglib would be used when no needed (case for loading an extension model)."""
"MULE-14801","Bug","Core: Concurrency / Threading",2,"SimpleRetryPolicy: Use mule schedulers with Mono.delay instead of reactor ones","""This also happens on PrivilegedNonBlockingComponentExecutor.    Make sure the Mono is properly disposed also."""
"MULE-14814","Task","Documentation / Website",1,"HTTP migration doc should cover RAML usage","""The HTTP migration docs do not cover the fact that RAML metadata is no longer supported and that REST Connect should be now used in those scenarios. We need to add a note on that and link to https://docs.mulesoft.com/anypoint-exchange/to-deploy-using-rest-connect"""
"MULE-14822","Bug","Modules: OAuth",2,"ConfigurationException: Element 'tokenManagerConfig-MyConfigName' is not defined in the Mule Registry","""When using oauth module in the context of lazy init (MUnit) the attribute definition for tokenManager on {{oauth:client-credentials-grant-type}} is not defined a simple reference parameter therefore the initialization of the tokenManager referenced entity is not being done and fails with a {{ConfigurationException: Element 'tokenManagerConfig-MyConfigName' is not defined in the Mule Registry}}.  The reason why it is not being marked as reference is that it is declared to support expressions on the operation parameter reference.  """
"MULE-14846","Task","Service: SOAP",13,"Move Soap Service Implementation to a new module decoupled from mule.","""*Move Soap Service Implementation to a new module decoupled from mule.*    This will:  * enable WSC and Soapkit to move faster without depending on an specific runtime version.  * share the RT code base between service, soapkit, wsc -> bugs are fixed only once :)  * WSC / Soapkit / Service can use different versions of the library if required.  """
"MULE-14844","Bug","sdk",2,"SDK should validate that the given default value of an Enum parameter is a valid value","""*SDK should validate that the given default value of an Enum parameter is a valid value*    When configuring a Default value for an Enum parameter the SDK can easily validate that the given value is a valid one.     Nowadays the value is not validated letting produce cryptic errors at runtime:          """
"MULE-14837","Task","Connector: DB",5,"Fix DB flaky tests","""Fix following tests cases:     Fix following tests cases:   |!https://muleesb.ci.cloudbees.com/static/4eadad58/images/16x16/document_add.png!  [org.mule.extension.db.integration.connectivity.DataSourcePoolingTestCase.limitsConnections[DERBY]|https://muleesb.ci.cloudbees.com/job/Mule-DB-Connector/lastCompletedBuild/org.mule.connectors$mule-db-connector/testReport/org.mule.extension.db.integration.connectivity/DataSourcePoolingTestCase/limitsConnections_DERBY_/]|20 sec|1|   |!https://muleesb.ci.cloudbees.com/static/4eadad58/images/16x16/document_add.png!  [org.mule.extension.db.integration.source.RowListenerTestCase.idempotentListen[DERBY]|https://muleesb.ci.cloudbees.com/job/Mule-DB-Connector/lastCompletedBuild/org.mule.connectors$mule-db-connector/testReport/org.mule.extension.db.integration.source/RowListenerTestCase/idempotentListen_DERBY_/]|5.6 sec|1|   |!https://muleesb.ci.cloudbees.com/static/4eadad58/images/16x16/document_add.png!  [org.mule.extension.db.integration.source.RowListenerTestCase.listenPlanets[DERBY]|https://muleesb.ci.cloudbees.com/job/Mule-DB-Connector/lastCompletedBuild/org.mule.connectors$mule-db-connector/testReport/org.mule.extension.db.integration.source/RowListenerTestCase/listenPlanets_DERBY_/]|5.5 sec|1|   |!https://muleesb.ci.cloudbees.com/static/4eadad58/images/16x16/document_add.png!  [org.mule.extension.db.integration.source.RowListenerTestCase.listenPlanetsWithWatermark[DERBY]|https://muleesb.ci.cloudbees.com/job/Mule-DB-Connector/lastCompletedBuild/org.mule.connectors$mule-db-connector/testReport/org.mule.extension.db.integration.source/RowListenerTestCase/listenPlanetsWithWatermark_DERBY_/]| """
"MULE-14836","Bug","Interception API",2,"Failure to evaluate parse expressions for logger when intercepting","""When having a parse expression in a logger, for example:    The expression fails with the attached message.  This is causing any MUnit test that has this kind of logger to fail, since we intercept every processor of the application."""
"MULE-14847","Bug","Core: Transactions",2,"Operation retry with transaction changes thread","""When retrying an operation and a transaction is active, the retry may be run in another thread, breaking the transactional context.    Transaction support requires that transactional flows do not switch threads."""
"MULE-14854","Bug","Extensions API",3,"ExtensionModel generator takes into account static methods in operations","""Added some static methods in the PetStore test extension for testing some scenarios and that made the extension model generation tests fail.    Revert these code changes:   * [https://github.com/mulesoft/mule/commit/eac0f0691462aae50026971d48bf9f68ca908b02#diff-10201da405805070c55f2c5b8575575eR42]   * [https://github.com/mulesoft/mule/commit/eac0f0691462aae50026971d48bf9f68ca908b02#diff-b900c1d8a06eb1e8f92ee10c477b7dd7R772]     """
"MULE-14853","Bug","Build: Integration Tests",2,"Fix ConstrainedConnectorExceptionStrategyMule2126TestCase in 3.8.x","""Test fails after the MULE-8175: Upgrade Xerces to 2.11.2 due to a format change in parse error message"""
"MULE-14856","Bug","Modules: HTTP",2,"Fix BasicHttpProxyToHttpsTestCase","""BasicHttpProxyToHttpsTestCase tests started failing after the upgrade of Jetty to 9.2.24.v20180105 performed in MULE-14763"""
"MULE-14855","Bug","Core: DSL processing",8,"ConfigReference String parameter is not lazy initialized properly","""Having the following parameter  {code}    @ConfigReference(namespace = """"HTTP"""", name = """"REQUEST_CONFIG"""")    @Parameter    private String requesterConfig;  {code}  During lazy initialization it does not initialize, even then adding ExpressionSupport(NOT_SUPPORTED).  This results in MUnit tests failing.  An example with WSC:  {code:xml}   <wsc:config name=""""ws-trim-public-application"""" doc:name=""""Web Service Consumer Config"""" doc:id=""""8b23f56f-414e-4fd6-90be-837a95ee0b59"""" >    <wsc:connection mtomEnabled=""""true"""" wsdlLocation=""""http://ccoappdi03.ccity.biz/CCC.ApplicationService.Trim_3.0/TrimPublicApplicationService.svc?singleWsdl"""" service=""""TrimPublicApplicationService"""" port=""""BasicHttpBinding_ITrimApplicationService"""" address=""""http://ccoappdi03.ccity.biz/CCC.ApplicationService.Trim_3.0/TrimPublicApplicationService.svc/mtom"""" >     <wsc:custom-transport-configuration >      <wsc:http-transport-configuration requesterConfig=""""HTTP_Request_configuration"""" />     </wsc:custom-transport-configuration>    </wsc:connection>   </wsc:config>   <http:request-config name=""""HTTP_Request_configuration"""" doc:name=""""HTTP Request configuration"""" doc:id=""""1226b542-1d41-447d-b9f3-9301172ac7a9"""" />  {code}"""
"MULE-15290","Task","Core: API",8,"Spike for an Application Model API including spec. - Part2","""This is the spike which outcome is going to be a first version of the API and an specification explaining it and the use cases to be solved with it."""
"MULE-16654","Task","Tooling Client",0,"Allow to enable logs on tooling applications in order to allow troubleshooting","""Application deployed for Tooling have the logs muted. We should allow to override this by System Property in order to allow Tooling to do troubleshooting."""
"MULE-18312","Bug","Mule Runtime",0,"LazyMuleArtifactContext ignores custom Global Error Handler","""LazyMuleArtifactContext ignore custom Global Error Handler definition when this configuration is located after failing flow.    _Configuration component definition_ is one of core's component and should be always enabled to ensure it will be loaded at first independently wherever it's located in mule's application definition.     """
