"issuekey","type","components","storypoint","title","description_text"
"MULE-4223","Bug","Build: Distributions",0,"Use of tr [:upper:] [:lower:] | tr -d [:blank:] in bin/mule fails on Solaris 10 ","""When trying to run bin/mule on a Solaris 10 system following error occurs  Bad string Bad string Bad string Bad string Your machine's hardware type (uname -m) was not recognized by the Service Wrapper as a supported platform. Please report this message along with your machine's processor/architecture. Error occurs on line 389  DIST_OS=`uname -s | tr [:upper:] [:lower:] | tr -d [:blank:]`  and again on 419 PROC_ARCH=`uname $UNAME_PROC_OPTION | tr [:upper:] [:lower:] | tr -d [:blank:]` of bin/mule in the 2.1.2 release  This syntax is not supported on Solaris 10 to fix use on line 389 DIST_OS=`uname -s | tr [A-Z] [a-z] | tr -d ' '`  and line 419  PROC_ARCH=`uname $UNAME_PROC_OPTION |  tr [A-Z] [a-z] | tr -d ' '`  """
"MULE-5382","Bug","Modules: XML, XSLT, XPath, SXC",0,"XSL Transformation fails with xsl:result-document on repeated transformations","""xsl:result-document outputs a file to the configured href.      The first time the transformation of a particular file is carried out it succeeds, after that it fails with the following error.    """"Cannot write more than one result document to the same URI, or write to a URI    that has been read:""""    In my particular set-up, Mule is listening on a particular directory. When a file is dropped in that directory the transformation is applied.  When I drop the same file a second (or third etc.) time I see this error.    It seems probably that the issue is because the transformer is not getting reset after each transformation.  In the XsltTransformer file (v2.2.1), I added the line transformer.reset(); (after transformer.clearParameters();) and that seemed to resolve the issue."""
"MULE-6087","Enhancement Request","Core: (other)",8,"Include validation module in Mule core distribution","""Emiliano created a validation module, something that's missing inside mule.    Validation module support built-in validators. Also it supports different types of exceptions for each validation allowing to generate a different response for each kind of exception.    Module: http://mulesoft.github.com/mule-module-validation/    """
"MULE-6129","Enhancement Request","Core: Routing / Filters",2,"Change default behavior for Choice when no otherwise Processor is set","""In a mule flow, when using a <choice> message router without setting a Processor in the <otherwise> section, and the MuleMessage does not match any of the <when> clauses, an exception is thrown. To achieve a conditional behavior currently mule requires to set a dummy processor on the otherwise clause. One usability improvement would be letting the message be processed by the remaining part of the flow if no <when> clause was matched and no <otherwise> processor provided."""
"MULE-6145","Enhancement Request","Core: Routing / Filters",8,"until-successful should support synchronous use cases","""Imagine a simple synchronous HTTP proxy use case, e.g.:    <flow>      <http:inbound-endpoint.../>      <http:outbound-endpoint.../>  </flow>    If outbound endpoint is wrapped in until-successful, the flow won't work anymore. until-successful must support synchronous scenarios as well."""
"MULE-6172","Enhancement Request","Build: Libraries / Dependencies",3,"Upgrade apache-commons-pool","""Since error handling in current version of Apache commons-pool is buggy (borrowConnection method throws a NoSuchElementException losing the original cause) we may need to update the library. Version 1.6 DOES NOT fix the issue. However, current code in trunk tackles the issue (we'll have to wait for a new release).     """
"MULE-6251","Enhancement Request","Core: (other)",3,"Add a default object store for non internal usages","""Current version provides object stores default (persistent/in memory) to use while processing events internally but there is no object store which could be used by users as default."""
"MULE-6355","Bug","Modules: CXF",8,"soapVersion ignored on CXF proxy","""Invoking this proxy with a Soap 1.2 message fails with a WARNing in the logs and a SOAP fault for the caller:        NB. Removing the soapVersion attribute and invoking the same proxy with a SOAP 1.1 message works with intense happiness."""
"MULE-6367","Bug","Transport: FTP / SFTP",5,"FTP Inbound endpoint fails when reading empty file","""Put an empty file into FTP inbound path"""
"MULE-6386","Bug","Transport: Quartz",5,"Outbound endpoint with scheduled dispatch job delivers messages again and again","""If you send test messages to vm://test.in (say every second with a different payload for ex 1 2 3 ...) you'll notice that what's delivered to vm://accumulatedMessageHandler is:    {{1 2 3 4 5}}    then    {{1 2 3 4 5 6 7 8 9 10}}    then    {{1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16}}    (in a random order but the idea is here)"""
"MULE-6417","Bug","Core: Components",0,"/ by zero in ComponentStatistics","""Recently I have been querying JMX statistics periodically via the MXBean interface (domain=Mule.*, type=org.mule.Statistics). After collecting statistics for each MBean, I reset the bean by invoking """"clearStatistics"""" with no arguments, so that I can come back and collect fresh statistics later.    Howeven, when I do this while mule is under load, I see that the ComponentStatistics class starts to throw an exception on a divide-by-zero error. It tends to happen on multiple processor threads, and it seems to be a persistent issue - i.e. it throws the error every few seconds until I restart mule. I am uncertain if a message is trapped in limbo due to the repeated exception, but I think it may be as the message seems to repeat over and over again.    ERROR org.mule.exception.DefaultMessagingExceptionStrategy - Caught exception in Exception Strategy: / by zero  java.lang.ArithmeticException: / by zero          at org.mule.management.stats.ComponentStatistics.addExecutionBranchTime(ComponentStatistics.java:163)          at org.mule.management.stats.FlowConstructStatistics.addFlowExecutionBranchTime(FlowConstructStatistics.java:110)          at org.mule.management.stats.ProcessingTime.addFlowExecutionBranchTime(ProcessingTime.java:95)          at org.mule.interceptor.ProcessingTimeInterceptor.last(ProcessingTimeInterceptor.java:53)          at org.mule.interceptor.AbstractEnvelopeInterceptor.process(AbstractEnvelopeInterceptor.java:61)          at org.mule.processor.AsyncInterceptingMessageProcessor.processNextTimed(AsyncInterceptingMessageProcessor.java:111)          at org.mule.processor.AsyncInterceptingMessageProcessor$AsyncMessageProcessorWorker.doRun(AsyncInterceptingMessageProcessor.java:158)          at org.mule.work.AbstractMuleEventWork.run(AbstractMuleEventWork.java:43)          at org.mule.work.WorkerContext.run(WorkerContext.java:310)          at java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy.rejectedExecution(ThreadPoolExecutor.java:1746)          at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:767)          at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:658)          at org.mule.work.ScheduleWorkExecutor.doExecute(ScheduleWorkExecutor.java:41)          at org.mule.work.MuleWorkManager.executeWork(MuleWorkManager.java:250)          at org.mule.work.MuleWorkManager.scheduleWork(MuleWorkManager.java:218)          at org.mule.processor.SedaStageInterceptingMessageProcessor.run(SedaStageInterceptingMessageProcessor.java:233)          at org.mule.work.WorkerContext.run(WorkerContext.java:310)          at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)          at java.lang.Thread.run(Thread.java:662)  """
"MULE-6441","Bug","Core: Components",5,"Inconsistent behaviour of foreach with inside flowvar","""The index of the foreach inside the flow of the flowref is not consistent.  It seems that there is a lack of atomicity with the invocation variables causing as a result jump of indexes of the iteration and overwrite of invocation variables.    In the example below my payload is the result of a sql query so an ArrayList<CaseInsensitiveHashMap>. I save the value of each row in a flow variable to make it always available in next operations (the original project has more flowRef).  The problem comes out because in the contained flow accessed by the flowRef, the invocation variable carrying the index of the iteration and also the name of the element that I saved is not consistent during each iteration. Sometimes some idexes are jumped and also the element of my array tooks more time the same value."""
"MULE-6468","Bug","Transport: HTTP(S) / Jetty",8,"Messages generated from http-messages.properties should be escaped when returned to the client as http response","""Currently if you send the the following http request:        you will receive the following response:        containing potential malicious javascript code that the browser will run.    Anytime a message is returned to the client the inputs should be parsed to prevent this kind of problems"""
"MULE-6471","Bug","Core: Exception Handling",1,"Default exception strategy is not being called","""I have the following flow:        When I post with an invalid JSON, the return is """"Could not store the User""""      However when I do:        The exception is not handled"""
"MULE-6501","Bug","Modules: XML, XSLT, XPath, SXC",8,"XsltTransformer forcefully evaluate expressions in context-property into Strings","""This arbitrary limitation prevents passing DOM nodes as XSL parameters :(    It comes from the fact the XSL transformer uses the deprecated {{parse}} method in:  """
"MULE-6512","Enhancement Request","Core: Transports",2,"MuleMessageToHttpResponse.createResponse shouldn't use SimpleDateFormat","""We should use JodaTime's DateTimeFormatter since it is thread-safe (we can use one static instance) and faster than creating a new one each time."""
"MULE-6557","Bug","Transport: JMS",0,"Performance regression when caching JMS Sessions","""When enabling cacheJmsSessions attribute on the JMS Connector performance drops to a factor of 10.    Attached test case contains an example of this, if runned on mule 3.2.2, it lasts 3 to 5 seconds to process 10k messages, if runned on mule 3.3.0 or 3.3.1, it lasts 30 to 32 seconds to process 10k messages.    This has been tested on ActiveMQ and Websphere Message Broker."""
"MULE-6604","Story","Build: Libraries / Dependencies",1,"Upgrade Jackson to 1.9.11","""This version works with 1.8.0 and there are some deprecated methods in 1.9.11, so there is a need for an upgrade."""
"MULE-6628","Enhancement Request","Core: Containers|Core: Logging",5,"Should be able to replace Log4j for another logging implementation","""http://www.mulesoft.org/documentation/display/MULE3USER/Configuring+Logging says in the section titled """"I don't want to use Log4j"""" that the log4j jar can be removed so long as SLF4J is wired to another logging implementation. Removing the Log4j jar results in     WrapperManager Error: Error in WrapperListener.start callback.  java.lang.NoClassDefFoundError: org/apache/log4j/spi/RepositorySelector  WrapperManager Error: java.lang.NoClassDefFoundError: org/apache/log4j/spi/RepositorySelector  WrapperManager Error:   at java.lang.Class.getDeclaredConstructors0(Native Method)  WrapperManager Error:   at java.lang.Class.privateGetDeclaredConstructors(Class.java:2389)  WrapperManager Error:   at java.lang.Class.getConstructor0(Class.java:2699)  WrapperManager Error:   at java.lang.Class.getConstructor(Class.java:1657)  WrapperManager Error:   at org.mule.module.reboot.MuleContainerWrapper.start(MuleContainerWrapper.java:53)  WrapperManager Error:   at org.tanukisoftware.wrapper.WrapperManager$12.run(WrapperManager.java:3925)  WrapperManager Error: Caused by: java.lang.ClassNotFoundException: org.apache.log4j.spi.RepositorySelector  WrapperManager Error:   at java.net.URLClassLoader$1.run(URLClassLoader.java:202)  WrapperManager Error:   at java.security.AccessController.doPrivileged(Native Method)  WrapperManager Error:   at java.net.URLClassLoader.findClass(URLClassLoader.java:190)  WrapperManager Error:   at java.lang.ClassLoader.loadClass(ClassLoader.java:306)  WrapperManager Error:   at java.lang.ClassLoader.loadClass(ClassLoader.java:247)  WrapperManager Error:   ... 6 more    This is due to the patch done to fix MULE-5264 which causes MuleContainer to have a direct reference to Log4j's RepositorySelector. Simply moving the reference and the call to setRepositorySelector to some other class which is not accessed via a static reference should solve the problem."""
"MULE-6646","Story","Build: (other)",5,"REST Browsable Web UI Generation","""http://corp.wiki.mulesource.com/display/WP/Simplified+REST+Service+Creation"""
"MULE-6645","Story","Build: (other)",8,"REST Swagger Definition Generation","""http://corp.wiki.mulesource.com/display/WP/Simplified+REST+Service+Creation"""
"MULE-6642","Story","Build: (other)",8,"REST Document Resource Definition","""http://corp.wiki.mulesource.com/display/WP/Simplified+REST+Service+Creation"""
"MULE-6641","Story","Mule Core",0,"REST Service/Interface Definition","""http://corp.wiki.mulesource.com/display/WP/Simplified+REST+Service+Creation"""
"MULE-6649","Story","Build: (other)",3,"Addition of DB2 and MS SQL Server to the list of databases on Studio JDBC connector configuration window - ESB Work","""Today we show MySQL, Derby, and Oracle. However, MS SQL and DB2 are RDBMS's with very large footprints. As such, we should add these two databases to the set that shows up on the JDBC connector's configuration screen. """
"MULE-6647","Story","Core: (other)",5,"Remove all examples, except the new hello world and existing loan broker, from ESB stand-alone distribution","""* Packaged examples should be modified as per the following plan: https://docs.google.com/a/mulesoft.com/spreadsheet/ccc?key=0ArwrJmCfHowWdDNCdnJYeldHcDI5M0dYaTRsWUwxd2c#gid=2    * This requires the following additional work:      - Creation of the two new identified examples.      - Modification of target examples to use latest 3.4 features. Beyond specifics identified on spreadsheet this includes adding in-studio documentation for all examples.     - Modification of documentation for target examples.     - Removal of examples tagged as Archive from Studio.     - Modification of docs to reflect an Archived examples section.      - Placement of all examples in GIT and tagging as active versus archived.     - From the ESB stand-alone distribution point of view: Remove all examples except the new hello world and existing loan broker."""
"MULE-6663","Story","Core: (other)",0,"Testing - Mule 3.4 Thorttling with GA Registry","""As a Registry user, I would like to be able to apply throttling policies to my Mule ESB flow end-points. """
"MULE-6661","Story","Core: (other)",1,"Testing - Mule 3.4 Dynamic Lookup with GA Registry","""As a Mule user, I would like to use the dynamic lookup component within my flows.  Detailed specs defined here:   http://corp.wiki.mulesource.com/display/WP/Dynamic+Router+%28supports+Registry+Dynamic+Endpoint+Resolution%29"""
"MULE-6659","Story","Core: (other)",3,"Testing Mule 3.4 Pairing with GA Registry","""As a Mule user, I would like to configure my Mule instance to be paired with my Registry account through my registry key so that I may be able to manage my ESB instance's endpoints with the registry.   User should be configure the registry key for their registry account for an ESB instance. From there on: The HTTP endpoints of all apps deployed to the ESB instance should be manageable with the paired registry instance.  Detailed specs described here:   http://corp.wiki.mulesource.com/display/PRODMGMT/Registry+Interaction+and+License+Management+Support """
"MULE-6657","Story","Core: (other)",8,"NIO and WebSocket Completion","""As a Mule ESB user, I would like to be able to turn on the use of the NIO stack through a deploy.properties toggle.   As a Mule ESB user, I would like to be able to use the new WebSocket components within my flows. """
"MULE-6673","Story","Core: (other)",5,"Update Spring version used in Mule to 3.2","""Update the version of Spring we are using to 3.2"""
"MULE-6700","Enhancement Request","Build: Libraries / Dependencies",1,"mule-common dependency should be on a fixed version","""We should be on a fixed version rather than a SNAPSHOT. mule-common is at 0.11.0-SNAPSHOT so we'll go with 0.11.0."""
"MULE-6699","Bug","Core: API",5,"Intercepting Are not generating message processor path ","""This is currently breaking debugger, since all MP that executes after an intercepting MP are not being executed. """
"MULE-6815","Task","Module: APIKit",3,"APIkit Tech Debt","""APIkit Tech Debt"""
"MULE-6814","Enhancement Request","Module: APIKit",8,"APIkit REST Controller Resource","""REST Controller Resource"""
"MULE-6714","Story","Core: API",5,"Deprecate Services (and anything else we can)","""Deprecate Services (and anything else we can)"""
"MULE-6713","Task","Build: (other)",8,"GitHub migration","""- svn repo migration to github  - bamboo plans update"""
"MULE-6711","Story","Modules: (other)",8,"APIkit example application","""Create an example application to showcase apikit functionality"""
"MULE-6710","Story","Modules: (other)",8,"REST Representations definition","""Multiple representation support for apikit"""
"MULE-6732","Bug","Transport: HTTP(S) / Jetty",5,"HTTP(S) transport generates everlasting temporary files","""When doing a multipart upload it may create a temporary file. It will remain on the disk drive because the file is not being deleted once the outputstream is closed. A deleteOnExit flag would not be effective for never-closing applications.    This eventually leads to """"java.io.IOException: No space left on device"""".    The location where this file is being created may be seen at https://github.com/mulesoft/mule/blob/mule-3.x/transports/http/src/main/java/org/mule/transport/http/multipart/MultiPartInputStream.java#L135"""
"MULE-6746","Task","Build: (other)",5,"Fix the 3.x site build","""javadoc generation is failing.  check log here:    http://bamboo.mulesoft.org/browse/MULE3X-MULE3XSITE-SITE"""
"MULE-6749","Bug","Core: (other)",8,"ReplyToHandlers do not work with Dynamic Outbound Endpoints","""ReplyToHandler in the case of Ajax (AjaxReplyToHandler) depends on the MessageSourceURI to actually send the message back to the caller.   If a dynamic outbound endpoint is introduced in the middle which replaces the event's MessageSourceURI it breaks the replyTo.  See the following flow (modified version of the Order Processing example shipped with Studio):    produces the following error:  """
"MULE-6765","Bug","Transport: HTTP(S) / Jetty",13,"Chaining more than one HTTP outbound endpoint will use the HTTP method of the first one","""If I have a config file as follows:        The second outbound-endpoint will always do a GET because if the input payload is of type HTTPMethod, then it takes the value from there."""
"MULE-6760","Bug","Core: Components",5,"ProcessorChain and SubFlows are intercepting when they shouldn't","""Currently ProcessorChain and SublFlows are Intercepting this affects debugger because notifications are generated wrong. """
"MULE-6789","Bug","Transport: JMS",8,"NullPointerException during JMS Reconnect Attempt","""If you configure an xa enabled connector to a JMS broker and the jms broker goes down, the following exception get thrown:        Step to reproduce:    * run the attached config  * tear down the activemq broker and start it again"""
"MULE-6788","Enhancement Request","Modules: CXF",5,"Upgrade CXF to 2.5.9","""We should upgrade cxf to get the latest security patches."""
"MULE-6795","Bug","Core: Routing / Filters",0,"Throw ""Invalidated calling setPayload"" exception when data flow past from <All> router to java component","""Flow config is following:        <flow name=""""testFlow1"""" doc:name=""""testFlow1"""">          <http:inbound-endpoint exchange-pattern=""""request-response"""" host=""""localhost"""" port=""""8080"""" doc:name=""""HTTP""""/>          <custom-transformer class=""""test.ReqToContent"""" doc:name=""""Java""""/>          <all doc:name=""""All"""">              <component class=""""test.B"""" doc:name=""""B""""/>              <component class=""""test.C"""" doc:name=""""C""""/>          </all>          <component class=""""test.CollctToString""""/>     </flow>      There are two components in the one <All> router:    public class B implements Callable {     @Override   public Object onCall(MuleEventContext eventContext) throws Exception {    System.out.println(""""B"""");    return """"B"""";   }    public class C implements Callable {     @Override   public Object onCall(MuleEventContext eventContext) throws Exception {    System.out.println(""""C"""");    return """"C"""";   }  }      There is a component after the <All> router:    public class CollctToString implements Callable {     @Override   public Object onCall(MuleEventContext eventContext) throws Exception {    return """"CollctToString"""";   }  }      Run the app, it will throw following exception after executing components B and C:    java.lang.IllegalStateException: Payload was invalidated calling setPayload and the message is not collection anymore.   at org.mule.DefaultMessageCollection.checkValidPayload(DefaultMessageCollection.java:107)   at org.mule.DefaultMessageCollection.newThreadCopy(DefaultMessageCollection.java:312)   at org.mule.DefaultMuleEvent.newThreadCopy(DefaultMuleEvent.java:779)   at org.mule.RequestContext.newEvent(RequestContext.java:140)      I debugged it and found the cause:    DefaultMessageCollection.setPayload() has been called by DefaultMessageCollection.transformMessage(MuleEvent, Transformer).    And DefaultMessageCollection.invalidatedPayload field value is true.     The 2sec passing parameter of DefaultMessageCollection.transformMessage(MuleEvent, Transformer) method is a transformer which I do not custom, and it will transform message to a String result.    I cannot understand what does the code """" if (this.getPayload() == payload) """" of DefaultMessageCollection.setPayload() mean, this.getPayload() is a collection and payload is a string by previous transformMessage() method. I think it should call addMessage(MuleMessage message) to add all objects returned from components in the <All> router.    It's success when I insert a custom transformer for converting Collection between <All> router output data flow and component class CollctToString."""
"MULE-6796","Enhancement Request","Modules: CXF",3,"Allow MEL expressions in cxf:property of cxf:ws-config","""It would be nice to be able to use MEL expressions for the values of properties in the ws-config so we can set properties based upon the message being processed."""
"MULE-7001","Task","Core: (other)",8,"Write initial draft of shared ports spec","""We are having a number of critical users requests for being able to deploy multiple apps on the same Mule instance using the same IP/Port endpoint.     This story is to do some analysis to identify the possible solutions for addressing this problem space. """
"MULE-6800","Bug","Core: (other)",5,"Thread leak on Mule redeployments for embedded","""When Mule is running embedded in a container, after redeploying an application, there is a thread which still lives from the previous deployment and gets created again with the new one: Mule.log.slf4j.ref.handler.    Steps to reproduce:  1. Deploy a Mule embedded app in Tomcat (bookstore-admin.war from the examples, for instance).  2. Check the thread count and look for the mentioned thread  3. Re-deploy the app  4. Check the thread count, it should have gone up by 1 and there should be 2 threads called Mule.log.slf4j.ref.handler"""
"MULE-6829","Bug","Modules: CXF",5,"cxf_operation is wrong when using proxy-client of a soap 1.1 request","""When processing a soap 1.1 request, the org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor looks for the soap action in soapMessage.get(Message.PROTOCOL_HEADERS).get(SoapBindingConstants.SOAP_ACTION). If Mule doesn't set this beforehand, cxf doesn't find it. This is a problem because the SoapActionInInterceptor will then fail to set the BindingOperationInfo for the request and thus the StaxDataBindingInterceptor will not know which BindingOperationInfo to use so it just picks the first one of its list (which is probably wrong!) and bam! we're executing the wrong operation.    Processing soap 1.2 requests (which is much more prevalent) doesn't have this problem."""
"MULE-6826","Task","Build: Integration Tests",1,"Fix flaky unit test: DateTimeTestCase","""DateTimeTestCase has many test that are flaky because they depend on the current system time.  For example:        Problem is that there are two different calls to obtain the current second, so they could obtain different values from time to time.  Same problem exist in many tests, but as they are checking for minutes, hours, days, weeks, etc they less probable to fail, but they are still flaky in theory.  """
"MULE-6846","Story","Modules: (other)",5,"Define filter, split, aggregate and route record level data strategy","""Basic requirements:     http://corp.wiki.mulesource.com/pages/viewpage.action?pageId=27132117  """
"MULE-6845","Story","Modules: (other)",3,"Define Polling Watermarks","""Right now, when a poll needs to deal with updated objects, we use watermarks as an approach to filter out elements that were already processed. The only way to do that right now is to implement the logic manually which forces the user to deal with object stores, default values, repeated logic, dev time dependencies, etc.    This story is a container of all the features required for watermark  """
"MULE-6844","Story","Core: API",5,"Connector Auto-Paging","""See here: http://corp.wiki.mulesource.com/pages/viewpage.action?pageId=27132117    This will require some in-iteration investigation."""
"MULE-6843","Story","Core: (other)",13,"Move OAuth from DevKit to ESB","""* Move generated DevKit code to ESB and expose an interface that DevKit can use  * Improve user experience when trying to configure an OAuth connector    http://corp.wiki.mulesource.com/display/WP/Making+OAuth+user+experience+smoother"""
"MULE-6849","Bug","Core: (other)",8,"ReplyToDestination is not properly configured in some scenarios","""ReplyToParameterProcessor which is used to move the replyToDestination info from the message to the event is not always invoked before other processing occurs.  This causes that the message processed inside the flow is not sent back to the client."""
"MULE-6848","Enhancement Request","Transport: JDBC",0,"Improve JdbcTransactionFactory to support multi transactions","""JdbcTransactionFactory needs to implement UniversalTransactionFactory in order to work with mule-module-multi-tx-ee"""
"MULE-6852","Enhancement Request","Core: Routing / Filters",3,"Default object store for until-successful","""until-successful needs to be configured with an objectstore by default so it works out of the box very easily."""
"MULE-6858","Bug","Transport: FTP / SFTP",2,"Filename-wildcard filter to fails with SFTP","""MULE-6743 modified the scope of originalFilename property: originally it was stored in the outbound scope, but it was changed to inbound.  Filename wildcard filter was also changed to read that property from the inbound scope.    However the SFTP transport is still storing the property in the outbound scope, making the filter to work incorrectly (not processing file that should be processed).  After the mentioned changes, file transport is storing the property in INBOUND and OUTBOUND, FTP is storing it in INBOUND, and SFTP is doing it only in OUTBOUND.  """
"MULE-6861","Enhancement Request","Modules: (other)",5,"Watermark / Binding object store items to flow variables","""h1. Watermarking       Right now, when a poll needs to deal with updated objects, we use watermarks as an approach to filter out elements that were already processed.  Watermarks require a value to be persisted across flow invocations. Typically, this value will have a default the first time used, and will be used as part of a query or outbound request. Based on how the flow processes the results, the value may be updated.      This can be done using several steps:       - Fetch a value form a persistent object store and save it as a flow variable       - Refer to the flow variable when doing a query / outbound request       - Update the variable based (either once - i.e. the watermark is the date of the query, or per record - i.e. the watermark is the highest id from an object)       - At the end of the processing, persist the value to the persistent object store         This pattern is very common in synchronisation flows. Enough common to deserve better support. To make this easier out of the box we will add a new optional parameter to <poll> that will provide the watermarking variable persistence out of the box.    Watermark Example:        h2. Watermark properties      * variable (required): This attribute signals both the object store key that will be used to store this watermark as also the name of the flowVar in which its value will be exposed to the user.   * default-expression (required): In case that the key above can't be found on the object store, the default expression is used to generate a value. This is useful for the first run of the flow   * update-expression (optional): The result of this expression will be used to update the watermark once the execution is finished. It defaults to the value of the variable parameter.  * objectStore-ref (optional): A reference to the object store you wish to use to store the watermarks. If not provided, the default user object store will be used     h2. Watermark behaviour     * It is bound to the poll   * It is bound to synchronous flows only. If not then it execution must fail  * When executed, it goes to the configured object store looking for a value of the given key. If found, that value is exposed through a flowVar using the same key.   * If no value is found for that key in the object store, then the default-expression is executed and that value is exposed through the flowVar.  * Watermark will also fire a notification interceptable by the event tracking module. The underlaying tracking event will be enriched with the watermark value.  * The message processors will be executed.  * If the flow was correctly executed, then the watermark will be updated.   * After updating the object store, another notification is fired to the event tracking system so that the new value can also be recorded there   * If the intercepted processors throw any exceptions, then the watermark will not be updated. Since the watermark is stored in the object store, the user can always use a exception strategy to put a custom value in case of failure.  * In case the watermark value is not serializable then fail the store of the watermark in the object store  """
"MULE-6864","Bug","Transport: FTP / SFTP",3,"SFTP: Jsch issue in java 1.7 and Kerberos","""There is a known issue with JSch running in java 1.7 and connecting to a server with Kerberos enabled.  When trying to connect to that server, it will request the password to be manually entered.  The issue is described in the following page:  https://issues.apache.org/bugzilla/show_bug.cgi?id=53437    Setting """"PreferredAuthentications"""" property to """"publickey,password,keyboard-interactive"""" in the SftpClient solves the problem."""
"MULE-6866","Enhancement Request","Build: Libraries / Dependencies",8,"Upgrade to Groovy 2.3.6","""Upgrade Mule's Groovy dependency to Groovy 2.3.6."""
"MULE-6896","Enhancement Request","Core: Components",8,"Ability to handle record level errors in for-each","""As an user, I want to catch exceptions at a record level in a for-each/batch element so I can continue processing and put my individual records on a DLQ."""
"MULE-6872","Epic","Core: (other)",8,"Poll 2.0","""For studio, we want to be able to start, stop and execute polls via an API."""
"MULE-6894","Enhancement Request","Core: (other)",8,"Split collection processor","""Spec TBD  """
"MULE-6900","Enhancement Request","Core: API",5,"Change Poll schema to accept a scheduler strategy","""New poll schema will accept scheduler strategies:    <poll>     <schedulers:simple frequency=""""1000""""/>  </poll>"""
"MULE-6899","Enhancement Request","Core: API",2,"Provide an  API to stop/start and execute schedulers","""We need external systems to be able to stop/start and execute schedulers at any given time."""
"MULE-6898","Enhancement Request","Core: API",5,"Create Mule API to inject Poll a different scheduler","""Poll elements have a single scheduler strategy (it uses sheduledWithFixDelay) we want users to be able to determine a different scheduler strategy as part of the story MULE-6872"""
"MULE-6906","Enhancement Request","Core: (other)",1,"Add utility methods to execute flows in FunctionalTestCase","""Right now FunctionalTestCase only provides one testFlow() method which does't really fit all use cases. FunctionalTestCase could be improve adding the runFlow() family of methods that Devkit generates when archetyping a CloudConnector.     This would be better for a user testing their applications and would also help the effort of moving code from Devkit to mule"""
"MULE-6903","Bug","Core: Routing / Filters",1,"UntilSuccessful doesn't correctly validate payload is Serializable","""When ensuring that the message payload is Serializable, the validation is not property done when the message is a DefaultMuleMessage and the payload isn't consumable"""
"MULE-6918","Enhancement Request","Core: (other)",5,"Add dynamic round robin routing support","""Related to MULE-6653 where support for dynamic router was implemented for 'first successful' and 'all' strategies. A new strategy should be added for round robin.     The new dynamic-round-robin will round robin through the routes to dispatch the message, maintaining a state to keep track of the next message processor that needs to be processed.     The state should be maintained based on a route resolver identifier, the goal behind it is to keep track of the iteration for each configuration of the router. By default it should assume the route resolver has no state if it does not implement an IdentifiableDynamicRouteResolver (which is an interface that extends DynamicRouteResolver)"""
"MULE-6956","Enhancement Request","Core: (other)",1,"Watermark - unable to access default user Object Store instance","""*Steps*    with this flow         watermark does not access the default user Object Store """
"MULE-6959","Bug","Core: Concurrency / Threading",5,"Race condition creating MVELExpressionLanguage instances","""Constructor of MVELExpressionLanguage is updating the expression language configured in the DefaultExpressionManager.  This creates a reace condition when there are more than one instance created and multiple threads using the expression manager. In those cases, some threads can get a NPE.    This is a problem using Data Mapper as they extend the MVELExpressionLanguage.    There is a second problem having MVELExpressionLanguage constructor setting the expression language: after a DM component, the expression language use in the app will continue to be the expression language from DM, not the original mvel"""
"MULE-6965","Bug","Core: (other)",8,"Erro during mule message serialization when using byte array as payload","""Attached configuration works well on standalone mode, but when switch to cluster mode I got this exception:    INFO  2013-06-18 16:04:26,722 [[pepe].connector.file.mule.default.receiver.01] org.mule.transport.file.FileMessageReceiver: Lock obtained on file: /private/tmp/test/file.txt  ERROR 2013-06-18 16:04:26,904 [[pepe].inputFlow.stage1.01] org.mule.exception.DefaultSystemExceptionStrategy: Caught exception in Exception Strategy: java.lang.String cannot be cast to org.mule.api.MuleEvent  java.lang.ClassCastException: java.lang.String cannot be cast to org.mule.api.MuleEvent   at org.mule.processor.SedaStageInterceptingMessageProcessor.dequeue(SedaStageInterceptingMessageProcessor.java:134)   at org.mule.processor.SedaStageInterceptingMessageProcessor.run(SedaStageInterceptingMessageProcessor.java:209)   at org.mule.work.WorkerContext.run(WorkerContext.java:311)   at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)"""
"MULE-6968","Enhancement Request","Transport: HTTP(S) / Jetty",8,"Http endpoint with path="""" or path=""/"" do not attend requests at root level","""enpoints #2 and #3 behave differently than #1 that shows the correct behavior.    1) <http:inbound-endpoint port=""""8000"""" host=""""localhost"""">  2) <http:inbound-endpoint port=""""8000"""" host=""""localhost"""" path="""""""">  3) <http:inbound-endpoint port=""""8000"""" host=""""localhost"""" path=""""/"""">    only #1 answers requests to http://localhost:8000/    #2 and #3 throw the following error:    Cannot bind to address """"http://localhost:8000/"""" No component registered on that endpoint    """
"MULE-6986","Bug","Transport: HTTP(S) / Jetty",5,"http:static-resource-handler fails when request path is '/'","""Given a http:inbound-endpoint with no context path, and a http:static-resource-handler with a resourceBase set, expect that visiting http://server:port should redirect or service http://server:port/index.html.    Noted the following issues:    1) Server actually sends a 302 redirect to '//', which is not handled well by modern browsers (Chrome)  2) Visiting http://server:port// actually returns the contents of index.html  3) As a side-issue, visiting http://server:port/index.html if resourceBase does not have a trailing slash results in a file not found error (does not add the necessary slash)    Looking at the source here: https://github.com/mulesoft/mule/blob/8de5e6b1de40e8d5f792e8e0f0b9d1de7506c2d8/transports/http/src/main/java/org/mule/transport/http/components/StaticResourceMessageProcessor.java    The issue is that the request path is stripped back from '/' to '' here:        And so the following code fails to match on 'path.endsWith':        And the subsequent code block to redirect is used. The functional test cases don't catch this because the context path is not the same as the request path."""
"MULE-6998","Bug","Build: Libraries / Dependencies|Build: Maven",3,"Incorrect maven dependency for drools","""Drools (mule-module-drools) needs the jasper-jdt jar, but does not declare a dependency for it. For a drools project to work, you also need to declare a dependency for mule-transport-ajax.    mule-transport-ajax declares a dependency for  org.apache.tomcat:jasper:jar which will also bring in jorg.apache.tomcat:jasper-jdt:jar    But mule-transport-ajax shouldn't be required for using drools with Mule."""
"MULE-7013","Enhancement Request","Transport: HTTP(S) / Jetty",8,"Deprecate keepSendSocketOpen attribute in HTTP connector","""The HTTP Connector has an attribute 'keepSendSocketOpen' that is inherited from the TCP connector. This attribute is a TCP setting that should not exist in the HTTP connector (to keep outbound connections open the keep-alive attribute in the outbound endpoint should be used).   Add documentation for this change."""
"MULE-7012","Bug","Transport: HTTP(S) / Jetty",13,"HTTP/HTTPS outbound endpoints ignore the keep-alive attribute","""The HTTP outbound endpoint has an attribute keep-alive that controls the use of persistent HTTP outbound connections. This attribute is currently ignored.     An endpoint configured with exchange-pattern=""""one-way"""" always keeps outbound connections alive. If the request-response exchange pattern is used, a new connection is created in each request.    This behavior should depend on the keep-alive attribute of the endpoint.    In the following example the keep-alive attribute is set to false but the endpoint keeps alive the connection:    """
"MULE-7022","Task","Build: (other)",1,"Add nexus profile to distributions pom.","""Add nexus profile to distributions pom."""
"MULE-7027","Bug","Core: Event/Message",5,"ExpiringGroupMonitoringThread must process event groups only when the node is primary","""ExpiringGroupMonitoringThread is used on the EventCorrelator to detect EventGroup that expired and must be deleted.  This thread is always started as part of the EventCorrelator and that means that in a cluster environment, every node will have a thread running.  This causes problems when different nodes try to process the same event group simultaneously. """
"MULE-7031","Enhancement Request","Core: API",1,"Add getObjectStoreManager() in MuleContext","""Add a method in the MuleContext for easy access to the ObjectStoreManager"""
"MULE-7030","Enhancement Request","Build: Libraries / Dependencies|Modules: XML, XSLT, XPath, SXC",13,"Need to support XPATH 3.0 in the xpath filter","""Xpath 2.0 is supported in the XSLT transformers but not in filters right now.    This will only apply for xpath expressions not jxpath    According to [~philip.parker]    AFAIK we only support xpath version 1.0 in flows using MEL, it seems we may support version 2.0 in xslt transformation, in DM I think we support version 3.0.  All of these really should be aligned to the same version.  Since xpath 2.0 came out in 2007 I think we should be using that as a minimum, if not we should be using 3.0 to take advantage of the newer functions.  As we move onto the bigger customers and SOAP WS, they may well want to use XML."""
"MULE-7044","Enhancement Request","Core: (other)",3,"Make poll schedulers part of the same namespace","""When poll was enhanced to support different schedulers in Andes, the simple scheduler ended up being defined in the mule schema, and the cron scheduler ended up being part of the schedulers schema.    In order to improve consistency, we want to have all the schedulers distributed by the ESB in the same schema.    Move the default scheduler bean definition to the scheduler namespace.  """
"MULE-7043","Bug","Modules: Devkit Support",3,"Cannot put a Foreach after an OAuth authorize","""Creating a simple flow that do the authorization and calls get-contacts and iterate through the payload.  INFO 2013-09-23 18:12:12,291 [[google-contacts-paged-test].connector.http.mule.default.receiver.02] org.mule.api.processor.LoggerMessageProcessor: Authorized...  ERROR 2013-09-23 18:16:09,797 [[google-contacts-paged-test].connector.http.mule.default.receiver.02] org.mule.exception.DefaultMessagingExceptionStrategy:   ********************************************************************************  Message : Object """"org.mule.modules.google.contact.wrappers.GoogleContactEntry"""" not of correct type. It must be of type """"{interface java.lang.Iterable,interface java.util.Iterator,interface org.mule.routing.MessageSequence,interface java.util.Collection}"""" (java.lang.IllegalArgumentException). Message payload is of type: GoogleContactEntry  Code : MULE_ERROR--2  --------------------------------------------------------------------------------  Exception stack is:  1. Object """"org.mule.modules.google.contact.wrappers.GoogleContactEntry"""" not of correct type. It must be of type """"{interface java.lang.Iterable,interface java.util.Iterator,interface org.mule.routing.MessageSequence,interface java.util.Collection}"""" (java.lang.IllegalArgumentException)  org.mule.util.collection.EventToMessageSequenceSplittingStrategy:61 (null)  2. Object """"org.mule.modules.google.contact.wrappers.GoogleContactEntry"""" not of correct type. It must be of type """"{interface java.lang.Iterable,interface java.util.Iterator,interface org.mule.routing.MessageSequence,interface java.util.Collection}"""" (java.lang.IllegalArgumentException). Message payload is of type: GoogleContactEntry (org.mule.api.MessagingException)  org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor:35 (http://www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/MessagingException.html)  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.IllegalArgumentException: Object """"org.mule.modules.google.contact.wrappers.GoogleContactEntry"""" not of correct type. It must be of type """"{interface java.lang.Iterable,interface java.util.Iterator,interface org.mule.routing.MessageSequence,interface java.util.Collection}""""  at org.mule.util.collection.EventToMessageSequenceSplittingStrategy.split(EventToMessageSequenceSplittingStrategy.java:61)  at org.mule.util.collection.EventToMessageSequenceSplittingStrategy.split(EventToMessageSequenceSplittingStrategy.java:26)  at org.mule.routing.CollectionSplitter.splitMessageIntoSequence(CollectionSplitter.java:33)  + 3 more (set debug level logging or '-Dmule.verbose.exceptions=true' for everything)  ********************************************************************************"""
"MULE-7052","Enhancement Request","Core: Transactions",13,"Create bitronix transaction manager module and integrate with existent transports","""Create a module to use bitronix transaction manager in mule.    Integrate the module with existent mule transports"""
"MULE-7057","Task","Core: (other)",13,"Finalize shared resources spec + create tasks to implement feature","""The initial draft of the shared resources spec is here: https://docs.google.com/a/mulesoft.com/document/d/15Pt1N4ylouxk-nFiAFAtfnOiqYyn5fnJn4X3iJtF9tI/edit?usp=drive_web    Now that sufficient time has passed, we should finalize the specification, and scope out the amount of work it takes to implement the feature in Mule.    Acceptance criteria for this Jira is that more Jiras are created with story points allocated to implement the feature."""
"MULE-7063","Enhancement Request","Build: Distributions",2,"Add Spring Security LDAP to Mule Distribution","""Add Spring Security LDAP dependency to the standalone distribution."""
"MULE-7071","Task","Transport: HTTP(S) / Jetty",2,"Update mule-jetty.xsd that contains references to old Jetty classes in its comments","""The mule-jetty.xsd file still contains references to old Jetty clases (org.mortbay) in the comments. Update this file."""
"MULE-7069","Task","Transport: AJAX",3,"Update Cometd version in Ajax transport","""The current Cometd version used in the Ajax transport uses Jetty 6. Update Cometd in order to remove all references to Jetty 6 and use Jetty 8. Update ajax tests that use old jetty version."""
"MULE-7067","Task","Transport: HTTP(S) / Jetty",8,"Improve the way webapps are deployed in the Jetty transport","""Remove the WebAppDeployer class, use WebAppProvider from newer Jetty versions instead."""
"MULE-7074","Enhancement Request","Core: API",8,"Need a way to add message properties other thread","""DM needs to be able to add flowVars in a asynch way to the message. See https://www.mulesoft.org/jira/browse/EE-3479"""
"MULE-7078","Enhancement Request","Core: API",1,"Create API for record level partial error handling","""Both Batch module, connectors, devkit and advanced applications will need some common ground to make partial error handling work:  Devkit and connectors will need classes that return bulk operation status on a record per record basis  Batch module will need to read partial error classes and treat them accordingly for marking record level errors.  Advanced applications may define their own components that may return partial error information.  Munit, debugger, batch module and advanced applications will also need to work on a uniform definition of record:  Munit to provide means to set record level variables or assert record state  Debugger to provide information about record state  Batch module to register MEL extensions accessing the record, and in general to provide record level scopes.  Advanced applications may eventually define custom steps (this extension is not planned on the initial release), needing to tap into the record scope objects.  A small API maven module has to be introduced, so that it may be used as a dependency on the other projects as needed. This module should have the -api suffix, and have a version scheme independent from mule."""
"MULE-7082","Enhancement Request","Core: Streaming",5,"Implement new summary module for calculating aggregation functions over streams","""Implement new module according to spec at https://github.com/mulesoft/mule/wiki/%5B3.5.-M3%5D-Summarizers"""
"MULE-7084","Task","Build: Maven",5,"Deprecate dev.ee repository in favour of repository.mulesoft.org","""Change distribution management repositories to: https://repository-aster.mulesoft.org/nexus/content/repositories/    And build repositories to: https://repository.mulesoft.org/nexus/content/repositories/  """
"MULE-7091","Bug","Modules: Devkit Support",1,"IllegalStateException when doing OAuth dance with InMemoryObjectStore","""OAuth dance works fine with PersistentObjectStores but when using in-memory ones this error is obtained:    ********************************************************************************  Message               : Failed to invoke fetch-access-token. Message payload is of type: String  Code                  : MULE_ERROR--2  --------------------------------------------------------------------------------  Exception stack is:  1. Only owner thread can write to message: Thread[[splunkfulfillmentqa].connector.http.mule.default.receiver.02,5,main]/Thread[[splunkfulfillmentqa].httpscon.receiver.02,5,main] (java.lang.IllegalStateException)    org.mule.DefaultMuleMessage:1626 (null)  2. Failed to invoke fetch-access-token. Message payload is of type: String (org.mule.api.MessagingException)    org.mule.devkit.processor.DevkitBasedMessageProcessor:134 (http://www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/MessagingException.html)  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.IllegalStateException: Only owner thread can write to message: Thread[[splunkfulfillmentqa].connector.http.mule.default.receiver.02,5,main]/Thread[[splunkfulfillmentqa].httpscon.receiver.02,5,main]          at org.mule.DefaultMuleMessage.newException(DefaultMuleMessage.java:1626)          at org.mule.DefaultMuleMessage.checkMutable(DefaultMuleMessage.java:1612)          at org.mule.DefaultMuleMessage.assertAccess(DefaultMuleMessage.java:1541)      + 3 more (set debug level logging or '-Dmule.verbose.exceptions=true' for everything)  ********************************************************************************"""
"MULE-7090","Enhancement Request","Core: Transports",5,"Make Mule rely on platform configured JCE provider instead of fixing on a predefined version","""TlsConfiguration gets defaults for several properties using an AutoDiscoverySecurityProviderFactory, which in turn provides defaults based on the JVM flavour in use.    In particular, it sets the default JCE Provider to use, the JCE Provider implementation class, the default Keystore type, and the default SSL protocol type being use.  This has several problems:   * It doesn't allow to properly setup JCE providers as part of the platform configuration, something required to use a FIPS 140-2 compliant JCE provider  * It fixes on old versions of the providers and doesn't leverage improvements made in the platforms, like IBM's improved JCE driver (currently we use a JCE provider that is 6+ years old on IBM JVMs)  * It fixes the SSL/TLS versions supported, which causes SSL endpoints to support SSL3 (considered deprecated) but no TLS    The java platform provides sensible defaults for all these, which get updated as the security landscape evolves, and which can be defined as part of the JVM configuration.   Remove the """"discovery"""" of defaults, and use platform defaults for operations in and depending on TlsConfiguration.    Acceptance criteria:  It should be possible to use any JCE provider defined in the JVM environment in order to support FIPS compliant providers.  Endpoints should rely on the registered JCE provider for SSL and use the default ssl type instead of hardcoding one (As FIPS providers will disable several modes and only allow TLS 1.0+).  """
"MULE-7089","Task","Core: Streaming",3,"Write spec for new summarizer feature","""Write a spec for a new feature that is compliant with the following story:    Add a new message processor that would allow to totalise element attributes over a collection or stream.  The element should be able to extract a value based on an expression, and then calculate on these summarizer functions: add, average, count, max, min over the value.   The result should be saved into a flow variable also defined in the element.  This processor should work with streams like auto paging collections. For these cases, the options are to lazily calculate the elements as the stream is consumed or to consume the whole stream. The former should be he default, and there should be an attribute allowing to change the behaviour."""
"MULE-7088","Task","Transport: Email|Transport: HTTP(S) / Jetty",8,"Improve the way Mime types are registered for outbound http attachments","""The HTTP transport uses javax.activation to handle outbound attachments. Mime types are registered by the email transport (through a static initialization block in the class DefaultDataContentHandlerFactory). Therefore, if this class is not loaded, there are no mime types available and there is an error when sending outbound attachments through HTTP (for example: javax.activation.UnsupportedDataTypeException: no object DCH for MIME type text/plain).    In the normal use of Mule this problem doesn't happen because all transports are in the classpath, but there should not be a dependency between the HTTP transport and the email transport.    See HttpOutboundAttachmentFunctionalTestCase. If the mule-transport-email dependency is removed from the http transport pom, this test fails.  """
"MULE-7103","Enhancement Request","Core: Transports",5,"Add support for specifying as a system property, FIPS compliant security model","""Add a system property mule.security.model that when used may alter the security setup of mule and it's modules.    The default value should be 'default', and should result in the actual behaviour. Using a value that is not recognised should result in a fatal error preventing mule to be successfully initialised.    The second supported value should be 'fips140-2', and should result in:  * The pgp module being disabled - that is, using php module constructs should raise an error  * Any TLS cipher suite NOT defined in the following list should be disabled:   (note that the provider may not support all the suites described below - if it doesn't support any of these, an error should be raised).    List of approved suites for FIPS:  SSL_RSA_WITH_3DES_EDE_CBC_SHA  SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA  TLS_RSA_WITH_AES_128_CBC_SHA  TLS_DHE_DSS_WITH_AES_128_CBC_SHA  TLS_DHE_RSA_WITH_AES_128_CBC_SHA  TLS_RSA_WITH_AES_256_CBC_SHA  TLS_DHE_DSS_WITH_AES_256_CBC_SHA  TLS_DHE_RSA_WITH_AES_256_CBC_SHA  TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA  TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA  TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA  TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA  TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA  TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA  TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA  TLS_ECDH_RSA_WITH_AES_128_CBC_SHA  TLS_ECDH_RSA_WITH_AES_256_CBC_SHA  TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA  TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA  TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA      """
"MULE-7101","Enhancement Request","Modules: XA Transactions",8,"Add pool configuration elements for JMS and JDBC in bitronix ","""It must be possible to configure a JMS ConnectionFactory pool and JDBC DataSource pool explicitly through XML configuration."""
"MULE-7098","Task","Core: Transactions",13,"Create automated test cases for xa transaction recovery","""Create automated test cases for xa transaction recovery."""
"MULE-7097","Enhancement Request","Core: Transports",8,"Provide a way to specify valid cipher specs for SSL on transports that support the protocol","""SSL/TLS negotiate the actual cryptographic functions used on a session by session basis.  In strict environments, it's necessary to remove older and weaker variants of many algorithms.  It should be possible to setup the list of cipher specs allowed on secure connections. This setup should happen at server or at least application level, and the default should be to use whatever the cipher specs defined by default by the current provider.    Note that this should affect not only https, but any other transport using tis, like pops, imaps, etc.  """
"MULE-7108","Enhancement Request","Core: Components",2,"Need to decouple Pipeline interface from MessageProcessorPath generation","""In order to be able to implement EE-3510 need to fix this issue."""
"MULE-7113","Enhancement Request","Core: (other)",3,"Add selectors functionality on Watermark","""Implement selectors functionality on watermark as described in https://github.com/mulesoft/mule/wiki/%5B3.5-M1%5D-Watermark"""
"MULE-7119","Bug","Core: API",1,"MEL DateTime is not serializable","""DateTimes should be serializable so that they can work with watermark."""
"MULE-7121","Bug","Modules: Devkit Support",1,"OAuth support throws raw exception when authorization code not found","""When receiving the Oauth callback an exception of type java.lang.Exception is thrown if no authorization code is found on the response (which is often the case when the user denys authorization).    Because the exception is a raw type, there's no way to catch it and take a specific action.     A new exception type should be created to that purpose and that exception should be thrown"""
"MULE-7123","Bug","Core: Exception Handling",1,"MuleExceptions are not all Serializable","""The Exception interface is Serializable, however some implementations of MuleException contain non-serializabe fields which violates the Exception contract and causes errors when trying to persist the Exception in an ObjectStore.    All non-serializable fields in any implementation of MuleException should be marked as transient"""
"MULE-7128","Enhancement Request","Core: Queues (SEDA) / Persistence",2,"Need to support short lived queues","""So far, all queues in Mule start and stop with the mule context, meaning that once a queue is created it remains active until the owning application stops.    This model does not fit the Batch module, which creates queues when a job instance is started and then needs to discard it when the job instance finishes.    The clear() method that was added in 3.5.0-ME allows reclaiming the storage but the QueueManager still keeps in-memory resources that are never freed.    Therefore the QueueManager interface needs to add the following method:    void disposeQueue(Queue);    This method frees all resources currently held by the queue including the storage (meaning that queue.clear() will be invoked automatically)    Additionally, another common need when dealing with short lived queues is the ability to easily create/retrieve queues with custom configurations.    To do that, the QueueSession interface will gain the following method:    Queue getQueue(String name, QueueConfiguration queueConfiguration);"""
"MULE-7137","Bug","Core: Flow",3,"DefaultMessageProcessor chain needs to decouple from Pipeline","""DefaultMessageProcessorChain decides how to handle VoidMuleEvent on whether the flowConstruct is a Service or a Flow. This is done by testing the flowConstruct to be an instance of Pipeline.    Now that the batch module has been introduced, we have a new type of FlowConstruct which is not a Service but not a Pipeline either, which causes errors when one-way outbound endpoints are used in batch.    DefaultMessageProcessorChain should be changed so that it takes decisions based on the flowConstruct being an instance of Service only"""
"MULE-7142","Task","Core: Domains shared resources",8,"Create mule domain + domain applications project creation using maven artifact.","""This should be kind of an extension of MULE-7138 but should also allow to have a multi module project where one of the project is defined as the domain and the other projects are mule applications that belong to that domain.    This artifact should create a package containing the domain + the apps that during deployment it will first create the domain and then deploy the applications."""
"MULE-7140","Task","Core: Domains shared resources",13,"Create domain concept in mule, basic resource sharing, and domain deployment feature","""This task includes:   - Add domain concept within mule code base.   - Behaviour of domain deployment / undeployment / redeployment including notifications   - Class loading changes for domain class loader   - Create resource based on a domain configuration file   - Add logging functionality so domain resources log in their own file"""
"MULE-7145","Enhancement Request","Core: Domains shared resources",5,"Redeploy domain when domain config resource is updated","""When the domain configuration file gets updated, then the domain must be redeploy.    Domain redeploy must also include redeployment of the applications of the domain.    The sequence should be:   - Acknowledge domain resources has changed.   - Undeploy domain applications   - Undeploy domain   - Redeploy using the updated configuration   - Redeploy domain applications"""
"MULE-7157","Enhancement Request","Core: Streaming",1,"Allow creating ConsumerIterator instances without selecting a Consumer","""In 3.5.0-M3, ConsumerIterator has only one constructor which receives a Consumer. It can be confusing for a dev to choose the right Consumer implementations besides of generating unnecessary coupling between the streaming framework and whichever component using it.    It'd be great for a developer to be able to only provide the Producer and let the system choose which Consumer implementation is a best fit"""
"MULE-7156","Bug","Core: Streaming",1,"QueueProducer should have a variable generic type","""QueueProducer class is tied to Serializable as a generic type. it should allow any T"""
"MULE-7162","Task","Transport: HTTP(S) / Jetty",5,"Add support for HTTP connector sharing","""Allow an http connector to be shared using it as a shared resources in a domain configuration."""
"MULE-7165","Bug","Transport: HTTP(S) / Jetty",3,"Request Body is not closed in the HttpMessageReceiver","""With the changes made in HTTP in 3.4 there's an issue were from time to time a request is accepted but the sockets gets unexpectedly closed. This doesn't happen with the OldHttpMessageReceiver class.    We found that the difference on how the response is handled between both implementation is that in the OldHttpMessageReceiver the request's body if closed after successfully sending the response (something that the new receiver is not doing).   After we added this code to the new receiver the issue was solved.  Unfortunately we weren't able to reproduce this issue in our side, so we cannot create a test case to confirm the fix.  The code we need to add is found in the line 210 of the org.mule.transport.http.OldHttpMessageReceiver class:  if (request.getBody() != null)  {      request.getBody().close();  }"""
"MULE-7185","Task","Core: Components",8,"Analyze proper solution to MULE-6432 (true asynchronous <all>","""We should decide the proper approach for implementing a truly asynchronous <all> message processor."""
"MULE-7192","Enhancement Request","Core: (other)",1,"CollectionSplitter uses wrong type of List","""CollectionSplitter uses a LinkedList to split payloads of type Collection. An ArrayList would be way more efficient since the size of the collection is known."""
"MULE-7191","Enhancement Request","Core: API",1,"DefaultMuleMessage should instantiate transient fields when deserealized","""We're working in a new serialization mechanism for Mule that will not require objects to implement Serializable or to provide a default constructor.    This relies on ASM, Objenesis and other non standard instantiaton methods that have as a side effects that transient fields initialized in line not being initialized.    For example:    private transient Map<String, DataHandler> inboundAttachments = new ConcurrentHashMap<String, DataHandler>();    When the MuleMessage is initialized through Objenesis, inboundAttachments will be null since a new constructor is added via ASM which ignores the transient fields.    Since this constructor will only be used when serializing and DefaultMuleMessage implements the DeserializationPostInitialisable interface, the initAfterDeserialisation method should instantiate these fields if they are null"""
"MULE-7194","Bug","Transport: TCP / UDP / SSL / Multicast",1,"Improper handling of UnknownHostException in Outbound TCP","""The problem is that when a hostname cannot be resolved (bad hostname is provided, or DNS is down, etc), Mule's connection pooling system will interpret it as localhost. In the case where the local host happens to be listening on the same port, it can result in messages being routed to the wrong place, whereas they should have failed to connect due to the bad hostname.  This is caused by:   1. In the constructor of org.mule.transport.tcp.TcpSocketKey, an InetSocketAddress is constructed. If host resolution fails, the object is created anyway.   2. In org.mule.transport.tcp.TcpSocketFactory, 'getAddress()' is called on the socket key and passed directly into socket.connect(...).   3. In the case that step (1) failed, 'getAddress()' will return null. socket.connect(...) interprets null to be localhost."""
"MULE-7197","Enhancement Request","Core: Streaming",2,"Producer interface should not be tied to List<T>","""the Producer interface has a return type of List<T> for the produce() method. This was fine for its original intent but as its uses keep growing we need something more generic.    The method signature should change to simple T produce() and replace T with a List when necessary"""
"MULE-7202","Task","Build: (other)",1,"Remove installer specific behaviour from SwitchVersion script","""Remove installer code from this file: https://github.com/mulesoft/mule/blob/mule-3.x/buildtools/scripts/SwitchVersion.groovy"""
"MULE-7207","Enhancement Request","Core: Routing / Filters",8,"Create Scatter-Gather component for parallel multicasting","""The <all> router currently in Mule makes a good job at doing message multicasting. However, since its processing is sequential, it's not a good fit for some use cases.    Implement a scatter-gather component as described in https://github.com/mulesoft/mule/wiki/%5BMULE-3.5-February-2014%5D-Scatter-Gather for parallel multicasting"""
"MULE-7206","Task","Core: Bootstrap / Standalone",8,"Analyse the changes to have MULE_HOME and MULE_BASE","""We need to review the cost and the impact of making the change for MULE-7182 to have Studio starting their apps in the same way Mule Starts them"""
"MULE-7222","Enhancement Request","Modules: WS Consumer",3,"An exception to be thrown when a SOAPFault is returned","""An exception to be thrown when a SOAPFault is returned so that I can handle it using exception strategies"""
"MULE-7221","Enhancement Request","Modules: WS Consumer",3,"Should be able to add custom soap headers","""Should be able to add custom soap headers"""
"MULE-7220","Enhancement Request","Modules: WS Consumer",2,"Use an expression for the service address","""Use an expression for the service address so that dynamically invoke different services - e.g. in different locations. (different env's)."""
"MULE-7219","Enhancement Request","Modules: WS Consumer",13,"Configure Exchange Pattern based on WSDL Operation MEP","""Configure Exchange Pattern based on WSDL Operation MEP"""
"MULE-7218","Enhancement Request","Modules: WS Consumer",5,"Get SOAP action working correctly","""Today the SOAP Action works for .NET WS. This has to work across all technologies."""
"MULE-7217","Enhancement Request","Build: Integration Tests",2,"Migrated Tests to new Web Services Consumer module","""Migrated Tests to new Web Services Consumer module"""
"MULE-7228","Bug","Core: (other)",1,"Confusing log message in EventProcessingThread","""EventProcessingThread has confusing log messages like:    logger.debug(""""Stopping expiring group monitoring"""");  logger.debug(""""Expiring group monitoring fully stopped"""");    Since this is an abstract class with different types of uses, those messages are confusing and should be changed to something that gives information about the actual thread that's executing"""
"MULE-7230","Bug","Core: API",3,"Changes in HttpMuleMessageFactory and AbstractMuleMessageFactory breaks 3.4.x devkit's generated code","""Changes introduced in HttpMuleMessageFactory and AbstractMuleMessageFactory are affecting 3.4.x devkit's generated code, where the constructor of HttpMuleMessageFactory was using the MuleContext as a parameter.    The old behaviour should remain as a connector built in 3.4.x wouldn't work in a new (3.5) Mule version.    As a side note: from now on (3.5.0-dolomite) devkit will use the new way of creating the factory."""
"MULE-7239","Bug","Core: Bootstrap / Standalone",8,"loader.override being ignored in 3.5.0-cascade - Cloudhub(Dec 2013) runtime","""The Connector is using CXF 2.6.0 dependencies, and it has defined a plugin.properties with the follow line  loader.override=org.apache.cxf,org.apache.ws,org.apache.xml    In 3.5 with Cloudhub (Dec 2013) runtime environment the same application fails because is invoking one operation that is not defined in cxf 2.5.9.     The same application is working correctly on Mule Studio 3.4.  The Demo Application can be found in here (https://docs.google.com/a/mulesoft.com/file/d/0B9Ow2Z2e_0YmOTlLSURNdmwxZXFDcFM4MU4wODB0VllYcjFz/edit).  The connector version that is working can be located in here (https://github.com/mulesoft/ms-dynamics-crm-connector/tree/mule-module-ms-dynamics-crm-1.7.1)  """
"MULE-7252","Enhancement Request","Core: Bootstrap / Standalone",8,"Restart applications automatically even after failure","""When using Studio, it saves my changes to disk and Mule restarts my application automatically - which is wonderful, because I can rapidly prototype my application. However, if I make a syntax error, Mule will cease to redeploy my application after that, forcing me to restart Mule completely. Mule should auto-redeploy applications, even if the last deployment failed. (If we can't make that the default for 3.5, we should add a flag to support this in Studio)"""
"MULE-7253","Enhancement Request","Transport: JMS",5,"Allow BTM to configure username and password for JMS","""The Bitronix Connection Factory should be able to receive a username and password to be used for JMS connections."""
"MULE-7259","Bug","Core: (other)",1,"move scatter-gather config elements to the top","""scatter-gather component has two config elements: threading-profile and custom-aggregation-strategy.    Right now, those share a sequence with the inner message processors in which its defined that these elements go on the bottom.    For consistency with other components, they should be moved to the top, so that what used to be:    <scatter-gather timeout=""""5000"""">      <flow-ref name=""""A"""" />      <vm:outbound-endpoint path=""""foo"""" />      <sfdc:upsert ..... />        <custom-aggregation-strategy [class=""""org.my.CustomAggregationStrategy"""" | ref=""""beanReference""""] />      <threading-profile maxThreadsActive=""""5"""" />  </scatter-gather>    Should now be:    <scatter-gather timeout=""""5000"""">      <custom-aggregation-strategy [class=""""org.my.CustomAggregationStrategy"""" | ref=""""beanReference""""] />      <threading-profile maxThreadsActive=""""5"""" />        <flow-ref name=""""A"""" />      <vm:outbound-endpoint path=""""foo"""" />      <sfdc:upsert ..... />  </scatter-gather>"""
"MULE-7258","Bug","Core: Routing / Filters",8,"Request reply does not work when using specific connector","""When the inbound endpoint of a request-reply router uses an specific connector, different to the default one for that transport, then it does not work since it cannot find the endpoint.            <request-reply>              <vm:outbound-endpoint path=""""persistentQueue"""" connector-ref=""""sharedPersistentVmConnector""""/>              <vm:inbound-endpoint path=""""persistentQueueResponse"""" connector-ref=""""sharedPersistentVmConnector""""/>          </request-reply>      Adding the connector as attribute of the path makes it work:          <request-reply>              <vm:outbound-endpoint path=""""persistentQueue"""" connector-ref=""""sharedPersistentVmConnector""""/>              <vm:inbound-endpoint path=""""persistentQueueResponse?connector=sharedPersistentVmConnector"""" connector-ref=""""sharedPersistentVmConnector""""/>          </request-reply>    To solve this problem the replyTo property must be generated with the specific connector if available."""
"MULE-7256","Bug","Modules: WS Consumer",1,"WS consumer throws NullPointerException when defining an empty security element","""When defining a global configuration element for WS consumer that has an empty security element (defined but empty), a null pointer is thrown upon initialisation.    <ws:consumer-config ...>      <ws:security> </ws:security>  </ws:consumer-config>"""
"MULE-7264","Bug","Modules: Devkit Support",1,"DevkitSupport module should use apache commons StringUtils instead of Spring","""Replace usage of org.springframework.util.StringUtils for org.apache.commons.lang.StringUtils to prevent class loading issues when older projects are using prior versions of Spring"""
"MULE-7263","Bug","Transport: HTTP(S) / Jetty",5,"MULE_REMOTE_CLIENT_ADDRESS variable gets the wrong value when http requests are proxied","""If an http request is proxied, the MULE_REMOTE_CLIENT_ADDRESS will have the address of the proxy instead of the client address.    The X-Forwarded-For header contains a comma separated list of addresses, the first of which is the original client.    Mule should look if the http headers contain an X-Forwarded-For header, and in such case populate the MULE_REMOTE_CLIENT_ADDRESS from it's first element if such element is a valid IP address.    Additionally, when this situation is detected, add a new INBOUND property called MULE_PROXY_ADDRESS that contains the proxy address    """
"MULE-7261","Enhancement Request","Core: Deployment|Core: Domains shared resources",8,"Add support for domain bundle zip file deployment","""Add support for deploying a mule domain bundle file.     Domain bundle includes not only the domain but the apps to deploy in that domain.  """
"MULE-7270","Bug","Modules: WS Consumer",8,"WS consumer returns an invalid xml document when the payload contains multiple namespaces","""If a soap envelope contains a body which uses at least two different namespaces, and one of those is not used in the top element, the resulting xml document doesn't declare all the namespaces, and thus is not valid.    Example response that is not processed correctly:  <soapenv:Envelope xmlns:soapenv=""""http://schemas.xmlsoap.org/soap/envelope/"""" xmlns=""""urn:enterprise.soap.xxxx"""" xmlns:xsi=""""http://www.w3.org/2001/XMLSchema-instance"""">     <soapenv:Body>        <loginResponse>           <result>              ...              <passwordExpired>false</passwordExpired>              <sandbox>false</sandbox>              ...              <roleId xsi:nil=""""true""""/>              ...           </result>        </loginResponse>     </soapenv:Body>  </soapenv:Envelope>    fails because it's returned as:    <?xml version=""""1.0"""" encoding=""""UTF-8""""?>  <loginResponse xmlns=""""urn:enterprise.soap.sforce.com"""">      <result>          ...          <passwordExpired>false</passwordExpired>          <sandbox>false</sandbox>          ...          <roleId xsi:nil=""""true""""/>          ...      </result>  </loginResponse>    Note that the xsi namespace is not imported.  """
"MULE-7269","Task","Build: (other)",8,"Review flaky tests in 3.x builds.","""Most of the slow test builds are failing because of flaky tests. We need to review them, test them locally and ignore them if necessary, saving the logs from the failures to later fix them."""
"MULE-7286","Bug","Core: Routing / Filters",2,"The class EventCorrelator.ExpiringGroupMonitoringThread has an expiryMonitor member that is not disposed at dispose phase.","""The dispose method of the EventCorrelator class is not taking into account the expiry monitor inside its inner class ExpiringGroupMonitoringThread."""
"MULE-7285","Bug","Core: Bootstrap / Standalone",2,"If an error occurs while configuring a just created mule context, inside DefaultMuleContextFactory, this context is not disposed","""Several methods inside DefaultMuleContextFactory class create MuleContext objects and then configure them. If the configuration phase raises an exception, the created mule context is not returned and the could not be disposed."""
"MULE-7284","Task","Tools",0,"Allow to use a different timeout on TestProcess.waitUntilStarted().","""When Starting a TestProcess instance, if the application is larger than normal or depends on many services, it may take longer to start than the hardcoded 30 seconds, we should provide a way to set this property."""
"MULE-7282","Task","Core: Configuration",2,"Upgrade schema versions to 3.5","""Upgrade the schema version to 3.5"""
"MULE-7280","Bug","Core: Deployment",5,"Anchor file is created before application gets deployed","""Anchor file is created after application unzip but application is still not initialized. Problem is in ArtifactArchiveInstaller#installArtifact  To reproduce:  # Create a zipped app with the below configuration. # Copy zipped file to ${MULE_HOME}/apps # Start mule using this command {{bin/mule start; if [ -f ${MULE_HOME}/apps/application-name-anchor.txt ] ; then curl http://127.0.0.1:8811/in ; fi }}  You should receive and {{in}} message in the console but you get {{curl: (7) couldn't connect to host}}  """
"MULE-7296","Bug","Core: Domains shared resources",5,"Domain initialization result (failure or success) should be shown in a box at the end of the log when starting","""Currently, domain initialization status is shown in the logs when performed. But, in the same way that applications, it should be shown in a summary box at the end of server start."""
"MULE-7293","Bug","Core: Registry",2,"TransientRegistry does not dispose all registered objects on dispose.","""When the dispose method is called on a TransientRegistry instance, the current registered objects are not disposed.  Also, if different objects are registered using the same key, just the last object is kept and previous ones are lost. They should also be disposed at dispose phase."""
"MULE-7291","Bug","Core: Domains shared resources",5,"Disposing a domain do not undeploy application","""# Deploy an application to a domain  # Delete domain anchor file    Expected: application gets undeployed  Actual: application remains deployed"""
"MULE-7290","Bug","Core: Domains shared resources",5,"It shouldn't be allowed to deploy an application to more than one domain","""Try to deploy an application to more than one domain by putting this lines into mule-deploy.properties:    """
"MULE-7288","Enhancement Request","Core: Domains shared resources",3,"Allow new DB module config to be share between applications","""Allow the new DB config elements to be shared between applications using them as a domain resource.  This will allow to share DataSource connections between applications.  """
"MULE-7307","Bug","Core: Domains shared resources|Core: Transactions",3,"Disallow multiple transaction manager to be used within an application","""Currently if multiple transaction manager are configured in mule, as mule only supports one, it will just peek the first one.    To avoid confusion to users we must not allow users to configure multiple transaction managers."""
"MULE-7303","Bug","Modules: WS Consumer",1,"WS-Consumer wsdl doesn't allow resource paths","""The web service consumer requires the location of a wsdl file as part of it's configuration.    The location is parsed as a URL and if not valid, it is parsed as a file path. The convention in mule is to treat these fields as resource paths, which would allow URLs, absolute files, but will also look for resource files (relative to the current classpath, and possibly inside a jar).    Change the behavior so that the wsdl location is treated as a reouce location.  """
"MULE-7302","Bug","Transport: HTTP(S) / Jetty",5,"HTTP inbound endpoints listen for requests in a different path ","""When http inbound endpoint listens to *in* path, if you send a request to path *inxxx* it receives it.     To reproduce deploy this configuration using bin/mule -M-Dhttp.port=YYYY and run curl http://127.0.0.1:YYYY/inxxx    """
"MULE-7299","Task","Build: JDK Compatibility|Core: API|Core: Components|Core: Services",8,"Initial preparations for the Mule 4 development branch","""This task will track changes made in the mule-4.x branch in order to accomodate code cleanup tasks.    The scope includes:   - Upgrading minimum JDK to 7   - Removing any JDK 6 specific code or modules   - Get a full maven build to run    Out of scope (to be tracked in other tasks)   - Removing classes and methods deprecated in mule-3.x  """
"MULE-7842","Enhancement Request","Build: Libraries / Dependencies",13,"Jersey version upgrade","""Mule is using old jersey libraries (1.6) that would need to be upgraded to latest to develop new agent.     Dependent on this library are:    - current agent  - some example and test classes  - mule-module-jersey in CE  """
"MULE-7313","Bug","Modules: Devkit Support",5,"OAuth2 authorize MessageProcessor enters a loop if it's the last processor in the flow","""Consider the following flow:    <flow name=""""authorizeFlow"""">     <http:inbound-endpoint path=""""authorize"""" port=""""8081"""" exchange-pattern=""""request-response"""">     <google-calendars:authorize />  </flow>    That results in google's OAuth login screen showing up. After authorization, the browser is continuously redirected to the same page over and over again.    However, if the flow is changed to this:    <flow name=""""authorizeFlow"""">     <http:inbound-endpoint path=""""authorize"""" port=""""8081"""" exchange-pattern=""""request-response"""">     <google-calendars:authorize />     <logger message=""""authorized!"""" />  </flow>    It starts to work perfectly after any message processor is placed after the authorization one. This is probably and issue due to the fact that authorize MP's are intercepting but in the first example there's nothing to intercept."""
"MULE-7311","Bug","Core: Concurrency / Threading",8,"Lack of synchronization causes multiple expiration requests on Aggregator groups","""The test EventCorrelatorTestCase.processesExpiredGroupInPrimaryNode fails intermitently due to a lack of synchronization in the access to an object store between different threads, that sporadically leads to a group expiry being triggered several times.    This may be a problem if the correlation is setup to process the group at expiration instead of giving an error.    The problem is mitigated when using persistent object stores as I/O synchronisation is creating an adhoc happens-after causality."""
"MULE-7314","Bug","Core: Components",1,"Poll: watermark gives a wrong warning message when no results are returned from the query inside the poll","""When polling Salesforce to retrieve data using the watermark feature, a warning message saying that the watermark is null appears if the query does not bring back any data.    For example, the following Salesforce query:  SELECT Email,FirstName,LastName,LastModifiedDate FROM Contact WHERE LastModifiedDate > #[flowVars['timestamp']]    Then the following warning appears even though the watermark value is not null:    WARN  Watermark [pool-13-thread-1]: Watermark value is null and will be ignored"""
"MULE-7316","Task","Build: Integration Tests",5,"Fix flaky FlowSyncAsyncProcessingStrategyTestCase.","""This is a flaky that was ignored."""
"MULE-7324","Bug","Modules: CXF",1,"CxfBasicTestCase has wrong assertions","""CxfBasicTestCase has tests which are broken but, as the assertions are not ok, they seem to pass.    Line:   XMLUnit.compareXML(echoWsdl, result.getPayloadAsString());  Should be:  assertTrue(XMLUnit.compareXML(echoWsdl, result.getPayloadAsString()).identical());"""
"MULE-7323","Bug","Modules: XML, XSLT, XPath, SXC",1,"ExpressionSplitterXPathTestCase has wrong assertions","""ExpressionSplitterXPathTestCase has tests which are broken but, as the assertions are not ok, they seem to pass.    Lines:          XMLUnit.compareXML(EXPECTED_MESSAGE_1, results.get(0).toString());         XMLUnit.compareXML(EXPECTED_MESSAGE_2, results.get(1).toString());    Should be:          assertTrue(XMLUnit.compareXML(EXPECTED_MESSAGE_1, results.get(0).toString()).identical());          assertTrue(XMLUnit.compareXML(EXPECTED_MESSAGE_2, results.get(1).toString()).identical());  """
"MULE-7322","Bug","Core: API",3,"MuleApplicationContext renamed to MuleArtifactContext breaks backwards compatibility","""On Mule 3.5-M4, MuleApplicationContext was renamed to MuleArtifactContext.  This class is used in other projects, and will break them.    Provide a deprecated MuleApplicationContext to avoid breaking these apps.  """
"MULE-7321","Enhancement Request","Core: Routing / Filters",5,"Deprecate <all> in favor of <scatther-gather>","""Now that we have an implementation of the scatter gather pattern, deprecate the <all> element in favor of it.    There is a slight variation in functionality, but for most cases scatter-gather will be prefered, and the advanced cases were you need to evaluate the same payload sequentially, yet fail at the first failure, can be accomplished using wire-taps.    This task requires:  - Issuing a warning when parsing <all> in an xml definition.  - Changing mule schema's documentation to flag the deprecation in doc  - Deprecate class implementing the all router."""
"MULE-7320","Bug","Core: Components",8,"New database module Streaming feature is not working with large queries","""When the Streaming option of the new database module is activated, there is an error with large queries. Additionally, no error message is shown and no results are returned.    Config:    <poll doc:name=""""Poll"""">   <fixed-frequency-scheduler frequency=""""1000"""" timeUnit=""""MINUTES"""" />   <watermark variable=""""timestampdb"""" default-expression=""""#['2010-02-11 14:25:12']"""" selector=""""MAX"""" selector-expression=""""#[payload.last_modified]""""/>   <db:select config-ref=""""MySQL_Config"""" doc:name=""""Query Database"""" >    <db:parameterized-query><![CDATA[SELECT first_name,last_name,email,last_modified FROM contact WHERE last_modified > """"#[flowVars['timestampdb']]""""]]></db:parameterized-query>   </db:select>  </poll>    Same configuration without watermark was also tested and same behavior resulted."""
"MULE-7326","Bug","Modules: WS Consumer",5,"Can't use WebService consumer with operation without parameters","""Consider the documentation attached:    The endpoint localhost:8081/ consumes a web services that takes a ZIP as an input parameter. That operation works perfectly.    However, in localhost:8081/test I'm trying to consume an operation which doesn't take any parameters. There's no way to make this work because:    1) WS consumer is expecting me to generate the soap envelope using datamapper, however, I don't have a payload to transform so I'm forced to create a dummy map  2) Because the operation is expecting no parameters, the XML that DataMapper generates looks like this: <?xml version=""""1.0"""" encoding=""""UTF-8""""?>  3) The above results in WS consumer returning this error, basically because there's no envelope to consume:    org.mule.api.transport.DispatchException: COULD_NOT_READ_XML_STREAM. Failed to route event via endpoint: org.mule.module.cxf.CxfOutboundMessageProcessor. Message payload is of type: PostMethod    Error put aside, it doesn't make sense to me that:    * It seems like the only easy way to generate the SOAP envelopes is through DataMapper, which is not a CE feature like WS Consumer is  * How do I create a valid envelope when the operation takes no parameters?  * Because envelope generation depends on datamapper, I have to drop the WS Consumer box in the canvas before the DataMapper one. It's not natural for the developer to think the flow from right to left.  * Shouldn't WS consumer be capable of auto generating the envelope, at least when it requires no parameters?  """
"MULE-7335","Bug","Core: Transformers",5,"Transformer resolution in TypeBasedTransformerResolver fails depending on which order transformers are found","""TypeBasedTransformerResolver uses registry to lookup all the transformers that are compatible with a given transformation.  Then it searches on the obtained list of transformers looking for the best match to execute the transformation.  Problem its that the transformers are not ordered, so the best match calculation fails to obtain a transformer when the two first transformers have the same weight but different implementation classes. In this case, if the best transformer is a third one, then it won't be found because the resolution will fail on the previous ones."""
"MULE-7331","Bug","Transport: JMS",1,"JMS inbound do not reconnect to queue after broker restart","""When restarting ActiveMQ a JMS inbound endpoint do not reconnect.    To reproduce:  # Install the attached mule-config.xml  # Start an ActiveMQ broker  # Copy activemq-all-5.9.0.jar to lib/user  # bin/mule -M-Dhttp.port=8811  # Wait for deployment  # Verify that application works running: curl http://127.0.0.1:8811/jms1 and seeing that one message is queued in queue out  # Restart activemq broker  # curl http://127.0.0.1:8811/jms1  ## Expected: one message is queued on queue out  ## Actual: out queue has no message besides the one before restarting  """
"MULE-7329","Bug","Transport: JMS",5,"Number of JMS consumers decreases to 1 after reconnection","""After reconnection the number of JMS consumers goes from 4 to 1 (In fact to 0, but goes to 1 after queueing a message).    Steps:    # Install the attached mule-config.xml  # Start an ActiveMQ broker  # Copy activemq-all-5.9.0.jar to lib/user  # bin/mule -M-Dhttp.port=8811  # Wait for deployment  # Go to activemq console and verify that there are 4 consumers on queue *in*  # Verify that application works running: curl http://127.0.0.1:8811/jms1 and seeing that one message is queued in queue *out*  # Restart activemq broker  # Wait for console to be up  ## Expected: 4 consumers on queue in  ## Actual: 0 consumers  # bin/mule -M-Dhttp.port=8811  ## Expected: 4 consumers on queue in  ## Actual: 1 consumers    I've tried setting {{numberOfConsumers=""""4""""}} in the connector but works in the same way    It's a regression since in 3.4.1 and before works as expected    Tried to load the application with 1000 requests and the consumer's number remains the same    mule-config:      """
"MULE-7328","Bug","Modules: WS Consumer",8,"Can't use WS consumer with message properties","""Consider the attached configuration in which I'm trying to receive a ZIP as an http query param and then use that zip to invoke a weather web service.    It is impossible to do so unless I use that message property to create a map in the payload and then use datamapper to create the invocation body.    I should have to be forced to create completely artificial set-payload and datamapper message processors for doing something as simple as asking for the weather of a ZIP number. I should't have to write the SOAP body myself either. Any of these two options defeat the purpose of the component.    I should be able to just pass the ws:consumer whatever attributes the invocation takes and it should be able to construct the body. """
"MULE-7346","Bug","Core: (other)",1,"New Database Message Processor: NPE when parsing queries in Templates","""Steps to reproduce:   1.- Create and run the followed Mule config:          Issue: when running the application you get the followed NPE      """
"MULE-7343","Bug","Core: Domains shared resources|Core: Properties",5,"Fail to expand properties when using property placeholder shared in a domain","""Steps:    # Deploy the below application and domain  # Put domain.properties in domain root dir  # bin/mule    * Expected: Mule starts and flow listens on 127.0.0.1:8811/in1 and 127.0.0.1:8811/in2  * Actual: Mule fails to start because $[http.port] is an invalid value for port  * Note: I put domain.properties file in domain root directory because in domain/classes it is not found  """
"MULE-7342","Bug","Core: (other)",1,"New Database Messsage Processor: rename <db:output-param /> to <db:out-param />","""To be consistent with the db:in-param, the output parameter should be named   db:out-param.     Studio is already generating the XML as  <db:out-param /> """
"MULE-7338","Bug","Core: (other)",1,"New Database Message Processor: Template tag is not accepting dynamic-query as a child element","""Steps to reproduce:   1.- Execute the followed Mule config:          Issue: You get the followed SAXParserException     """
"MULE-7336","Enhancement Request","Core: Transformers",8,"Avoid transformer lookup inside registry to improve performance","""Transformer resolution inside MuleRegistryHelper implies two different lookup operations: one for TransformerResolver and another for Transformers.  Both lookup operations have a high cost as they imply that prototype beans will be created during the search process.  Performance can be improved, in particular avoiding high contention on the application classLoader, if the mentioned lookup are not executed.  """
"MULE-7354","Enhancement Request","Core: Watermark",2,"Selector watermark is not thread safe","""When using watermark with a selector, the same selector instance is reused across invocations which means that if two polls are executed concurrently values would be overwritten.    Right now this is a non issue because watermark only runs on synchronous flows. However, it makes affects code reusability and this will potentially break if we decide to support async watermark or if CloudHub centralised scheduler decides to fire concurrently for different tenants"""
"MULE-7353","Bug","Core: Domains shared resources|Transport: JMS",5,"Cannot share caching-connection-factory","""So far you cannot share caching-connection-factory."""
"MULE-7352","Bug","Core: Watermark",1,"Watermark should fail to start if update expression is not an expression","""It doesn't make sense for the watermakr use case to have constants as update expressions, thus, the user should be warn and the application should not start if such an error occurs.    Right now, Watermark just evaluates that expression as a constant resulting in useless watermark values."""
"MULE-7362","Enhancement Request","Core: Expressions",2,"Allow MEL expressions to safely access nested null properties","""Consider an object a with property b    The expresion """"a.b.c"""" will fail if a.b is null.  MVEL was enhanced to include a null safe get flag that would make that expression return null.    Change Mule to set that mode of operation.  """
"MULE-7361","Bug","Core: Components",1,"RequestContext.getEvent() returns null inside poll","""When a flow has a poll as a message source, the RequestContext is only set with the event after the poll listener has been executed. So, if inside the poll there's a MP depending on the RequestContext, it fails with NPE"""
"MULE-7368","Bug","Modules: WS Consumer",3,"SoapAction header is not being set in WS Consumer for Soap 1.2 web services","""The Web Service Consumer component is not adding the Soap Action header when consuming a Soap 1.2 web service.    Example: http://wsf.cdyne.com/WeatherWS/Weather.asmx?WSDL  If you consume the GetWeatherInformation operation through the WeatherSoap port, the Soap Action header is sent and everything works OK. If you consume the same operation through the WeatherSoap12 port, the server returns an error indicating that the SOAP Action header is invalid.  """
"MULE-7367","Task","Build: Maven",8,"Clean pom files to support faster build cycles","""We follow a build cycle of running tests of increasingly time in steps.  In order to improve build times, refactor poms so that features can be disabled when needed.    We will settle to standarize on the following switches:  -DskipVerifications --> will disable running style checkers, licence checkers, and enforcer plugin  -DskipIntegrationTests --> Will disable integration tests  -DskipArchetypeTests --> Will skip archetype tests (which require archetypes to be already installed)    Running unit vs functional tests will not be modified yet and will use our custom surefire plugin"""
"MULE-7366","Bug","Core: Bootstrap / Standalone",8,"Mule logs switch to DEBUG level when application uses the Salesforce Connector","""When deploying an application using the salesforce connector, logging level is downgraded to DEBUG. Also, all logging goes to the console and no file is generated for the app on the logs folder.    The same app running from Studio doesn't show this behavior. This issue greatly affects performance and readability of the logs"""
"MULE-7365","Task","Modules: CXF",3,"Fix MtomClientTestCase.","""This is a flaky test."""
"MULE-7373","Bug","Modules: Devkit Support",1,"Devkit intercepting message processors fail if they are the last element of a chain","""Then an intercepting message processor is the last in a chain, it's listener is null.    AbstractListeningMessageProcessor, which is the base class for all intercepting message processors created by the devkit, assumes that it will always receive a non-null listener, and fails with a NPE on the process(...) methods that will attempt to call method process of the listener.    This is reproduced by putting any devkit intercepting component as the last element of a flow or scope, or at unit testing level, if you don't set the listener but try to use any of the SourceCallback methods.    """
"MULE-7380","Bug","Core: (other)",1,"Expiration doesn't work on object store","""This simple test reproduce that expiration policies don't work on the object store.          Expected behavior is that last line return false but returns true."""
"MULE-7379","Bug","Core: Domains shared resources",0,"Domain initialization should fail when domain dir structure is invalid","""Domain shouldn't get deployed when filesystem structure is not valid. It should check that mule-domain-config.xml is present and allowed directories should be lib, resources and classes or something similar. To reproduce create a directory MULE_HOME/domains/domain/ with a single empty file called test."""
"MULE-7377","Bug","Modules: WS Consumer",5,"WS Consumer ignores imports in WSDL","""I'm trying to consume the login operation from https://www.mulesoft.org/jira/rpc/soap/jirasoapservice-v2.    That operation relies on an Array type defined in an import. WS Consumer fails to detect if that operation has parameters or not because it ignores the import and thus it cannot resolve the type"""
"MULE-7376","Bug","Modules: WS Consumer",5,"NullPointerException while initialising body","""When trying to consume the login operation from https://www.mulesoft.org/jira/rpc/soap/jirasoapservice-v2 , the attached NPE is found when WS Consumer MP is initialised"""
"MULE-7374","Bug","Modules: WS Consumer",1,"The serviceAddress attribute should be required in WS consumer","""The serviceAddress attribute should be required. Currently if it is not set, an exception with an error message that is not clear is thrown."""
"MULE-7387","Enhancement Request","Build: Integration Tests",1,"Add methods to handle schedulers and sub-flows in FunctionalTestCase","""Need to add methods to manually:    * Stop all schedules  * Run a scheduler on demand  * get a sub flow  * get all schedulers  """
"MULE-7386","Bug","Core: Domains shared resources",5,"Shared connector MBean appears under application MBean and should be under the domain one","""There is currently no MBean for Domains, we should have one and shared resources should not be in each individual domain application."""
"MULE-7384","Bug","Core: Domains shared resources",3,"Stopping an application that shares an http connector makes the other application endpoint to stop ","""# Deploy the two applications and domain  # Start mule  # curl http://127.0.0.1:8080/in1 and curl http://127.0.0.1:8080/in2 returns the expected  # rm $MULE_HOME/apps/app2-anchor.txt  # wait for app to get undeployed     * Error: curl http://127.0.0.1:8080/in1 fails to connect"""
"MULE-7383","Bug","Core: Domains shared resources",3,"Logging of message reception is written to domain log instead of app log when sharing http connector","""When an http endpoint receives a request it should be logged in application log, but it is logged in domain log."""
"MULE-7382","Bug","Modules: Devkit Support",3,"RefreshTokenManager's ObjectStore is not expiring entries","""RefreshTokenManager has an expirable object store to make sure that an access token is not refreshed more than one time in the lapse of one minute.    That store should expire its entries after one minute but it's not doing so."""
"MULE-7396","Enhancement Request","Core: Streaming",1,"Cache and provide the StreamCloser through the MuleContext","""MuleContext should have a method getStreamCloser():StreamCloser so that it's easy to get it and we have an easy way to cache it"""
"MULE-7395","Task","Build: (other)",1,"Add migration guide on CE distribution","""Add migration guide to the CE distribution"""
"MULE-7394","Bug","Build: Libraries / Dependencies",1,"Mule common's sources and javadoc aren't deployed to maven repo","""Mule common's sources and javadoc aren't deployed to maven repo. Maven command should add sources:jar and javadoc:jar.     This is important since connector developer may use classes inside those jars and javadoc + sources are a must for usability."""
"MULE-7390","Bug","Modules: XML, XSLT, XPath, SXC",5,"XSLT transformer is vulnerable to XXE","""The current implementation of the XSLT transformer is vulnerable to the following threat: https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing    Currently, there is no way to prevent this since it would require to:  * Set the property 'javax.xml.stream.isSupportingExternalEntities' to false for the xmlInputFactory. Currently no property can be set XML factory at all.  * Set the attribute of the transformer 'useStaxSource'. When this parameter is false (default) the XML factory is ignored. This attribute can't be set right now.    We need to disable XXE by default and add an attribute which allows it when needed to keep backwards compatibility.     Steps to reproduce:  1. Run the attached configuration.  2. Post the following XML to the endpoint http://localhost:9000/test:  <!DOCTYPE spi_doc_type[ <!ENTITY spi_entity_ref SYSTEM 'file:////etc/passwd'>]>   <root>  <elem>&spi_entity_ref;</elem>   <something/>  </root>  3. Inspect the content of the output and log. It will show the content of the /etc/passwd file. If you don't have it, you can change it to a file that you have in your filesystem."""
"MULE-7404","Enhancement Request","Build: Distributions",5,"Reduce the number of distributions","""Mule builds the following distributions:  deb-package  embedded  profiler  scripting  standalone  standalone-light  studio    - Remove the distributions deb-package, profiler and scripting  - Verify if embedded can be removed and replaced by requiring people to use maven  - Verify is standalone-light can be removed (it's standalone without source code), or we can change standalone distribution to skip source code - we do publish source code for each artifact so the information is there for IDEs.  - Verify if the Studio distribution can be removed.  """
"MULE-7402","Task","Build: Libraries / Dependencies",8,"Fixed unused and undeclared dependencies in maven","""Running mvn dependency:analyze shows a lot of warnings due to unused dependencies and transitive dependencies used directly but undeclared    Fix the project descriptors of the modules to include needed dependencies and remove unused ones.  """
"MULE-7401","Enhancement Request","Core: Bootstrap / Standalone",2,"Include the security model used at mule container startup console","""Part of the changes made for 3.5 included creating a way of definning the security model to be used.  The problem is that there's no feedback to the use on the security model except than the side effects derived from it.    Make Mule container display the security model used when starting up."""
"MULE-7398","Bug","Modules: CXF",5,"WebService Consumer does not distinguish between 1.1 and 1.2 services","""According to wsdl spec version 1.1 mandates the use of the SOAPAction header. Version 1.2 removes its use. Our consumer effectively assumes that the service is of type 1.1 and so attempts to set the SOAPAction header. This can upset a service of type 1.2 which may return an error like   """"Server did not recognize the value of HTTP Header SOAPAction: .""""  Try to consume the service at http://webservicex.net/ws/WSDetails.aspx?CATID=2&WSID=74 for example using both the 1.1 and 1.2 request versions. 1.2 will fail. The way to address this in the cxf Proxy client was to make sure no SOAPAction was present in the outgoing request."""
"MULE-7406","Bug","Modules: (other)",2,"New database: streaming is useless if statement fetch size is not configured","""Streaming mode is intended to avoid OutOfMemory exceptions when processing big resultSets and the idea is to return an iterator as the result of a query so the user can request records on demand.  Statements have a fetchSize attribute that indicates the size of the chunk of records that will be returned on each database round trip. For example, fetchSize=5 and a resultset of 20 records will imply 4 chunks of 5 records each.  The problem is that when fetchSize is not configured properly, the resultset won't be paged and it will be completely loaded into memory, ie: making streaming useless."""
"MULE-7408","Bug","Core: Flow",3,"StageName generation should be decoupled from Flow","""Right now, the Flow is responsible for generating stage names for resources that leave on its pipeline. That makes it imposible for components relying on such names (such as async) to exists in a FlowConstruct that is not an instance of Flow.  This should be refactored so that other types of FlowConstruct can contain an async block"""
"MULE-7413","Bug","Modules: (other)",2,"Bulk mode in insert/update/delete message processors should accept collection payloads only","""When bulkMode=true and payload is not a collection, insert/update/delete message processors are resolving queries using the default values in the query definition.  That causes the execution of the query just once, but with null parameter values.    Those message processors should accept only collections as payload/source. """
"MULE-7412","Bug","Examples / Tutorials",3,"Echo example fails to start because does not find mule-app.properties","""To reproduce    # copy echo example zip app from distribution to app directory  # Run bin/mule  # See error in log"""
"MULE-7411","Bug","Modules: XML, XSLT, XPath, SXC",1,"SXC filter router fails due to uninitialised transformer ","""Due to the fix of MULE-7390, XmlToXMLStreamReader is now initialisable. SxcFilteringOutboundRouter is using an instance of that Transformer without invoking its initialise() method which causes it to fail.    SxcFilteringOutboundRouter should properly initialise the transformer"""
"MULE-7416","Bug","Core: Components",2,"DB: Insert with bulk mode set to true does not return the correct metadata","""The new db component is not returning the correct datasense metadata when using the insert operation with the bulk mode set to true.    Example: INSERT INTO TABLE TB1 VALUES(PAYLOAD.ID, PAYLOAD.NAME) with BULK = TRUE    the expected metadata should be List<{id, name}>. Today it is returning {id, name}"""
"MULE-7418","Bug","Modules: (other)",8,"DB Connector throws NPE when advanced-udate fails because connection error","""# Copy derbyclient-10.9.1.0.jar to lib/user  # Deploy the attached config  # curl http://localhost:8080/in    * Expected: curl returns 0  * Actual: curl returns {{null (java.lang.NullPointerException). Message payload is of type: String}}"""
"MULE-7426","Bug","Modules: WS Consumer",3,"WS consumer not generating payload for a SOAP 1.2 web service with no parameters","""Currently the WS consumer detects if a web service doesn't require any input parameters, and in that case ignores the payload and generates automatically the SOAP body with the request. This is working correctly for SOAP 1.1 web services but not with 1.2 web services (in that case the payload is still used as SOAP body)."""
"MULE-7425","Bug","Modules: XML, XSLT, XPath, SXC",3,"xpath function should not have any side effects on the message","""when the xpath() function is not given a source parameter, the result of the evaluation is put on the message payload, which is fine.    However, when the source parameter is provided, the payload should not be modified because that causes undesired side effects when using the function in filters or choice routers. When a source is provided, the evaluation result should be set on the source itself"""
"MULE-7431","Bug","Core: Event/Message",3,"AbstractMessagingExceptionStrategy accessing an incorrect Even when using RequestContext","""When a collection message is sent to a subflow and an exception is raised inside it, the exception is not properly raised because is replaced by a """"java.lang.IllegalStateException: Payload was invalidated calling setPayload and the message is not collection anymore."""" instead of keep the original one."""
"MULE-7429","Bug","Core: Containers",2,"Fix UntilSuccessfulWithQueuePersistenceObjectStoreTestCase recoversFromPersistedQueue test","""This test is testing on some build runs, and it relies on writing a file directly into an object store folder as part of it's execution.  """
"MULE-7428","Enhancement Request","Core: Queues (SEDA) / Persistence|Transport: VM",13,"Fix VM underlaying implementation","""Current queues implementation stores the queue content in the transient object store or in the persistent object store if the queue is persistent. We end up with a queue implementation based on a Map which doesn't make any sense. This also causes performance issues.    Transactions are not reliable. We don't have a transaction log for local tx or for XA txs."""
"MULE-7435","Task","Build: Distributions",3,"Fix ListSchema.groovy script","""This script prints lots of errors.   """
"MULE-7443","Enhancement Request","Core: (other)|Core: Bootstrap / Standalone",1,"Move SimpleLoggingTable to core","""Move SimpleLoggingTable to core so that it can be reused by other modules without the need to depend on the launcher"""
"MULE-7439","Enhancement Request","Core: (other)",1,"Replace StringBuffer with StringBuilder whenever possible","""Because Mule started on the JDK 1.4 era, there're a lot of uses of StringBuffer. In most cases, there's no need for the contention that it generates and it should be replaced with StringBuilder"""
"MULE-7459","Bug","Examples / Tutorials",3,"Echo example mvn build fails because of test error.","""# Download mule-ee-distribution-standalone-3.5.0-M5-20140325.085332-72.tar.gz  # Extract   # cd examples/echo  # mvn test"""
"MULE-7463","Bug","Core: (other)",3,"Monitored ObjectStores should behave consistently","""Monitored object stores do not behave consistently:    * PartitionableExpirableObjectStore instances trim to max size by applying a Least recently used algorithm. However, MonitoredObjectStoreWrapper does it by applying a Last recently used algorithm.  * Additionally, it is allowed to create objects stores that are: completely unbounded, TTL bounded only, TTL and size bounded, but you can't create one that's size bounded only.    Expected behavior should be:    * Managed object stores always trim to size in a consistent way using LRU.  * I can have an ObjectStore that's bounded size wise but unbounded TTL wise  """
"MULE-7480","Task","Build: Integration Tests|Build: Maven",1,"Add profile for system tests","""We need a profile for system tests (aka Standalone tests), execute only when profile system is active."""
"MULE-7478","Task","Core: (other)",1,"All test log4j.properties should have the rootLogger at WARN level","""Many modules define their own log4j.properties, but some set the rootLogger to INFO which becomes too verbose. They should always be set to WARN"""
"MULE-7473","Task","Core: API",8,"Remove deprecated methods on Transformer interface","""Remove deprecated methods and replace uses"""
"MULE-7481","Enhancement Request","Core: (other)",1,"Add extension point in MuleLockFactory","""MuleLockFactory delegates into a LockProvider to actually build the lock. Upon initialisation, it grabs such provider from the registry.    An extension point is needed so that a provider can be passed into it before initialisation. If such provider is not given, then it fallbacks to the current behavior of taking it from the registry"""
"MULE-7482","Enhancement Request","Modules: Devkit Support",1,"Create Connector aware PagingDelegate concept","""Create the concept of connection aware and process aware PagingDelegate for cases in which a connection manager PagingDelegate is needed"""
"MULE-7485","Bug","Core: Bootstrap / Standalone",13,"Registered transformers in bootstrap.properties won't be found when the key is different than transformer.{x}","""Registered transformers in bootstrap.properties won't be found when the key is different than transformer.{x}    If you define your transformer in the bootstrap.properties file as     FooTransformer=org.mule.bar.FooTransformer    This transformer won't be found by using the lookupTransformer/s methods. And therefore a failure will happen if the transformation is needed."""
"MULE-7492","Enhancement Request","Core: (other)",1,"Add a tool for matching exceptions by its stack trace","""Sometimes it's needed to know if two exceptions have the same stack trace. To do this, we need to be able to compare the full stack traces but discarding the exception (and its causes) messages since they may contain invocation specific data.    We need a tool that can generate an exception's full stack trace without any messages"""
"MULE-7490","Task","Build: Integration Tests",5,"Improve mule test cases to use a temporary folder for each test case","""Improve mule test cases so each of them use a temporary folder for the application working directory.    This will probably reduce flakiness of test cases storing information in disk and also will allow to run test in parallel in the future."""
"MULE-7488","Bug","Modules: WS Consumer",3,"Handles .NET ?singleWsdl wrong","""If http://demo.bromose.eu/DemoService.svc?singleWsdl is used, the flow gets a 400 response code.    http://demo.bromose.eu/DemoService.svc?Wsdl is used, the flow works"""
"MULE-7494","Bug","Core: (other)",5,"Test cases override DefaultObjectStoreFactoryBean static delegate causing other tests to fail when split and aggregate operations are used.","""Test cases override DefaultObjectStoreFactoryBean static delegate causing other tests to fail when split and aggregate operations are used."""
"MULE-7504","Bug","Modules: Management / JMX",0,"Applications sharing connectors mix endpoint MBeans","""When connectors are shared inside a domain all the MBeans for the endpoints for those connectors are shown in all the applications contained in the domain."""
"MULE-7502","Bug","Core: Exception Handling",8,"Exception thrown by one-way outbound endpont in a Catch ES causes infinite loop","""If a System Exception is thrown inside a Catch Exception Strategy, and the flow that references it is asynchronous, and infinite loop is created, the application will retry to execute the exception strategy infinite times.  I've attached to the jira a test case that reproduces the issue"""
"MULE-7501","Enhancement Request","Modules: HTTP|Modules: WS Consumer",5,"Provide a way to log the SOAP envelope that is being sent in WS Consumer","""Currently it is hard to debug WS consumer because there is no way to log the SOAP envelope that is being sent. Provide a way to do this and consider how to integrate it with Studio debugger."""
"MULE-7500","Bug","Modules: WS Consumer",3,"WS Consumer fails when there is an invocation property ""operation"" defined","""When a message contains an invocation property called """"operation"""" and a WS consumer is present, the execution of the WS consumer fails because CXF uses the value of the """"operation"""" variable."""
"MULE-7509","Bug","Core: Queues (SEDA) / Persistence",5,"Transactional Queue Recovery fails when recovery queue has transient queue config.","""When executing local tx recovery and there's a transient config for a recovery queue mule fails with a NotImplementedException"""
"MULE-7513","Enhancement Request","Core: Routing / Filters",2,"deprecate until-successful's secondsBetweenRetries in favor of millisBetweenRetries","""Seconds between retries is fine for the asynchronous case, but when doing a synchronous wait, there're cases in which just a millisecond wait is required.    This enhancement consists on:    * deprecate secondsBetweenRetries attribute. Using it results in a warning message in the logs. It is to be mark as deprecated in the java code and the xsd  * add a millisBetweenRetries property which is the new correct way of using the component  * For backwards compatibility, setting secondsBetweenRetries will implicitly set millisBetweenRetries with an equivalent value  * Setting both attributes at the same time will result in exception"""
"MULE-7512","Bug","Core: Routing / Filters",1,"Synchronous until-successfull waits in milliseconds instead of seconds","""When in synchronous mode, the until successful is waiting for the exact value of the seconds-between-retries attribute.    Expected: a value of 10 on a synchronous until-successful waits ten seconds between each retry  Obtained: it only waits 10 milliseconds    """
"MULE-7510","Bug","Core: Expressions",3,"MEL behavior is not consistent betsween maps and pojos for proeprty access","""With changes made for 3.5, MEL was changed so that property access for maps didn't fail (to be consistent with value access though map[key] syntax).  This caused an inconsistency, as the same expression a.b will fail or return null depending on the actual type of a.    In order to be consistent, we have decided to make property access return null in all cases.   We will also revert back the changes that implied null safe property access by default, and keep asking users to use the .? explicitely).    """
"MULE-7520","Bug","Core: Logging",3,"Avoid writing app log entries in container log file when not using an specific log4j config file for the app.","""When a log4j config file is not attached to an app, a default file appender is created but the app is still sending its output to the container log file.  App default logging should only send app logs to default app log file."""
"MULE-7524","Bug","Core: Endpoints",3,"Encoded characters not working when using expressions for dynamic endpoints","""When using encoded characters (e.g. %40 for @) in conjunction with expressions it fails.  For example this works:  <sftp:outbound-endpoint user=""""testuser"""" password=""""mule%40123"""" path=""""/Users/testuser/tmp/"""" host=""""localhost"""" port=""""22"""" outputPattern=""""file.txt"""" />  But this doesn't:  <sftp:outbound-endpoint user=""""testuser"""" password=""""mule%40123"""" path=""""/Users/testuser/tmp/#[header:targetSubDir]"""" host=""""localhost"""" port=""""22"""" outputPattern=""""file.txt"""" />  Attached there's a project with a test case to reproduce this problem."""
"MULE-7538","Bug","Core: (other)",1,"Application fails to start when having 16 or more connectors with asynch reconnection that fail to connect","""The problem is that the work manager used for reconnection is the one defined inside the DefaultMuleContext. This work manager is not configurable so it can handle 16 threads at most. The problem is that when a reconnection fails all the time uses 1 of the threads. So if you have more than 16 reconnections going on the number 17 will never get the chance to execute."""
"MULE-7536","Bug","Core: Domains shared resources",3,"Mule is still creating old default domain classloader instead of using new one","""Mule still has the lib/shared/default folder. This causes to use the old domain class loader infrastructure instead of the new one.    This folder must be removed and a default folder must be created in domains."""
"MULE-7543","Task","Transport: JDBC",1,"Deprecate jdbc transport","""Due the creation of the new DB module, we should deprecate the old jdbc transport as studio has already done."""
"MULE-7548","Bug","Core: Lifecycle",3,"Lifecycle does not start a QueueManager in the right order","""QueueManager must be started before any Flow. That's not happening for all QueueMAnager, it's only happening for TransactionalQueueManager"""
"MULE-7559","Bug","Build: Distributions|Build: Maven",3,"Mule build reactor is building embedded distribution before other modules","""Mule Embedded distribution is being build before modules and transports that are in it, so, build is failing."""
"MULE-7563","Bug","Core: (other)",8,"org.mule.util.Base64 upgrade","""org.mule.util.Base64 is a import of the version 2.1 of http://iharder.net/base64    This library is now available as maven dep, and therefor there is no need to copy&paste it.    This library has several new versions 2.3.7, some of them with relevant bugfixes.    However, 2.3.7 has some API changes. This might need to wait till Mule 4."""
"MULE-7571","Bug","Core: Queues (SEDA) / Persistence",3,"Persistent queue logs and data remove after shutdown","""After mule shutdown mule queues logs and data are being removed.    The problem is that dispose of the queue manager is removing everything.    There's a another issue to solve which is that during undeploy of an app, the app data store in .mule/app-name folder is not being cleared. There seems to be two kind of dispose needed. One for undeploy of an app. And another just for shutting down the server."""
"MULE-7575","Bug","Core: Routing / Filters",3,"Aggregator result has invalid session variables values","""When using a persistent store in an aggregator the session variables values do not have the latests value after the message aggregation.    We should prioritise latest stored event session variables values over the ones provided by previous events. If not when execution inside a collection splitter and aggregator is synchronous the merge of the mule events results in a session with not the latests values."""
"MULE-7574","Bug","Core: Streaming",1,"Possible contention on DefaultStreamCloserService.","""When running a batch job(ee feature), it was seen that periodically the threads gets locked as shown into the given stack-trace.    We should add a way to improve this with a cache or another work-arround."""
"MULE-7578","Task","Modules: Devkit Support",2,"Improve HttpUtilTestCase","""HttpUtilTestCase passes regardless HttpUtilImpl flushes the output stream or not, which caused a bug. That test/functionality should be improved """
"MULE-7577","Bug","Core: (other)",1,"OAuth regression - RC1 OAuth connectors not working at all","""I found the issue in the org.mule.security.oauth.util.HttpUtilImpl#post(String, String) method.    The refactor made to improve the exception error (MULE-7521) modified the way of working with the OutputStreamWriter (look for """"out"""" variable). After doing the #write(String) there is no flush(), hence the stream is not filled with the API response, and the response is always an error.    The code is:      when it should be      This should solve all the issues with OAuth support for DevKit connectors."""
"MULE-7589","Enhancement Request","Core: Queues (SEDA) / Persistence",8,"VM transactions should support multithreading","""VM transactions have as a known limitation around concurrency. Only the thread that started the transaction should be able to use it and/or close it.    For highly concurrent use cases, it'd be great if scenarios like the following would be supported:    Thread 1: Opens transaction A and polls one element from it  Thread 2: Opens transaction B over the same queue and polls one element from it  Thread 2: writes to the queue in the context of transaction A  Thread 1: writes to the queue in the context of transaction B  Thread 2: commits/rollbacks the transaction A  Thread 1: commits/rollbacks the transaction B    """
"MULE-7588","Bug","Core: Lifecycle|Core: Registry|Extensions API",13,"LifeCycle is inconsistent across registries","""Because the LifeCycle manager handles individual objects instead of the mule context as a whole, there're differences in how the life cycle is applied to objects in the TransientRegistry in opposition to the ones in the SpringRegistry:    * Objects in the TransientRegistry have a correct life cycle  * Objects in the Spring registry that were registered by Mule's bootstrap, receive the Start and Stop phases correctly. They don't receive the dispose phase and the init one is invoked by Spring directly as an init-method, not through the life cycle execution.  * Because default Spring registry objects don't receive the init through standard life cycle phase, they cannot be started before the TransientRegistry  * Objects manually added to the spring registry by an app, don't receive the initialise nor dispose phases  * LifeCycle is applied on Spring registry objects once they're all available in the application context. However, objects in the TransientRegistry get their lifecycle as they're registered, making it impossible for component A to reference component B if A is not registered first.    This issue greatly depends on MULE-7587  """
"MULE-7594","Bug","Core: Routing / Filters",1,"Scatter-gather throws exception when using a one-way outbound endpoint.","""Using a one-way outbound endpoint in a scatter-gather with no message processors after it causes an exception. Tried VM and HTTP. I'm attaching the configuration to reproduce the issue.  Using a request reply one or adding a message processor after the endpoint fixes it."""
"MULE-7599","Task","Build: Maven",1,"Add GPG signature to artifacts","""Need to add GPG signature to deploy to Maven Central """
"MULE-7597","Bug","Core: Routing / Filters",1,"scatter gather should require at least two routes","""Scatter gather should fail at start time it it doens't have at least two routes configured. Having only one route doesn't make sense for a parallel multicast."""
"MULE-7603","Bug","Transport: HTTP(S) / Jetty",0,"When using a Throttling policy with throttling statics enabled, limit headers are swapped.","""When the policy is applied, returned headers look like:  Connection →close  Content-Length →18  Content-Type →text/plain  X-RateLimit-Limit →0  X-RateLimit-Remaining →10  X-RateLimit-Reset →60000  Wich shows that Limit and Remaining statics are swapped. (Remaining should normally be less or equal than Limit)."""
"MULE-7615","Enhancement Request","Transport: VM",3,"RandomAccessFileQueueStore.getLength() is slow. ","""The problem is the use of RandomAccessFile.getLength() inside RandomAcccesFileQueueStore.    """
"MULE-7611","Bug","Core: Expressions",8,"MEL expression using dot notation .'variable-name' always returns null if first value at first access is null, even after value changes","""The following three logs:    <logger message=""""X-USER-ID (MEL []) = #[message.inboundProperties['x-user-id']]""""/>  <logger message=""""X-USER-ID (MEL .)  = #[message.inboundProperties.'x-user-id']""""/>  <logger message=""""X-USER-ID (OLD)    = #[header:INBOUND:x-user-id]""""/>    consistently work for 1st and 3rd.    The second one using the dot notation consistently fails forever if first invocation fails after server restart   and consistently succeeds forever if first invocation succeeds after server restart.      """
"MULE-7621","Enhancement Request","Core: Logging",13,"Review mule logging consistency and analyse the effort to make it consistent and improve underlying technology","""We need to review our logs implementation """
"MULE-7620","Enhancement Request","Core: Exception Handling",13,"Define unified way to define the exception handler in execution scopes in mule","""Currently exception handler is defined by:   - Flow   - Transactional scope   - Exception strategies   - Outbound endpoint (when using LaxAsync) due bug fix.    In some places the exception handler is retrieve by doing: event.getFlowConstruct().getExceptionListener() (AsyncInterceptingMessageProcessor). This is bad design because the MuleEvent should not have a reference to the FlowConstruct and the exception handler should not be retrieved from the MuleEvent.     The MuleEvent contains dynamic information related to the current message while the exception handler must be defined statically by the flow configuration.    The recommendation is that each scope or execution block (new Threads running part of the flow) should have statically defined the exception handler to use."""
"MULE-7627","Bug","Core: Streaming",1,"CloserService generates debug log message without checking logger state","""If no closer is found for a stream, the StreamCloserService logs a message with debug level, even if the logger is not in debug mode.    Additionally, that message contains the stream which in some cases can result in the stream being consumed and/or the thread blocking, as shown in the attached log"""
"MULE-7624","Bug","Build: Integration Tests",3,"Fix JMX agent tests in management module","""As we changed the management module to run all the tests in the same JVM, a couple of tests failed becuase they create an RMI registry on a fixed port and interfere with each other.    Change those tests so that they use a dynamically allocated port and run fine on the same jvm instance"""
"MULE-7629","Bug","Transport: File",0,"Provide a way to preserve the original directory when using moveToDirectory","""Wen using the moveToDirectory the original directory is not available in any property or scope."""
"MULE-7631","Bug","Core: Event/Message",2,"CopyOnWriteCaseInsensitiveMap KeyIterator class implementation issue","""Due to the way the KeyIterator class is implemented, calling next() followed by remove() removes not the element the iterator """"is on"""", but the following one.     In line #181 of the class CopyOnWriteCaseInsensitiveMap, the array is evaluated to the original index, but any subsequent call to remove is performed on the incremented index."""
"MULE-7635","Enhancement Request","Extensions API",1,"Add capabilities concept into extension API","""Add the concept of capabilities and Capable objects into the extensions api.    An object is capable if it provides optional support for additional capabilities.     A capability is identified by a class type. Implementations are not required to implement any capability at all, even if they support this interface.    Capabilities are used to provide a future-proof path to incorporate changes that may otherwise break backwards compatibility.  """
"MULE-7636","Bug","Core: (other)",1,"MuleProcessController default timeout is wrongfully configured","""by default it's 0, and it should be something like 60000."""
"MULE-7638","Bug","Transport: VM",8,"OOM when recovering VM transactions","""When a transactional persistent queue is recovered and the size of the queue doesn't fit into memory then there's an OOM exception trying to recovery the pending transactions."""
"MULE-7637","Enhancement Request","Transport: HTTP(S) / Jetty",8,"Implement HTTP Outbound performance improvements","""We need to implement the changes needed to improve http outbound performance based on the performance outcome for the proxy scenarios.  """
"MULE-7642","Bug","Transport: File",0,"Close method for ReceiverFileInputStream should not raise errors if called twice.","""Close method for ReceiverFileInputStream should not raise errors if called twice."""
"MULE-7640","Enhancement Request","Extensions API",8,"Add introspection capabilities in the extensions API","""Introspection is the capability of an extension to be automatically discovered and described by mule"""
"MULE-7639","Task","Build: Libraries / Dependencies",0,"Run OWASP dependency check in our dependencies","""Run this tool (https://www.owasp.org/index.php/OWASP_Dependency_Check) to assess possible vulnerabilities in our dependencies. """
"MULE-7650","Bug","Core: Deployment",8,"DynamicClassLoader leaking classloaders","""Apparently DynamicClassLoader is holding a strong reference to MuleApplicationClassLoader when it should not.    This is the GC root path for the leaked MuleApplicationClassLoader instance.      To reproduce deploy any mule app, then undeploy it and check that there is a leaked MuleApplicationClassLoader instance."""
"MULE-7646","Task","Transport: HTTP(S) / Jetty",8,"Spike on new HTTP transport underlying technology","""We need to do a spike, and validate which underlying technology should be used for the new HTTP transport. """
"MULE-7645","Task","Build: JDK Compatibility",13,"Create Java 8 test build","""We need to create builds to run the test suite of Mule on Java 8. This should be Oracle and Open JDK. Review if we should use IBM JDK 8 Beta or wait till it's final.     - Create build for Mule Common with Oracle JDK 8 (We need to run Mule Common tests with JDK 8)  - Create builds for CE and EE with Oracle JDK 8  - Create builds for CE and EE with Open JDK 8  - Optionally create builds for CE and EE with IBM JDK 8 (currently in beta AFAIK)    Consider the possibility of having Mule builds parametrized and configure Java  7 as the default JDK and override with Java 8."""
"MULE-7644","Task","Build: JDK Compatibility",8,"Upgrade build plans to Java 7 for compilation and test Mule","""We are dropping java 6 support in Mule 3.6, so we need to migrate our build plans to compile and test Mule to run on Java 7.  We also need to remove the Java 6 builds.  """
"MULE-7651","Enhancement Request","Schema",13,"Implement plan to improve surfacing of schema reference in documentation","""Implementation of Schema Documentation Modernisation Plan articulated here: https://docs.google.com/a/mulesoft.com/document/d/1pLy1BBRQRrzltz-o8PKU9WN1IFEMdGvwkOdabSkRf6s/edit"""
"MULE-7663","Bug","Transport: HTTP(S) / Jetty",5,"tls-default.conf entries are ignored sometimes","""When creating a SocketFactory for a https transport, the protocols declared in tls-default.conf are intersected with the default ones from the JDK.     Because of this, protocols like SSLv2Hello cannot be enabled when running Mule 3.5.0 in JDK7.    What should actually happen is that those protocols should be intercepted against the supported ones.  """
"MULE-7661","Bug","Core: (other)",1,"org.mule.api.security.tls.TlsConfiguration#getSslContext() no longer visible","""org.mule.api.security.tls.TlsConfiguration#getSslContext used to have public visibility in mule 3.4.x and was being used from mule extensions.    In 3.5.0, it's visibility was reduced to private breaking backwards compatibility with those extensions.    The method must be restored as public"""
"MULE-7674","Bug","Core: (other)|Core: Expressions",8,"mule frezes with 100% CPU utilization if accessing property of non-existing property","""If flowVars contains no element `user` then expression `#[flowVars['user']['name']]` will freeze mule (thread) eating your CPU @ 100%.  """
"MULE-7673","Bug","Build: Integration Tests",5,"DatabaseMuleArtifactTestCase broken after maven changes","""DatabaseMuleArtifactTestCase was broken by the manven changes related to not forking the JVM anymore when running test."""
"MULE-7687","Bug","Core: (other)",5,"mule does not propagate system properties when started with ""restart"" command","""bin/mule restart -M-Ddefault.port=1337    expected: app deployed    what happens: deployment error because system properties are not propagated.    """
"MULE-7692","Enhancement Request","Transport: JMS",8,"Create way to process JMS messages in a guaranteed order without needing to override a Java class","""Several customers want to know how they can enable message sequencing in MuleESB (making sure that inbound messages are delivered in the same order to the various endpoints in a flow).    Using the resequencer is not a pattern as the number of messages could be infinite.    There is currently no way to do this in a cluster. You can however extend the message receiver in the JMS transport.    Albin did this for Boeing and they seemed satisfied with the solution.  https://github.com/albinkjellin/jms-single-consumer    We should implement this, or a more elegant version of it, in the product itself."""
"MULE-7696","Bug","Core: (other)",0,"App specific log file not created on windows","""App specific log file not created on windows."""
"MULE-7701","Bug","Core: Routing / Filters",5,"Fix flacky test UntilSuccessfulTestCase.testPermanentDeliveryFailureDLQ","""Fails on CI with message:    Error Message     Wanted but not invoked: outboundEndpoint.process(<any>); -> at org.mule.routing.UntilSuccessfulTestCase.testPermanentDeliveryFailureDLQ(UntilSuccessfulTestCase.java:193) Actually, there were zero interactions with this mock.   Stacktrace    Wanted but not invoked:  outboundEndpoint.process(<any>);  -> at org.mule.routing.UntilSuccessfulTestCase.testPermanentDeliveryFailureDLQ(UntilSuccessfulTestCase.java:193)  Actually, there were zero interactions with this mock.     at org.mule.routing.UntilSuccessfulTestCase.testPermanentDeliveryFailureDLQ(UntilSuccessfulTestCase.java:193)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:606)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)   at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)   at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)   at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:46)   at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)  Standard Output    ================================================================================  = Testing: testPermanentDeliveryFailureDLQ                                     =  ================================================================================"""
"MULE-7713","Enhancement Request","Core: Logging",0,"Instead of logging throughout the wrapper, mule should only send to stdout important information.","""Currently, all mule logs are sent to the console (stdout) where the tanuki wrapper encapsule them and duplicate it on console (adding its own information) and also to the mule.log file.    This may be causing performance problems. We know that loggin directly to a file or limiting logging to level error can increase performance. So a possible solution to this could be:    - Add a fileAppender to the log4j configuration with the actual INFO level  - Increase the consoleAppender level to WARNING or ERROR    - We still want to log wrapper information, we should find a way to do not duplicate this information."""
"MULE-7720","Enhancement Request","Extensions API",13,"Define Extensions execution API","""Just like we defined an introspection API for mule extensions, we now need an API to execute operations on those extensions.    This task is about defining, designing and documenting that API. Not implementing it."""
"MULE-7719","Enhancement Request","Extensions API",5,"Create parent module for extensions","""Create a parent artifact for extensions to agglutinate all the created extensions.    The purpose of this parent artifact is not only about organising modules, it's also to define a parent pom which will hook up from the compiling phase to automatically generate the schema definition and spring handlers"""
"MULE-7718","Enhancement Request","Build: Integration Tests|Extensions API",5,"Add test support for extensions","""Need test infrastructure for extensions, so that we can guarantee that    * the extensions manager will be available every time it's needed an  * The xsd is regenerated on each run so that a developer doesn't need to do so automatically every time"""
"MULE-7716","Enhancement Request","Extensions API",8,"Generated XSD for Mule extensions should include map class javadocs to schema documentation","""When Extension XSD is generated in the compile phase, it should be possible to use an annotation scanner to extract the extension's javadocs to use them as schema documentation.    It is acceptable for this to not happen when building the schema for test case purposes"""
"MULE-7715","Enhancement Request","Extensions API",8,"Support XML definition of Beans in extensions configurations","""Some extensions make use of beans on their configuration. It should be possible to create those beans directly on the config definition without the need of defining a spring bean.    At the same time, the same extension mike take lists or sets of beans. Those should be supported also.    For example, assuming that the heisenberg extension has a configuration Bean of type Door, and a list/set of type Ricin. As a user, I should be able to define this:    <heisenberg:config>          <heisenberg:ricin-packs>          <heisenberg:ricin-pack microgramsPerKilo=""""22"""">          <heisenberg:destination victim=""""Lidia"""" address=""""Stevia coffe shop"""" />          </heisenberg:ricin-pack>          </heisenberg:ricin-packs>          <heisenberg:next-door address=""""pollos hermanos"""" victim=""""gustavo fring"""">              <heisenberg:previous victim=""""Krazy-8"""" address=""""Jesse's""""/>          </heisenberg:next-door>      </heisenberg:config>"""
"MULE-7724","Bug","Build: Maven|Documentation / Website",5,"release profile doesn't build javadoc jar","""Running {{mvn -P release install}} doesn't build javadoc jars at least for mule-core. It only builds:   * mule-core-3.5.1-sources.jar  * mule-core-3.5.1-tests.jar  * mule-core-3.5.1.jar  """
"MULE-7723","Task","Core: (other)",5,"Remove unsued configuration builders","""We have code to support creating a mule flow / service using a jruby script, groovy or Guice.    The actual creating of the script requires advance knowledge of mule internals and it's not useful.     Nobody is using it and also we don't support it in our IDE. We should only keep the spring configuration builders"""
"MULE-7721","Task","Build: Libraries / Dependencies|Build: Maven",2,"Create a maven property for groovy-all version","""This dependency in pom.xml has a harcoded version, we should use a property.    <groupId>org.codehaus.groovy</groupId>  <artifactId>groovy-all</artifactId>  <version>1.8.6</version>    And also verify that there is no other places where we use the hardcoded version  """
"MULE-7728","Bug","Core: (other)",0,"Collection aggregator fails with high amount of messages. Default in memory object store is inefficient.","""When a high amount of messages are aggregated the collection aggregator performs several inefficient operations that make the operation fail.  Also, the default implementation for the in memory object store is very inefficient when there are a big object store partition."""
"MULE-7725","Task","Build: Maven",0,"Update Maven pom information","""For uploading to Maven Central repo we need to have our pom developer section completed."""
"MULE-7736","Enhancement Request","Core: Flow",3,"Ensure internal SEDA queues are bound by default to avoid OutOfMemoryException's","""A default size for maxQueueSize must be defined, at least for the case where the queue is in-memory.  We need to determine if:    i) this default is best defined on the processing strategy or object store.   ii) if it’s best to use a static default, or if it is best to determine the default based on heap size or some other parameter.    In ii), a related concern to keep in mind here is whether or not we can have a mechanism for Mule self-tuning that we can include as EE-only."""
"MULE-7731","Enhancement Request","Transport: JMS",3,"JMS transport should reuse javax.jms.Session, javax.jms.MessageProducer instances by default","""All Mule JMS transport must reuse javax.jms.Session, javax.jms.MessageProducer by default without relying on a specific connection factory implementation. """
"MULE-7730","Enhancement Request","Build: Maven",3,"Create javadoc jars on the release profile","""Currently, we don't create javadoc jars as part of the release profile, requiring us to manually create and deploy them.    Modify the build descriptors to create the javadoc files for each module. Note that besides this, there must still be a way to create the aggregated javadocs to be published online.  """
"MULE-7740","Enhancement Request","Modules: (other)",5,"Bundle scripting pack with Mule CE by default","""Mule CE currently doesn't bundle the scripting libraries (i.e. Jython) by default. Instead, users have to download a separate scripting pack:  https://repository.mulesoft.org/nexus/content/repositories/releases/org/mule/distributions/mule-scripting-pack/3.5.0/mule-scripting-pack-3.5.0.zip    We should evaluate whether or not it is feasible/practical to bundle this scripting pack together with the base Mule CE build, and do so if seen fit.    The Mule EE distribution currently comes with these scripting libraries bundled with the deistribution afiak."""
"MULE-7743","Task","Build: Integration Tests",0,"Delete test replaced by system one and added again by mistake.","""Test UntilSuccessfulWithQueuePersistenceObjectStoreTestCase was marked as flaky, replaced by a system test and removed. However, it somehow made it back to the 3.4.x branch and it's causing the build to fail since the config file is missing."""
"MULE-7748","Bug","Core: (other)",5,"Seda queues with persistent profile fail in Windows","""When using a queue asynchronous with a persistent queue store, and when using windows it fails because the name of the file to store the queue data is invalid.    See: http://forum.mulesoft.org/mulesoft/topics/anypoint_studio_default_persistent_queue_store_java_io_ioexception_the_filename_is_incorrect"""
"MULE-7751","Enhancement Request","Build: Maven",3,"Update maven-deploy plugin to 2.8","""Artifact deployment repo is defined in the distributionManagement section of the mule main pom.xml file.    Sometimes we need to stage changes in other repositories in order to make tests that do not affect the rest of the community. The maven deploy plugin provides a way to override the deployment repo, but only in version 2.8 it allows specifying separate snapashot and release repos.  """
"MULE-7767","Story","Core: Transports",0,"AMQP Transport. Write documentation","""AS A  user    I WANT  I want to have documentation around the features of this transport    SO THAT  I can learn how to use it and to have a reference  """
"MULE-7766","Story","Core: Transports",8,"AMQP Transport. Integration testing.","""AS A user  I WANT I want the transport to be tested against a real broker and a real application.  SO THAT I can be sure the transport works on real world usage. """
"MULE-7764","Story","Core: Transports",5,"AMQP transport. Create inbound requestor (request)","""AS A  user    I WANT  I want to be able consume instantly amqp messages    SO THAT  I can consume messages at any point of the flow  """
"MULE-7763","Story","Core: Transactions",8,"AMQP transport. Create inbound receiver (consume)","""AS A  user    I WANT  I want to be able consume continuously amqp messages    SO THAT  a MuleEvent is created and delivered to a flow when a messages arrives to a queue and is comsumed  """
"MULE-7762","Story","Core: Transports",8,"AMQP transport. Create configuration element (connector).","""AS A  user    I WANT  I want to be able to configure the transport in a single point    SO THAT  I can configure the common transport attributes in a single reusable place  """
"MULE-7760","Story","Core: Transactions",8,"AMQP transport. Define connector schema","""AS A  user    I WANT  I want to be able to rely on a defined schema to write my AMQP integrations     SO THAT  I have exact knowledge of how I’m syntactically supposed to use the transport and to have help from my IDE to autocomplete and detect errors.  """
"MULE-7759","Story","Core: Transports",8,"AMQP transport. Define specs document. ","""AS A  product owner or community member    I WANT  to be able to review the specs     SO THAT  I can and contribute with my feedback  """
"MULE-7753","Task","Tools|Tools: Archetypes",3,"Remove maven archtetypes and ant tools","""Remove Maven archetypes, archetype tests and bobberplus (archetype builder).    Transport, Module, Catalog, Patterna rchetypes are outdated and unmaintained. Application archetype has evolved into it's own project in AppKit.  """
"MULE-7772","Task","Build: Maven",1,"Create script for uploading to Maven Central","""Upload the script to upload to maven central."""
"MULE-7771","Bug","Core: Expressions",5,"Fix DateTimeTimeTestCase.seconds flakyness.","""This test is flaky. """
"MULE-7775","Task","Transport: HTTP(S) / Jetty",0,"Replace all uses of wrong date format for RFC one in HTTP transport.","""Some of the references to date format are using one with no AM/PM and no 24 hour format. These need to change for the format specified in the RFC."""
"MULE-7774","Bug","Transport: HTTP(S) / Jetty",0,"Wrong format for date in HTTP header","""HttpResponseBuilder is using a wrong format for the 'Date' header: EEE, dd MMM yyyy hh:mm:ss zzz  This comes from org.mule.transport.http.HttpConstants.DATE_FORMAT  The problem is that with this format it's impossible to know whether the date is AM or PM.  For example, it shows the following when executing it at 3:24 PM  Fri, 04 Jul 2014 03:24:27 ART  Here you can't tell whether it's 3 PM or 3 AM.  The output should include the AM/PM indicator or use a 24 h format (by changing the 'hh' to 'HH').  There's also another constant in the mentioned class that seems to have a better format:  org.mule.transport.http.HttpConstants.DATE_FORMAT_RFC822  In order to reproduce this issue, please find attached a test case that doesn't contain any meaningful assertion but it logs the 'Date' header. Also this needs to be executed after 12 PM to see the problem better."""
"MULE-7773","Bug","Core: Configuration",0,"Dynamic reference to sub flow produces lifecycle errors","""When a sub flow is referenced using a dynamic expression the sub flow initialization raises an exception and the flow is aborted."""
"MULE-7777","Task","Build: Distributions|Build: Maven",3,"Add GPG Maven Plugin to Mule Common","""Add the plugin, default skipping signature and configure release build plan to enable GPG signature."""
"MULE-7780","Task","Build: Integration Tests",0,"JUnit rules and matchers for Mule Standalone server","""# Create a JUnit rule that starts Mule Standalone in the before stage and stops it in the after stage.  # Create a JUnit rule that starts installs Mule Standalone in the before stage and clean it in the after stage.  # Create a JUnit matcher to know if mule is running  # Create a JUnit matcher to know if application is deployed in Mule Standalone  """
"MULE-7788","Task","Core: Logging",8,"Create automated tests for log separation","""MULE-7769 revamped mule's logging infrastructure. This code already contains some unit tests about its behavior, but actually verifying that 2 apps deployed in mule have their logs separated, that they are properly rolled over, etc requires an external system test"""
"MULE-7787","Task","Core: Logging",5,"Do performance testing of log4j2 implementation","""MULE-7769 implemented asynchronous logging through log4j2. Please do performance testing over it"""
"MULE-7784","Task","Build: Maven",0,"Configure build for skipping functional tests","""Need to configure when to run functional tests or not. """
"MULE-7789","Enhancement Request","Transport: HTTP(S) / Jetty",8,"Update mule-transports-http to tomcat 6+","""PR-514  mule-transports-http depends on tomcat 5.5.23 for cookie processing.  Upgraded to tomcat 6 version used by mule elsewhere using  ${tomcatVersion}. Tomcat moved this into coyote. Verified working in  tomcat 6+. Defaulted httpOnly to false in this instance since it was  not part of tomcat 5 and not part of cookie from commons-httpclient and  thus was naturally already false. In tomcat 6, httpOnly is configurable  and default in tomcat 7+. This seemed most appropriate way to get onto  tomcat 6+ as tomcat 5 is end of life and solved use case we had running  mule within tomcat 7 & 8.    See pull request on github PR #514, jira request Mule-6705, and jira request Mule-5100.  """
"MULE-7807","Bug","Build: Maven",3,"Running unit tests on clean working directory with an empty repository fails because missing jar","""    This fails because unpacking embedded distribution dependencies is binded to generate-sources phase, but jars are still not available (because we are running test phase). Apparently Maven dependency plugin when jar is not available and has to resolve the dependency, resolves the artifact file as the classes directory for the dependency, so every file in that module is available to the current module. As we are trying to unpack it fails because the classes directory is not a jar file. """
"MULE-7805","Enhancement Request","Core: Configuration",0,"Upgrade Spring version to 3.2.10 in Mule 3.5.x","""Upgrade Spring version to 3.2.10 in Mule 3.5.x"""
"MULE-7811","Bug","Core: Transports",13,"Clean up opensource AMQP connector","""Old AMQP transport should be clean up, current issues fixed, current pull requests merged/refused."""
"MULE-7810","Bug","Build: Integration Tests|Build: Maven",3,"Functional test not ran when outside test/functional directory","""When I try to run FileReceiverMoveDeleteTestCase test from root directory it fails because the test is not found, but when I run it from transports/file it runs fine. Using this command:  {{mvn test -Pfunctional -Dtest=FileReceiverMoveDeleteTestCase}}"""
"MULE-7809","Task","Transport: HTTP(S) / Jetty",3,"Remove incorrect assertion from Test createHttpServerConnectionWithHttpConnectorProperties","""Test org.mule.transport.http.HttpServerConnectionTestCase.createHttpServerConnectionWithHttpConnectorProperties    asserts that socket packet size is set on a newly created socket to the value specified by configuration. But the value as specified by the JDK documentation is just a suggestion, and the test is currently failing on CI:     org.mule.transport.http.HttpServerConnectionTestCase.createHttpServerConnectionWithHttpConnectorProperties   Error Details  expected:<1024> but was:<1148>   Stack Trace  java.lang.AssertionError: expected:<1024> but was:<1148>   at org.junit.Assert.fail(Assert.java:93)   at org.junit.Assert.failNotEquals(Assert.java:647)   at org.junit.Assert.assertEquals(Assert.java:128)   at org.junit.Assert.assertEquals(Assert.java:472)   at org.junit.Assert.assertEquals(Assert.java:456)   at org.mule.transport.http.HttpServerConnectionTestCase.createHttpServerConnectionWithHttpConnectorProperties(HttpServerConnectionTestCase.java:263)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:606)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)   at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)   at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)   at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:46)   at org.junit.internal.runners.statements.FailOnTimeout$1.run(FailOnTimeout.java:28)   Standard Output  ================================================================================  = Testing: createHttpServerConnectionWithHttpConnectorProperties               =  ================================================================================    """
"MULE-7820","Bug","Core: Deployment",0,"ClassLoader leak when undeploying application","""ApplicationClassLoader is not collected after application is undeployed. This is due to several issues which are linked to this container one.    This issue should only be closed after all related issues are fixed and we can see that undeploying an application collects the classloader"""
"MULE-7829","Enhancement Request","Core: Logging",3,"upgrade log4j2 version to 2.0.2","""log4j 2.0.2 was release and it contains some fixes, some of which we requested. We should upgrade"""
"MULE-7837","Bug","Transport: Email",0,"Imap 'RetrieveMessageReceiver' does not read the whole folder when deleteReadMessages=""false""","""When reading emails with IMAP and not deleting them, the poller receiver continues to infinitely loop over the same set of messages, as it can be evidenced on org.mule.transport.email.RetrieveMessageReceiver class in the poll() the following line can be found:  Message[] messages = folder.getMessages(1, batchSize);  The first argument should increase proportional to the batch size to avoid retrieving the same messages over and over and thus not meeting the loop condition.  done = batchSize >= count;"""
"MULE-7847","Enhancement Request","Transport: FTP / SFTP",8,"Upgrade JSCH to version 0.151","""""""Verify:false"""" exception is still encountered in Mule 3.5.1 with Jsch 0.150, according to their release note it may require version 0.151    http://www.jcraft.com/jsch/ChangeLog    Australian Post is still in 3.4.0 and has reported this issue(https://na6.salesforce.com/5008000000ZO4Qe), I have tried to use loader.override to include jsch 0.151 in the application but """"verify:false"""" exception is still sporadically encountered during the load test.  If I replace the jsch.jar to 0.151 in /lib/opt, then the issue seems to be resolved. I have run the load test for an hour and I did not encounter the exception.  Please advise  1. Is there any impact to upgrade jsch jar to 0.151 in Mule's default distribution?  2. Is there any way to patch the issue without replacing the jsch.jar from <Mule_Home>/lib/opt? We would need to patch both the standalone and cloudhub deployment runtime. Some other customers in Cloudhub are also heavily using SFTP, they can't replace the jsch jar in the Cloudhub runtime themselves.  Many thanks!"""
"MULE-7843","Enhancement Request","Extensions API",8,"Allow extensions code to be splitted in several units","""As described in the execution section of the spec, a extension's developer needs to have the option to spread the configurations and operations across several classes which instances have their own lifecycle."""
"MULE-8003","Enhancement Request","Core: Domains shared resources",5,"Register core extensions as domain deployment listeners if it applies","""When a core extension is initialized, if it implements the DeploymentListener interface, it's added to the collection of deployment listeners but not to the collection of domain deployment listeners.     In the Gateway we are registering the core extensions as deployment listeners and setting the endpoint message notification on the context when the mule context creation notification is fired, but when the domain's mule context is deployed, the core extensions are not registered as listeners and the notification is never fired. """
"MULE-7979","Bug","Core: (other)",1,"Deployment Service tracks applications before they are successfully deployed","""Deployment service tracks applications as deployed before they have actually been deployed. This leads to retrieving an application from the list that has a context which has not been initialized yet or even that failed to deploy.     In gateway we are retrieving all applications with getApplications, and verifying that the muleContext is not null."""
"MULE-7852","Task","Build: Integration Tests",0,"Add a way to do assertions on mule logs with or without the mule process controller.","""As part of the logging tests we need a way to do assertions on the mule logs."""
"MULE-7851","Bug","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",0,"SecretKeyEncryptionStrategy does not use the supplied key","""SecretKeyEncryptionStrategy takes a key as an argument but then it never uses it. Instead, a dynamic key is generated during initialisation time.    This does not only breaches the contract exposed to the user, it also makes it impossible to decrypt messages after an application restart since the generated key will be different."""
"MULE-7859","Bug","Core: Deployment",5,"getApplications() method in MuleDeploymentService should include more apps","""The getApplications() method in MuleDeploymentService only returns applications that were successfully deployed or that failed to start.    Applications that failed to be installed or initialised are not returned but kept in a zoombies map.    This is inconsistent. The method should return all applications for which deployment has been attempted, and per MULE-7800, it should have a status marking which ones failed.    This makes for more useful and predictable behaviour while eliminating the need for the zoombies map.    Finally, notice that the javadoc for that method says that it only returns deployed applications. That comment does not reflect the actual behaviour of the method not its real intent. That javadoc should be fixed also."""
"MULE-7863","Task","Extensions API",13,"Spike on Extensions API execution model - Part 1","""Do a spike on being able to execute operations through the extensions API"""
"MULE-7873","Enhancement Request","Transport: HTTP(S) / Jetty",8,"Add support for HTTP Response builder and HTTP Response Error Builder","""Add support for HTTP listener child element http response builder and http error response builder.    All features from the HTTP connector spec for this elements should be supported."""
"MULE-7865","Enhancement Request","Transport: HTTP(S) / Jetty",13,"Add support for OAuth in the HTTP connector (Authorization code)","""Implement OAuth support for the outbound part of the HTTP connector. Support only the authentication-code grant type for now."""
"MULE-7878","Enhancement Request","Transport: TCP / UDP / SSL / Multicast",3,"Enable TLS protocol versions 1.1 and 1.2 by default","""As Mule 3.6 requires Java 7, enable by default protocolo TLS versions 1.1 and 1.2 so that secure socket connections can leverage them.  They were not enabled by default due to Java 6 compatibility, which doesn't implement them, but while they are not the default in Java 7, they are always supported.    This change will mostly be around setting up the correct definition in tls-default configuration file.      """
"MULE-7887","Bug","Core: Deployment",2,"DEPLOYMENT_FAILED status should be applied to applications that fail to start","""The status DEPLOYMENT_FAILED was added per issue MULE-7800. That status is applied to applications that failed to be installed or initialised.    The same status should be applied to applications that fail to start."""
"MULE-7890","Task","Build: Libraries / Dependencies",0,"Include hamcrest-library dependency.","""We are now using hamcrest-core (as part of junit 4.11), we need to instead include hamcrest-library and exclude junit's dependency. This will let us use many fundamental matchers, like the ones regarding number comparisons (greaterThan, lessThan, etc) and make our tests clearer."""
"MULE-7903","Task","Core: (other)",8,"Fix UntilSuccessfulTestCase flaky test.","""We need to fix testSuccessfulDeliveryAckExpression and check for other flaky tests."""
"MULE-7899","Task","Core: (other)",13,"Move tests from core/spring-config/vm to the new testing framework as needed","""Add description"""
"MULE-7897","Task","Core: (other)",8,"Test pax-exam using bundle repository","""Create a Pax-exam version of FunctionalTestCase in order to run mule tests inside an OSGi container.  Detect and report issues and things to improve"""
"MULE-7907","Bug","Transport: JDBC",0,"JDBCTransaction is not closing the connection correctly","""The class org.mule.transport.jdbc.JdbcTransaction is not closing the connections in a finally block, this happens in both doCommit and doRollback methods.  So, in case of an exception in the commit or rollback call the connection will remain open, and a leak could be caused.  """
"MULE-7910","Enhancement Request","Modules: Jersey",0,"Two providers for mapping from JAX-RS to JSON","""When exposing a REST service through Jersey, if you produce JSON, the mule runtime contains two libraries that jersey may pick for mapping from POJO to JSON.  jersey-json  jackson-jaxrs  The choice on which the framework will use is random and may vary between one environment and the other. The issue is that these libs expose different behavior and may cause unexpected side effects.  I'd suggest removing either one or the other from the mule distribution, alternatively provide means of configuration for using one or the other."""
"MULE-7913","Bug","Core: Routing / Filters",0,"Scatter-gather: NPE when applying expression filter","""You get a Null Pointer Exception when applying a expression filter to a path of Scatter-Gather.  The following example flow reproduces the issue, the alternative solution in the meantime is to use a choice.  """
"MULE-7920","Bug","Core: Logging",3,"SimpleLog mode should have custom logic for locating configuration file","""OOTB, log4j2 looks for its configuration file using this algorithm:    * Scan all classpath looking for file log4j2-test.xml  * If not found, repeat looking for log4j2.xml    When Mule is running with its default logging infrastructure, this logic is overridden so that the search is not performed on all classpath but:    * First on the application classpath  * If not found on the domain classpath  * If not found, on the configuration folder    When running in simple log mode, all of Mule's custom logic is not applied and we fallback to log4j2 default implementation, which causes issues because we cannot guarantee that any other jar in the classpath includes such a file, causing the wrong file to be picked up.    When runnning in simple mode, log separation should be disabled but our custom search algorithm should still be applied.    Additionally, in both cases we should generate a log line informing the path in which we found the file."""
"MULE-7938","Enhancement Request","Build: Libraries / Dependencies",8,"Upgrade to latest asm version","""Upgrade to the latest version of the asm library which has no compatibility issues with the dependencies of Mule 4 and which is also compatible with whatever JDK version we choose as minimum requirement for such version of the platform"""
"MULE-7936","Enhancement Request","Build: Libraries / Dependencies",0,"Upgrade Joda time to latest version","""Upgrade Joda time to latest available version"""
"MULE-7932","Enhancement Request","Transport: HTTP(S) / Jetty",3,"Allow to customise protocol in new HTTP Connector","""Allow to the user to change the HTTP protocol to use in the new HTTP Connector"""
"MULE-7931","Enhancement Request","Transport: HTTP(S) / Jetty",5,"HTTP Listener response streaming support","""Add support for sending streaming a response in new HTTP Connector. This implies sending Transfer-Encoding: chunck."""
"MULE-7930","Enhancement Request","Transport: HTTP(S) / Jetty",5,"Validate HTTP Proxy scenario using new HTTP Connector","""Build and validate a template created with http:request and http:listener for a proxy scenario."""
"MULE-7929","Enhancement Request","Transport: HTTP(S) / Jetty",13,"WS Consumer support for using new HTTP Connector","""Add support for the new HTTP connector in WS Consumer"""
"MULE-7928","Enhancement Request","Transport: HTTP(S) / Jetty",5,"Add TLS support for HTTP listener","""Add support for SSL in new HTTP Connector."""
"MULE-7927","Enhancement Request","Transport: HTTP(S) / Jetty",8,"Add helper properties for http listener element","""Add http listener helper properties. This properties are created to simplify usability and provide extra information about the processed request."""
"MULE-7923","Bug","Core: Routing / Filters",1,"Better support for sequential processing in scatter-gather","""Scatter Gather replaces the <all> router which was deprecated in 3.5.0. However, it doesn't behave that well on sequential use cases as its predecesor.    That's because if you configure a threading pool of just one, the processing is not sequential just across the routers but across all executions of the flow.     Another misbehaving use case is the one in which the routes are extremely fast, like just a couple of ms each. In that case, the overall response gain is lower than the time penalty of managing the threads.    To accommodate for these use cases we need to better support the sequential case of scatter gather, its threading profile type should change from asynchronousThreadingProfileType to threadingProfileType. This will enable a doThreading option which when set to false will execute always on the same thread, behaving similar to the old <all> router.  """
"MULE-7954","Enhancement Request","Build: Libraries / Dependencies|Modules: XML, XSLT, XPath, SXC",0,"Upgrade woodstox to the latest version","""Upgrade woodstox to the latest version which doesn't break backwards compatibility"""
"MULE-7951","Enhancement Request","Build: Libraries / Dependencies",8,"Upgrade test dependencies","""The following libraries are used in our test infrastructure and can be upgraded.    * activemq  * derby  * mockito-core  * xmlunit  * ftpserver-core  * ftplet-api  * mysql-connector  * postgres  * jmockit (check if we really need this one)  """
"MULE-7950","Enhancement Request","Build: Libraries / Dependencies",5,"Upgrade apache commons libraries to latest versions","""The following apache commons libraries can be upgraded.     * commons-codec  * commons-beanutils  * commons-exec  * commons-dbcp  * commons-net  """
"MULE-7949","Enhancement Request","Build: Libraries / Dependencies",3,"Upgrade Guava to the v18","""Upgrade Guava to the latest version which at the moment of filing this issue is v18"""
"MULE-7948","Task","Modules: XML, XSLT, XPath, SXC",8,"Perform spike on upgrading XPath function","""Perform a spike on upgrading our XPath support following these requirements:    * Support Xpath2  * Provide a new xpath2() MEL function which behaves more consistently than its current brother and deprecates it  * Can be leveraged to other transformers or elements currently present in Mule (research which ones)  * Be backwards compatible with Mule 3.5.x  """
"MULE-7947","Task","Modules: XML, XSLT, XPath, SXC",8,"Perform spike on upgrading XSLT support","""Perform a spike on upgrading our XSLT support by using newer libraries which provide more up to date features and performance.    For this spike to be considered successful, we should not only gain in functionality and performance, but we also need to remain backwards compatible with the behaviour of Mule 3.5.x"""
"MULE-7946","Task","Build: Libraries / Dependencies",5,"Remove dependencies no longer needed with JDK 1.7","""Now that JDK 1.7 is the minimum required JDK version for running Mule, the following dependencies should not be needed anymore:    * saaj-api   * jaxb-api  * jaxb-impl  * javax.mail: (including geronimo companion)  * jaxb-xjc  * retrotranslator  * servlet-api  * geronimo-jaxrpc_1.1_spec  * geronimo-ejb_2.1_spec  * geronimo-j2ee-connector_1.5_spec    Verify that we can indeed remove these libraries and if so go ahead and take them away from the distribution"""
"MULE-7970","Enhancement Request","Transport: HTTP(S) / Jetty",5,"Add followRedirects attribute to the http:request element","""The user should be able to configure in the request element if redirects should be followed or not, as defined in the spec for the new HTTP connector."""
"MULE-7969","Enhancement Request","Transport: HTTP(S) / Jetty",8,"Add source and target attributes to the http:request element","""The http:request element should have the attributes source and target. Currently the default behavior is to read the body from the payload, and then set the payload with the body of the response. This should be configurable by setting these new attributes."""
"MULE-7972","Enhancement Request","Core: (other)",13,"Redesign muleContext bootstrapping in OSGi","""Current bootstrapping mechanism inspects all available jars searching for bootstrap properties files. That must be modified to work on an OSGi container.  In OSGi, bootstrapping should follow white-board model so a bootstrapping service can be used (with no OSGi knowledge) which would enable test running with not container to be able to bootstrap the mule context.     """
"MULE-7971","Task","Build: (other)|Build: Integration Tests",8,"Fix flaky test UntilSuccessfulTestCase","""org.mule.routing.UntilSuccessfulTestCase.testPermanentDeliveryFailureDLQ  was ignored because it was flaky and was making build fail all the time. We need to fix flakiness and remove Ignore annotation. Also check that the rest of the test of this class are not flaky and these tests successfully pass in CI."""
"MULE-7974","Bug","Modules: WS Consumer",0,"Web Service Consumer serviceAddress with MEL causes NullPointerException","""When using a ws:consumer-config with a serviceAddress containing MEL, Mule fails to start due to a NullPointerException in MuleEndpointURL.getScheme().    Example configuration:  """
"MULE-7977","Enhancement Request","Core: Logging",1,"Add a system property to force a console appender","""Add a system property named mule.forceConsoleLog which forces a console appender if one is not already defined on the current log4j configuration. The purpose of this is to enable other products such as Studio to always have a predictable way to capture all the logs of the application regardless (and without tampering with) its configuration.    This is something additive to the configuration already present for the application (if any). It doesn't altere the standard configuration selection nor log separation performed in standard mode.    the mule.SimpleLog property has precedence over this property. If it is specified, then all the logic described here will not be executed."""
"MULE-7976","Task","Transport: HTTP(S) / Jetty",5,"Migrate HTTP Connector to use grizzly","""This is just to replace Netty server with Grizzly server.    There is going to be a different task for properly configure grizzly server and the execution model."""
"MULE-7983","Enhancement Request","Modules: Devkit Support",8,"Change DevKit support module to use new http connector","""When doing OAuth with Connectors created by DevKit it's possible to define a connector-ref attribute and reference the http:connector that will listen for the OAuth callbacks. This is the way in which current Devkit connectors allow support for https on the callback.     This should integrate with the new connector in the following way:    * If no connector is specified, we should use the new one with a default config  * If no connector is specified, but the useOldHttpTransport configuration flag is turned on, then we default to the old transport  * If a connector-ref is specified, then it should show the same behaviour with either the new connector or the old transport"""
"MULE-7986","Task","Transport: HTTP(S) / Jetty",8,"Make sure the new HTTP connector handles 0.0.0.0 and IP endpoints on the same port.","""MULE-7985 refers to the old transport, we need to make sure the new connector handles it too."""
"MULE-7987","Enhancement Request","Modules: XML, XSLT, XPath, SXC",8,"Upgrade Saxon to 9.6.0.1-HE","""Upgrade Saxon in order to get fully compliant 2.0 and basic 3.0 support for XPath, XSLT and XQuery"""
"MULE-7996","Bug","Core: Deployment",0,"Mule applications should clear their deployment class loader when they are disposed.","""After a mule application is disposed it's deployment class loader should be cleared so the application is ready to be redeployed if necessary.  """
"MULE-7994","Enhancement Request","Transport: HTTP(S) / Jetty",3,"Add flag to avoid parsing incoming multipart in http listener","""For proxy scenarios we need to avoid parsing multipart incoming request. This will also allow to the user to do streaming with multipart."""
"MULE-7992","Task","Transport: HTTP(S) / Jetty",3,"Change http listener response writing to do streaming","""The listener response streaming behaviour is implemented but we still need to write the grizzly response using streaming.    This requires some research in grizzly to figure out how to do it."""
"MULE-7991","Task","Transport: HTTP(S) / Jetty",8,"Migrate HTTP request element to use grizzly","""Currently http request element is using jetty. We need to change it to use grizzly."""
"MULE-7990","Enhancement Request","Core: API",5,"Create Serialization API","""Create a serialization API which replaces direct uses of SerializationUtils. This API will allow applications to specify custom serialization mechanisms."""
"MULE-7998","Bug","Modules: CXF",0,"Ensure to set target namespaces on xml schemas when creating CXF endpoint server.","""XML validation schemas should have set the target namespace in order to avoid null pointer exceptions in the validation process."""
"MULE-7997","Bug","Transport: HTTP(S) / Jetty",8,"HTTP response builder is not parsed correctly within flow","""response-builder as MP is not working because of the definition parsers.    The old new http transport is replacing the old transport definition parser so it's failing."""
"MULE-8004","Task","Examples / Tutorials",5,"Remove examples from the distribution","""Because we now have examples in Studio and the Mulesoft library, it doesn't make sense to also keep maintaining the examples on the distribution. They should be removed from the distribution and our code base.    Notice that before removing them we need to make sure that:    * They don't ship with any tests worth keeping (the scripting example has a couple that I'd like to move to the scripting module)  * Some system tests use them. We need to make sure they remain available for those testes    Keep examples folder with a README file saying that we are not shipping examples anymore (check content with Steven)    Fix examples version in QA builds."""
"MULE-8001","Bug","Modules: XML, XSLT, XPath, SXC",0,"XQuery transformer does not return all matches","""By default, the XQuery transformer only returns the first result, unless an array is specified in the returnClass attribute, in which case it returns all the matches in an Object[] (even if the return type was set to X[]). This means that by default, the transformer does not return all results.    If the user does specify a return value, but no results were found then it returns NullPayload. If it came back with only one, then it returns that one element, even if you asked for an Array.    Although this is clearly a bug and a usability pain, fixing this could break some applications which are taking this bug as a feature. Thus, the result will be:    * By default, the xquery transformer will return a List  * That list will contain all the results, even if only one was found  * If no results found, then the list will be empty  * If the user did specified a return class, then we will fallback to the current behaviour (array, one element, or null).       """
"MULE-8007","Task","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",3,"Fix spring-security tests.","""There are many tests using static ports in this module. We need to change them for dynamic ones to avoid flakiness."""
"MULE-8006","Task","Transport: HTTP(S) / Jetty",5,"Add test cases to validate Content-Type encoding and mule transformations","""We need to add test cases that validate mule transformations when receiving a request in http listener and when sending a response. Same with http requester.    When Mule receives a request in http:listener, then if the user wants to transform the message to an string we need to do the transformation taking into account the Content-Type header charset (if there's one).     Same when sending a response through http:listener and when using the http:request element."""
"MULE-8009","Enhancement Request","Modules: WS Consumer",13,"Add support for consuming wsdl files with more than 1 part","""I'm using the Web Service Consumer, and selecting a wsdl url.    Anypoint Studio displays the message """"Warning: Operation Messages With More Than 1 Part Are Not Supported."""" after reloading the wsdl and selecting an operation.    An extract of the wsdl is below:    <message name=""""myMethod"""">  <part name=""""body"""" element=""""tns:myMethod""""></part>  <part xmlns:ns1=""""http://myorg.com/app/myheader/v1"""" name=""""header"""" element=""""ns1:header""""></part>  </message>  ...  <input>  <soap:body use=""""literal"""" parts=""""body""""></soap:body>  <soap:header message=""""tns:myMethod"""" part=""""header"""" use=""""literal""""></soap:header>  </input>    Mule only accepts this if both the """"header"""" part and the soap header is removed.     The wsdl is consumed successfully by other applications, including SoapUI."""
"MULE-8011","Bug","Transport: HTTP(S) / Jetty",5,"Module HTTP Listener Connector Request based on path not working fine","""When you use a Wildcard to support a pattern in the PATH it's not working fine in these scenarios:     For path=""""/in_wildcard/*"""" />    1) It doesn't work consuming it with path=""""/in_wildcard/""""    2) It doesn't work consuming it with path=""""/in_wildcard/foo1/foo2""""  (with /in_wildcard/foo1 works fine)    If I have another flow in the same app with a path=""""/in_wildcard/*/subpath1"""" />    1) It doesn't work consuming it with path=""""/in_wildcard/foo1/subpath1""""    Examples:      <flow name=""""http_listener_test_wildcard"""">          <http:listener host=""""localhost"""" port=""""8083"""" path=""""/in_wildcard/*"""" />          <set-payload value=""""TestOK"""" />      </flow>        <flow name=""""http_listener_test_wildcard_2"""">          <http:listener host=""""localhost"""" port=""""8083"""" path=""""/in_wildcard/*/subpath1"""" />          <set-payload value=""""TestOK123"""" />      </flow>    1) GET Method: http://localhost:8083/in_wildcard/ should return """"TestOk"""" but it doesn't work in that path (STATUS 404 No listener for endpoint: /in_wildcard/)    2) GET Method: http://localhost:8083/in_wildcard/foo1/foo2 should return """"TestOk"""" but it doesn't work in that path (STATUS 404 No listener for endpoint: /in_wildcard/foo1/foo2/)    3) GET Method: http://localhost:9001/in/in_wildcard/foo1/subpath1 should return """"TestOk123"""" but it doesn't work in that path (STATUS 404 No listener for endpoint: /in_wildcard/foo1/subpath1)"""
"MULE-8013","Enhancement Request","Transport: HTTP(S) / Jetty",8,"Support keepAlive for persistent connections in HTTP Connector","""We need to support persistent connections, both for listener and request in the new connector."""
"MULE-8030","Enhancement Request","Core: API",3,"TransactionNotification should return the name of the application that triggered it","""When the Agent receives a transaction Notification there is no way to know the name of the application    """
"MULE-8026","Enhancement Request","Extensions API",5,"Replace current extensions discoverer with OSGish activator class","""In order to be aligned with Mule's OSGified future, replace the current discovery model with something of this sort:        public class MyActivator implements ExtensionActivator {           public void init(Manager mgr) { fluentApi.stuff(); }           }      }    The activator is to be discovered through standard java SPI"""
"MULE-8025","Enhancement Request","Extensions API",1,"Forbid one same class to define both configurations and operations","""Configurations and operations have to be defined in separate classes."""
"MULE-8024","Enhancement Request","Extensions API",2,"Enable registration of top level pojos","""Enable registering pojos as top level elements. The logic to do this is already done, all that's missing is the namespacehandler for it and testing"""
"MULE-8023","Enhancement Request","Extensions API",2,"Reduce the amount of DataTypeQualifiers","""We need less DataTypeQualifiers than we're actually supporting.    The following should be removed:    * Stream  * Void    The following should be collapsed:    * short / int  * DATE / DATE_TIME"""
"MULE-8022","Enhancement Request","Extensions API",1,"Remove the api subpackage in the extensions API","""Extensions API will be beta during the whole 3.x series, so it shouldn't have the api keyword on its packages. When we move to Mule 4, extensions API will be an OSGi bundle so the whole api classification makes no sense anymore"""
"MULE-8021","Enhancement Request","Extensions API",1,"Remove minMuleVersion restricition from extensions API","""In the future, we'll shoot for letting the runtime should decide this based on the extensions metadata"""
"MULE-8020","Enhancement Request","Extensions API",1,"Remove prefixes from ext-api core classes","""Remove the """"Extension"""" prefix from classes such as ExtensionConfiguration, ExtensionParameter, ExtensionOperation, etc"""
"MULE-8019","Enhancement Request","Extensions API",13,"Replace builders with a fluent API","""Replace the Builders with a fluent API at an ExtensionManager or Describer level. A mockup to take as reference (not commitment) of what we're shooting for is this:        This should improve usability and reduce the complexity of our own code since now the builder implementation is part of the API"""
"MULE-8018","Task","Transport: HTTP(S) / Jetty",13,"Merge http connector code cleanup and merge","""Cleanup code from the http connector module and merge it into 3.6 branch."""
"MULE-8034","Bug","Modules: (other)",5,"Uri Parameters should appear decoded in the inboundProperties","""When a Uri paramter is sent with an encoded character it doesn't appear decoded in the inboundProperties (http.uri.params) .    Example:        <http:listener-config name=""""listenerConfig_9000_uri_parameters"""" host=""""localhost"""" port=""""9000"""" />        <flow name=""""http_listener_test_listener_config"""">          <http:listener path=""""/resource/{resource_param}"""" config-ref=""""listenerConfig_9000_uri_parameters"""" />          <set-payload value=""""#[message.inboundProperties['http.uri.params']]"""" />      </flow>    http://localhost:9000/resource/value 01/  (value"""" """"01 = space between value and 01)    it will be send encoded to http://localhost:9000/resource/value%2001/ or http://localhost:9000/resource/value+01/    But it has to appear in the http.uri.params as """"value 01"""" not as """"value+01"""" when i obtain the """"resource_param""""."""
"MULE-8040","Enhancement Request","Extensions API",1,"Remove the concept of input and output types from an extension operation","""Remove the concept of input and output types from an extension operation"""
"MULE-8039","Task","Core: (other)",8,"Add behaviour to send a flow message source response asynchronously","""Currently we can process a message through MessageProcessingManager but the processing is done all synchronous.     We need, for the new http module, to add support to send the http response asynchronously. The only change required so far is a new FlowProcessingPhase with support for asynchronous dispatching of the response message."""
"MULE-8038","Bug","Transport: HTTP(S) / Jetty",8,"HTTP Module configured as proxy duplicate messages","""Seems that new http connector configured for proxy scenario is sending more request to the client server than expected. See test case HttpProxyTemplateTestCase,proxyStreaming,"""
"MULE-8044","Bug","Transport: HTTP(S) / Jetty",8,"Http Listener fail to send response after receiving a big payload with transfer-encoding chunk","""When sending a big payload with transfer-encoding chunk to an http listener, then the listener fails to send the response.    See org.mule.module.http.functional.listener.HttpListenerRequestStreamingTestCase ."""
"MULE-8054","Bug","Transport: Email",0,"Exception trying to close a not opened IMAP folder","""Since we are closing the folder without checking if it is open first, a lot of exceptions are cluttering the logs."""
"MULE-8052","Bug","Modules: (other)",5,"New HTTP Module Request not encode values in the path attribute","""In the new HTTP Request Module when you use a path that have chars that need to be encoded it doesn't produce an URI with the values encoded.    For example:    <http:request-config name=""""configWithoutBasePath"""" host=""""localhost"""" port=""""${httpPort}"""" />        <flow name=""""requestWithoutBasePathEncodedValues"""">          <http:request config-ref=""""configWithoutBasePath"""" host=""""localhost"""" port=""""${httpPort}"""" path=""""/out 1"""" />      </flow>    The PATH in this case has to be encoded and arrive to the listener server as """"/out%201""""  """
"MULE-8051","Bug","Core: Routing / Filters",8,"Scatter-Gather: Custom Aggregation Strategy - AggregationContext gives wrong events when exceptions occur","""When implementing a custom aggregation strategy (as a Java class) as in the documentation: http://www.mulesoft.org/documentation/display/current/Scatter-Gather , section Complete Code Example there seems to be an issue with messages that throw exceptions.    It seems that the method collectEventsWithExceptions() from AggregationContext gives the event(s) as they were before entering the Scatter-Gather.    So it is basically impossible to get the message(s) that actually caused the exception.     collectEventsWithoutExceptions() - works as expected"""
"MULE-8047","Enhancement Request","Core: Domains shared resources|Transport: HTTP(S) / Jetty",5,"Support shared http listener and request config in domains","""We need to be able to shared http:listener-config and http:request-config betweens applications using domains."""
"MULE-8072","Bug","Modules: HTTP",3,"Http Requester returns 200 instead of the actual request status code.","""On the proxy scenario, when the proxied service is unavailable a 500 response should be received, instead it is responding with """"200 Internal Server Error"""" which doesn't respect the http protocol.    Steps to reproduce:  - Deploy application.  - Make sure there is no service being proxy.  - Hit the endpoint.  - A response containing the status """"200 Internal Server Error"""" will be shown.    Expected behaviour:  The requester and proxy escenario should reply with the same status code and message."""
"MULE-8070","Bug","Modules: HTTP",3,"Jersey fails to retrieve cookie when running with new http module.","""Jersey fails to retrieve cookie when running with new http module. See org.mule.module.jersey.JerseyCookiePropagationTestCase"""
"MULE-8069","Bug","Extensions API",8,"Define a richer set of expression aware XSD types ","""Now that the extensions api is going to make the parsing of expressions easier and enabled by default on every component, we should define new XSD types which bette reflect the expected return types. For example:    * expressionSubstitutableString  * expressionSubstitutableInt  * etc    Things to discuss and define:    * Do we always allow embedded expressions?  * is """"#[foo] """" a valid expression?  """
"MULE-8068","Task","Extensions API",2,"Add tests to verify that extension api parsers support place holders","""In the tests that validate the parsing of configurations and operations through XML, validate that property placeholders are correclty resolved"""
"MULE-8067","Enhancement Request","Extensions API",13,"Decouple the extension-api from the concept of declaring or acting classes","""Currently, the Extension, Configuration and Operation interfaces have the concept of declaring or acting classes. This ties the API to the traditional implementation model of annotated classes, which might not always be the case.    Decouple that by introducing two new interfaces: ConfigurationIntantiator and OperationImplementation"""
"MULE-8065","Task","Modules: HTTP",5,"Change DefaultHttpRequester to receive a Configuration object instead of separated attributes for each configuration value","""In HTTP connector, there is a HttpRequesterBuilder#setOperationConfig(HttpRequestOptions) method which is used to configure a DefaultHttpRequester instance.  That configuration is done invoking every property setter in DefaultHttpRequester.   DefaultHttpRequester must accept a HttpRequestOptions instead of having properties for each configurable value to reduce code duplication and make the code more simple  """
"MULE-8063","Task","Modules: HTTP",0,"Replace configuration attribute useHttpTransportByDefault with a configuration extension","""As part of the review of MULE-8028 we found that using a configuration element's attribute to disable/enable the usage of the HTTP transport is not correct.  To be able to configure this attribute a new configuration extension for HTTP should be added."""
"MULE-8061","Task","Modules: HTTP",8,"Remove duplicate message creation from test cases.","""After MULE-8028  there are several test cases duplicating code to for mule message creation. we should add a method in our test infrastructure and reuse that."""
"MULE-8079","Bug","Modules: HTTP",3,"Cast exception on the proxy http scenario.","""When running the Proxy scenario of the http module, a very small percentage of the requests fails with the shown exception."""
"MULE-8074","Task","Modules: HTTP",8,"Fix flaky test AuthorizationCodeMinimalConfigTestCase","""Fix flaky test AuthorizationCodeMinimalConfigTestCase.    Failure is:  java.net.SocketTimeoutException: Read timed out   at java.net.SocketInputStream.socketRead0(Native Method)   at java.net.SocketInputStream.read(SocketInputStream.java:152)   at java.net.SocketInputStream.read(SocketInputStream.java:122)   at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:136)   at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:152)   at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:270)   at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)   at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)   at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)   at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:161)   at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:153)   at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)   at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)   at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:254)   at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)   at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)   at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)   at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)   at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)   at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:106)   at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)   at org.apache.http.client.fluent.Request.execute(Request.java:143)   at org.mule.module.oauth2.internal.authorizationcode.functional.AuthorizationCodeMinimalConfigTestCase.hitRedirectUrlAndGetToken(AuthorizationCodeMinimalConfigTestCase.java:29)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:606)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)   at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)   at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at com.github.tomakehurst.wiremock.junit.WireMockRule$1.evaluate(WireMockRule.java:74)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)   at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)   at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)"""
"MULE-8083","Bug","Modules: XML, XSLT, XPath, SXC",0,"JXPath Evaluator is vulnerable to XXE","""JXPathExpressionEvaluator includes:        XMLUtils.toW3cDocument does not disable external entities, so the  message payload could include an XXE attack.    We need to apply there the same fix as in MULE-7390"""
"MULE-8082","Enhancement Request","Modules: XML, XSLT, XPath, SXC",0,"Upgrade XStream to version 1.4.7","""Upgrade XStream to version 1.4.7"""
"MULE-8081","Enhancement Request","Core: Configuration",0,"CheckRequiredAttributes#preProcess performance improvement","""CheckRequiredAttributes#preProcess evaluates every defined attribute group to see if the element matches each of them.  This is not required we need to know if at least one of them matches.  Avoiding this redundant check will slightly reduce the time needed to parse a mule configuration file."""
"MULE-8086","Bug","Core: Queues (SEDA) / Persistence|Transport: VM",5,"File handlers are not closed after a Queue is disposed","""Per the Queue contract, when a queue is disposed all its storage is to be freed and the resources released. However, it is only clearing the storage but the file handlers remain open.     I have verified that the number of files in the queuestore directory in .mule/ grows constantly.  Checked with lsof -p <pid>   Code is in github at https://github.com/mulesoft-consulting/ucso-api-manager.git  """
"MULE-8095","Bug","Core: (other)",0,"Managed object store expiration incorrectly detected on cluster","""Managed object store defines an entre Time to Live (TTL) in order to determine if a given entry must be removed form the stored during the expiring process.  In oder to to that, each entry contains a timestamp which is compared against the current time and the configured TTL.  That the timestamp is calculated using System.nanoTime.  The problem is that System.nanoTime can only be used to measure elapsed time and is not related to any other notion of system or wall-clock time.  This implies that the returned values are only meaningful inside a given JVM, but we can't compare timestamps generated on different machines."""
"MULE-8094","Bug","Modules: HTTP",5,"HTTP Listener with Basic Auth should return status code 401 when authentication fails","""When using the Basic-Auth with the new Module Http Listener it returns a 500 status code but it would be better to return a 401 like the old http does.    Example:         <flow name=""""listenerBasicAuth"""">          <http:listener config-ref=""""listenerConfigBasicAuth"""" path=""""/basic/"""" />          <http:basic-security-filter realm=""""mule-realm""""/>          <!--<mule-ss:http-security-filter realm=""""mule-realm""""/>-->          <set-payload value=""""TestBasicAuthOk""""/>      </flow>        <flow name=""""httpInboundBasicAuth"""">          <inbound-endpoint address=""""http://localhost:9016/http_basic"""">              <mule-ss:http-security-filter realm=""""mule-realm""""/>          </inbound-endpoint>          <set-payload value=""""TestHttpBasicAuthOk""""/>      </flow>    In the first flow (listenerBasicAuth) using the tag:    - <http:basic-security-filter realm=""""mule-realm""""/> or   - <mule-ss:http-security-filter realm=""""mule-realm""""/>     after the listener it returns a 500 in an invalid authentication.      But with the old HTTP, in the second flow (""""httpInboundBasicAuth"""") it returns a 401.  """
"MULE-8092","Enhancement Request","Core: Logging",1,"Email address dev@mule.codehaus.org bounces back in ""WARN org.mule.DefaultMuleMessage: setProperty(key, value) called with null value""","""Using a message enricher to extract a non-existent property from the current payload and assign it to a flow variable causes the following warning.  It has been reported that an email to the given address dev@mule.codehaus.org just bounced back.    Please correct the email address, or remove the stack trace (which makes it look much worse than a warning), or remove the message from being logged in this situation altogether.    WARN  2014-11-14 16:07:37,292 [[<removing project name from JIRA>].httpc.receiver.04] org.mule.DefaultMuleMessage: setProperty(key, value) called with null value; removing key: <removing key name from JIRA>; please report the following stack trace to dev@mule.codehaus.org  java.lang.Throwable  at org.mule.DefaultMuleMessage.setProperty(DefaultMuleMessage.java:470)  at org.mule.el.context.MessagePropertyMapContext.put(MessagePropertyMapContext.java:49)  at org.mule.el.context.MessagePropertyMapContext.put(MessagePropertyMapContext.java:17)  at org.mule.mvel2.optimizers.impl.refl.nodes.MapAccessor.setValue(MapAccessor.java:52)  at org.mule.mvel2.optimizers.impl.refl.nodes.VariableAccessor.setValue(VariableAccessor.java:46)  at org.mule.mvel2.compiler.CompiledAccExpression.setValue(CompiledAccExpression.java:59)  at org.mule.mvel2.ast.DeepAssignmentNode.getReducedValueAccelerated(DeepAssignmentNode.java:92)  at org.mule.mvel2.MVELRuntime.execute(MVELRuntime.java:86)  at org.mule.mvel2.compiler.CompiledExpression.getDirectValue(CompiledExpression.java:123)  at org.mule.mvel2.compiler.CompiledExpression.getValue(CompiledExpression.java:119)  at org.mule.mvel2.MVEL.executeExpression(MVEL.java:943)  at org.mule.el.mvel.MVELExpressionExecutor.execute(MVELExpressionExecutor.java:72)  at org.mule.el.mvel.MVELExpressionLanguage.evaluateInternal(MVELExpressionLanguage.java:198)  at org.mule.el.mvel.MVELExpressionLanguage.evaluate(MVELExpressionLanguage.java:183)  at org.mule.expression.DefaultExpressionManager.enrich(DefaultExpressionManager.java:244)  at org.mule.enricher.MessageEnricher.enrich(MessageEnricher.java:112)  at org.mule.enricher.MessageEnricher.process(MessageEnricher.java:78)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.DefaultMessageProcessorChain.doProcess(DefaultMessageProcessorChain.java:94)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.doProcess(InterceptingChainLifecycleWrapper.java:50)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.access$001(InterceptingChainLifecycleWrapper.java:22)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper$1.process(InterceptingChainLifecycleWrapper.java:66)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.process(InterceptingChainLifecycleWrapper.java:61)  at org.mule.routing.AbstractSelectiveRouter.processEventWithProcessor(AbstractSelectiveRouter.java:308)  at org.mule.routing.AbstractSelectiveRouter.routeWithProcessors(AbstractSelectiveRouter.java:298)  at org.mule.routing.AbstractSelectiveRouter.routeWithProcessor(AbstractSelectiveRouter.java:288)  at org.mule.routing.AbstractSelectiveRouter.process(AbstractSelectiveRouter.java:203)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.DefaultMessageProcessorChain.doProcess(DefaultMessageProcessorChain.java:94)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.AbstractInterceptingMessageProcessorBase.processNext(AbstractInterceptingMessageProcessorBase.java:102)  at org.mule.construct.DynamicPipelineMessageProcessor.process(DynamicPipelineMessageProcessor.java:54)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.DefaultMessageProcessorChain.doProcess(DefaultMessageProcessorChain.java:94)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.AbstractInterceptingMessageProcessorBase.processNext(AbstractInterceptingMessageProcessorBase.java:102)  at org.mule.interceptor.AbstractEnvelopeInterceptor.process(AbstractEnvelopeInterceptor.java:51)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.AbstractInterceptingMessageProcessorBase.processNext(AbstractInterceptingMessageProcessorBase.java:102)  at org.mule.processor.AbstractFilteringMessageProcessor.process(AbstractFilteringMessageProcessor.java:40)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.AbstractInterceptingMessageProcessorBase.processNext(AbstractInterceptingMessageProcessorBase.java:102)  at org.mule.construct.AbstractPipeline$1.process(AbstractPipeline.java:109)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.DefaultMessageProcessorChain.doProcess(DefaultMessageProcessorChain.java:94)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.doProcess(InterceptingChainLifecycleWrapper.java:50)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.access$001(InterceptingChainLifecycleWrapper.java:22)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper$1.process(InterceptingChainLifecycleWrapper.java:66)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.process(InterceptingChainLifecycleWrapper.java:61)  at org.mule.construct.AbstractPipeline$3.process(AbstractPipeline.java:207)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.SimpleMessageProcessorChain.doProcess(SimpleMessageProcessorChain.java:43)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.doProcess(InterceptingChainLifecycleWrapper.java:50)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.access$001(InterceptingChainLifecycleWrapper.java:22)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper$1.process(InterceptingChainLifecycleWrapper.java:66)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.process(InterceptingChainLifecycleWrapper.java:61)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.SimpleMessageProcessorChain.doProcess(SimpleMessageProcessorChain.java:43)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.doProcess(InterceptingChainLifecycleWrapper.java:50)  at org.mule.processor.chain.AbstractMessageProcessorChain.process(AbstractMessageProcessorChain.java:67)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.access$001(InterceptingChainLifecycleWrapper.java:22)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper$1.process(InterceptingChainLifecycleWrapper.java:66)  at org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor.execute(ExceptionToMessagingExceptionExecutionInterceptor.java:24)  at org.mule.execution.MessageProcessorNotificationExecutionInterceptor.execute(MessageProcessorNotificationExecutionInterceptor.java:58)  at org.mule.execution.MessageProcessorExecutionTemplate.execute(MessageProcessorExecutionTemplate.java:44)  at org.mule.processor.chain.InterceptingChainLifecycleWrapper.process(InterceptingChainLifecycleWrapper.java:61)  at org.mule.transport.AbstractMessageReceiver.routeEvent(AbstractMessageReceiver.java:511)  at org.mule.transport.AbstractMessageReceiver.routeMessage(AbstractMessageReceiver.java:226)  at org.mule.transport.AbstractMessageReceiver.routeMessage(AbstractMessageReceiver.java:208)  at org.mule.transport.AbstractMessageReceiver.routeMessage(AbstractMessageReceiver.java:200)  at org.mule.transport.AbstractMessageReceiver.routeMessage(AbstractMessageReceiver.java:187)  at org.mule.transport.http.HttpMessageReceiver$7$1.process(HttpMessageReceiver.java:483)  at org.mule.transport.http.HttpMessageReceiver$7$1.process(HttpMessageReceiver.java:480)  at org.mule.execution.ExecuteCallbackInterceptor.execute(ExecuteCallbackInterceptor.java:16)  at org.mule.execution.HandleExceptionInterceptor.execute(HandleExceptionInterceptor.java:30)  at org.mule.execution.HandleExceptionInterceptor.execute(HandleExceptionInterceptor.java:14)  at org.mule.execution.BeginAndResolveTransactionInterceptor.execute(BeginAndResolveTransactionInterceptor.java:54)  at org.mule.execution.ResolvePreviousTransactionInterceptor.execute(ResolvePreviousTransactionInterceptor.java:44)  at org.mule.execution.SuspendXaTransactionInterceptor.execute(SuspendXaTransactionInterceptor.java:50)  at org.mule.execution.ValidateTransactionalStateInterceptor.execute(ValidateTransactionalStateInterceptor.java:40)  at org.mule.execution.IsolateCurrentTransactionInterceptor.execute(IsolateCurrentTransactionInterceptor.java:41)  at org.mule.execution.ExternalTransactionInterceptor.execute(ExternalTransactionInterceptor.java:48)  at org.mule.execution.RethrowExceptionInterceptor.execute(RethrowExceptionInterceptor.java:28)  at org.mule.execution.RethrowExceptionInterceptor.execute(RethrowExceptionInterceptor.java:13)  at org.mule.execution.TransactionalErrorHandlingExecutionTemplate.execute(TransactionalErrorHandlingExecutionTemplate.java:109)  at org.mule.execution.TransactionalErrorHandlingExecutionTemplate.execute(TransactionalErrorHandlingExecutionTemplate.java:30)  at org.mule.transport.http.HttpMessageReceiver$7.process(HttpMessageReceiver.java:479)  at org.mule.transport.http.HttpMessageReceiver$7.process(HttpMessageReceiver.java:475)  at org.mule.transport.http.ThrottlingExecutionTemplate.execute(ThrottlingExecutionTemplate.java:91)  at org.mule.transport.http.HttpMessageReceiver.routeHttpRequest(HttpMessageReceiver.java:474)  at org.mule.transport.http.HttpMessageReceiver.routeRequest(HttpMessageReceiver.java:415)  at org.mule.transport.http.HttpMessageReceiverRouterWorker.run(HttpMessageReceiverRouterWorker.java:31)  at org.mule.transport.TrackingWorkManager$TrackeableWork.run(TrackingWorkManager.java:267)  at org.mule.work.WorkerContext.run(WorkerContext.java:286)  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)  at java.lang.Thread.run(Thread.java:745)"""
"MULE-8089","Bug","Modules: HTTP",8,"Wrong attributes for TLS in OAuth config","""Attributes requestConfig and listenerConfig were not removed from the OAuth authorization grant types. We need to use tlsContext-ref instead."""
"MULE-8099","Bug","Core: Domains shared resources",0,"Domains should not allow Mule elements nested in a <spring:beans> element","""For security and consistency reasons, domains should not allow Mule elements nested in a <spring:beans> element"""
"MULE-8097","Task","Modules: HTTP",3,"Hot spot in ServerAddress of HTTP Connector","""When ServerAddress executes:     this.ip = InetAddress.getByName(host).getHostAddress();    It's take a while to return. We need to improve it since it's used with every request."""
"MULE-8102","Task","Core: Configuration",1,"Upgrade schema versions to 3.6","""Upgrade schema versions to 3.6"""
"MULE-8101","Bug","Modules: HTTP",8,"HTTP requester not sending query parameters when processing a redirect under HTTPS","""Check the behavior of redirects in the http:request element of the new HTTP module when using HTTPS. If the Location header contains a URL with query parameters, the request to that URL doesn't contain the parameters.  To reproduce, check AuthorizationCodeFullConfigTestCase#localAuthorizationUrlRedirectsToOAuthAuthorizationUrl. MuleClient is being used twice, to manually process redirects, replace that with only one call with enabled redirects."""
"MULE-8104","Bug","Modules: HTTP",3,"HTTP Requester not removing previous inbound properties","""The http:request sets inbound properties to the resulting Mule message but keeps any previous inbound property that were set before the request. To reproduce, test the proxy scenario using a flow with an http:listener and an http:request. When returning from the request, the Mule message still has inbound properties from the listener."""
"MULE-8113","Enhancement Request","Build: Maven",1,"Tests Infrastructure modules build warning","""When running mvn validate on mule-tests-infrastructure module I get a warning because there is a duplicated declaration of maven-jar-plugin in mule pom.xml.    """
"MULE-8112","Bug","Core: Logging",1,"ArrayIndexOutOfBoundsException when logging exceptions","""Sometimes, when logging an exception with a RollingFileAppender an ArrayIndexOutOfBoundsException is thrown.  """
"MULE-8110","Bug","Modules: HTTP",3,"Http Listener Module Path Issue with path with wildcard and another hardcoded in the same port and with spaces in the path","""When there are two listeners in the same port but one has a wildcard the other has a hardcoded path and there is a collision between them it has to enter in the listener that has the hardcoded path.     For example:    1) Flow with path = """"/in"""" and another flow with path = """"/in/* """"  It enters in the /in/* listener but it should enter in the """"/in"""" without wildcard    2) path=""""/in/*/subpath1""""  path=/in/*  When you consume it with """"/in/foo1/subpath1"""" it goes to the path /in/*    3) Similar to the previous case.  path=""""/in/*/subpath1/*"""" and Path=/in/*     When you consume it with """"/in/foo1/subpath1/subpath2"""" it goes with the /in/*    4) path=""""/encodedValues/foo 1""""  and you consume it with /encodedValues/foo%201 it returns a 404.    For all of these cases there are Functional Test Cases inside the System folder of the HTTP module tests:    *HttpListenerPathTestCase  """
"MULE-8107","Bug","Modules: HTTP",3,"Default maxThreads is 128 when worker-threading-profile isn't present but 16 when it is.","""As title.."""
"MULE-8106","Bug","Transport: TCP / UDP / SSL / Multicast",3,"TCP Transport creating MULE_REMOTE_CLIENT_ADDRESS as outbound","""While working on STUDIO-5148, the team found that TCP is creating the MULE_REMOTE_CLIENT_ADDRESS as outbound property rather than inbound as per our way to adapt messages and the way we set that property everywhere else.    https://github.com/mulesoft/mule/blob/bfb3a17263d1e4b32ee10272cbf710a2bf41b16b/transports/tcp/src/main/java/org/mule/transport/tcp/TcpMessageReceiver.java#L421  """
"MULE-8124","Bug","Modules: HTTP",3,"Resource Not Found in HTTP should return a body with a clear message","""HTTP Module returns 404 when a valid port is hit but there's no listener in it."""
"MULE-8123","Bug","Transport: HTTP(S) / Jetty",5,"Jetty http.context.path inbound property has a different value in 3.6 compared to 3.5","""The jetty transport in 3.6.0-M3 is setting the http.context.path inbound property to a different value than 3.5    given the following endpoint address and request:     endpoint address:  http://localhost:8080/api   request:                 http://localhost:8080/api/console/index.html    in 3.6 we get:    http.context.path: /api/console/index.html    and in 3.5 the value was:    http.context.path: /api    the 3.5 behavior is the expected one.  """
"MULE-8122","Bug","Transport: VM",0,"Negative seek offset after queue file goes trough transaction recovery process","""After an ungraceful shutdown of an application doing intensive use of durable transactional queues, the recovery process appends recovered records at the beginning of the queue and not at the end as it is expected to.    As a result, the entries index created by RandomAccessFileQueueStore is corrupted and the file can't be read."""
"MULE-8117","Bug","Modules: HTTP",3,"StringIndexOutOfBoundsException when requester receives GET with wrong body","""When sending a GET with content-type application/x-www-form-urlencoded and an incorrect form body it returns an empty response due to a java.lang.StringIndexOutOfBoundsException.    To reproduce run the following command using the configuration:        """
"MULE-8116","Bug","Modules: HTTP",3,"Error in the XML Parser of the HTTP Module when the Header tag is used with the Error Response Builder","""This exception is throw when there is an Error Response Builder:     """"nested exception is java.lang.IllegalStateException: No parser defined for header in the context error-response-builder"""""""
"MULE-8129","Bug","Modules: HTTP",3,"HTTP Listener config throws NPE when a request is received but no listener is referencing the config","""When no listener is referencing a listener-config, and a request is received in the configured port, a NPE is thrown in the server.    To reproduce, add this listener-config:      <http:listener-config name=""""customConfig"""" host=""""localhost"""" port=""""1234""""/>    Run the app, and then hit with a browser http://localhost:1234"""
"MULE-8127","Bug","Modules: HTTP",5,"HTTP Listener Module is not adding the WWW-Authenticate header field in the response ","""When you send bad basic credentials for authentication the response of the listener is not adding the WWW-Authenticate header field.     But in the case you don't send the authentication header credential it includes the WWW-Authenticate header field.     As I understand in the RFC (http://tools.ietf.org/html/rfc2616#section-10.4.2) the server has to add the WWW-Authenticate header field in both scenarios.    """
"MULE-8134","Bug","Core: Logging",3,"JUL loggers are not bridged to log4j2","""Components like jersey and Grizzly are logging using JUL but that API is not bridged to log4j2.    JUL loggers should have the same treatment as the others do"""
"MULE-8133","Bug","Core: Logging",3,"Log separation doesn't work after upgrading to log4j 2.1","""Because of a change in Log4j's lifecycle, after upgrading to 2.1 the application logs never load their configuration which in practice means that log separation is disabled even though applications do have a separate logging context."""
"MULE-8132","Bug","Modules: HTTP",2,"HTTP listener not setting exception payload.","""There's a scenario in CXF where an exception is thrown after calling an HTTP listener. An exception payload is expected but you get null.  Test is testServerClientProxyDefaultException and can be found in ExceptionStrategyTestCase."""
"MULE-8136","Bug","Modules: HTTP",0,"SERVER_ACCEPT IOEvents should not be processed using ThreadPoolExecutor","""The custom IOStrategy being used in the http module (ExecutorPerServerAddressIOStrategy) is causing server_accept IO events to be processed in a worker thread.  This is not ideal, and not what the Grizzly implementatio do either."""
"MULE-8142","Bug","Modules: HTTP",8,"HTTP Listener is storing only the first part of a MultiPart request as attachment","""given the following request using RestAssured:        only the first part (""""description"""") is being stored as an inboundAttachment.    Using http:inbound instead of listener generates both attachments as expected.    failing test using listener:  https://github.com/mulesoft/apikit/blob/http-3.6/mule-module-apikit/src/test/java/org/mule/module/apikit/leagues/LeaguesHttpListenerTestCase.java    passing test using endpoint:  https://github.com/mulesoft/apikit/blob/http-3.6/mule-module-apikit/src/test/java/org/mule/module/apikit/leagues/LeaguesTestCase.java    in both classes the test in question is putMultiPartFormData()"""
"MULE-8151","Bug","Modules: Jersey",5,"Malformed responses when Jersey sends a chuncked response","""When a Jersey endpoint responds with a chuncked response, then the chunks are not correctly formed and the last one is not correctly finialized.    As a result, the response is garbled. """
"MULE-8150","Enhancement Request","Modules: HTTP",8,"HTTP Connector OAuth Implicit Credentials","""Need to support OAuth implicit credentials for new HTTP connector."""
"MULE-8149","Enhancement Request","Modules: WS Consumer",8,"WS Security Signature support for WS consumer","""We should support WS Security signature and verification capabilities in WS consumer."""
"MULE-8148","Enhancement Request","Modules: WS Consumer",8,"WS Encryption support for WS Consumer","""We should support WS Security encryption/decryption capabilities in WS consumer."""
"MULE-8147","Enhancement Request","Modules: WS Consumer",13,"Support doc/literal with multiple message parts in ws consumer","""WS Consumer should support doc/literal web services that have multiple message parts inside them.     Note: since WS consumer sets the payload to the body of the SOAP message, this means that it will have to have a wrapper element around the message parts."""
"MULE-8146","Bug","Modules: HTTP",8,"Grizzly thread leaks","""When running the CE test suite, you can see grizzly threads piling up to the point in which by the time the suite is almost over there's a gigantic amount of idle threads.    This leads to flakiness and in some environments it even fails the build because the host can't allocate more threads.    Additionally, it raises the concern about those threads being actually stopped when an application is undeployed on a live container.    Please trace and fix the leak and verify that those threads do not survive an application undeployment."""
"MULE-8156","Task","Modules: HTTP",13,"Create examples for HTTP module documentation","""Create exmaples to include in documentation for new HTTP Module."""
"MULE-8160","Bug","Modules: HTTP",8,"100% errors with http listener under high concurrency","""100% Failures at 8000 concurrency.  Http transport only has 0.32% failures, and jetty none."""
"MULE-8159","Bug","Modules: HTTP",5,"java.lang.IllegalStateException: Only owner thread can write to message still occures with http module","""."""
"MULE-8163","Bug","Modules: HTTP",8,"Requests randomly fail (1 in 1M) with NPE, even at low conconcurrencies e.g. 50","""Around 10 times in a million requests, the request fails due a null pointer exception caused by the future returning null instead of a valid response.    Class and line:  org.mule.module.http.internal.request.grizzly.GrizzlyHttpClient#send              response = future.get(responseTimeout, TimeUnit.MILLISECONDS);  """
"MULE-8162","Bug","Modules: HTTP",5,"HTTP listener fails with NPE when the message is filtered out","""The following config is failing with NPE. It doesn't fail when the message is not filtered out.  Error:  java.lang.NullPointerException   at org.mule.module.http.internal.listener.HttpResponseBuilder.build(HttpResponseBuilder.java:77) ~[mule-module-http-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]   at org.mule.module.http.internal.listener.HttpMessageProcessorTemplate.sendResponseToClient(HttpMessageProcessorTemplate.java:87) ~[mule-module-http-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]   at org.mule.execution.AsyncResponseFlowProcessingPhase.runPhase(AsyncResponseFlowProcessingPhase.java:56) ~[mule-core-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]   at org.mule.execution.AsyncResponseFlowProcessingPhase.runPhase(AsyncResponseFlowProcessingPhase.java:23) ~[mule-core-3.6.0-M3-SNAPSHOT.jar:3.6.0-M3-SNAPSHOT]"""
"MULE-8172","Bug","Core: Logging",8,"Cannot log to application log for a failed deployment","""Install latest snapshot (build c22fb549), create an application with the attached config and start using bin/mule -M-Dmule.agent.enabled=false.    Deployment fails as expected but there is a problem when trying to log to application log. See attached log."""
"MULE-8170","Enhancement Request","Core: Configuration",8,"Redesign context builder discovery for OSGi","""Current context builder discovery mechanism inspects all available jars searching for service properties files. That must be modified to work on an OSGi container.  In OSGi, transport discovery should follow white-board model so a context builder service can be used (with no OSGi knowledge) which would enable test running with not container to be able to properly create the mule context."""
"MULE-8167","Bug","Extensions API",1,"Remove byte as a DataQualifier","""Remove it"""
"MULE-8166","Task","Core: Containers",13,"Make a Spike on consolidating all mule registries into a Spring one","""Make a Spike on consolidating all mule registries into a Spring one"""
"MULE-8165","Enhancement Request","Extensions API",13,"Spike on execution model of extensions api","""Make it execute operations"""
"MULE-8173","Enhancement Request","Modules: HTTP",5,"Add protocol attribute to listener-config and request-config to improve usability","""Currently is difficult for an user to realice how to configure HTTPS for listening HTTP requests or sending HTTP requests. The way to do that currently is by defining a TLS Context element (which can be empty for sending request, in such case it will use jvm default certificatess) inside the listener-config or de request-config element. That it's not straightforward if the user is working with XML and for users that do not know that SSL / TLS is the protocol behing HTTPS isn't either despite they use Studio.    The idea is to add a protocol attribute (with default value HTTP) in the listener-config and the request-config.  - Listener config:     - if user sets protocol=""""http"""" or provides no values then we validate that the user didn't put a TlsContext.     - If user sets protocol=""""https"""" we validate that the user provided a TlsContext with at least a keystore configured on it.   - Request config:     - if user sets protocol=""""http"""" or provides no value then we validate that the user didn't put a TlsContext     - if user sets protocol=""""https"""" and provides no TlsContext config then we create a TlsContext by default (implicitly) using the default jvm certificates  - if http is selected, port 80 is used by default  - if https is selected, port 443 is used by default    The usability improvements is:   From Studio the user has a much more easy way to find where to define the use of HTTPS since it's going to be in the main configuration section of both listener-config and request-config   From XML the user will see a hint from the XML content assistant to pick the protocol right in the listener-config element or request-config element.    With the new behaviour there's no reason to support an empty tls:context element in the config.  When we rebuild the current TCP transport ideally we can reuse the same mechanism as in HTTP (no idea what the """"protocol"""" attribute would be called in that case) or add support for an empty tls:context again.  """
"MULE-8178","Bug","Modules: HTTP",3,"Default HTTPS configuration in requester not working correctly","""The protocol=""""HTTPS"""" configuration in the request-config is ignored if there is no default TLS context factory in the registry."""
"MULE-8177","Bug","Modules: HTTP",3,"HttpListener ParameterMap should behave as a Map","""ParameterMap is a Map<String, String> and holds the values of query parameters, uri parameters and POST params.  The problem that currently have are:   - The parameter map is mutable when it should't   - It does not have an API in the interface that can be used by the user (there's an special method getAll used when a parameter returns a collection of values)   - it does not comply with the Map interface for Map<String, String> as it declares.    """
"MULE-8176","Task","Modules: HTTP|Transport: HTTP(S) / Jetty",5,"Deprecate HTTP transport","""Deprecate XML elements of the HTTP transport."""
"MULE-8199","Task","Build: Maven",8,"Remove Maven warnings","""We recently had an [issue|MULE-8113] with our Maven build, it wasn't including a dependency. When doing a little research I found that it was because a duplicated declaration of maven-jar-plugin. This root problem didn't appear when building the module, but when building an ancestor (distance 2). To avoid this kind of issues we must ensure that we don't have Maven warning in our builds."""
"MULE-8185","Enhancement Request","Modules: HTTP",3,"Change the AsyncCompletionHandler in the HTTP requester to use a static logger","""The AsyncCompletionHandler used by AHC in the HTTP requester uses a logger that is stored in an instance variable. Change it to use a class variable, to avoid loading the logger from the logger factory each time a request is sent (an AsyncCompletionHandler is created for each request)."""
"MULE-8184","Bug","Modules: HTTP",5,"HTTP Listener Server should return Method not supported","""When there's at least one HTTP listener for a uri but the listeners for that uri do not support a given method an status code  405 Method Not Allowed should be return. Currently it's returning 404."""
"MULE-8181","Bug","Modules: HTTP",8,"Problem sending outbound attachments in HTTP requester","""When sending a multipart request, the requester assumes that each part is a file, and adds the corresponding headers (filename attribute at the beginning of the part, transfer-encoding: binary, etc). This makes the request to be invalid in some cases. Use case to test: upload a file to Box.    Example test (replace the dev token and the parent folder id):        <http:request-config name=""""requestConfig"""" host=""""upload.box.com"""" port=""""443"""" protocol=""""HTTPS"""" responseTimeout=""""10000""""  />        <flow name=""""test"""">          <set-attachment attachmentName=""""attributes"""" value=""""{&quot;name&quot;:&quot;test.txt&quot;, &quot;parent&quot;:{&quot;id&quot;:&quot;12345678&quot;}}"""" contentType=""""application/json"""" />          <set-attachment attachmentName=""""test.txt"""" value=""""Test content"""" contentType=""""text/plain"""" />            <http:request config-ref=""""requestConfig"""" path=""""/api/2.0/files/content"""" method=""""POST"""" >              <http:request-builder>                  <http:header headerName=""""Authorization"""" value=""""Bearer xxxxxxxxxxxxx""""/>              </http:request-builder>          </http:request>      </flow>    The requester sends a multipart request with the following format.    POST /api/2.0/files/content HTTP/1.1  Host: localhost:8082  Authorization: Bearer xxxxxxxxxx  MULE_ENCODING: UTF-8  Connection: keep-alive  Accept: */*  User-Agent: NING/1.0  Content-Type: multipart/form-data; boundary=Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC  Content-Length: 463    --Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC  Content-Disposition: form-data; name=""""attributes""""; filename=""""attributes""""  Content-Type: application/json  Content-Transfer-Encoding: binary    {""""name"""":""""test.txt"""", """"parent"""":{""""id"""":""""12345678""""}}  --Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC  Content-Disposition: form-data; name=""""test.txt""""; filename=""""test.txt""""  Content-Type: text/plain  Content-Transfer-Encoding: binary    Test content  --Tdv259AB4D2JOrezEkOphg5Ikreks3mIO2jC--    The problem is the """"attributes"""" part, which is sent as a file part. It shouldn't contain the filename attribute, and the transfer encoding shouldn't be binary. Postman just sends the following, and it works correctly:    Content-Disposition: form-data; name=""""attributes""""    {""""name"""":""""test.txt"""", """"parent"""":{""""id"""":""""12345678""""}}  """
"MULE-8180","Bug","Batch|Modules: HTTP",5,"HTTP Listener fails during initialization inside batch","""When adding an http:listener inside the input of a batch job then the app fails during startup.    Seems that DefaultBatchEngine is asking for all the batch jobs during initialization, then the batch job manually executes initialize and injection over the input elements (http:listener) but at this point the HttpListenerConnectionManager has not bean registered (using registry bootstrap) so there's a null pointer during listener initialization. """
"MULE-8192","Bug","Core: Endpoints|Modules: WS Consumer",0,"Outbound endpoints should be correctly disposed when an app with shared resources is undeployed or redeployed.","""If an app references a shared HTTP connector and uses a WS Consumer that creates an outbound endpoint, that endpoint is not correctly disposed and when the app is redeployed the connector continues using the previously created endpoint (the one that was created by the disposed app)."""
"MULE-8189","Bug","Modules: HTTP",3,"Improve HTTP listener logging for usability","""Mule does not log to show what host/port/path Mule listening on.  This is important for understanding what might be going on when things aren't working as expected, and existed with the existing http transport.    Also, error/logs related to listeners not being available should take into account """"allowedMethods"""" otherwise errors like this which make no sense occur:      """
"MULE-8188","Bug","Modules: HTTP",3,"Mule starts when a request element has host/port undefined, only failing when request is used.","""This should fail at startup, not in runtime."""
"MULE-8197","Bug","Modules: HTTP",5,"Listener response streaming only returns part of body.","""If you edit this test case to use larger body sizes, then tests begin to fail:    org.mule.module.http.functional.listener.HttpListenerResponseStreamingTestCase"""
"MULE-8202","Bug","Modules: HTTP",5,"HTTP requester not adding the reason phrase in the response","""The HTTP requester is adding an inbound property with the status code of the response, but no property with the reason phrase. Currently there is no way of getting the reason phrase of the response, analyze if it makes sense to add another inbound property with the reason phrase.    The status code validator should also include the reason phrase when failing due to an invalid status code in the response. This is useful when consuming REST APIs that add information in the reason phrase of an error status code response."""
"MULE-8201","Bug","Modules: HTTP",3,"Exception in HTTP listener when path=""/"" and basePath=""/""","""When using an http:listener with path=""""/"""", and referencing a listener-config where basePath=""""/"""", then an ArrayIndexOutOfBounds exception is thrown when receiving a request."""
"MULE-8205","Bug","Modules: HTTP",8,"Listener should respect keep-alive with HTTP 1.0 and disable chunking.","""With HTTP 1.0 KeepAlive header, the http response from Mule returns """"Connection: Close"""" when streamingMode is ALWAYS or the payload is an InputStream.    I'm not 100% sure if HTTP 1.0 officially supports chunking, but I am sure that the keepAlive header should be respected an chunking shouldn't affect this."""
"MULE-8210","Enhancement Request","Extensions API",8,"Support parameter grouping in Configurations and Operations","""There are cases in which a group of parameters are frequently used together, for which it makes sense to treat them as a group.    The extensions api already supports mapping pojos directly in the XML, but in same cases which group is preferred as parameters rather than a top level object.    To enable that, the @Parameters operation will be created        The outcome of the code above is a configuration with two parameters called 'color' and 'mode', one required and the other optional.  The configuration has no attribute called options. If the Options class were to have another field also annotated with @Parameters, then such fields will be ignored.    In the same way, the annotation can be applied to a class holding operations:        In this case, both operations will have three parameters: message, color and mode.    The last use case for this annotation is to have nested parameter classes:      In this last example, the configuration/operation that is augmented with this extra parameters will have the sum of Options and MoreOptions parameters. Those parameters will be flattened, meaning that the model will contain no reference to the fact that the MoreOptions parameters were nested inside Options.    The field must be a Java bean property (ie it needs to have setters and getters matching the field name)."""
"MULE-8209","Bug","Build: Integration Tests|Build: Maven",3,"Mule Integration QA build is failing because of wrong sxc dependency version","""tests/integration module is failing because is trying to retrieve sxc version, which is not needed."""
"MULE-8206","Bug","Modules: HTTP",5,"Inconsistent implementation of streamingMode=""NEVER"" between listener and requestor.","""There are a number of cases tested in HttpListenerResponseStreamingTestCase where even when responseStreamingMode=""""NEVER"""" chunking is still used.    In my mind it should be the """"AUTO"""" mode that decided if it should use chunking based on i) payload type ii) presence of headers.  If there is a mode called """"NEVER"""", it should never do chunking otherwise this is confusing/misleading.    On the other hand, <request> currently throws an exception in this scenario.    Update behaviuor so that in both cases:    AUTO:    - Chunking if payload is InputStream and no Content-Length header present.     - Else delete transfer-encoding header if present and log.    ALWAYS:  - Delete content-length header and log.    NEVER:  - Delete transfer-encoding header and log.            """
"MULE-8212","Enhancement Request","Extensions API",1,"Cleanup the @Operation annotation parameters","""The @Operation parameter takes a name argument. That should be remove since directly contradicts the consistency that the API tries to enforce    The annotation also contains an """"acceptedPayloadTypes"""" which is no longer used. That should be cleaned up"""
"MULE-8216","Enhancement Request","Modules: (other)",0,"Implement a validations extensions","""Implement a validations extensions following the spec defined in MULE-8216"""
"MULE-8215","Task","Modules: (other)",8,"Write spec for validations extension","""Write and validate a Spec for a new extension module for validation purposes."""
"MULE-8220","Bug","Build: Maven",3,"Build number Maven plugin should be activated always","""We are currently executing maven-build-number-plugin only in release profile, this should be ran for all profiles."""
"MULE-8229","Bug","Core: Domains shared resources|Core: Properties",5,"Fail to expand properties when using property placeholder shared in a domain","""Steps:    # Deploy the below application and domain  # Put domain.properties in domain root dir  # bin/mule    * Expected: Mule starts and flow listens on 127.0.0.1:8811/in1 and 127.0.0.1:8811/in2  * Actual: Mule fails to start because $[http.port] is an invalid value for port  * Note: I put domain.properties file in domain root directory because in domain/classes it is not found  """
"MULE-8232","Bug","Core: (other)",1,"Core extension dependencies are not initialized in order","""Core extensions are initialized using the discorevy order instead of the order determined after resolving the dependencies.  """
"MULE-8231","Bug","Transport: FTP / SFTP",0,"SftpMessageReceiver doesn't release the lock on files","""SftpMessageReceiver doesn't release the lock on files."""
"MULE-8233","Task","Build: Integration Tests",3,"Move tests/functional tests to tests/integration","""tests/functional should be only for test harness"""
"MULE-8242","Task","Extensions API",1,"Rename extensions -> extension in java package name","""Also ExtensionManager is better than ExtensionsManager in english IMO."""
"MULE-8241","Enhancement Request","Extensions API",5,"Allow restriction on which types of operations can be nested","""Currently, the ext-api supports nested operations through the use of arguments of type NestedProcessor. However, the generated schema allows any type of message processor to be nested.    There're cases in which it's necessary to limit that to specific groups. For those cases, a new annotation is created: @RestrictedTo(type=XX.class)    The type used in that annotation has to be annotated with @Extensible. By doing that, the SchemaGEnerator will generate a specific named group for that extensible type and only items on that group will be allowed as nested for that operation"""
"MULE-8240","Enhancement Request","Extensions API",3,"Allow extension components to extend existing functionality","""There're cases in which an operation implemented through the ext-api should be part of an specific substitution group. Because substitution groups are an XSD specific concept and because the same concept might be necessary in other DSL types, we need a mechanism to denote extensibility that goes beyond Java's """"extends"""" and """"implements"""" keywords but is still type related.    For that purpose, two new annotations are created:    @Extensible: means that a given type is extensible by another extension. It doesn't mean type subclassing, but extension from a functionality point of view. This annotation has an optional String alias() attribute to allow a better experience when generating XSD    @ImplementationOf(type=XX.class): This annotation can be used on a class or method implementing operations. It means that the affected operations are to be part of a substitution group defined by an extensible type. The type argument in this annotation is mandatory and has to be a type that is annotated with @Extensible"""
"MULE-8239","Bug","Build: JDK Compatibility",1,"Supported and recommended JRE version should be at least 1.7.0_60","""In MULE-6866 we upgraded to Groovy 2.3.7-indy but according to [Groovy docs|http://groovy.codehaus.org/InvokeDynamic+support] there are known issues with Java versions lower than 7u60. We should increase supported and recommended versions to 1.7.0_60"""
"MULE-8247","Bug","Transport: FTP / SFTP",0,"SFTP inbound-endpoint autoDelete=""false"" does not work","""The connector's autoDelete value is the only one taken into account, so it can't be overridden and it's default value is """"true"""". This means as a workaround you can set the connector's value to """"false"""" but then that would be the case for all endpoints."""
"MULE-8261","Bug","Transport: JMS",0,"Avoid to set the same message listener on the message consumer ","""Some JMS MessageConsumer doesn't allow to set the MessageListener once their are started (for example the one from Qpid). That causes the JMS connector to nor reconnect properly."""
"MULE-8257","Bug","Core: Sessions",13,"The changes in MULE-7742 impacted in performance, a better solution should be used.","""Review that changes in MULE-7742 and the previous changes proposed by Victor Romero."""
"MULE-8267","Bug","Modules: HTTP",8,"Mule 3.6 HTTPS Request Connector does not validate certificate presented by remote server","""The server SSL certificate is not validated by requestor at all."""
"MULE-8265","Enhancement Request","Modules: HTTP",8,"Test support for TLS SNI Extension in Http Module Requester","""Currently not supported.    Also review listener support."""
"MULE-8264","Enhancement Request","Transport: HTTP(S) / Jetty",5,"Support TLS SNI Extension in Http OutboundEndpoint","""Java does not send SNI because of the the socket is created.    While Java 7 supports the SNI extension with TLS it only uses it if the hostname is specified when the Socket is created rather than a InetAddress (it doesn't get hostName from InetAddress)."""
"MULE-8263","Bug","Core: Logging",0,"Mule global log config is not found when application has plugins","""If an application uses plugins, then the MULE_HOME/conf/log4j2.xml file is not found.     This is because when the application has plugins, then the parent classloader is a PluginClassLoader which is unable to locale resources at MULE_HOME/conf.    The LoggerContext selector should default to the file is for whatever reason the classloader is unable to find that resource."""
"MULE-8270","Bug","Modules: HTTP",8,"HttpRequester not configuring TLS cipher suites and protocols","""The HTTP requester from the new module is not configuring restricted protocols and cipher suites for TLS."""
"MULE-8273","Task","Modules: HTTP",5,"Document new HTTP Connector","""Add documentation for HTTP Connector"""
"MULE-8278","Bug","Modules: HTTP",8,"HTTP Listener does not handle ""Expect: 100-Continue"" (RFC 2616) header correctly","""This can cause depending the scenario:  1) 1s latency overhead  2) Requests to hang  """
"MULE-8277","Bug","Core: (other)",1,"OAuth2 postAuthorize() with an expired token fails even if token was refreshed","""The Box connector has a postAuthorize method that invokes one of the connector's processors.  When one of the connector's processors is invoked and the postAuthorize is called with an expired access token, the BaseOAuth2Manager is able to refresh the access token but re-throws the token expired exception which makes processor invocation fail.    I believe the issue can be found in the following method:  org.mule.security.oauth.BaseOAuth2Manager.postAuth(OAuth2Adapter, String)  """
"MULE-8284","Bug","Modules: HTTP",5,"Http Listener allows inexistent keystore","""When I create an https listener Mule validates that the trustsore file exists but it doesn't validate that the keystore file exists. Try with the attached config.   Create the truststore like this:    keytool -genkey -alias mule -keyalg RSA -keystore keystore.jks -dname """"CN=Mule, OU=Engineering, O=MuleSoft, L=BA, ST=BA, C=AR"""""""
"MULE-8282","Bug","Modules: HTTP",5,"401 response received, but no WWW-authenticate header was present","""I've been searching and and tinkering since last week to figure out what is wrong with this, but no matter how I tried it still gives me this error in the console.    I'm testing the http connector (3.6 EE) against twitter ReST API vs testing with Chrome's POSTMAN Rest client.    With the POSTMAN client, it is working fine when POSTing status update. However with Mule it fails and gives me the error mentioned. I even added """"WWW-Authenticate"""" (replaced """"Authorization"""") before the call to http connector itself, and tried with adding it to header as well, still everything fails.    Note: For the get timeline it is working both on Postman rest client and http connector, but when I tried on POSTing to status/update.json, Postman is successful, while Anypoint http connector fails.  """
"MULE-8486","Enhancement Request","Modules: HTTP",3,"Allow to set certificate alias in keystore configuration","""When multiple certificates are installed in the keystore file, we need to provide a mechanism to pick one in the tls context element.    How this is done can be review but most likely is using the certificate alias. So an alias optional attribute must be used in the keystore element.    When there are multiple certificates and alias is not defined we should define hich on we should pick."""
"MULE-8290","Enhancement Request","Modules: HTTP",5,"HTTP static resource component fails with HTTP listener","""The HTTP static resource component fails with the new HTTP listener component because it doesn't extract correctly the listener path to define the resource to return."""
"MULE-8288","Bug","Modules: HTTP",1,"Disable SSLv3 by default on FIPS 140-2 scenario","""The file tls-fips140-2.conf doesn't restrict enabled protocols by default.  When enabling FIPS 140-2 on wrapper.conf, SSLv3 gets enabled by default."""
"MULE-8287","Enhancement Request","Modules: HTTP",5,"Allow cipher suite and protocol configuration per connector","""TLS cipher suite configuration is done through conf/tls-default.conf for all the Mule Server. We need a way to allow per connector configuration.    Use cases:  - Connect to a legacy API uses a vulnerable cipher suite for which the vulnerability has been mitigated, but I don't want to allow that cipher suite for other consumed APIs.  - Because of internal security policy I need to use a particular set of cipher suites to publish an API but I need to consume an external API wich uses a different cipher suites not allowed internally."""
"MULE-8291","Enhancement Request","Modules: HTTP",5,"Client credentials does not fail if it could not retrieve access token","""When using client credentials, start up of the application does not fail if mule was not able to retrieve an access token.    Additionally some logging information must be added for troubleshooting."""
"MULE-8295","Bug","Modules: HTTP",8,"Upgrade to grizzly 2.3.19","""See fixes includes multiple bug fixes plus two improvments I requested:    1) SNI Support out of the box with SSLFilter. https://java.net/jira/browse/GRIZZLY-1737  2) Mechanism to limit size of send queue and this direct memory use. https://java.net/jira/browse/GRIZZLY-1730"""
"MULE-8301","Task","Documentation / Website",5,"Upload 3.6.0 javadocs","""Upload javadocs to: https://www.mulesoft.org/docs/site/3.6.0/apidocs"""
"MULE-8306","Bug","Build: (other)",0,"DB Drivers should be removed from DriverManager when MuleApplicationClassLoader is disposed.","""Our modules and other libraries could load DB drivers from the Mule App class loader, those drivers should be deregistered when that class loader is disposed because if not they remain unreachable producing memory leaks."""
"MULE-8304","Bug","Modules: HTTP",5,"It is not possible to define more than one keystore/truststore","""The TLS contexts introduced in 3.6 interfere with each other. Reproduce with the following scenario, where there are two flows that consume an HTTPS service, one with the server certificate in the truststore, and the other one without it. The first flow should work but the second one should fail. Currently, they both work correctly.        <http:request-config name=""""validCertHttpConfig"""" protocol=""""HTTPS"""" host=""""localhost"""" port=""""${httpsPort}"""">          <tls:context>              <tls:trust-store path=""""trustStore"""" password=""""mulepassword"""" />          </tls:context>      </http:request-config>        <flow name=""""validCertFlow"""">          <http:request config-ref=""""validCertHttpConfig"""" path=""""requestPath"""" method=""""POST"""" />      </flow>          <http:request-config name=""""missingCertHttpConfig"""" protocol=""""HTTPS"""" host=""""localhost"""" port=""""${httpsPort}"""" >         <!-- No certificate has been configured to test certificate verification -->      </http:request-config>        <flow name=""""missingCertFlow"""">          <http:request config-ref=""""missingCertHttpConfig"""" path=""""requestPath"""" method=""""POST"""" />      </flow>"""
"MULE-8307","Bug","Modules: HTTP",13,"HTTP requester throws timeout errors with POST request","""Appears to be related to the """"Expect: 100 continue"""" header with Grizzly, that is found in HTTP/1.1 POST request.  The bug reproduces in ESB 3.6 and 3.6.1, also GW 1.4.    attached is the jmx file, using this proxy app for ESB (no Gateway tags).  https://github.com/mulesoft/performanceworks/blob/master/APPS/PROXY-MCD/100B/http_module_proxy/proxy.xml    If you change the method to GET instead of POST, you will not get the error.    You should be able reproduce it easily.    Wai    ERROR 2015-02-11 00:29:48,112 [[PabloTestAPI_NewHTTP].proxyConfig.worker.09] org.mule.exception.DefaultMessagingExceptionStrategy:     ********************************************************************************    Message               : Error sending HTTP request. Message payload is of type: BufferInputStream    Code                  : MULE_ERROR-29999    --------------------------------------------------------------------------------    Exception stack is:    1. null (java.util.concurrent.TimeoutException)      org.glassfish.grizzly.impl.SafeFutureImpl$Sync:357 (null)    2. Error sending HTTP request. Message payload is of type: BufferInputStream (org.mule.api.MessagingException)      org.mule.module.http.internal.request.DefaultHttpRequester:190 (http://www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/MessagingException.html)    --------------------------------------------------------------------------------    Root Exception stack trace:    java.util.concurrent.TimeoutException            at org.glassfish.grizzly.impl.SafeFutureImpl$Sync.innerGet(SafeFutureImpl.java:357)            at org.glassfish.grizzly.impl.SafeFutureImpl.get(SafeFutureImpl.java:264)            at com.ning.http.client.providers.grizzly.GrizzlyResponseFuture.get(GrizzlyResponseFuture.java:173)        + 3 more (set debug level logging or '-Dmule.verbose.exceptions=true' for everything)    ********************************************************************************"""
"MULE-8311","Bug","Modules: WS Consumer",0,"Schema locations for includes are not being fixed.","""When a WSDL file includes types from another file, the schema location is not fixed to a proper URI. This prevents the metadata from being generated and the check for input parameters to be done, so the payload is used as SOAP body and operations without parameters fail."""
"MULE-8318","Bug","Modules: WS Consumer",5,"WS consumer not evaluating flow vars in the serviceAddress when used with the new HTTP connector","""WS consumer allows MEL expressions in the serviceAddress property. Since 3.6, when the new HTTP connector is used by default, flowVars are not recognized in MEL expressions in the serviceAddress. The only variables that work are properties related to the Mule message. With the HTTP transport it works OK.  This is because the outbound call uses muleClient to use the HTTP requestor, and the MuleEvent that carries the flowVars is lost.  To reproduce, modify DynamicAddressFunctionalTestCase to use a flow var instead of an inbound property."""
"MULE-8312","Bug","Modules: HTTP",5,"HTTP requester always add a / at the beginning of the request URI","""An http requester with this config http:request path=""""something"""" should generate a request with uri something but it's generating /something instead."""
"MULE-8326","Task","Core: Lifecycle|Core: Registry",8,"write a spec on new lifecycle and registry consolidation","""Write and circulate a spec on MULE-7588"""
"MULE-8325","Bug","Core: Lifecycle|Core: Registry|Extensions API",5,"Review and merge MULE-7588","""Review and merge MULE-7588"""
"MULE-8331","Enhancement Request","Core: Containers",8,"Application Plugins (Cloud Connectors) support for external dependencies","""As a user I will like to use a connector such as Siebel, packaged as a plugin deployed in the plugins folder and be able to use external dependencies that cannot be shipped inside the connector."""
"MULE-8328","Enhancement Request","Modules: HTTP",5,"HTTP delete body is not allowed","""I am not able to call HTTP delete verb from mule HTTP connector with body .   """
"MULE-8338","Bug","Modules: HTTP",1,"HTTP listener fails when receiving empty request with content type x-www-form-urlencoded","""When a POST request with content type application/x-www-form-urlencoded and empty body is sent to an http:listener, a 500 response is received and the flow is not executed. This happens because of a ClassCastException inside the listener. The flow should be executed, with NullPayload in the Mule message."""
"MULE-8341","Bug","Core: Domains shared resources",5,"Domain redeployment fails with zip file closed","""When doing a redeploy of a domain it fails with zip file closed when trying to reload some classes."""
"MULE-8342","Bug","Modules: HTTP",0,"NPE when Content-Disposition header is absent from multipart-response","""NPEs are being reported ( http://stackoverflow.com/q/28733880/387927 ) when the {{Content-Disposition}} header is not present in HTTP multi-part responses. Using this header is optional, it can't be assumed present.    The crux of the problem is here: https://github.com/mulesoft/mule/blob/mule-3.x/modules/http/src/main/java/org/mule/module/http/internal/HttpParser.java#L94        If the header is missing, {{[0]}} is called on {{null}}."""
"MULE-8343","Task","Documentation / Website",5,"Review and update classloading documentation","""Documentation of mule classloading at http://www.mulesoft.org/documentation/display/current/Classloader+Control+in+Mule is not accurate and is out of date.  There are missing things like application plugins, new domain classloading, etc"""
"MULE-8346","Bug","Modules: HTTP",8,"HTTP Request returns 401 when given correct authentication","""A prospect has not been able to connect to a web service hosted in IIS using Digest auth in the HTTP listener.  They could connect using a java class with same credentials.    none of the following combination worked as username in the HTTP connector: {realm\username, realm\\username, username:realm.    Here is the webservice I used to reproduce the error:  http://httpbin.org/digest-auth/auth/user/passwd  Credentials {username=user, password=passwd}  If needed: port=80; realm=me@kennethreitz.com    Returned is 401: unauthorized"""
"MULE-8350","Bug","Modules: CXF",8,"After upgrade CXF to 2.7.15 some jaxws-client configurations fail when using a proxy.","""When the service method receives a Holder OUT parameter and then a String, the string value is not received by the server.  If the method returns void, then the value placed in the OUT parameter does not arrive the to client.    See org.mule.module.cxf.HolderTestCase, method testClientProxyEcho3Holder."""
"MULE-8353","Bug","Core: Logging",1,"README.txt in <MULE_HOME>/logs is outdated","""The README.txt has not been updated to reflect the changes derived from the implementation of log4j 2."""
"MULE-8356","Bug","Modules: HTTP",5,"Source attribute in http requester not working when payload is null","""When the """"source"""" attribute is specified in an http:request element, it is ignored when the payload of the Mule message is NullPayload.    Example:        <http:request-config name=""""config"""" host=""""localhost"""" port=""""${httpPort}"""" />      <http:listener-config name=""""listenerConfig"""" host=""""localhost"""" port=""""1234"""" />        <flow name=""""formParam"""">          <http:listener config-ref=""""listenerConfig"""" path=""""/*"""" allowedMethods=""""GET,POST"""" />          <set-variable variableName=""""httpBody"""" value=""""#[{'testName1':'testValue1', 'testName2':'testValue2'}]"""" />          <!--              With this line uncommented, the map is sent. If not, the POST request has no body even if the source attribute contains a map.              <set-payload value=""""test"""" />            -->          <http:request config-ref=""""config"""" path=""""testPath"""" method=""""POST"""" source=""""#[flowVars.httpBody]"""" />      </flow>"""
"MULE-8364","Bug","Core: (other)",1,"Update commons-io in mule-commons to match the one used in mule","""In mule-common the commons-io version is 1.4:      While mule is declaring the version to 2.4:      This happens both in 3.6.x and master branches."""
"MULE-8367","Enhancement Request","Modules: HTTP",0,"Add http.relative.path to the list of inboundProperties in the new http module","""Add http.relative.path property to inboundProperties. This property should be the result of removing the basePath part of the request path."""
"MULE-8377","Bug","Core: (other)",0,"Minor fixes for support Java 8.","""Required fixes to run our tests with Java 8."""
"MULE-8386","Enhancement Request","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",8,"Add support for PGP signature verification","""The PGP module is able to decrypt signed messages, but is not performing any verification on the signature. Add support to verify PGP signatures, and also consider that the key used to sign might not match the key used to encrypt."""
"MULE-8384","Bug","Core: Routing / Filters",0,"Session vars ""lost"" in foreach that uses outbound endpoint","""After a foreach that calls an outbound endpoint and modifies a session property, the modification can only be seen in the event's session but not the event's message session properties unless a new event is generated."""
"MULE-8382","Bug","Core: (other)",2,"Can't uncompress zip files containing no entries for folders","""Mule requires ZIP files that contain entries for folders and files like this:  x/lib  x/lib/a.jar  x/lib/b.jar    When the zip file contains only entries for files lie this:  x/lib/a.jar  x/lib/b.jar    The file cannot be processed correctly."""
"MULE-8400","Bug","Build: Maven",0,"mule-esb-maven-tools pom.xml dependes on mule-artifact-archiver with wrong version","""mule-esb-maven-tools pom.xml dependes on mule-artifact-archiver version 1.0-SNAPSHOT but should be 1.1-SNAPSHOT.  Also, remember that this version should be changed to 1.1 on release time."""
"MULE-8408","Bug","Core: Routing / Filters",5,"Collection splitter is not setting the group size when payload is an Iterator","""Salesforce queries return an iterator and when a collection splitter is used, it fails to aggregate the collection after because the group size is set to -1.  Attached mule config    This seems to be happening because this class https://github.com/mulesoft/mule/blob/bfb3a17263d1e4b32ee10272cbf710a2bf41b16b/core/src/main/java/org/mule/routing/outbound/IteratorMessageSequence.java is used from https://github.com/mulesoft/mule/blob/1dbf6e09a651184e9c54ec8988ecf1907cbdd58f/core/src/main/java/org/mule/util/collection/EventToMessageSequenceSplittingStrategy.java and it is setting UNKNOWN_SIZE as Group size for all Iterator payloads"""
"MULE-8407","Task","Build: Distributions",8,"Backport MULE-8315 and MULE-7789 to all maintenenance branches","""As part of the library updates related to security vulnerabilities, there is a couple of changes that must be backported to 3.5.x, 3.4.x, 3.3.x, 3.2.x and 3.1.x:    MULE-7789: needed to remove the usage of tomcat-util artifact (this one is already included in 3.5.x branch)  MULE-8315: needed to upgrade tomcat libraries to a newer version"""
"MULE-8405","Bug","Transport: HTTP(S) / Jetty",0,"Unable to use a keystore with $ in its path","""In IOUtils, method getResourceAsStream tries to parse the resource name and assumes it's a placeholder if $ is found, which causes an exception to be raised since it is not."""
"MULE-8416","Bug","Core: Deployment|Core: Domains shared resources",5,"Domains are not well disposed and get reused on redeploy.","""Domains are cached on creation but they are not correctly removed on dispose so on redeployments they get reused."""
"MULE-8415","Bug","Core: Registry",5,"Add a backwards compatiblity setting to support Devkit artifacts which violate JSR-330","""Per the work done on MULE-7588, Mule now supports the JSR-330 spec. However, as DEVKIT-1539 explains, Devkit is currently violating that spec.    Devkit will fix this for the latest version but we need to add a compatibility setting to allow artifacts generated with older versions of devkit to function. This will work by customizing the injecting post processor to detectinstances which instances are devkit generated and skip dependency injection on them """
"MULE-8412","Enhancement Request","Extensions API",8,"Reuse OperationImplementation instances instead of creating and injecting new ones each time","""Currently the ext-api is creating a new instance of the operation implementation for each event. That is very confortable for the user, but it has performance considerations associated to garbage collection and the new to perform dependency injection all the time.     We need to move to a schema in which:     * One instance is created per configuration and reused as long as that configuration lives  * The Class holding the method annotated with @Operation needs to have a constructor which receives a single argument which is the configuration to use. Failure to provide such a constructor which result in the application not starting  * Upon creation, Mule will inject dependencies on this class but will not add it to the registry  * This also means that it will no longer be valid to obtain things like the MuleEvent through a @Inject annotation, you have to receive it a method argument, which means that the invoker needs a refresh too"""
"MULE-8411","Bug","Modules: XML, XSLT, XPath, SXC",3,"XmlToXMLStreamReader does not support OutputHandler as source type","""XmlToXMLStreamReader declares OutputHandler as source type (in its superclass) but fails to convert that type."""
"MULE-8410","Enhancement Request","Extensions API",8,"Leverage MULE-7588 in extensions api","""Leverage the work done in MULE-7588 to implement a corrected lifecycle and dependency injection in the extensions api"""
"MULE-8423","Task","Core: (other)",5,"Create MEL version for each validator in the validations module","""Create MEL version for each validator in the validations module"""
"MULE-8422","Task","Core: (other)",8,"Implement Validations XML components","""Implement Validations XML components"""
"MULE-8421","Enhancement Request","Core: Transformers",8,"Improve MuleMessage's data type consistency","""DefaultMuleMessage's datatype is not being properly updated and maintained.  For example:  _DefaultMuleMessage#setEncoding does not update dataType's encoding  _DefaultMuleMessage#setMimeType does not update dataType's mimeType  _DefaultMuleMessage#setPayload does not update dataType's type  _DefaultMuleMessage#setProperty is not update dataType when a encoding property is set on the message    Improving data type consistency and propagation is required to better support auto transformations and mapping tools"""
"MULE-8435","Task","Extensions API",5,"Check if Ext-api jars are Maven Central compliant","""Perform that verifyication on the mule-extensions-api and mule-extensions-api-annotations projects"""
"MULE-8442","Bug","Core: Lifecycle",1,"app.home property is no longer available","""When an application is deployed, the Spring configuration builder is running before the SimpleConfigurationBuilder making some properties like app.home not available to the mule config"""
"MULE-8441","Enhancement Request","Core: Deployment",5,"Add a way to inject all available core extensions in a core extension","""Mule core extensions can have dependencies against other core extensions, but these dependencies are fixed on compile time (dependencies are defined using MuleCoreExtensionDependency method annotation).  In order to properly support some management scenarios, we need to provide a way to let a core extension to receive all the available core extensions.    Given the constraints on lifecycle imposed by the MuleCoreExtensionDependency dependencies, a core extension that receives all the available core extensions cannot contain any methods annotated with it."""
"MULE-8447","Bug","Extensions API",1,"extension API should consistently always inject values through fields instead of setters","""Right now, when the ext-api creates an object uses setters to inject values parsed from XML, while in some other scenarios like when resolving expressions it uses fields. That leads to some inconsistency plus the setter injection limits the ability to encapsulate the internal representation of some object's state.    Always use fields to inject values."""
"MULE-8450","Enhancement Request","Extensions API",1,"add the concept of parameter alias in the ext-api annotations","""When using the ext-api through annotations, there're limitations on the possible names that parameters can take because of the java language reserved words. For example, an attribute cannot be named class. Another problem is when from a coding point of view, an attribute should have one name which isn't so representative when seen from an extension's parameter point of view.    Because of that, we need the ability to add an alias attribute to the @Parameter annotation."""
"MULE-8448","Bug","Extensions API",1,"ExtensionResourcesGeneratorAnnotationProcessor is not been fired","""ExtensionResourcesGeneratorAnnotationProcessor is not been fired because the full classname of @Extension has changed and the refactor didn't modified this file. This is because of a java language limitation which doesn't allow a .class.getName() kind of reference there.    As a result, xsd is not generated when building a extension"""
"MULE-8453","Enhancement Request","Core: Properties",5,"Add data type to message properties","""MuleMessage properties have no information about the type of the value they are holding.  Providing a way to maintain this information will help to support more transformation scenarios and will improve usability in Studio"""
"MULE-8452","Enhancement Request","Extensions API",1,"Introduce type level aliases for extensions API","""When the XML support for the ext-api maps a java complex type as a top level element (usually the case when defining global pojos), there's the need to provide an alias so that the global element can have a name which is not directly tied to the Java type name."""
"MULE-8467","Bug","Extensions API",1,"ArgumentTypeMismatch when many nested operations are supported but only one is provided","""The ext-api supports defining operations which can take one nested Operation or a list of them.    When the operation supports many but only one is provided, the ResolverSetResult doesn't contain a list of one NestedOperation but a single one, which results on an ArgumentTypeMismatch."""
"MULE-8466","Bug","Extensions API",1,"Generated XSD defines restriction groups by extension","""When an operation takes NestedProcessors as an argument, the @RestrictedTo annotation can be used to limit the acceptable message processors to a given substitution group.    However, what the XSD generator is doing is to create a group which lists all of the operations in the given restriction type. Because that group is fixed, it doesn't allow to externally contribute more elements with the same substitution group.     What the generator should do is to define a group which has a reference to the substitutionGroup and thus allowing variable elements which meet the restriction"""
"MULE-8465","Enhancement Request","Core: Transformers",8,"Improve set properties transformers to set property datatype","""Mule message properties now contain a datatype. All the transformers that set properties in a message/session should provide a way to configure the datatype and update that datatype in the property accordingly."""
"MULE-8459","Task","Modules: HTTP",5,"Implement NTLM authentication for the HTTP Requester","""Once AHC is upgraded to 1.9.18 we should be able to add support for NTLM."""
"MULE-8458","Task","Modules: HTTP",13,"Upgrade async-http-client to 1.9.19.","""We need to upgrade to version 1.9.18 in order to support NTLM.  Here's AHC's migration guide:  https://github.com/AsyncHttpClient/async-http-client/blob/master/MIGRATION.md  There could also be some issues with missing multipart classes."""
"MULE-8457","Enhancement Request","Core: Transformers",5,"Replace SetPayloadTransformer with a plain message processor","""SetPayloadTransfomer is the implementation behind set-payload element.  As the name implies, is a Transformer and is executed invoking muleMessage transformation capabilities.  Problem with this transformer is that it returns only a value and in order to properly propagated message's dataType, it must set the correct dataType (the one configured by the user).  Besides that, transfomer's source/target dataType is not valid on this particular case, because the datatpye is dynamic (assigned value can be resolved from an expression). So dataType can't be statically defined."""
"MULE-8468","Enhancement Request","Core: Properties",2,"Improve data type propagation for properties","""Work done on MULE-8453 did not include updating some property setter methods to include datatype."""
"MULE-8469","Bug","Core: Transformers",3,"Message transformation must no update payloads data type when payload was not transformed","""DefaulMuleMessage#transformMessage(MuleEvent, Transformer) always updates the message data type to the transformer output data type.  That is wrong because some transformers update parts of the message other than the payload. (like message properties)  Probably those transformers should be plain message processors, but a way to fix this problem is to check that payload has changed after the transformation."""
"MULE-8480","Enhancement Request","Extensions API",1,"Consider renaming @ImplementationOf to @ExtensionOf","""Consider renaming @ImplementationOf to @ExtensionOf since it's clearer for some persons"""
"MULE-8479","Enhancement Request","Extensions API",5,"Operations of an Extensible extensions should not require to be annotated with @ImplementationOf","""Extensions can be annotated with @Extensible to signal that external modules can extend them further. Right now, it's required for the classes in which such extensions are implemented to be annotated with @ImplementationOf.     However, that's redundant since a given extension operations are by very definition extending it. Such annotation should only appear on third party extensions which are in fact extending it."""
"MULE-8478","Enhancement Request","Extensions API",5,"It should not be mandatory for a class annotated with @Operation to depend on the config object","""Right now, when a class contains methods annotated with @Operation, then it is demanded that a single constructor is available to create the instance and pass the configuration instance over.    However, not in all cases the operations in a class require of the configuration. The behaviour should be that if such constructor exists then it's used. If it doesn't, then a default constructor is used to create a config-less operation instance.    Only if no constructor is found which matches both criterias should an exception be thrown."""
"MULE-8477","Enhancement Request","Extensions API",5,"Validate that Pojo attributes are not composites","""When a pojo is used as a parameter in an Extension, XSD support is generated to allow users define the instance on the XML.    However, this won't work if the object is a composite. The composite fields should be skipped when generating the XSD support."""
"MULE-8476","Enhancement Request","Extensions API",8,"Spike on on inferring extension version from project version","""Currently, the @Extension annotation includes a version attribute which is used to specify an extension version.    However, it's undesirable to have the need to upgrade the version of every extension each time that a new version is released.    A mechanism should be defined for the extension version to be automatically inferred from the underlying ${project.version}. There should still be a way to fix the extension version arbitrarily"""
"MULE-8475","Enhancement Request","Extensions API",5,"Implement a solution to automatically infer supported schema versions for XML compatible extensions","""Right now, when an extension is to have XML support, the @Xml annotation includes a """"schemaVersion"""" attribute.    That is not a scalable solution because assuming that an extension is released in version 3.7, then its spring bundle should support schemas 3.7, 3.8, 3.9 and so forth, and it's very undesirable for a developer to traverse through all the extensions modifying that.     We need a solution in which given an """"inception version"""" version, the current schema version is inferred and the prior ones back to the inception version are also included in the spring bundle. """
"MULE-8474","Enhancement Request","Extensions API",1,"remove the ""repackaged"" package from extension-support module","""Because ext-api development started when mule was using Spring 3.x, a Spring 4.x package was embedded into our code.    Now that Spring was upgraded to the lastest version, that repackage should be remove in favor of the original classes in the spring jar"""
"MULE-8473","Enhancement Request","Extensions API",8,"Configs should be optional when using Ext-api operations in a flow","""Right now, every MP which executes an extension operation is required to provide a config. This is not good from a usability standpoint so the desired behaviour is:    * If a config is specified through the config-ref attribute, then use it  * If no config is specified but there's one configured, then locate it and use it  * If no config is specified nor defined, then depending on the extension an implicit one can be created. An implicit configuration is created by simply instantiating the default config. Configs should be marked as not supporting implicit creation through some annotation/annotation attribute"""
"MULE-8472","Task","Build: Maven",0,"Fix maven-processor-plugin version in extensions pom","""Version of maven-processor-plugin is not specified in extensions pom.xml.  Because of that, the latest available version is used (3.1.0-beta1).  Using that version causes compilation failures apparently in some machines (apparently when maven version > 3.0.x)  Fixing version to 2.2.4 fixes the problem"""
"MULE-8471","Bug","Core: Transports",0,"Race condition on <reconnect-forever> and deployment lifecycle","""When using a reconnect-forever for a transport connector, the connection logic runs in a different thread. Thus, when the components are being started and receivers are added that need to connect themselves there can be a race condition between the registration of a receiver (where it is connected only if the connector itself is connected) and the connector's connection logic (where the existing receivers are connected). When it occurs the connector's connection logic finds there are no receivers to be connected and the receiver registration finds the connector is not connected, so that receiver is never connected. """
"MULE-8482","Enhancement Request","Modules: HTTP",8,"Provide a builder for HttpRequesterConfig interface","""Despite the normal use case for initializing a HttpRequesterConfig is from the definition parser, for a specific DevKit's story [DEVKIT-1527|https://www.mulesoft.org/jira/browse/DEVKIT-1527] we need to feed the WsConsumerConfig with an already initialized instance of *DefaultHttpRequersterConfig*.    Before this jira, ideally, [MULE-8481|https://www.mulesoft.org/jira/browse/MULE-8481] should be tackled down to make WsConsumerConfig consume the HttpRequesterConfig interface, so that from a DevKit's POV initializing objects and passing through the WsConsumerConfig will work properly."""
"MULE-8481","Enhancement Request","Modules: WS Consumer",3,"WSConsumerConfig should use the HttpRequesterConfig interface rather than the internal implementation","""The *connectirConfig* field of the class org.mule.module.ws.consumer.WSConsumerConfig can be configured by passing an initialized instance of a *DefaultHttpRequesterConfig* when it should be using the interface of the the previous one: *HttpRequesterConfig*.    This small chance will unblock the DevKit's story [DEVKIT-1527|https://www.mulesoft.org/jira/browse/DEVKIT-1527] providing an automated way of instantiating WSC manually when initializing a HttpRequesterConfig by hand."""
"MULE-8485","Task","Extensions API",1,"rename the artifact mule-extension-validations to mule-module-validation","""We finally decided to not reflect the difference between a craft module and an ext-api based one on the artifact name since from a user's point of view there shouldn't be a difference"""
"MULE-8484","Bug","Core: Deployment|Core: Logging",1,"Succesful undeployment is not show in console","""# Download 3.7.0-M2-SNAPSHOT  # Copy any Mule app to apps directory  # Start server  # Delete default-anchor.txt    Undeployment request is logged and is done but concole never shows that now there is only one app deployed and that default app was undeployed successfully."""
"MULE-8483","Bug","Core: (other)",5,"Update message data type when Content-Type property changes","""When Content-Type property is set on a message, then payload's data type must be updated to reflect the new value."""
"MULE-8503","Bug","Extensions API",1,"Remove the ""extension"" prefix from the generated XSD file name","""Since per MULE-8485 we decided that extensions should not have any naming differentiator, the %s-extension-%s pattern which is now used to name generated XSD needs to change to be source agnostic."""
"MULE-8501","Bug","Extensions API",1,"ExtensionManagerConfigurationBuilder not invoked when Mule starts in standalone mode","""When starting in standalone mode, the ExtensionManagerConfigurationBuilder is not been invoked and thus applications fail to deploy if they contain any extensions"""
"MULE-8498","Enhancement Request","Core: Transformers",3,"Message transformation must maintain original mimeType and encoding when transformer does not provide them","""When a transfomer is applyed on a DefaultMuleMessage and changes its payload, then the transformer's output datatype is assigned to the message datatype.  However, transformer's output datatype not always defines mimeType and encoding. If a transformer does not change any of those fields, then the fields from original payload's datatype should be used."""
"MULE-8509","Bug","Modules: CXF",8,"CXF Proxy-Client is throwing NullPointerException","""Nowadays, if you want to create a proxy, you have to specify the port name and the soapVersion for each binding. This information is provided by the wsdl, so it shouldn't be required, the proxies should detect them automatically.    As a consequence, if you have an API with multiple ports, one of them receiving a SOAP 1.1 envelope, and other one receiving a SOAP 1.2 envelope, and if you don't specify the port and the soapVersion in both proxies (service and client) you will not be able to send a SOAP 1.2 message.     This means that a simple proxy cannot be used with both types of SOAP versions.  """
"MULE-8506","Bug","Extensions API",5,"XSD Generator fails to generate documentation for attributes","""We should check with [this tool|https://github.com/mulesoft/mule-tool-schema-doc] that the documentation generated for Validators extension is correct."""
"MULE-8505","Bug","Extensions API",3,"XSD Generator creates wrong attribute types for numeric parameters","""h2. Size validator has int parameters for min and max values but the generated XSD creates attributes with Long data type.        {code}  /**       * Validates that {@code value} has a size between certain inclusive boundaries. This       * validator is capable of handling instances of {@link String}, {@link Collection},       * {@link Map} and arrays       *       * @param value   the value to validate       * @param min     the minimum expected length (inclusive, defaults to zero)       * @param max     the maximum expected length (inclusive). Leave unspecified or {@code null} to allow any max length       * @param options the {@link ValidationOptions}       * @param event   the current {@link MuleEvent       */      @Operation      public void validateSize(Object value,                               @Optional(defaultValue = """"0"""") int min,                               @Optional Integer max,                               @ParameterGroup ValidationOptions options,                               MuleEvent event) throws Exception      {          ValidationContext context = createContext(options, event);          validateWith(new SizeValidator(value, min, max, context), context, event);      }  {code}    h2. expressionObject is generated for java.lang.Long parameters in isLong validator  {code:xml}    <xs:element xmlns=""""http://www.mulesoft.org/schema/mule/validation"""" type=""""IsLongType"""" substitutionGroup=""""validator-message-processor"""" name=""""is-long""""></xs:element>    <xs:complexType name=""""IsLongType"""">      <xs:complexContent>        <xs:extension xmlns:mule=""""http://www.mulesoft.org/schema/mule/core"""" base=""""mule:abstractMessageProcessorType"""">          <xs:attribute type=""""mule:substitutableName"""" use=""""required"""" name=""""config-ref"""">            <xs:annotation>              <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>            </xs:annotation>          </xs:attribute>          <xs:attribute type=""""mule:expressionString"""" use=""""optional"""" name=""""pattern""""></xs:attribute>          <xs:attribute type=""""mule:expressionString"""" use=""""required"""" name=""""value""""></xs:attribute>          <xs:attribute type=""""mule:expressionString"""" use=""""optional"""" name=""""locale""""></xs:attribute>          <xs:attribute type=""""mule:expressionObject"""" use=""""optional"""" name=""""minValue""""></xs:attribute>          <xs:attribute type=""""mule:expressionObject"""" use=""""optional"""" name=""""maxValue""""></xs:attribute>          <xs:attribute type=""""mule:expressionString"""" use=""""optional"""" name=""""exceptionClass""""></xs:attribute>          <xs:attribute type=""""mule:expressionString"""" use=""""optional"""" name=""""message""""></xs:attribute>        </xs:extension>      </xs:complexContent>    </xs:complexType>  {code}"""
"MULE-8510","Enhancement Request","Core: Properties",2,"Setting a NullPayload in a property must behave as setting null","""Mule uses NullPayload to represent a null value in a MuleMessage's payload.  When a message has NullPayload and a property is set using an expression like #[payload], then the property will contain NullPayload.  This situation requires that checking a property requires to consider NullPayload value as a separate case other than null and not null.  """
"MULE-8518","Enhancement Request","Modules: HTTP",5,"Provide access to client certificate on 2-way TLS authenticated connections","""When a 2-way TLS authenticated connection is created the client certificate should be exposed in the flow since it may be useful to use it to identify the client.    We are going to expose the client certificate ONLY (not the CA certificates) in the flow using a new inbound property http.client.cert.    The user can access the client principal by doing message.inboundProperties['http.client.cert'].getSubjectDN()    We analyse if there is any risk by exposing the certificate as an inbound property but we got to the conclusion that there's no risk since the client certificate is publicly available in general and it's not used for the communication encrypt  / decrypt. It's only used to identify the client."""
"MULE-8514","Enhancement Request","Modules: CXF",8,"Add support for non-blocking processing strategy to CXF/WS-Consumer","""Add support so that CXF/WS-Consumer can be used in Flow and non-blocking processing supported."""
"MULE-8512","Enhancement Request","Core: Configuration",3,"Allow default processing strategy to be configured per app","""Currently if you want to use a sync processing strategy in every flow it is necessary to configure it on every single flow in your app.  Add a attribute to the <configuration> element to define this once.    Also, consider allowing a system property too.  This would be useful for:  - Alternative testing plans  - Setting default per instance, e.g. in cloudhub maybe.    """
"MULE-8527","Task","Build: Libraries / Dependencies",3,"Remove AspectJ dependency in CE","""AspectJ needs to be upgraded to version 1.8.5 to be consistent with the version number across all distributions and remove warnings when building."""
"MULE-8529","Bug","Core: Logging",0,"Async Loggers stop working after reconfiguration","""If the log4j2.xml file of a deployed application is modified, then log4j2 automatically picks up the change and reconfigures itself, which causes the current Configuration object to be stopped.    However, because MuleLoggerContext wraps the loggers into a DispatchingLogger instance, the updateConfiguration(Configuration) method never reach the actual loggers which remain pointing to the stopped configuration instead of the new one. As a result, no AsyncLogger can ever again post any message"""
"MULE-8541","Enhancement Request","Core: (other)",2,"Exposes information needed by DataMapper in order to run as a plugin","""DataMapper is accessing some elements in our code that is defined as protected. Because now DataMapper is going to be a Mule plugin, this won't work anymore as it will ran in a different classloader.    Need access to the following fields on MVELExpressionLanguage: globalFunctions, parserConfiguration and aliases    Need access to MuleImmutableVariableResolver class"""
"MULE-8535","Enhancement Request","Core: Transformers",8,"Ensure that transformers use a proper return datatype","""Transformers define an output dataType which is set on the message after the transformation.  In order to properly propagate message dataType, transformers must return the proper type, mimeType and encoding that corresponds to the executed transformation."""
"MULE-8534","Task","Core: Registry",1,"Reverse the semmantics of MULE-8415","""The flag introduced in MULE-8415 disables dependency injection for devkit components. We need it to be other way around. By default, Mule is not to inject into Devkit and the property is to be renamed to mule.devkit.participates.di and only when set to true devkit will be considered into DI."""
"MULE-8533","Bug","Core: (other)",8,"MBeans/JMX Memory Leak on vanilla Mule ESB Standalone","""Jira created at request of Mariano Gonzalez - see http://forum.mulesoft.org/mulesoft/topics/mbeans-jmx-memory-leak-on-vanilla-mule-esb-standalone-no-custom-code-deployed?utm_source=notification&utm_medium=email&utm_campaign=new_reply&utm_content=reply_button&reply%5Bid%5D=15618818#reply_15618818    1) Deploy an out of the box Mule Standalone ESB, e.g. mule-standalone-3.6.1  2) Start - default app deploys, no custom code deployed  3) Start Oracle VisualVM, connect to Mule ESB  4) Watch the heap being consumed    I performed this test with max memory changed to 256Mb in wrapper.conf (so I didn't have to wait so long for memory to be consumed), on openSuse 13.1, with Oracle Java version """"1.8.0_31""""  Java(TM) SE Runtime Environment (build 1.8.0_31-b13)  Java HotSpot(TM) 64-Bit Server VM (build 25.31-b07, mixed mode)    I have observed the same symptoms using Java jdk1.7.0_75 on openSuse, and Java jdk1.7.0_xx on Mac/OS, so it doesn't seem to be o/s or Java related.    If I don't attempt to monitor Mule ESB, the memory leaks don't appear to happen, though it's difficult to be sure without being able to monitor, but I presume that this is MBean/JMX instrumentation related.    Running Oracle JConsole does not appear to induce the same dramatic memory consumption, but does seem to cause some sort of slow incremental leak.  """
"MULE-8539","Bug","Core: Lifecycle|Core: Registry",1,"Lifecycle not applied to Objects manually registered during initialisation","""Suppose an Initialisable or Startable object which during any of those phases registers a new Lifecycle object (e.g.: like an endpoint which creates and registers a connector).    Only the already completed phases are applied to the newly registered object while the one being currently executed isn't"""
"MULE-8538","Bug","Core: Lifecycle",5,"Dispose lifecycle phase is invoked even when initialise phase fails","""dispose() should not be invoked if initialise() fails.  At least thats how I believe it always worked.      This change causes NPE's in dispose() in a lot of cases. Which results in much more verbose and confusing errores being logged."""
"MULE-8536","Enhancement Request","Core: Registry",1,"DI should never include Devkit components","""Although MULE-8534 and MULE-8415 tried to keep some level of compatibility between mule's injector and devkit's components, some other integration issues keep popping up so we decided that for now Devkit will be excluded from it. Devkit will provide its own solution for DI"""
"MULE-8544","Bug","Core: (other)",1,"Core schema for 3.6 is not defined and rubbish at the end of line","""https://github.com/mulesoft/mule/blob/mule-3.x/modules/spring-config/src/main/resources/META-INF/spring.schemas#L11    And remove rubbish bracket at end of line."""
"MULE-8543","Bug","Modules: CXF",1,"CXF schemas for 3.5 and 3.6 are wrong","""https://github.com/mulesoft/mule/blob/mule-3.x/modules/cxf/src/main/resources/META-INF/spring.schemas#L5-L6  """
"MULE-8555","Enhancement Request","Modules: HTTP",5,"Promote to public api DefaultHttpListenerConfig.resolvePath or equivalent behavior","""There's no way to resolve the full path of a listener using the public API.    Mule 3.6 offered the following method that was changed in 3.7:  """
"MULE-8553","Bug","Build: Distributions",3,"Add max-send-buffer-size entry in wrapper.conf","""We need to add that property now that it's available."""
"MULE-8550","Bug","Core: Bootstrap / Standalone|Core: Registry",0,"Transformers are registered twice","""As a side effect of MULE-7588, transformers registered either through registry-bootstrap.properties or as Spring beans are registered twice. As a result, some transformer resolutions fails, specially when the object contains XML or JSon annotations.    Although this seems benign at first sight, in some cases it leads to wrong resolution since Mule might thing that it has more than one transformer to resolve the same case"""
"MULE-8549","Enhancement Request","Build: Distributions",2,"Update C3P0 to version 0.9.5","""There is a new version of C3P0. Would be great to update it to replace the old version that is shipped on Mule"""
"MULE-8548","Task","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",5,"Upgrade Spring security to 4.0.1.RELEASE","""Spring dependencies were updated to 4.1.6 and keeping Spring security in 3.1.0 is an important risk."""
"MULE-8547","Bug","Modules: HTTP",0,"Unused resolvePath method in DefaultHttpListenerConfig","""That method was removed but later reintroduced by the merge of a lifecycle branch that had been branched when the method was still present."""
"MULE-8559","Bug","Core: (other)|Transport: JMS",0,"Deployment failure if two apps are both using BTM in the same Mule server","""Deployment failure if two apps are both using BTM in the same Mule server"""
"MULE-8556","Bug","Core: Registry",3,"SpringRegistry is not thread-safe","""In versions prior to 3.7.0, the SpringRegistry was read only and all objects registered through the MuleRegistry API went to the transient registry.    Per the work in MULE-7588, the TransientRegstry no longer exists and the SpringRegistry is writable. However, it's missing the ReadWriteLock that TransientRegistry had to allow register and lookup objects concurrently.    This causes random failures, specially when dealing with dynamic endpoints"""
"MULE-8569","Bug","Core: Registry",5,"Applications and corresponding domains should share the same OptionalObjectController","""OptionalObjectsController is used to track objects registered through registry-bootstrap.properties which are optional.    When an application belongs to a domain, that instance should be shared between the app and the domain. """
"MULE-8565","Enhancement Request","Modules: HTTP",3,"Add support for preemptive basic authentication in the HTTP module","""Allow to configure if basic authentication is preemptive or not in the new HTTP connector, by adding an attribute to the config: preemtive=""""true|false|expression""""    Also add this to the config builder in the public API of the connector."""
"MULE-8579","Enhancement Request","Core: (other)|Core: Transformers",3,"Datatype cannot be configured when adding properties using message-property-transformer","""You can't set the datatype to the properties in the Message Properties transfomer"""
"MULE-8577","Enhancement Request","Core: (other)",0,"It would be useful to have the Datatype mimeType info when you use the logger ","""Right now you have the payload type and the encoding but not the mimeType:    Ex:  org.mule.DefaultMuleMessage  {    id=badce400-f435-11e4-b227-20c9d0cf41e7    payload=java.lang.String    correlationId=<not set>    correlationGroup=-1    correlationSeq=-1    encoding=UTF-8    exceptionPayload=<not set>  ...  }"""
"MULE-8573","Enhancement Request","Modules: HTTP",3,"Add support for expressions in the authentication configuration of the HTTP connector","""Add support for MEL expressions in the attributes of the authentication elements of the new HTTP connector."""
"MULE-8572","Bug","Core: Registry",3,"Dependency injection fails when injection candidate is registered on domain","""When the @Inject annotation is used to inject an instance which leaves on the parent domain context, injection fails"""
"MULE-8584","Task","Modules: HTTP",1,"Upgrade grizzly to 2.3.20","""This is necessary to upgrade AHC."""
"MULE-8583","Task","Modules: HTTP",3,"Upgrade async-http-client to 1.9.21","""This version includes several fixes but depends on also upgrading Grizzly."""
"MULE-8581","Bug","Core: Routing / Filters",5,"Spike on Collection splitter is not setting the group size when payload is an Iterator","""Salesforce queries return an iterator and when a collection splitter is used, it fails to aggregate the collection after because the group size is set to -1.  Attached mule config    This seems to be happening because this class https://github.com/mulesoft/mule/blob/bfb3a17263d1e4b32ee10272cbf710a2bf41b16b/core/src/main/java/org/mule/routing/outbound/IteratorMessageSequence.java is used from https://github.com/mulesoft/mule/blob/1dbf6e09a651184e9c54ec8988ecf1907cbdd58f/core/src/main/java/org/mule/util/collection/EventToMessageSequenceSplittingStrategy.java and it is setting UNKNOWN_SIZE as Group size for all Iterator payloads"""
"MULE-8580","Task","Build: Integration Tests",5,"Fix JDK8 build","""Tests run in a different order in the JDK8 build, so HttpsSharePortTestCase fails in that case because of some other test that runs before it. """
"MULE-8587","Enhancement Request","Core: (other)",0,"Add a Base64 decoded which doesn't automatically unzip","""Currently, the Base64.decode(String) method automatically unzips if it detects a GZIp magic number header.    Add a new method which doesn't"""
"MULE-8601","Bug","Core: Components",3,"Deployment should fail when using invalid encoding","""When deploying the below config deployment should fail because encoding does not exists. Now is failing in runtime when executing the flow    """
"MULE-8600","Bug","Core: Components|Modules: HTTP",8,"Setting wrong encoding causes flow execution to hang","""Deploy the below config and run this:    curl -m 10 http://localhost:8081/  curl: (28) Operation timed out after 10004 milliseconds with 0 bytes received    It logs an error as soon as I send the request but then I only receive the curl timeout without Mule doing anything.    When I remove encoding=""""asdfsadf"""" ti returns 200 immediately."""
"MULE-8598","Bug","Core: Components",3,"Deployment should fail when using Invalid MIME type","""When deploying the below config deployment should fail because MIME type does not exists. Now is failing in runtime when executing the flow    """
"MULE-8597","Bug","Core: Components",3,"set-payload with invalid MIME type returns an ugly error","""When using an invalid MIME type in set-payload the error message is not very clear.    Deploy this app:        Request:  ~  curl http://localhost:8081/  javax.activation.MimeTypeParseException: Unable to find a sub type. (org.mule.api.MuleRuntimeException). Message payload is of type: BufferInputStream%    App log:    org.mule.execution.ExceptionToMessagingExceptionExecutionInterceptor:32 (http://www.mulesoft.org/docs/site/current3/apidocs/org/mule/api/MessagingException.html)  --------------------------------------------------------------------------------  Root Exception stack trace:  javax.activation.MimeTypeParseException: Unable to find a sub type.   at javax.activation.MimeType.parse(MimeType.java:102)   at javax.activation.MimeType.<init>(MimeType.java:63)   at org.mule.transformer.types.SimpleDataType.<init>(SimpleDataType.java:40)      + 3 more (set debug level logging or '-Dmule.verbose.exceptions=true' for everything)  ********************************************************************************    """
"MULE-8604","Bug","Transport: HTTP(S) / Jetty",2,"Incorrect error processing on Jetty transport","""Jetty transport is not properly managing error conditions that occur when a MuleMessage fails to be created for the current request.  For example, if a request contains an invalid mimeType, it won't be possible to create a DefaultMuleMessage from it, an exception will be thrown to signal the error, but the returned response will be a 200 instead of 500. (NOTE: the problem exists only when there is no MuleMessage, once it has been created, then it works as expected)"""
"MULE-8603","Bug","Modules: HTTP",8,"keepAlive is not working correctly in the HTTP requester","""keepAlive is not working as expected. The http:request element always sends the header Connection: keep-alive in the request, regardless of the usePersistentConnections attribute in the config. If usePersistentConnections is set to false, keepAlive should be disabled, but the header is still sent.    Also, in the proxy scenario (using a listener and a requester) connections are kept alive but not reused. See example config here: https://github.com/mulesoft/performanceworks/blob/master/APPS/PROXY-MCD/100B/http_module_proxy/proxy.xml  This causes """"Remotely closed"""" errors, thrown by the service that is being proxied in a highly concurrent scenario.    """
"MULE-8610","Task","Build: Distributions",1,"Update MVEL version to 2.1.9-MULE-006","""Need to update MVEL to include the fix for  MULE-8336"""
"MULE-8609","Bug","Core: Registry",1,"Should be able to fetch prototype by name without lifecycle applied","""In most scenarios, when a prototype is lookup up by name, lifecycle should be applied to it before returning.    There're some scenarios (e.g.: fetching a MessageProcessor that will go into a DynamicPipeline) which are not so and we need a way to specify that this case is different.    The following method was applied to the LifecycleRegistry to support such case:    """
"MULE-8614","Enhancement Request","Modules: HTTP",0,"HTTP requester has a worker thread pool that is not used","""The grizzly client used in the HTTP requester is configured with SameThreadIOStrategy, so that the thread that is executing the flow is the same that executes the request. However, a worker thread pool is also defined (unused). This was a workaround for a NPE of the same thread strategy. This pool should not exist."""
"MULE-8616","Bug","Modules: HTTP",0,"NTLM auth doesn't work on redirect","""There's an issue in the underlying library (async-http-client) which causes such a request to fail when the server responds with a 307 redirect instead of a 200 ok.  Issue link is: https://github.com/AsyncHttpClient/async-http-client/issues/866  This was fixed in version 1.9.21 of AHC."""
"MULE-8619","Task","Core: Non-Blocking",1,"Review event copying and access control in non-blocking support","""Need to ensure there are no issues.."""
"MULE-8628","Bug","Modules: HTTP",5,"HTTP Connector should not send/respond http.* properties ","""HTTP Connector knows these properties are internal, so it makes sense that they are filtered and not sent."""
"MULE-8626","Bug","Modules: HTTP",5,"Connection and Keep-Alive message properties should not affect Listener/Requestor connection reuse behaviour.","""Listener can be set up to use persistent connections and client attempt to reuse connections, but if for some reason a """"connection"""" header gets returns to the listener this behaviour breaks.  Connection reuse behaviour should be encapsulated in listener/requestor."""
"MULE-8638","Bug","Core: Routing / Filters",8,"[Regression] NPE when filter fails","""When a filter evaluation fails message is discarded but a NPE is shown in app log."""
"MULE-8635","Bug","Core: Deployment",8,"ConcurrentModificationException when hot deploying","""To reproduce:  # Deploy first application in Mule Standalone CE  # Deploy second application to a different server (app1 depends on it)  # Load application with some requests (Don't know if this is needed to reproduce)  # Deploy third application by moving the exploded app to apps directory"""
"MULE-8632","Bug","Modules: HTTP",5,"HTTP Listener Connector reject a GET and DELETE that contains a body. ","""http://forum.mulesoft.org/mulesoft/topics/http-get-delete-how-to-get-the-body-of-request-using-http-listenner-connector"""
"MULE-8639","Bug","Modules: HTTP",0,"Upgrade grizzly to 2.3.21","""We need this because of issues on version 2.3.20."""
"MULE-8645","Task","Build: Distributions",0,"Remove jasper-jdt-6.0.29.jar from Mule distributions","""There are some vulnerabilities related to jasper-jdt-6.0.29.jar that could being affecting mule applications:     CVE-2014-0119, CVE-2011-0013, CVE-2012-5886, CVE-2014-0075, CVE-2011-5062,  CVE-2011-0534,  CVE-2013-2067,  CVE-2011-1184,  CVE-2011-2526,  CVE-2013-4286, CVE-2012-4431,  CVE-2010-4172, CVE-2012-5568,  CVE-2014-0096,  CVE-2012-3544, CVE-2011-4858, CVE-2012-3546,  CVE-2010-4312, CVE-2012-2733,  CVE-2012-0022,  CVE-2014-0227, CVE-2012-5885,  CVE-2013-4590,  CVE-2011-5064, CVE-2011-5063,  CVE-2014-0099,  CVE-2012-5887, CVE-2013-4322, CVE-2014-0227    The only way to avoid these vulnerabilities is to remove the mentioned artifact from the distributions and manually add it in case that is required."""
"MULE-8650","Task","Core: Non-Blocking",3,"SecurityFilterMessageProcessor does not support non-blocking.","""SecurityFilterMessageProcessor should implement NonBlockingSupported"""
"MULE-8649","Enhancement Request","Core: Expressions",8,"Resolve data type from simple MEL expressions","""Now that dataType is being propagated for payload and properties, it would be good if dataType can be propagated when MEL expressions are used.  For example, when using set-payload with """"flowVars['foo']"""" expression, it would be good if the property dataType is assigned to the payload's datatype.    Simple expressions include:  * payload/message.payload  * direct access to invocation/session properties, like #[foo], where foo is an invocation/session variable  * access to flowVars, like flowVars['foo']  * access to sessionVars, like sessionVars['foo']"""
"MULE-8648","Bug","Transport: FTP / SFTP",0,"FTP requester is not validating single files","""When the requester is triggered and a single file is processed (on purpose or because the folder selected only contains one file) validations are not applied  and the file is processed regardless. These validations include filename filters and file age in EE."""
"MULE-8655","Task","Build: Distributions",3,"Update jython to 2.7.0","""Update to the lastest jython release"""
"MULE-8661","Bug","Core: (other)",0,"Typo in AbstractFlowConstruct","""AbstractFlowConstruct validateConstruct method contains an exception message that says: """"Flow exception listener contains and exception strategy that doesn't handle all request"""". Should be """"an exception"""" instead of """"and exception""""."""
"MULE-8666","Bug","Transport: File|Transport: FTP / SFTP",5,"Set mime type correct for common files with FTP/File connectors","""The FTP and File connectors should set mime types for common file types correct, including CSV, XML, and JSON."""
"MULE-8663","Task","Build: Distributions",0,"Update jython to 2.5.3","""Need update jython to 2.5.3 to avoid CVE-2013-2027 vulnerability."""
"MULE-8669","Bug","Core: Non-Blocking",1,"non-blocking processing strategy should only allow direct-threading-profile ","""Currently we cannot force the configuration to use direct-threading-profile for all non-blocking flows, this is because thread pool belong to the listener and not to the flow. We need a bigger change that we cannot make now and we can only address it in Mule 4.  Because we don't have a concrete use scenario for using non-blocking with a worker threading profile we want to validate that you can only use direct-threading-profile for HTTP listeners when flow's processing strategy is non-blocking. This validation will be on runtime."""
"MULE-8680","Enhancement Request","Core: Domains shared resources",8,"Allow TLS context to be shared in a domain","""It'd be good to be able to share a TLS context so that several shared listener configs can use the same one. Another benefit is that all that data (including passwords) will only need to be visible at the domain level, so app developers could use the certs without having access to the perhaps critical data."""
"MULE-8678","Bug","Modules: HTTP",5,"HTTP Requestor should not use Host property.","""If I have configured requestor to hit google.com, i should then not be able to set a host message property or host header (on request builder) that conflicts with google.com. Currently if i hit google.com and i have <set-property propertyName=""""Host"""" value=""""pirulo""""/> in my flow then google with receive """"Host: pirulo"""".    If the host configured is an ip address then thats different, need to decide if requestor should take """"Host"""" value from message properties or only from response-builder (or neither) in that case."""
"MULE-8677","Bug","Modules: HTTP",8,"HTTP requestor should ignore 'Transfer-Encoding' property as it is a hop-by-hop header","""Transfer-Encoding is a hop-by-hop header and therefore shouldn't really be used by HTTP requestor if there is a """"transfer-encoding"""" property present in the outbound property scope to determine request streaming behaviour.  Generally current behaviour is fine, but there is one case that is currently incorrect IMO.    * We shouldn't stream a String payload when the """"transfer-encoding"""" outbound message property is present.    Also:  * Aso, While I think it is probably correct that a String payload should be streamed when a """"transfer-encoding"""" header is configured and streaming mode is 'AUTO'. This is not the way the user should be enabling streaming and I suggest we log an INFO message whenever a transfer-encoding header is set suggesting the user uses the responseStreamingMode attribute instead.  * There are currently no tests covering the case when these headers are configured using a <request-builder>, we should add these.    *AUTO Behaviour appears to be inconsistent with HTTP listener because the presence of both transfer-encoding/content-length headers results in no streaming with requestor, but streaming with listener*    Failing test that show this can be found in this branch: https://github.com/mulesoft/mule/compare/MULE-8676"""
"MULE-8676","Bug","Modules: HTTP",8,"HTTP listener should ignore 'Transfer-Encoding' property as it is a hop-by-hop header","""Transfer-Encoding is a hop-by-hop header and therefore shouldn't really be used by HTTP listener if there is a """"transfer-encoding"""" property present in the outbound property scope to determine response streaming behaviour.    Generally current behaviour is fine, but there is one case that is currently incorrect IMO.    * We shouldn't stream a String payload when the """"transfer-encoding"""" outbound message property is present.  * We shouldn't stream a String payload when the """"transfer-encoding"""" and """"content-length"""" outbound message properties are both present.  * Aso, While I think it is probably correct that  a String payload should be streamed when a """"transfer-encoding"""" header is configured and streaming mode is 'AUTO'.  This is not the way the user should be enabling streaming and I suggest we log an INFO message whenever a transfer-encoding header is set suggesting the user uses the responseStreamingMode attribute instead.    Failing test that show this can be found in this branch: https://github.com/mulesoft/mule/compare/MULE-8676    *AUTO Behaviour appears to be inconsistent with HTTP requestor because the presence of both transfer-encoding/content-length headers results in no streaming with requestor, but streaming with listener*"""
"MULE-8685","Enhancement Request","Core: (other)",1,"CopyOnWriteCaseInsensitiveMap should be interoperable with a regular map","""CopyOnWriteCaseInsensitiveMap provides improved performance in cases in which reads vastly outnumbers reads.    However, it's not good when:    * I want to create a CopyOnWriteCaseInsensitiveMap from an existing map  * The initial assumption stops being true and I want to transform the CopyOnWriteCaseInsensitiveMap to a regular one    This should be supported"""
"MULE-8690","Task","Core: Registry",1,"Remove registry deprecation warnings from log.","""In API Gateway we need to use a registry feature that generates several log entries like:       How to reproduce:  - Configure GW to use any valid organization  - Deploy an API with autodiscovery  - Run GW    Expected:  - The information is not logged at all in no log file.    Actual:  - The information is logged in mule_ee with WARN level."""
"MULE-8698","Bug","Build: Integration Tests",5,"NonBlockingNotSupportedFunctionalTestCase.aggregator caused InboundAggregationNoTimeoutTestCase to fail.","""Messages created in NonBlockingNotSupportedFunctionalTestCase.aggregator are not related by their rootId which caused InboundAggregationNoTimeoutTestCase to fail."""
"MULE-8693","Bug","Core: Transactions",3,"XA transaction must set tx timeout in XA resources","""XA transaction must set tx timeout in XA resources"""
"MULE-8700","Bug","Extensions API",3,"Incorrect XSD generated for extension built using extension API","""Reviewing the code or extensions API implementation, found that the XSD sceham generated for the test Heinsenberg extension's killOne operation is wrong.      From that snipet, a XML like the following would be valid if checked against a schame validation tool:  """
"MULE-8721","Task","Core: Registry",5,"Write test cases for LIfecycleUtils","""Write unit tests for LifecycleUtils class"""
"MULE-8730","Task","Build: Distributions",0,"Update LICENSE.txt to fix year and url for third-party software used by Mule","""The LICENSE.txt files refers to year 2009 in CE and 2010 in EE.     For example """"Copyright (c) 2003-2009"""" in LICENSE.txt in the root path of the mule repository.    Also the URL referencing the information on the license type for each third-party software product used by Mule is pointing to an old link. The correct one now is """"https://developer.mulesoft.com/docs/display/current/Third-Party+Software+In+Mule"""""""
"MULE-8728","Enhancement Request","Extensions API",0,"Apply minor miscellaneous fixes per the ext-api review ","""Per the ext-api review, many action items came out which were translated into jira issues.    however, there's another bunch which are really small fixes, javadoc enhancements etc, which don't really justify a one issue per fix approach. For those improvements, this is your jira."""
"MULE-8725","Enhancement Request","Extensions API",8,"Implememnt multitenant configuration eviction policy","""When using configs multitenant with extenision API there should be a way to evict (dispose) config that are not longer used.     This is critical to avoid OOM and wasting resources for use cases where there may be hundreds or thousands config created over time."""
"MULE-8724","Enhancement Request","Extensions API",8,"Operation state handling in extensions api","""We need to clearly define how to manage state within operations define with extensions api. Not only define how to implement each use case but also doing it in a way that fits the user mindset.    We need:   - Global state between operators   - Global state per config   - Global state per tenant config   - State for a particular operation (one per xml element) disregarding the config    I'm just trying to list all the cases, then we would have to try to come up with use cases for each use case. """
"MULE-8741","Task","Extensions API",5,"Extract logic for creating implicit configs to a separate class","""The logic for creating implicit configurations is now part of the DefaultExtensionsManager. Would be good to have that extracted to a separate class"""
"MULE-8738","Bug","Core: Expressions",1,"No data type resolution accessing flow/session properties using dot notation","""Data type resolution works for session/flow variables on MEL expressions using map syntax (like flowVars['foo']) but does not work when using dot syntax (like flowVars.foo)."""
"MULE-8736","Bug","Core: (other)",8,"Enricher does not propagates datatype","""Message enricher is not propagating datatype when well-known expressions are used (like expressions returning message's payload/properties)"""
"MULE-8735","Bug","Core: Transformers",1,"MuleMessage is going to registry for every transformation when extended transformations are used.","""Now there is no longer a transient registry it is critical that we don't lookup objects in the registry in runtime per-message.  Not doing so will cause an performance impact and also thread contention at higher concurrencies.    org.mule.DefaultMuleMessage#applyAllTransformers  org.mule.DefaultMuleContext#getDataTypeConverterResolver"""
"MULE-8743","Bug","Core: Registry",8,"Mule registry failing to lookup sub-flows","""When trying to do the following     ```  context.getRegistry().lookupObjects(SubflowMessageProcessorChainFactoryBean.class);  ```    Over a context that has been created with the following xml:  ```  <mule xmlns=""""http://www.mulesoft.org/schema/mule/core""""        xmlns:xsi=""""http://www.w3.org/2001/XMLSchema-instance""""        xsi:schemaLocation=""""          http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd"""">          <sub-flow name=""""firstFlow"""">          <set-payload value=""""#['real_payload']""""/>      </sub-flow>    </mule>  ```    The method returns an empty collection.    When you do something like   ```  context.getRegistry.get(""""firstFlow"""")  ```    The bean is returned. It seems as if the problem is with the type lookup"""
"MULE-8742","Bug","Tools",8,"Cannot build Mule ESB Maven Tools with Java 8","""When trying to build mule-esb-maven-tools from source code using JDK 8, it fails with the attached error message."""
"MULE-8753","Enhancement Request","Extensions API",5,"Give the Extension model the concept of vendor","""Currently Extension instances are matched by its getName() method. They should also include the concept of vendor and be used for matching purposes as well.  """
"MULE-8754","Bug","Documentation / Website",0,"Broken link in BUILD.md","""The contributing doc link in the build one is broken. It seems the name changed from CONTRIBUTE.md to CONTRIBUTING.md but it wasn't updated in BUILD.md."""
"MULE-8764","Bug","Modules: HTTP",0,"HTTP requester fails to send HTTPS request through a proxy","""When using the new HTTP connector to send HTTPS requests through a proxy, there are some problems depending on the mule version. In 3.6.2, the request is sent correctly through the proxy, but query parameters are lost. In 3.6.x (3.6.3-SNAPSHOT), the request blocks (this started happening after the Grizzly update).   The fix for this is to also upgrade async-http-client (that fixes the original query parameter bug), and add test cases for this scenario."""
"MULE-8771","Bug","Core: Routing / Filters",0,"Synchronous until successful should retry on the original message ","""When an until successful component is configured to be synchronous, the retries are performed over the same event, so subsequent modifications are performed on the same event. Every retry should be performed over the original message."""
"MULE-8769","Bug","Core: Logging",8,"Loggers memory leak after fixing MULE-8635","""Changes from MULE-8635 introduced a memory leak where MuleApplicationClassLoaders are not being disposed.  MULE-8635 added logic to clean up loggers, but seems that the logic is executed but the memory is not released.  To reproduce the issue:  _ Start a vainilla mule instance  _ Once default app is deployed force a redeploy touching the app's config file    Expected behaviour, according to the code, is that after 15 seconds the memory is released, but that does not happen.  """
"MULE-8779","Bug","Modules: HTTP",5,"Hostname verification not working correctly with HTTPS proxy","""When configuring the http requester with HTTPS and a proxy, hostname verification is done against the proxy instead of the real host. This makes the request fail, as the certificate doesn't contain the url of the proxy. The verification should be made against the host of the request.    This is a bug in AHC, it is fixed in AHC 1.9.27, so a possible solution to this is updating at least to this version."""
"MULE-8784","Task","Extensions API",5,"Revisit DefaultExtensionManager implicit config test cases considering MULE-8741","""Now that implicit configs are instantiated by DefaultImplicitConfigurationFactory related tests should be refactored and that class should have its own tests."""
"MULE-8792","Bug","Core: (other)",0,"ClassPathRegistryBootstrapDiscoverer is not closing resource streams","""ClassPathRegistryBootstrapDiscoverer searches for all the application resources that are bootstrap.properties and opens a stream against each of them.  Each stream should be automatically closed after is consumed, but that is not the case and this causes a problem in Windows where the jars containing the bootstrap properties are locked making the redeployment impossible."""
"MULE-8790","Bug","Modules: HTTP",0,"If multiples HTTP response headers are associated to the same header name, only the first one is mapped to an inbound property.","""HTTP allows to map several header values to the same header name, when we map the HTTP response to a Mule message, headers are mapped to inbound properties, but only the first value for each header name is mapped, next values are discarded."""
"MULE-8788","Bug","Core: Transports",0,"Polling message receiver should unregister scheduler on dispose.","""When you stop a flow programmatically, if it has a polling message receiver, the scheduler is not stopped but it's recreated when it's programmatically re-started, so both schedulers remain active and events are duplicated. """
"MULE-8800","Bug","Modules: HTTP",0,"Multipart content should include Content-Disposition header","""As per the RFC (https://tools.ietf.org/html/rfc7578#section-4.2) all parts should include the header Content-Disposition and the part name in it. Parts that represent a file should also contain the filename.  Example:   Content-Disposition: form-data; name=""""user""""; filename=""""user.txt""""    """
"MULE-8798","Bug","Core: Event/Message",1,"Message mime type/encoding must be reset when payload is set without a datatype","""DefaultMuleMessage#setPayload(Object) is maintaining previous mimeType/encoding   instead of cleaning it, this is causing issues as transformers read the payload value taking in account the mimeType, which won't match the payload that was set."""
"MULE-8796","Enhancement Request","Core: Registry",0,"Unnecessary tracking of overridden non disposable objects in TransientRegistry","""When adding an object to the registry, if there is a previous object associated with the same key, it will be stored in a Set called lostObjects, this is so in order to be able to call its dispose logic when the application shuts down:  https://www.mulesoft.org/jira/browse/MULE-7293  However if the object is not Disposable storing this object won't be necessary, and it could eventually cause an OOM exception because these objects are never cleared.  The Registry should remove the previous entries if the stored object is not Disposable  """
"MULE-8795","Bug","Core: Deployment",0,"IOUtils#getResourceAsString is not closing streams","""IOUtils#getResourceAsString opens a streams to load application's resources.  Those streams should be automatically closed after is consumed, but that is not the case and this causes a problem in Windows where the mentioned resources files are locked making the undeployment impossible."""
"MULE-8812","Bug","Modules: HTTP",0,"Multipart content is always sent chunked by listener","""When responding with multipart content, the listener doesn't set any encoding headers (Content-Length, Transfer-Encoding). Grizzly ends up deciding to use chunked and it seems under those circumstances it never sends the """"0"""" ending part."""
"MULE-8816","Bug","Modules: (other)",0,"Cron job used by multiple Poll component in different projects misfiring","""I have 2 different mule projects created, each containing different cron frequency and names.  When the first application is deployed the polling cron is registered, when we deploy the second application then the poller endpoint is registered  The problem is, when I un-deploy the first application with which the cron was registered, the second application poller stops working.  It's messing up the logging, both the projects have different log4j's , writing to different files. When the first app is deployed it logs fine, as soon as the second one is deployed you'd notice the logs of 2nd application appearing in the first one.  INFO 2015-07-23 15:31:52,009 : ------------------------------In for Polling_2 step1  INFO 2015-07-23 15:31:52,009 : ----------In for Polling_1 step2  INFO 2015-07-23 15:31:54,002 : ----------In for Polling_1 step1  INFO 2015-07-23 15:31:54,003 : ----------In for Polling_1 step2  INFO 2015-07-23 15:31:56,006 : ----------In for Polling_1 step1  INFO 2015-07-23 15:31:56,007 : ------------------------------In for Polling_2 step1  INFO 2015-07-23 15:31:56,008 : ----------In for Polling_1 step2  Steps to reproduce:  1 Import both the projects (pollproject1 & pollproject2) on standalone  2. deploye pollproject1.zip on ti the server   3. observe the logs mule-app-poll-1.log, cron should be working every 2 sec.   4. deploy the pollproject2.zip   5. observe the logs mule-app-poll-2.log, cron should be working every 4 sec.   6. undeploy the pollproject1 by deleting the pollproject2-anchor.txt file.   7. observe the logs mule-app-poll-2.log, the messages stop as well."""
"MULE-8813","Bug","Modules: HTTP",0,"Multipart Content-Type header is sent twice when copying attachments","""Observed in the HttpListenerAttachmentsTestCase: attachments are copied so they already have a Content-Type header but when creating the multipart content this header is added again. Example:    POST /formDataPath HTTP/1.1  Content-Length: 213  Content-Type: multipart/form-data; boundary=3B0ItAx4ggGN72zKDerT2p0ninKyMiYijUm  Host: localhost:14106  Connection: Keep-Alive  User-Agent: Apache-HttpClient/4.3.5 (java 1.5)  Accept-Encoding: gzip,deflate    --3B0ItAx4ggGN72zKDerT2p0ninKyMiYijUm  Content-Disposition: form-data; name=""""field1""""  Content-Type: text/plain; charset=ISO-8859-1  Content-Transfer-Encoding: 8bit    yes  --3B0ItAx4ggGN72zKDerT2p0ninKyMiYijUm--  HTTP/1.1 200   Content-Length: 197  Content-Type: multipart/form-data; charset=UTF-8  Date: Mon, 03 Aug 2015 14:22:44 GMT    --null  Content-Type: text/plain; charset=ISO-8859-1  Content-Type: text/plain; charset=ISO-8859-1  Content-Transfer-Encoding: 8bit  Content-Disposition: form-data; name=""""field1""""    yes  --null--"""
"MULE-8821","Bug","Modules: Devkit Support",8,"Concurrent calls to the OAuth2 authorize MessageProcessor fail when passing different values for accessTokenUrl","""When the authorize MessageProcessor is invoked by 2 different users at the same time and each of those invocations is done with a different value for the accessTokenUrl, the access token request for one of them is made to the wrong url.    I am using the salesforce connector v6.2.1 and this is how my authorize call looks like:    <sfdc:authorize       display=""""#[flowVars['display']]""""       authorizationUrl=""""#[flowVars['salesForceUrl'] + '/authorize']""""       accessTokenUrl=""""#[flowVars['salesForceUrl'] + '/token']""""       config-ref=""""sfdcConnectorConfig""""       state=""""#[payload]""""       accessTokenId=""""#[flowVars['remoteUserId']]"""" />    The flowVar salesforceUrl can take 2 possible values, which are:  https://login.salesforce.com (Salesforce Production)  https://test.salesforce.com (Salesforce Sandbox)    When a user does the OAuth dance to login.salesforce.com at the same time another user does the OAuth dance to test.salesforce.com, one of the dances fail.    ------------------------------------------------------------------------------------------    I believe the problem can be found in the way the accessTokenUrl is retrieved and saved by these 2 processors (in mule-devkit-support):  - org.mule.security.oauth.processor.BaseOAuth2AuthorizeMessageProcessor<T>  - org.mule.security.oauth.processor.OAuth2FetchAccessTokenMessageProcessor    The BaseOAuth2AuthorizeMessageProcessor<T> (line 81) saves the accessTokenUrl value in the defaultUnauthorizedConnector object of the OAuth2Manager.  The OAuth2FetchAccessTokenMessageProcessor (line 57) obtains an OAuth2Adapter (used to fetch the access token) from the OAuth2Manager. The OAuth2Manager creates the adapter setting the accessTokenUrl (line 256 BaseOAuth2Manager<T>) with the value taken from the defaultUnauthorizedConnector object.    https://github.com/mulesoft/mule/blob/mule-3.5.2/modules/devkit-support/src/main/java/org/mule/security/oauth/processor/BaseOAuth2AuthorizeMessageProcessor.java#L81    https://github.com/mulesoft/mule/blob/mule-3.5.2/modules/devkit-support/src/main/java/org/mule/security/oauth/processor/OAuth2FetchAccessTokenMessageProcessor.java#L57    https://github.com/mulesoft/mule/blob/mule-3.5.2/modules/devkit-support/src/main/java/org/mule/security/oauth/BaseOAuth2Manager.java#L256    The defaultUnauthorizedConnector of the OAuth2Manager is common to all events and threads. I believe that when 2 users are doing the oauth dance at the same time the accessTokenUrl value of the defaultUnauthorizedConnector is being overwritten by the second user before the first is able to fetch the access token."""
"MULE-8820","Bug","Core: Registry",5,"Performance degradation on registry lookup","""Because the mule registry was unified on Spring, lookup and get operations take longer to execute because spring checks for prototypes, etc.    We should add a cache to speed up lookups of things that we know are not prototypes"""
"MULE-8819","Bug","Core: Expressions",0,"MVEL prints stacktraces to the console","""A class in the mule-mvel library is printing the stack traces to the console when it fails to parse an expression. In this case is a XPath expression that tries to parse an xml form a string that is not an xml.    If this error is triggered in a ESB running in CentOS, the tanuki wrapper starts to consume increasingly more memory over time leading to a crash.    This simple flow can reproduce this error:      <flow name=""""flow"""">          <poll doc:name=""""Poll"""">              <fixed-frequency-scheduler frequency=""""100000000""""/>              <set-payload value=""""invalidxml"""" doc:name=""""Set Payload""""/>          </poll>          <object-to-string-transformer doc:name=""""Object to String""""/>          <logger message=""""[ID: #[message.id]] Message: #[message] - Payload: #[payload]"""" level=""""INFO"""" doc:name=""""Logger""""/>          <message-properties-transformer scope=""""invocation"""" doc:name=""""Evaluate Root Node"""">           <add-message-property key=""""event-name"""" value=""""#[xpath(&quot;name(/*[1])&quot;)]""""/>          </message-properties-transformer>          <logger message=""""#[flowVars['event-name']]"""" level=""""INFO"""" doc:name=""""Logger""""/>      </flow>    In the Studio console you should see the printed stack traces in red.    The bug is in this line in this class:   https://github.com/mulesoft/mvel/blob/master/src/main/java/org/mule/mvel2/optimizers/impl/refl/ReflectiveAccessorOptimizer.java#L437"""
"MULE-8823","Bug","Modules: CXF",8,"Unable to deploy Application in Mule 3.7.0","""Nowadays, if you want to create a proxy, you have to specify the port name and the soapVersion for each binding. This information is provided by the wsdl, so it shouldn't be required, the proxies should detect them automatically.    As a consequence, if you have an API with multiple ports, one of them receiving a SOAP 1.1 envelope, and other one receiving a SOAP 1.2 envelope, and if you don't specify the port and the soapVersion in both proxies (service and client) you will not be able to send a SOAP 1.2 message.     This means that a simple proxy cannot be used with both types of SOAP versions.  """
"MULE-8822","Bug","Modules: Devkit Support",5,"OAuth2 Refresh token logic fails after restart for preexistent connection","""This issue is related to the problem encountered in JIRA MULE-8277.    After restarting an application that uses the Box Connector, the first time a box request is made with a preexisting Box connection, that has an expired access token in its OAuthState, a refresh token process is triggered that does not attempt to save the refresh and access token obtained from box in the connector's ObjectStore.    The Box connector postAuthorize method invokes one of the connector's processors in order to retrieve the id of the user after the OAuth2 dance for identification purposes. That request within the postAuthorize triggers the first refresh token process for the connector on its first use after restart.    The way to reproduce the issue would be:  - Run a mule application on mule 3.6.2 with the Box Connector and a persistent Objectstore for it  - Do the OAuth dance with a Box user using the authorize MessageProcessor.  - Wait until the Box access token expires or modify it in the OAuthState saved in the Objectstore to make it invalid  - Restart the mule application and attempt to run a Box MessageProcessor like <box:get-user /> twice. (The first attempt should refresh but not save and the second should fail to refresh)"""
"MULE-8827","Bug","Modules: CXF",5,"Tests for HTTP connector in HttpSecurityFilterFunctionalTestCase depend on tests executed one the HTTP transport","""org.mule.module.cxf.HttpSecurityFilterFunctionalTestCase is executed on flows using HTTP transport and HTTP connector.  All test pass under the current configuration as the HTTP transport tests are executed before the HTTP connector's.   Running the connector test only or switching the order breaks the following tests:  * testAuthenticationAuthorisedGetHttps  * testAuthenticationAuthorisedPostHttps  * testAuthenticationFailureBadCredentialsGetHttps  * testAuthenticationFailureBadCredentialsPostHttps"""
"MULE-8829","Bug","Modules: HTTP",0,"NTLM proxy authentication in HTTP Requester sends basic authentication","""When a NTLM proxy is set up, the actual authentication done is Basic. This is a problem in the Grizzly provider of async-http-client."""
"MULE-8834","Task","Extensions API",1,"Fix ext-api version in 3.x","""Further development of the ext-api will continue on the Mule 4 branch and thus the version of it should be fix for 3.x"""
"MULE-8833","Task","Build: (other)",1,"Require jdk8","""Make jdk8 required and set the compilation level to 1.8"""
"MULE-8844","Enhancement Request","Core: Routing / Filters",0,"until-successful should propagate the root exception","""Currently until-successful does not propagate the root cause of the exception to the outside of the scope. There's a workaround written by John D""""Emic, it just needs to be merged to the core:  https://gist.github.com/johndemic/5670325  """
"MULE-8854","Bug","Extensions API",1,"Exceptions are wrapped in extensions API","""There's a problem when throwing certain exceptions. I was invoking a non existent method in the operation of an extension, expecting the NoSuchMethodException to be wrapped by a MessagingException. The result was a MessagingException wrapping a UndeclaredThrowableException that then contained my exception. I tracked it down to the rethrowRuntimeException method in class org.springframework.util.ReflectionUtils:   public static void rethrowRuntimeException(Throwable ex) {    if (ex instanceof RuntimeException) {     throw (RuntimeException) ex;    }    if (ex instanceof Error) {     throw (Error) ex;    }    throw new UndeclaredThrowableException(ex);   }  So it seems this involves all exceptions that are not RuntimeException or Error."""
"MULE-8867","Task","Build: Distributions",2,"Remove spring-extras module","""Remove spring-extras module from codebase and distributions"""
"MULE-8865","Task","Modules: (other)",8,"Migrate Oauth module to extensions API","""Replace current oauth module with a version developed with extensions API"""
"MULE-8864","Enhancement Request","Modules: HTTP",13,"[Spike] Migrate Http Connector to extensions API","""Replace current HTTP connector with a version developed using extensions API"""
"MULE-8863","Task","Build: Distributions",1,"Remove client module","""Remove client module from codebase and distributions"""
"MULE-8861","Task","Build: Distributions",1,"Remove builders module","""Remove builders module from codebase and distributions"""
"MULE-8898","Bug","Build: Maven",0,"mule-maven-plugin CloudHub deployment rollback not working properly","""Consider the following scenario:    1. You have application A & application B deployed on your CloudHub environment  2. You use the Maven plugin to redeploy app A & B.  3. App A deploys successfully but app B fails because the file doesn't exist or because of a connection issue.    Current behavior:   - App A will be rolled back and deleted from CloudHub (even though it existed previously)  - App B will remain on CloudHub with """"Undeployed"""" status.    Expected behavior:  A better solution would be to leave App A as it is, since it deployed correctly, and roll back deployment of App B which failed.  """
"MULE-8897","Bug","Build: Maven",1,"mule-maven-plugin CloudHub deployment fails when domain is already in use","""When trying to deploy an application to CloudHub, deployment fails if the domain is already in use.    Plugin should validate that the domain is free before trying to deploy the application."""
"MULE-8899","Enhancement Request","Build: Distributions",0,"Update Groovy to version 2.4.4","""There is a new vulnerability detected on Groovy (CVE-2015-3253) which is fixed on 2.4.4 version. Need to update to it"""
"MULE-8901","Task","Modules: HTTP",0,"Upgrade async-http-client to 1.9.31.","""Once it is available, we should upgrade to that version to fix MULE-8282 and MULE-8829."""
"MULE-8910","Enhancement Request","Extensions API",8,"Implement connection validation policy on Ext-Api","""Create a mechanism so that connections can be validated to still be functional. Notice that this is not design time connection testing but runtime validation of a connection being usable. If the validation fails, then the reconnection workflow should be triggered"""
"MULE-8909","Enhancement Request","Extensions API",8,"Implement Reconnection on the Ext-Api","""Implement Reconnection on the Ext-Api"""
"MULE-8908","Enhancement Request","Extensions API",8,"Add the concept of ExceptionEnricher in Ext-Api","""Add the concept of an ExceptionEnricher in the ext-api which gets invoked whenever an operation throws an exception. This is useful to avoid repetitive try..catch blocks.    It would be defined by an interface roughly looking like this        Then you can declare it at an Extension level:        Or at a configuration level:        A simple implementation would look similar to this:    """
"MULE-8904","Bug","Build: Maven",3,"mule-maven-plugin CloudHub redeployment configuration loss","""When you use the Maven plugin to redeploy an application with the redeploy=true flag, the existing application gets deleted before the updated application is deployed.  This behavior causes all CloudHub configured properties to be lost, and the plugin currently supports only a few of the configurations to be set on the POM file.  CloudHub configurations such as Properties, Insight and Logging need to be reconfigured every time the application is deployed.    Ideally, we should be able to specify all configurations so they can be updated through the POM file, or the Maven plugin should redeploy without deleting the existing application so we don't lose the configuration."""
"MULE-8931","Task","Build: Distributions",0,"Change ""release"" profile in EE with a new ""distributions"" profile","""Change """"release"""" profile with """"distribution"""" profile in EE to avoid the need to use the property skipDistributions=false when we wanted to build the artifacts of EE (there we use the plugins included in the profile release of CE but we didn't want to build the distributions).  *UPDATE*: After the changes: * -Prelease: you can use the -Prelease which will activate the profile release of CE without adding the distribiutions module of EE * -Pdistributions: will only add the distributions module in EE * -DbuildDistributions=true : will activate the release and distributions profile mentioned before. """
"MULE-8919","Bug","Build: Maven",1,"mule-maven-plugin CloudHub deployment does not check for file existence","""When you try to deploy a Mule application through a ZIP file, the Maven plugin does not check if the file actually exists.  If it is an unexistent file, the deployment process starts anyway and the application is created in CloudHub using the name of the given unexistent file.  The build fails because it can't deploy the application but the changes in CloudHub are already done and they're not rolled back.    The expected behavior is that the plugin checks if the file exists before making any change in CloudHub. If not, it should throw an exception and fail the build."""
"MULE-8917","Bug","Core: Transformers",0,"JMS transformer is selected even when not using JMS","""Even when JMS is not being used JMS transformer is selected."""
"MULE-8916","Bug","Core: Transformers",2,"Unclear message when more than one transformer is available","""When Mule finds more than one transformer flow execution fails. In this case we should show more information about the problem to the user, like why those transformers where selected and what to do to solve the problem."""
"MULE-8915","Task","Core: Transformers",0,"Add Visibility on which transformers are selected","""Right now users don't have visibility on which transformers are selected when the user don't specify one. To troubleshoot this the user has no other option than debug Mule code.  Solution could be to log with debug level which transformers are selected and why."""
"MULE-8927","Bug","Core: Endpoints|Transport: Email",0,"Have to manually encode @ (or other special characters) when setting the username/password for an smtp sender","""See: MULE-6279 and MULE-6139"""
"MULE-8922","Bug","Core: Expressions",0,"Enricher broken when target expression references a key inside a map","""Enriching message properties which are maps like    does not work on 3.7.x branch.  Expected behaviour is that after the enricher, product property contains both 'style' and 'items' keys, but the map is replaced with the 'items'  value    """
"MULE-8929","Bug","Modules: CXF",0,"Proxy validation looses XML tag when payload is body","""When the body tag is immediately followed by another opening tag, said tag is lost and the resulting message is incomplete. This seems to be caused by the StartBodyInterceptor which consumes it and since the ReversibleXMLStreamReader is added after it, that event is not captured."""
"MULE-8933","Bug","Core: Expressions",0,"MEL: Concat expression with an empty term throws obscure error","""When evaluating a MEL expression that happens to be invalid, the error message shows what was the expression that caused the error.    However, for some invalid expressions (i.e:     ) only the message """"not an statement"""" is logged, with no indication of what was the expression.    On non-trivial applications, this makes it very difficult to find the source of the error.  """
"MULE-8936","Enhancement Request","Modules: HTTP",3,"The 'protocol' attr in an http:request-config element does not support '${propertyname}' as value","""When using the http:request-config element in the flow.xml, the 'protocol' attr only supports HTTPS or HTTP, it does not support a property placeholder like:        Not only Studio complains of this issue, but also mule does when you start the application."""
"MULE-8939","Task","Build: Libraries / Dependencies",5,"Release MVEL 2.1.9-MULE-008","""Perform a release of MVEL that contains the fix for MULE-8831    # Update pom.xml to meet Maven Central repository requirements  # Update build plan to deploy to Maven Central  # Sign the jar using gpg  # Add javadoc plugin for releases """
"MULE-8946","Bug","Extensions API",3,"Extensions API should know the Mule API","""Ext-Api should not depend on mule-core. However, now that 4.x will contain a mule-api jar, it makes no sense to shield the ext-api from concepts like the MuleEvent.     However, ext-api is advancing faster than the mule-api which is not available yet. For that reason, components such as the ExtensionsManager or the ConfigurationProvider receive the MuleEvent as simply an Object and then cast it on the implementation.    When the mule-api becomes available with a well defined MuleEvent, those Objects should be actually typed as MuleEvent.    Although this issue uses the MuleEvent as an example, the extent of this goes beyond it and included LIfecycle, MuleMessage, etc.    TODO:  - Update MetadataResolvingException to extend MuleException  """
"MULE-8945","Enhancement Request","Core: Exception Handling|Core: Routing / Filters",0,"Exceptions in scatter-gather routes are difficult to find","""When an exception happens in a route of a scatter-gather, a composite exception is created and thrown. Even if this composite has the actual exceptions of the route(s) inside of it, they are not being sent to the log by default (only logged at DEBUG level). For troubleshooting purposes, it would make sense to have at least the original exception message logged at the ERROR level.    Also, when the exception in the route is not a MuleException (i.e.: a MEL exception), it is swallowed and not even an empty composite exception is thrown. (MULE-7975)"""
"MULE-8953","Task","Core: Transformers",8,"Use java.util.Base64 for encoding/decoding instead of custom code","""Java 8 provides a Base64 encoder/decoder (java.util.Base64) that outperforms mule's current implementation avg. execution time by 18%.    Apart for the performance gain ,we would also be relying on a standard implementation rather than a custom one."""
"MULE-8951","Bug","Transport: FTP / SFTP",0,"SFTP connection leak when the user doesn't have permissions","""When the user has no access to a file inside the folder being polled, an exception is thrown but the client used to retrieve the file is not released. This causes a connection leak (or a deadlock when using a connection pool).   Additionally, the exception is not logged in 3.7.1."""
"MULE-8955","Bug","Core: Expressions",0,"MEL: Concurrent use of a function variable fails","""There seems to be a concurrency issue with either MVEL or MEL.    Error given:      Steps to reproduce:  1. Run the application in configuration:  2. Do a request to http://localhost:8888/meltest  3. It should work.  4. Now run it with concurrency (i.e.: with jmeter). 5 simultaneus threads should be enough.  """
"MULE-8956","Bug","Modules: HTTP",0,"XPath expression right after blocking http request can't access the http response payload","""When running the given mule app, the xpath expression should be able to access the payload returned by the """"remote"""" http call.    On non-blocking requests this doesn't happen because the non-blocking handling method calls       which correctly sets the environment that the XPath evaluator uses.    This can be worked around just by adding a logger right after the http request."""
"MULE-8958","Enhancement Request","Modules: HTTP",8,"Allow insecure HTTPS connections","""It is now impossible to disable all certificate validations in HTTPS, which would be useful for QA and early development scenarios. Though -Dcom.ning.http.client.AsyncHttpClientConfig.acceptAnyCertificate=true is intended for this, we are always adding our own default TlsContext when the protocol is HTTPS and thus bypassing that AHC logic."""
"MULE-8976","Bug","Core: Domains shared resources|Core: Logging",0,"Logging of message reception is written to domain log instead of app log when sharing jms connector","""When I run the project (in standalone server), the first log messages are routed to the application log file (as expected).     The are created by thread [ActiveMQ Session Task-1]    After some (short) time, the log message are routed to the log file of the domain (not expected).     In the domain log file I have never seen a log message from Task-1, only from Task-2 to Task-5.    This bug looks like MULE-7383, but this one affects jms instead of http. """
"MULE-8988","Enhancement Request","Core: Logging",0,"When logging a payload as part of an exception message, show its content rather than its class","""When logging an exception, unless the payload is consumable, its content should be logged instead of just its class name so the developer can have a better understanding what caused the exception."""
"MULE-8987","Enhancement Request","Core: Logging",0,"Improve truncated stack trace in exception log","""The 3-line truncated stacktrace should show only mule code entries, in order to provide useful context about the exception."""
"MULE-9012","Enhancement Request","Core: Logging",3,"Include the name of the xml file where an element is declared when logging the element path","""Currently, only the mule path and the application name are being logged when logging the path of an element as part of an exception message.    For large applications composed of many files, the name of the xml file will be helpful to better find the component where the exception happened."""
"MULE-9011","Enhancement Request","Core: Logging",5,"Expand Flowstack functionality","""The list of processors that were executed as part of a message should contain all processors executed, for all flows, so that it can be queried even after the message processing finished."""
"MULE-9009","Bug","Core: API",0,"[FIX INCLUDED] MimeType is not set in DataTypeFactory","""[FIX INCLUDED]     Steps to reproduce:  Have a custom transformer which converts List<ABC> to List<XYZ>  List<ABC> will have type as java.util.List, itemType as ABC and mime as application/abc  List<XYZ> will have type as java.util.List, itemType as XYZ and mime as application/xyz    Because of the below bug None of the Collection based transformers are invoked because of the mime set to MimeTypes.ANY    I am giving the fix below and i have tested that.    MimeType is not set in DataTypeFactory.getObjectMimeType Line number 128.    Existing code:  if (value instanceof MuleMessage)          {              MuleMessage mm = (MuleMessage) value;              mm.getDataType().getMimeType();          }    Fixed code:  if (value instanceof MuleMessage)          {              MuleMessage mm = (MuleMessage) value;              mime = mm.getDataType().getMimeType();          }"""
"MULE-9016","Bug","Modules: WS Consumer",0,"Processing XLSX files that have comments in mule fails","""The failure is a NPE caused by the fact that XmlBeans.NO_TYPE is null. Issue is a wrong use of BuiltinSchemaTypeSystem in mule-common."""
"MULE-9020","Task","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",0,"Upgrade BouncyCastle libraries to latest version","""We need to upgrade BouncyCastle libraries to latest artifacts and versions as follows:    | *Artifact* | *Version* | *New artifact* | *New version* |  | bcmail-jdk16 | 1.46 | bcmail-jdk15on | 1.46 |  | bcpg-jdk16 | 1.46 | bcpg-jdk15on | 1.50 |  | bcprov-ext-jdk16 | 1.46 | bcprov-ext-jdk15on | 1.50 |  | bcprov-jdk16 | 1.46 | bcprov-jdk15on | 1.50 |  | bctsp-jdk16 | 1.46 | bctsp-jdk15on | 1.46 |"""
"MULE-9018","Task","Core: (other)|Transport: Axis",0,"Upgrade Apache Geronimo libraries to latest versions","""Upgrade Apache Geronimo libraries to latest versions    | *Artifact* | *Current* | *New* |  | geronimo-j2ee-connector_1.5_spec | 1.1 | 2.0.0 |  | geronimo-jms_1.1_spec | 1.1 | 1.1.1 |  | geronimo-jaxrpc_1.1_spec | 1.1 | 2.1 |"""
"MULE-9025","Bug","Core: Domains shared resources",0,"Changes on domain are not being registered by applications","""When updating a domain config that causes a redeploy, the related apps do not see the new changes in the domain."""
"MULE-9032","Enhancement Request","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",5,"Upgrade BouncyCastle libraries to version 1.54 or newer","""We should consider upgrading BouncyCastle to version 1.54 to leverage the latest bugfixes.  This is a security related library and we should always use the latest stable version."""
"MULE-9038","Task","Build: Distributions",3,"Build Mule 3.7.3 final binaries","""Build Mule 3.7.3 final binaries"""
"MULE-9041","Enhancement Request","Modules: HTTP",0,"Keep property with original remote address even if X-Forwarded-For present","""The HTTP module allows clients to spoof the remote address by setting whatever value in the X-Forwarded-For header.    For instance, if one makes this request:      Then the inbound properties show this:      This allows any client to forge a fake remote address.    Note:  This behaviour is intentional, as per this commit:  https://github.com/mulesoft/mule/commit/6421194922b0644687e68a57d753b8eb4bae3db6    However this poses the security issue described above.    The solution would be: http.remote.address is always the immediate IP (proxy or not). If the X-Forwarded-For header is present, an inbound property will be included in the message with its value."""
"MULE-9045","Bug","Modules: HTTP",0,"HTTP Listener not sending reason phrase when error occurs","""When an error occurs handling a request, the HTTP listener responds with a 400/500 but since no reason phrase is set it sends the default """"OK"""" which is confusing."""
"MULE-9044","Bug","Modules: HTTP",0,"HTTP Listener returning 500 instead of 400 on invalid Content-Type","""When an error occurs handling a request, the listener returns a 400/500 but since the error is not logged, there's no way of knowing what went wrong. This happens for example when sending a request with an invalid Content-Type header, when additionally a 500 instead a 400 is sent."""
"MULE-9047","Task","Extensions API",13,"Review pooling profile and pooling mechanism","""Review if we want to keep using apache as a pooling library and if we can simplify the pooling profile concept"""
"MULE-9050","Bug","Modules: Jersey",0,"Jersey module doesn't support multipart requests","""When trying to use a multipart request against a Jersey component it fails to start Mule with this error:      This is happening because multipart is not registered as valid type."""
"MULE-9051","Bug","Core: Components",0,"ForEach fails to provide path elements when not initialised ","""When trying to call the method: addMessageProcessorPathElements  In a ForEach object that has not been init the method fails with:        The reason for it is that, foreach is expecting to be initialised at this time, thus having at least 3 MP.         When not init the for each only contains those MP defined in the XML with out the splitter and the filter. So in the event the for each only contains 1 mp it fails.     The class ForEach should validate the size of the list, or at least know if it has been init in order not to fail.         """
"MULE-9053","Bug","Modules: HTTP",0,"HTTP Listener accepting invalid content-type without body and returning 500 with body","""When an invalid Content-Type is sent on a request to the HTTP listener, it is only rejected if the request has a body and with a 500 instead of a 400. If there is no body, the request goes through and (if the Content-Type is not removed or changed) fails trying to create the HTTP response. We should reject such requests with a 400, just like in MULE-9044."""
"MULE-9067","Task","Modules: HTTP|Transport: HTTP(S) / Jetty",0,"Add HTTP (transport/module) tests of empty headers","""We need to add tests on empty headers to ensure all HTTP components behave the same way."""
"MULE-9066","Bug","Core: Properties",1,"set-property throws runtime exception if the propertyName is empty","""When using set-property, if the propertyName is empty, the schema consider it as a valid value, but every attept to use it throws a java.lang.StringIndexOutOfBoundsException. As a side effect, this also makes the request fail if the set-property is in a flow which contains an http:listener element.    The solution IMHO would be changing the mule.xsd schema and adding a minLength value to the set-property element.    How to reproduce:  - Use the following mule-config. The deployment of the app will be successful.      When making a request, the config produces the following exception, and the response *never comes back*.      """
"MULE-9065","Bug","Transport: HTTP(S) / Jetty",5,"IndexOutOfBoundsException when header key has empty value","""When an empty header is sent to a Jetty endpoint, it fails with said exception."""
"MULE-9062","Bug","Core: Deployment",0,"Dropping new domain.zip file does not redeploy apps associated with that domain","""Dropping a new domain.zip for an existing domain does not trigger application redeployment.  To reproduce:  1) Start Mule  2) Drop domain zip in <MULE_HOME>/domains  3) Drop app zip (dependant on the domain) in <MULE_HOME>/apps  4) Drop a new version of the domain zip    The domain will be redeployed, but the application is not seeing the changes in the domain."""
"MULE-9061","Bug","Transport: VM",0,"RandomAccessFileQueueStore leak files and space after being disposed","""When a RandomAccessFileQueueStore is disposed, the contents of the queue files are cleared but the files themselves are recreated, causing them to accumulate.    Additionally, the CRL file is never clearer not deleted, causing a disk space leak which although small, adds up and can become significant"""
"MULE-9060","Task","Core: (other)",3,"Update commons-collections version","""The Apache commons-collections library (4.0, 3.2.1 and older) has a vulnerability in the InvokerTransformer object where serializable collections are allowed to execute arbitrary Java code, whenever the library is in the classpath.    If we have an endpoint that receives a serializable object, that object can invoke arbitrary Java code at the moment we try to deserialize it.    We should upgrade to the fixed version (3.2.2) as soon as it's available or remove the class from our classpath.  """
"MULE-9075","Task","Transport: TCP / UDP / SSL / Multicast",3,"Remove RC4 cipher suites from tls-default.conf","""As per https://tools.ietf.org/html/rfc7465 we should remove this cipher suites from our suggested ones."""
"MULE-9074","Bug","Modules: WS Consumer",5,"WebService Consumer: xsd:import for external resources through HTTP fails with java.io.FileNotFoundException","""WS consumer can't handle imported or included wsdl/xsd files when they are located externally."""
"MULE-9072","Story","Core: Event/Message",8,"Cleanup MuleSession","""Cleanup MuleSession, moving anything that can be moved to compatibility module and ensure it's not exposed as part of mule-api."""
"MULE-9084","Enhancement Request","Extensions API",13,"Allow SDK to generate Studio support","""Allow the new SDK to optionally generate Studio editors and update site. On a first pass we only require functionality similar to that provided by Devkit. We'll iterate more in the future"""
"MULE-9083","Enhancement Request","Extensions API",13,"Add the concept of Message Sources in the Ext-Api","""Allow the Ext-Api and the Ext-Framework to define and implement message sources"""
"MULE-9081","Enhancement Request","Extensions API",0,"Errors on Extension code cannot be shown properly","""When building an extension, the errors should show exactly the line of code and java element (method, parameter, field, annotation, annotation field or others) that has the error.    Currently we just show a plain text message.  """
"MULE-9078","Enhancement Request","Extensions API",5,"Add missing model validators","""The following ModelValidators are missing and should be added:    * Validate that all configuration models can be used with all operation models. This comes to the fact that an operation can require a connection type for which the available connection providers might be incompatible with certain configs (Moved to MULE-9214)  * Validate that no parameters, configs nor operations are named as any of the following reserved words: name, config, configRef, connection.  * Validate clashes on @ParameterGroup fields  * Move some validations currently in ImmutableParameterGroup to validators  * Validate that all connection providers have different names. Hint the user into using the @Alias annotation to customize the provider's names.  """
"MULE-9076","Task","Core: Event/Message",8,"Spike: Remove MuleEvent dependency on MuleContext if possible.","""."""
"MULE-9127","Task","Core: (other)",0,"Define future of tomcat module",""" Define future of tomcat module"""
"MULE-9123","Task","Modules: Management / JMX",0,"Discuss managment support for extensions and JMX support","""Discuss managment support for extensins and JMX support"""
"MULE-9120","Task","Modules: Devkit Support",2,"Remove devkit-support module ","""Remove module from the Mule 4 project"""
"MULE-9116","Task","Modules: (other)",3,"Remove annotations module","""1.2.18 Clean up annotaitons module"""
"MULE-9115","Task","Transport: JMS",8,"Remove JMS transport","""1.2.17 Remove JMS transport"""
"MULE-9113","Task","Transport: TCP / UDP / SSL / Multicast",5,"Remove TCP transport","""1.2.13 Remove TCP transport"""
"MULE-9112","Task","Transport: TCP / UDP / SSL / Multicast",5,"Remove SSL transport","""1.2.14 Remove SSL transport"""
"MULE-9140","Bug","Modules: HTTP",0,"""host"" header expected even for HTTP 1.0 clients","""A minimal HTTP 1.0 request that doesn't include the Host header makes the listener to throw a 500 HTTP response status, triggering the issue. The Host header should be mandatory only in HTTP 1.1.    Also, 1.1 clients omitting the host header should receive a 400 status instead of the 500 that is being sent."""
"MULE-9138","Task","Core: Deployment",0,"Fix flaky DeploymentServiceTestCase","""Fix flaky test redeployModifiedDomainAndRedeployFailedApps in DeploymentServiceTestCase."""
"MULE-9144","Bug","Transport: FTP / SFTP",0,"SFTP Request doesn’t autoDelete original file","""When using MuleClient to use a SFTP endpoint, autoDelete property of the endpoint or the connector is being ignored, behaving as if it were false."""
"MULE-9142","Bug","Core: (other)",8,"Transformed value is lost when transformed value datatype does not match the expected one","""After applying a transformation, the TransformationService checks whether or not the resulting value is of the expected type and if it does not match, then it must throw an exception.  The problem is that, as the message is immutable, in cases when the payload is consumable both the original and the transformed values will be lost.  As the transformation service throws an exception, that is the only place where a message containing the new payload can be placed."""
"MULE-9149","Task","Build: Libraries / Dependencies",3,"Upgrade antlr to 3.5","""We need to upgrade this dependency to match the one in mule-common and avoid conflicts. The affected modules would be drools and jBPM."""
"MULE-9148","Task","Build: Integration Tests",0,"Fix flaky ProcessorsTraceTestCase / MessageProcessorNotificationTestCase","""Fix flaky tests"""
"MULE-9146","Bug","Core: Concurrency / Threading",0,"AsyncUntilSuccessful uses a fixed thread pool","""When defining a threading profile for a asynchronous until successful the concurrent threads won't pass the value defined for maxThreadsIdle, when it should grow up to maxThreadsActive.    This is because AsynchronousUntilSuccessfulProcessingStrategy creates a scheduled executor that has a fixed thread pool by definition.    From https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html    bq. While this class inherits from ThreadPoolExecutor, a few of the inherited tuning methods are not useful for it. In particular, because it acts as a fixed-sized pool using corePoolSize threads and an unbounded queue, adjustments to maximumPoolSize have no useful effect. Additionally, it is almost never a good idea to set corePoolSize to zero or use allowCoreThreadTimeOut because this may leave the pool without threads to handle tasks once they become eligible to run."""
"MULE-9155","Bug","Extensions API",5,"@Optional should not be allowed when @Parameter group is used","""When using @ParameterGroup, @Optional should be marked as an error.    """
"MULE-9154","Bug","Extensions API",0,"@Optional should not be allowed as a modifier for methods","""@Optional can currently be used to annotate methods.     User should not be able mark methods with @Optional"""
"MULE-9153","Enhancement Request","Extensions API",2,"Add support for interfaces as parameters of an @Operation","""When using interfaces as parameters of an operation, it fails to generate the Extension module giving a missleading wrong error message.    Whe should add the support to have interfaces as parameters.    Current error log:  """
"MULE-9160","Enhancement Request","Core: Logging",5,"Upgrade to Log4j latest version","""https://issues.apache.org/jira/browse/LOG4J2-998 figures as already fixed in 2.3 and 2.5 is already out.  Mule is currently using 2.1  This may allow to get rid to some custom hacks currently being done in Mule side."""
"MULE-9158","Task","Core: Transformers",8,"Change TransformationService to not mutate MuleMessage","""There are two parts to this:  * applyTransformers() methods:  ** Update applyTransformers() method signatures to return a MuleMessage instance.  ** Change implementation of  applyTransformers() to return a new message instance with the result of the transformation rather than mutating the original message instance.  ** Update all uses to use the return value as the result of the transformation.  * getPayload() methods:  ** Remove the logic that transparently transforms consumable payloads by mutating the message and setting a byte[] representation.   ** Calls to getPayload() that require transformation of a consumable payload will now fail.  ** Update uses to perform transformation to non-consumable prior to getPayload() if required.  ** Update getPayloadForLogging() implementation to return something like “Stream payload (InputStream)” instead of failing or performing translation. ** Ensure getPayloadForLogging() is only used for system logging and not used be user configured <logger/> component."""
"MULE-9157","Task","Core: (other)",2,"Remove BootstrapServiceDiscoverer reference from MuleContext","""As part of MULE-9089 MuleContext was updated in order to provide a BootstrapServiceDiscoverer.  That was done to make easier to start migration to the new container model and must be removed and repalced with dependency injection once the rest of the code is also migrated."""
"MULE-9164","Task","Build: Libraries / Dependencies",5,"Release MVEL 2.1.9-MULE-009","""Perform a release of MVEL that contains the fix for the linked issues."""
"MULE-9163","Bug","Core: Expressions",0,"MVEL gets in an infinite loop in CompileException","""An infinite loop happens when building an error message for an invocation on a null object.    This is already fixed in MVEL repo: https://github.com/mvel/mvel/commit/188660b2eb6dab8d2262cd385b270017f4a50047"""
"MULE-9162","Bug","Core: Lifecycle",2,"ForEach component is loaded twice into the Registry","""This is the root cause of MULE-9161    Analyzing the registry when the exception occurs, it is seen that the registry contains an additional uninitialized ForEach component."""
"MULE-9168","Bug","Extensions API",8,"Users should not be forced to use @Parameter to expose pojo fields","""In order to expose pojo fields users are force to annotate the each field with @Parameter.    When users consumes external jar, they cannot modify the code. Also if they generate java stubs from a WSDL using CXF, they will need to modify a huge amount of Pojos just to get this to work properly, and what is worst, if a new version of the WSDL goes out and you try to update your connector, you will lose everything after generating the new stubs.    The mechanism should be that if the Pojo has any field annotated with @Parameter, then the current logic is valid and should only expose those fields. However, if the Pojo has no @Parameter, every single field that has a gettter and setter should be taken into account (including nested pojo fields)"""
"MULE-9171","Bug","Extensions API",3,"When using only one @Configuration users should not be forced to specify a config name","""When writing an Extension with only one class annotated with @Configuration with no name, validations fails forcing you to specify a name for the annotation.    If you don't specify a name it fails.      The @Configuration should have a name by default and only check collisions of the name attribute"""
"MULE-9174","Bug","Transport: JMS",0,"Security credentials not passed to JMS broker when using 1.0.2b spec","""When using JMS 1.0.2b, and *cacheJmsSessions* is not set to *false*, credentials are not passed to the JMS Connection."""
"MULE-9173","Enhancement Request","Modules: CXF",0,"Exclude xalan serializer from CXF","""Nowadays, xalan is excluded from all dependencies and only added when necessary with version 2.7.2. The serialised however is not excluded and even though it is not part of the distribution, the CXF module does include it because of a transitive dependency with version 2.7.1. This causes trouble since the two versions don't match."""
"MULE-9182","Bug","Modules: CXF",0,"CXF proxy trying to send response for one-way operations","""When invoking SOAP webservice - Proxy Service, calling a one-way operation (no output defined) the response builder of http fails with the stack:        When the operation is one-way, an empty payload and status code 202 must be returned."""
"MULE-9181","Enhancement Request","Extensions API",13,"Allow users to write Transformers as part of their extension","""Users should be able to write Transformers in their extensions"""
"MULE-9180","Enhancement Request","Extensions API",5,"Add support for a Palette Name so that extension can define the display name (like the friendlyName of @Connector)","""Users need to be able to specify a friendly name that will be used to generate the display name of the extension.    For example salesforce extension should say """"Salesforce"""" in the palette, and we cannot generate this form the namespace nor the class name."""
"MULE-9185","Bug","Core: Event/Message",0,"Cleanup of Events put in ThreadLocal with RequestContext","""By using RequestContext and OptimizedRequestContext, the event is put into the ThreadLocal of the processing thread. However, the thread may belong to a pool defined in a domain, and not clenaing the RequestContext properly will result in application stuff being referenced by domain objects, and these will not be garbage collected when undeploying the application while keeping the domain."""
"MULE-9183","Bug","Modules: CXF",0,"CXF: Status code for successful one-way operations should be 202","""For web service invocations that do not return an envelope (like one-way operations), status code 202 (Accepted) has to be returned instead of 200 (Ok)    Reference: http://www.w3.org/TR/soap12-part2/#http-reqbindwaitstate"""
"MULE-9193","Bug","Transport: XMPP (Jabber)",0,"Big memory footprint on XMPP Transport: org.jivesoftware.smack.PacketCollector","""XMPP transport uses smack, which stores in memory a large number of objects for the received messages. On versions later that the one currently in use in Mule, the max size of this objects to store is configurable."""
"MULE-9191","Enhancement Request","Transport: FTP / SFTP",13,"Spike on new FTP connector","""Spike on a new FTP connector which is consistent with the new File one"""
"MULE-9189","Bug","Modules: Management / JMX",0,"RegistrationException ""More than one AbstractJmxAgent"" when using domain and enabling jmx","""When starting an application that has a jmx agent, and that application is in a domain other than default, with Mule version 3.7.2, you should get:  RegistrationException: More than one object of type class org.mule.module.management.agent.AbstractJmxAgent registered but only one expected.  If you change the app's domain back to """"default"""" (the one it's using has no configuration), that exception will not happen on startup.  In /META-INF/services/org/mule/config/registry-bootstrap.properties in mule-module-management-3.7.2.jar there are these two agents which are getting picked up automatically by Mule on startup:  jmx-agent=org.mule.module.management.agent.JmxApplicationAgent,applyToArtifactType=app  domain-jmx-agent=org.mule.module.management.agent.JmxDomainAgent,applyToArtifactType=domain  Mule 3.7 uses one registry so maybe that is why this exception is happening."""
"MULE-9187","Story","Core: Event/Message",1,"Improved DataType support in MuleMessage to include information of types of list payload","""This is related to consolidation of dataType in mule/ext-api/mule-commons."""
"MULE-9196","Bug","Core: Transformers",8,"JAXBMarshallerTransformer fails to transform to byte array","""JAXBMarshallerTransformer fails to transform to a byte array.    The easy fix is to add an if in JAXBMarshallerTransformer for byte array. But the real fix seems to be fix the auto transformation logic. Since JAXBMarshallerTransformer knows how to transform to a String and mule knows how to transform from String to byte array then the auto transformation should work."""
"MULE-9195","Enhancement Request","Modules: HTTP",8,"Review new HTTP module if should propagate root message id as old transport","""Old transport propagates the root message id using HTTP headers. We need to define if we want to keep this functionality in Mule 4."""
"MULE-9207","Bug","Core: API",2,"ConnectionProvider getHandlingStrategy must receive a parameterized ConnectionHandlingStrategyFactory","""Current ConnectionProvider getHandlingStrategy interface method receive a ConnectionHandlingStrategyFactory raw type parameter, this  results in an unchecked warning on every implementation of this method.  The signature of the method must be  """
"MULE-9205","Bug","Transport: XMPP (Jabber)",0,"XmppMessageDispatcher doesn't reconnect","""h3. Problem description    The customer is working in a scenario where the XMPP Server (Openfire) can disconnect Mule ESB as a client.     The class *org.mule.transport.xmpp.XmppConnector* doesn't implement any mechanism to validate the underlying *org.jivesoftware.smack.XMPPConnection*    The class XMPPConnection has the method *isConnected()* that could be used to validate the connection before dispatching messages, and eventually fire a reconnection, if needed.    Note that during my tests I was able to verify that killing Openfire (with kill -9), no reconnection strategy was fired.    Reconnection seems to work only when at initialization time it detects that there is no connection towards the XMPP Server."""
"MULE-9204","Enhancement Request","Modules: HTTP",5,"HTTP Requester + OAuth: Add the option to send Client id/secret with Basic Auth using Client Credentials","""Right now the HTTP Requester sends the client_id and client_secret in the request-body.     This is a valid option but the RFC also allows to send them using Basic Authentication:  * https://tools.ietf.org/html/rfc6749#section-2.3.1     For example Paypal and Spotify APIs only support to send them using Basic Auth.  * Example: https://developer.paypal.com/docs/api/#oauth-request--response      """
"MULE-9203","Bug","Modules: HTTP|Modules: WS Consumer",8,"MTOM attachments not working with WS consumer and HTTP listener","""See MtomFunctionalTestCase.    Fails because it seems there's a malformed response."""
"MULE-9202","Task","Modules: HTTP",2,"Review new http module and password encryption filter","""Old http transport inbound endpoint allow to configure a filter to do some kind of encryption /decription over the password.                    <inbound-endpoint address=""""http://localhost:${port1}"""">                      <encryption-security-filter strategy-ref=""""PBE""""/>                  </inbound-endpoint>    See EncryptionFunctionalTestCase and PlainTextFunctionalTestCase    We need to define if we want to support this functionality in the new HTTP module. The main problem is the usage inside a composite source."""
"MULE-9201","Bug","Modules: HTTP",0,"HTTP request should throw a ConnectException when it fails to send a request","""Test ExceptionStrategyCommonScenariosTestCase.testStopFlowBasedOnExceptionType is failing because the HTTP request element is not thrown a ConnectException. Is thrown a plain MessagingException."""
"MULE-9200","Bug","Modules: HTTP",2,"Fix context shutdown test cases with http:listener","""Some test cases in ValidShutdownTimeoutRequestResponseTestCase and ExpiredShutdownTimeoutRequestResponseTestCase are failing after migration to new http module."""
"MULE-9199","Bug","Modules: HTTP",0,"HTTP client in devkit support not working against HTTP listener","""The http client in devkit support is failing against and http:listener.    The http client implementation is really poor, so was the old http transport and that may be the cause of the failure, bad implementation. Perhaps is better to use a http client library in devkit support instead of a custom implementation."""
"MULE-9215","Enhancement Request","Transport: File",2,"File system connectors should default to mule message information when possible","""As it is today, the filesystem connectors require the user to provide path and content for each operation.     That's great for some cases. In other cases in which the mule message already contains a reference to a file, those attributes should be optional and the connectors should be smart enough to get the necessary parameters from the message itself."""
"MULE-9214","Enhancement Request","Extensions API",3,"Add missing syntax validators for annotation driven extensions","""*Add missing syntax validators for annotation driven extensions*  * Validate @UseConfig or @UseConfig are used more that once  * Validate if configurations or connection providers from the @Extension are compatible with every @UseConfig or @Connection type from the @Operations"""
"MULE-9213","Enhancement Request","Transport: FTP / SFTP",3,"Transfer mode and passive attributes should not trigger new config instances","""Currently, the passive and transferMode attributes in the new FTP connector are dynamic. However, those should accept expressions but not trigger new config instances since those shouldn't require a new pool to be created.    Leverage MULE-9211 to allow this."""
"MULE-9211","Enhancement Request","Extensions API",8,"Configurations should be able to have dynamic parameters which don't trigger dynamic configurations","""Currently, all configuration parameters with expression values are translated into a DynamicConfigurationResolver. This is fine for most cases    There're other cases though in which it's desirable to have dynamic values which shouldn't necessarily trigger a new config instance. For example, an FTP connector which needs to switch between ASCII and BINARY mode. It should be fairly easy to switch modes through the use of an expression, but we don't want to trigger new connection pools for each case. Only connection credentials should trigger that.    To enable this case, we can leverage the ValueResolver<T> object which already exists in the extension-support module.    The config can have:        and then when you want to get the value you go:    """
"MULE-9217","Task","Core: (other)",1,"Update spring schemas to 3.8","""Update spring schemas to 3.8"""
"MULE-9216","Enhancement Request","Transport: File|Transport: FTP / SFTP",0,"Introduce the new File and FTP connectors","""Introduce the base for the new file and ftp connectors (even though future commits will keep adding features)"""
"MULE-9226","Bug","Transport: JMS",0,"Logging issues when using domain configuration with JMS connector","""JMS receiver is not setting the context classloader of the application its message is for. This causes that when the message is received by a thread managed by the domain or an embedded broker, any log entries for that message processing do not end up in the application log."""
"MULE-9225","Bug","Core: (other)",5,"If the @XML annotation is not present, the extension should not fail.","""Currently when creating an extension, the @XML annotation is mandatory, we should specify at least the namespace of the extension.    If the @XML annotation is not present, this error is thrown   [ERROR] diagnostic: error: xml model property cannot be null.    Instead of creating a validator for avoiding this error, we must implement a default behaviour for the @XML annotation when it is not present.    The behavior should be that:    1) The annotation can be either completely absent or present but with all optional parameters  2) The namespace attribute will be derived from the extension name by transforming to lower case, removing all occurrences of the """"connector"""" String and hyphenizing  3) The schemaLocation should default to http://www.mulesoft.org/schema/mule/{1}, where {1} is replaced by the namespace value  4) The schemaVersion should default to the Major and minor components of the Semver extension version, without classifiers. For example: 4.0.0-SNAPSHOT should translate to 4.0    """
"MULE-9224","Bug","Core: Routing / Filters",0,"Using multiple threads in an until successful causes an exception if the message is rejected","""When a thread stores an event for processing, it owns it's message. If the pool has many threads another might pick it up and though it copies it for processing it does not when abandoning the retries and calling the exception handler (no DLQ is configured) which need to add the exception payload, so an access violated error occurs."""
"MULE-9233","Enhancement Request","Transport: File|Transport: FTP / SFTP",5,"File connector requires a custom matcher","""The file connector has the concept of creation, modification and access timestamp for files.    The rest of the file connectors most commonly only have the concept of timestamp which is tied to modification time.    As defined today, all the connectors based on file-common have the 3 concepts. It should be possible for the FTP family to only handle a timestamp and only file have the specific concept"""
"MULE-9232","Enhancement Request","Transport: File|Transport: FTP / SFTP",8,"Update File and FTP connectors to leverage the changes in the new MuleMessage","""The work on MULE-9216 is based on a FilePayload pojo which is set as payload. Per the changes in the new MuleMessage structure this should be revamped as:    * The input stream goes into the payload  * The rest of the attributes go into a FileAttribute pojo which is set as metadata  * The list operation returns a List<MuleMessage>"""
"MULE-9229","Bug","Core: Routing / Filters",0,"UntilSuccessfulTestCase is throwing NPE","""It seems the exception handler was not added to the until-successful functional test case so some of the tests are throwing NPEs."""
"MULE-9228","Task","Extensions",5,"SDK: Split extensions parent POM, for internal and external extensions","""*Split extensions parent POM*    * Create a new Parent POM for external (to Mule Distribution) extensions, to be used by MuleSoft internal connectors (Salesforce, Workday, etc) and third party (custom connectors, certification).  ** One of the problems the actual POM is that project version (the extension version) is attached to all Mule dependencies version. For external connectors, this should be detached .  * Rollback the changes made in the actual extensions POM, to be used exclusively for Mule Distribution extensions. (MULE-9055)"""
"MULE-9239","Task","Core: (other)",0,"Extract FlowStack testing code to a common location","""So it can be reused by other modules that include components that support flowStack"""
"MULE-9237","Bug","Core: Exception Handling",0,"Null pointer while catching the exception thrown from Enricher processor","""When exception is caught that was thrown from Enricher processor, it throws null pointer exception     org.mule.exception.CatchMessagingExceptionStrategy: Caught exception in Exception Strategy: null  java.lang.NullPointerException   at org.mule.processor.AbstractRequestResponseMessageProcessor$1.processReplyTo(AbstractRequestResponseMessageProcessor.java:107) ~[mule-core-3.7.2.jar:3.7.2]   at org.mule.routing.requestreply.AbstractReplyToPropertyRequestReplyReplier.processReplyTo(AbstractReplyToPropertyRequestReplyReplier.java:67) ~[mule-core-3.7.2.jar:3.7.2]   at org.mule.routing.requestreply.AbstractReplyToPropertyRequestReplyReplier.process(AbstractReplyToPropertyRequestReplyReplier.java:43) ~[mule-core-3.7.2.jar:3.7.2]"""
"MULE-9246","Enhancement Request","Extensions API",3,"SDK: Extend IllegalModelDefinitionException to be more specific when validating the Extension model","""*SDK: Extend IllegalModelDefinitionException to be more specific when validating the Extension model*    In some test cases like: *ExtensionBuildersTestCase* there are some test cases that are expecting *IllegalModelDefinitionException* or *IllegalArgumentException* that are caused due to some model validations, and a problem that is happening, that maybe a new validation is added and all tests cases still failing with the expected Exception but with an incorrect cause.  To solve this:  * Review all kinds of exceptions thrown by the validations, and check if make sense to migrate from an super generic *IllegalArgumentException* to an *IllegalModelDefinitionException*.  * Extend *IllegalModelDefinitionException* to be more specific in the validation error. An approach could be extending for any kind of model available (Operation, Configuration, Connection Provider and also for Parameters). For example: If it fails because the configuration was not configured with a *ConfigurationFactory*, It should fail with a *IllegalConfigurationModelDefinitionException*.  * Review all ModelValidators to throw proper exceptions."""
"MULE-9260","Enhancement Request","Extensions API",5,"Add support for TlsContext in SDK","""It should be possible in the SDK to have configurations/connection providers which receive a TlsContextFactory:        This should automatically generate the proper support to configure a tls-context element reusing the existing infrastructure.     If the parameter is also marked as @Optional, then the default TlsCOntext should be injected if the element is not present on the XML"""
"MULE-9258","Story","Extensions API",8,"Support to receive Mule expressions as parameters without getting resolved","""Add support on the SDK for receiving MEL expressions without getting the string evaluated.    This features was supported in DevKit as described here:   https://www.mulesoft.org/jira/browse/DEVKIT-245    This will be supported both for @Parameters and Operation arguments, when they are annotated with _@Literal_  When @Literal is used, ExpressionSupport should be _SUPPORTED_."""
"MULE-9255","Bug","Extensions API",2,"Allow users to use Text editor for long String input fields","""For long String input fields, users should be able to mark the fields with @Text to generate a text editor instead of a String editor, as the DevKit did."""
"MULE-9252","Bug","Extensions API",2,"Allow users to use password editor for sensitive data fields","""When a field is related to sentisitive data, like passwords or tokens, users should be able to use the password editor field.    To do this, users should be able to mark the parameters and configurable field with @Password."""
"MULE-9251","Enhancement Request","Extensions API",13,"Add support for Maps in the SDK","""Add support to allow configurations and operations to receive Map parameters"""
"MULE-9250","Bug","Extensions API",3,"Remove extensions test jars from mule distribution","""Currently, when creating the studio distributions, extensions used for testing only are being discovered inside the runtime. (Heisenberg Extension).    This jar should not be included in the distribution, or at least we should have a flag that needs to be explicitly provided for this jars to be included."""
"MULE-9269","Bug","Extensions API",8,"SDK: Parameter classes names clashes with Operations, Configurations and ConnectionProvider names","""*SDK: Parameter classes names clashes with Operations, Configurations and ConnectionProvider names*    * In case that you define a *@Operation* like:    Will generate a schema like:    When the Mule Application start a *SAXParseException* is thrown due there are two elements defined with the same name:    * The same issue can occur when you have a *ConnectionProvider* and a *Operation*: For Example a *ConnectionProvider* without an *Alias* _(so """"connection"""" as name)_ and a POJO Parameter of type """"Connection"""" with generate two elements with """"connection"""" as name.    *Work to do*: Add more name clashing validations _(Taking in consideration Parameters types names, ConnectionProviders names, Operations names and Configuration names)_ for this cases to fail nicely at Extension generation time, and not fail at runtime when the Mule App starts.    """
"MULE-9268","Bug","Extensions API",0,"Allow studio to discover and instantiate ExtensionModels","""Allow studio to discover and instantiate ExtensionModels.    We need to provide an interface that Studio can use to discover extensions given a runtime or extension.    """
"MULE-9266","Bug","Extensions API",3,"SDK: Default values are not registered in the Extension XSD","""*SDK: Default values are not registered in the Extension XSD*    *Issue:*  * The SchemaBuilder class provides the createAttribute() method to create an attribute for the Extension XSD, but the method signature doesn't provide a way to configure the default values of the attributes.    *Symptoms:*  * Luckily _(And not so luckily)_ when the attribute is based in a *ParameterModel*, the default value is grabbed from the model and not from the XSD so this bug doesn't affect that kind of attributes.  * This bug affects to attributes that are doesn't based in any kind of Model, like *disableValidation* , from *ConnectionProvider*, which should have a """"true"""" value by default or POJOs when are configured without *@Parameter* fields.    *Work to do:*  * *createAttribute()* signature should provide a way to give a default value.  * Fix all places where a *createAttribute()* with Default Value it's required."""
"MULE-9273","Bug","Core: Logging",1,"Troubleshooting: There are some components that only shows the exception message without element xml, element, etc","""There some components that when the throw exception they don't show the element, element xml, etc.     I have found that VM, Dataweave, Expression Transformer and Groovy Transformer have this issue.    +The groovy transformer exception looks like this:+    ********************************************************************************  Message               : groovy.lang.MissingPropertyException: No such property: lala for class: Script5  Possible solutions: class (javax.script.ScriptException)  Transformer           : ScriptTransformer{this=1a4cfd8, name='ScriptTransformer', ignoreBadInput=false, returnClass=SimpleDataType{type=java.lang.Object, mimeType='*/*', encoding='null'}, sourceTypes=[]}  --------------------------------------------------------------------------------    +Expression Transformer exception looks like this:+    ********************************************************************************  Message               : Execution of the expression """"fail"""" failed. (org.mule.api.expression.ExpressionRuntimeException)  Transformer           : ExpressionTransformer{this=58e8d62c, name='ExpressionTransformer', ignoreBadInput=false, returnClass=SimpleDataType{type=java.lang.Object, mimeType='*/*', encoding='null'}, sourceTypes=[SimpleDataType{type=java.lang.Object, mimeType='*/*', encoding='null'}]}  --------------------------------------------------------------------------------"""
"MULE-9272","Bug","Modules: HTTP",1,"Improve logging when a TLS error occurs","""Right now we might get a """"Remotely closed"""" IOException in the requester, with no relation to TLS or tip to debug it, and no message at all in the listener. """
"MULE-9271","Bug","Extensions API",8,"SDK: POJO fields with and without @Parameter annotation doesn't get validated","""*SDK: POJO fields with and without @Parameter annotation doesn't get validated*  * By now all *@Parameter* fields from *Configurations*, *Extensions* and *parameters of operations* are validated by the {{ParameterModelValidator}} with exception of the *@Parameter POJO fields* and the *fields of a POJO without that annotation*. *Why?* Because this fields are not described in a intermediate model, unlike the other examples, they are just taken in taken in account to generate the schema. * *Approaches:*  ** Create a model for this kind of fields or use an existing model, and integrate them to the actual validation system. ** Validate at SchemaBuilding time, horrible, duplicated code. ** Other? sure."""
"MULE-9280","Task","Core: Event/Message",2,"Extract Static/Request context from MuleEvent into ExecutionContext","""ExecutionContext should be immutable and have a factory that can be used from MessageSources, where some values used in the ExecutionContext are provided by the source itself, while others are provided by Mule as required."""
"MULE-9277","Bug","Core: Logging",1,"Troubleshooting: Expression component doesn't show the doc:name, element xml and number line in the exception logging","""Troubleshooting: Expression component doesn't show the doc:name, element xml and number line in the exception logging"""
"MULE-9276","Enhancement Request","Core: Logging",1,"Troubleshooting: It would be nice to add the payload type in the exception logging","""Right now if the payload is not consumable you see the content of the payload but the type is not shown. You can guess but you are not 100% sure if the payload is a string or another type that as the toString is apply to show the content.     It could be added at the beginning of the """"payload"""" field (if it is at the end and the payload is long, for example a json it will be difficult to see it) or in another field like """"payload type"""" (in this case it will be added only when the payload is non-consumable) """
"MULE-9275","Bug","Core: Logging",1,"Troubleshooting: When an exception is thrown in a for_each component the element appear with null ","""When an exception is thrown in a for_each component the element appear with null:    ********************************************************************************  Message               : Execution of the expression """"collection"""" failed. (org.mule.api.expression.ExpressionRuntimeException).  Payload               : org.glassfish.grizzly.utils.BufferInputStream@72503074  FlowStack             : at for_each_flow(/for_each_flow/processors/0 @ troubleshooting_for_each_null:troubleshooting_for_each_null.xml:14 (For Each))  Element               : null @ troubleshooting_for_each_null:null:null  --------------------------------------------------------------------------------"""
"MULE-9290","Bug","Extensions API",5,"Extensions fail to build if parameter has a wildcard generic","""Consider an extension with a parameter like this:        Building such a extension results on the following error:        The problem is that because the generic is a wildcard, the ResolveableType  obtained by IntrospectionUtils.getFieldDataType() returns a null rawClass. As a result, the generated DataType points to a null class which in turn causes a NPE when an attempt is made to obtain a qualifier.    The SDK should:    * Ignore a type's generics one they contain at least one wildcard (consider cases like Map<String, ?>  * Log a warning when it founds a wildcard generic  * Also verify this behaviour for the case of operations in which the parameters are obtained from method arguments instead of fields  """
"MULE-9313","Bug","Core: Expressions",0,"MVEL expressions that return NullPayload must return the object","""The following premises should apply:    - When comparing a NullPayload with null in a MVEL expression, it must return true.  - When getting a NullPayload, it must get a NullPayload instance instead of null."""
"MULE-9318","Enhancement Request","Build: Libraries / Dependencies",0,"Update joda-time to version 2.9 or newer","""We need to update joda-time to the latest version due to compatibility issues with the latest updates of Oracle JDK 8"""
"MULE-9317","Bug","Transport: HTTP(S) / Jetty",0,"HTTP outbound credentials not picked up if credentials exist from inbound","""Customer has a http outbound which needs basic authentication. What he observed is if the inbound is a file connector, it works correctly; however if the inbound is a ftp/sftp connector which has username/password set, it fails with 401. """
"MULE-9314","Task","Modules: XML, XSLT, XPath, SXC",5,"Upgrade libraries and remove deprecated components in XML module","""Upgrade saxon and remove all the deprecated components in mule-module-xml"""
"MULE-9324","Bug","Transport: File",0,"No exception is thrown when folder in path is removed","""During run-time if the path to pool files from using the File transport is removed or renamed then the File Transport pooling will not throw any exception."""
"MULE-9323","Bug","Modules: WS Consumer",0,"WS consumer fails when reading secured WSDL","""When a wsdl is secured with basic credentials the WS consumer fails to start.    The WS consumer does create the following configuration in Studio:      As you can see the authentication is sent as part of the URL."""
"MULE-9320","Task","Extensions API",5,"Define threading model for message sources in Mule 4","""In Mule 3, receivers have a thread pool which they use to run the generated message through the flow.    Receivers no longer exist in 4 so we need to define if:    * Each MessageSource creates its own thread pool (that's what temporarily happening right now, although it's not possible to configure it)  * Each flow has its own thread pool and the message source consumes that  * Some other cleaver thought"""
"MULE-9330","Bug","Transport: File",3,"Misconfigured file:list throws unfriendly error","""The following log is obtained from a misconfigured file:list operation:    {code}    ERROR 2016-01-15 14:34:43,672 [[ftp-app].ftp-appFlow.stage1.02] org.mule.exception.DefaultMessagingExceptionStrategy:   ********************************************************************************  Message               : null.  Payload               :   Element               : /ftp-appFlow/processors/0 @ ftp-app  --------------------------------------------------------------------------------    [2:35]   ERROR 2016-01-15 14:34:55,674 [[ftp-app].ftp-appFlow.stage1.02] org.mule.exception.DefaultMessagingExceptionStrategy:   ********************************************************************************  Message               : null.  Payload               :   Element               : /ftp-appFlow/processors/0 @ ftp-app  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.NullPointerException      at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)      at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)      at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)      at sun.nio.fs.AbstractPath.resolve(AbstractPath.java:53)  {code}    Error message should be friendlier and more descriptive about the problem that actually happened. The configuration that generated this is:    {code:xml}  <?xml version=""""1.0"""" encoding=""""UTF-8""""?>  ​  <mule xmlns:file=""""http://www.mulesoft.org/schema/mule/file"""" xmlns=""""http://www.mulesoft.org/schema/mule/core"""" xmlns:doc=""""http://www.mulesoft.org/schema/mule/documentation""""   xmlns:spring=""""http://www.springframework.org/schema/beans""""    xmlns:xsi=""""http://www.w3.org/2001/XMLSchema-instance""""   xsi:schemaLocation=""""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd  http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd"""">      <file:config name=""""File_Connector_config"""" baseDir=""""/Users/pablocabrera/dev/connectors/connector-name-connector"""" doc:name=""""File Connector config""""/>      <flow name=""""ftp-appFlow"""">          <poll doc:name=""""Poll"""">              <logger message=""""Started Flow"""" level=""""INFO"""" doc:name=""""Logger""""/>          </poll>          <file:list config-ref=""""File_Connector_config"""" doc:name=""""File Connector""""/>          <logger message=""""#[payload]"""" level=""""INFO"""" doc:name=""""Logger""""/>      </flow>  </mule>  {code}"""
"MULE-9329","Task","Extensions API",3,"Rethink SDK support for data types","""Currently, the SDK supports obtaining and setting the output message through a combination of the following:    * ContentType interface  * ContentMetadata interface  * ContentMetadataParameters annotation    Given that the DataType is now a first class citizen on the new MuleMessage API, we need to rethink if it makes sense to continue to do things like that or if we should just use a simpler, MuleMessage based model"""
"MULE-9328","Enhancement Request","sdk",13,"Add support for reconnection on SDK message sources","""Extend the work done in MULE-8909 to augment MULE-9083"""
"MULE-9327","Enhancement Request","Extensions API",5,"Add support for new MuleMessage in the SDK","""SDK should no longer be compatible with the Mule 3.x MUle Message. Instead, it should only support the new MuleMessage interface defined in mule-api.    Because the new mule message is meant to be immutable but we still haven't reach that point, operations which return a MuleMessage must set the payload, attributes and dataType of the returned message into the one that entered the pipeline.    If the attributes or dataType of the returned message are null, then the values currently set on the original message must be preserved.    Operations will no longer be allowed to return a MuleEvent."""
"MULE-9326","Enhancement Request","Extensions API",5,"Add the 'target' synthetic parameter on all SDK operations","""All operations written through the SDK must automatically include a parameter named target. This parameter is an optional String and doesn't support expression.    When provided, it means that the message that first entered the OperationMessageProcessor must leave it untouched. However, whatever output the operation produces must be propagated on a new MuleMessage which is set on a flowVar which name is taken from the target property"""
"MULE-9336","Enhancement Request","Extensions API",3,"Review the implementation of RetryPolicyTemplates in Extensions API to support Async/Non Blocking","""*Review the implementation of RetryPolicyTemplates in Extensions API to support Async/NonBlocking*    * Extensions API uses RetryPolicyTemplate to do the retry logic in case of ConnectionExceptions. The problem comes that this RetryPolicyTemplate comes in two flavours Sync and Async, which the last one is not supported nowadays.  * This is could be an importante feature in case of transactional scopes.  """
"MULE-9335","Task","Core: Expressions",3,"Remove Expression Evaluators","""Remove expression evaluators"""
"MULE-9338","Task","Transport: FTP / SFTP",0,"Fix flaxy SFTP tests","""Fix flaxy SFTP tests"""
"MULE-9346","Bug","Core: Event/Message",0,"MESSAGE_SEND_BEGIN event for EndpointMessageNotification is sent after the outbound call is executed","""The event MESSAGE_SEND_BEGIN for the Endpoint Message Notification is triggered only after the message is sent and not before.  This causes that the notification is not sent if the outbound call fails (i.e a connection error)"""
"MULE-9344","Bug","Core: API",3,"Move TlsContextFactory to the Mule API","""Move the contents of org.mule.module.tls.api to the mule-api project"""
"MULE-9351","Bug","Extensions API",3,"Required pojos are marked as optional on XSD if not instantiable","""When required pojos are instantiable, the SchemaBuilder generates an optional attribute and an optional nested element to define it. Then, there's a runtime validation to make sure that one of the two have been honoured.    However, if the pojo type is not instantiable, the nested element is not generated, yet the parameter is still marked as optional."""
"MULE-9350","Enhancement Request","Extensions API",5,"Initialisation value should be respected when optional parameter defaults to null","""Consider the following code:         If the paremeter had some specific optional value, it would make sense for the QueuDestinationType created there to be overriden. However, if it defaults to null, it's not from a UX perspective to force the user into implementing Initialisable and doing the check/initialisation there. That value should be respected when the optional is null."""
"MULE-9349","Bug","Extensions API",5,"When extensions has a POJO parameter with ExpressionSupport.REQUIRED, no child element should be generated for it","""When a Parameter or Field is configured with org.mule.extension.api.introspection.ExpressionSupport.REQUIRED, no child element should be generated in the XSD.    The global element associated to the pojo should be generated.    """
"MULE-9348","Task","Build: (other)",8,"Merge 3.x to 4.x","""Merge the latest changes on the 3.x branch into 4.x"""
"MULE-9352","Task","Extensions API",0,"Move ConnectionHandlingTypeModelProperty to Extension API so that it can be consumed from Studio","""In order to generate studio support for pooling profile we need to move the property to extensions API instead of being internal"""
"MULE-9360","Bug","Extensions API",3,"Two ways of setting aliases for parameters","""The @Alias annotations is the default mechanism to force a name on the SDK.    However, the @Parameter annotation also provides an alias attribute which collides with the one above.    We need to remove that attribute and standarize on @Alias"""
"MULE-9357","Task","Extensions",2,"Add configuration for maven-jar-plugin in the Extensions Parent Pom","""*Add configuration for maven-jar-plugin in the Extensions Parent Pom*    Add configuration to add missing entries in the Manifest file like *Implementation-version* and *Specification-version*"""
"MULE-9354","Task","Extensions API",5,"Remove ContentMetadataConcept from SDK","""In MULE-8959 a mechanism was added to allow obtaining and setting the output dataType from a extension operation.    With the coming of the new mule message, this mechanism is no longer necessary, since the MuleMessage became a minimalistic thing on which the DataType became a first class citizen.    So we need to:    1) Rename the ContentMetadataParameters annotation to DataTypeParameters  2) Delete de ContentMetadata and ContentType concepts from the extensions-api  3) rewrite the org.mule.module.extension.internal.runtime.processor.AbstractReturnDelegate#resolveDataType so that the same behaviour is maintained but using org.mule.api.metadata.DataType instead"""
"MULE-9362","Task","Build: Libraries / Dependencies",3,"Update xmlsec version","""xmlsec version is fixed to 1.5.3 which has these medium vulnerabilities: CVE-2013-4517 and CVE-2013-2172. This dependency is only used in CXF, which depends on a newer version where those vulnerabilities are fixed. We should remove the explicit xmlsec dependency from pom.xml so we can use the version that CXF uses. Initially this dependency was added in this commit: 4723ca54625b0318488f2380eb5ca9574d73e779. But right now it doesn't seem that we need a separate version anymore."""
"MULE-9364","Bug","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",0,"DecryptStreamTransformer does not close original input stream","""DecryptStreamTransformer is not closing the input stream used as source.  This causes a problem when a decrypting an encrypting file and the source will never be released (deleted if the file inbound uses autoDelete)"""
"MULE-9363","Bug","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",0,"Infinite loop encrypting/decrypting zero length values","""Both EncryptStreamTransformer and DencryptStreamTransformer assume that the value to encrypt/decrypt will have at least one character. This causes an infinite loop when the value has no bytes to process."""
"MULE-9376","Enhancement Request","Extensions API",5,"@Operation annotation should be implicit","""Currently, the new SDK requires specifying the classes in which the extension's operations are defined, plus, those methods need to be annotated with @Operation.    This is kind of redundant, since the @Operation does not add any information.    We should:    * Delete that annotation  * All public method in operations classes should be automatically consider as operations  * Public methods annotated with @Ignored should be skipped  * Add test for @Ignored annotation  """
"MULE-9372","Task","Core: (other)",8,"Create spec for isolation using custom classloading","""Create a spec describing pros/cons and behaviour of getting component isolation though a custom class loading model. """
"MULE-9371","Task","Core: Exception Handling",8,"Proposal for improving error handling in Mule","""Create a proposal to improve error handling in mule. Ideally we should do error handling in a java agnostic way.     We need to consider also the DataWeave limitation of working with Java exceptions.  """
"MULE-9370","Task","Core: Routing / Filters",5,"Proposal to get rid of message enricher","""Since the target attribute is allowed in any message processor from now on, message enricher it may not be required anymore.    One of the things message enricher allows to do is to do a target over a set of message processors instead of just one.     We need to create a proposal on how to replace all the use cases covered by message enricher with """"target"""" attribute + any other change."""
"MULE-9368","Enhancement Request","Transport: FTP / SFTP",0,"Add known_hosts validation to SFTP Transport","""We are trying to push a file to an sftp server. We are using the machine name to connect to it. We want to validate that the server we are connecting to is the correct one. We have the third party servers public key.      * Does this apply to any connection type or only when using identity file?  ** yes i believe this is true for identity file or password based authentication  * Any limitations/validations should be applied on that parameter?  ** it should be a file that is readable."""
"MULE-9378","Enhancement Request","Build: Integration Tests",0,"Expand FlowRunner to support different FlowConstruct types","""Currently, *FlowRunner* only supports running *Flow*s. It must be extensible to allow running other implementations of *FlowConstruct*."""
"MULE-9387","Enhancement Request","Extensions API",8,"Add placement and group metadata to parameters","""We need an equivalent to Devkit's @Placement and @Group annotations. They should translate to model properties at a ParameterModel level and should be available both on configs and operations.    This impacts:    * Annotations  * Describers  * Fluent API  * The agent needs to be able to expose this when creating the extension's JSON representation  * Studio needs to add support for this when generating the Studio editor"""
"MULE-9386","Bug","Core: Streaming|Modules: HTTP|Transport: File",8,"Stream not closed when using async scope","""When deploying the following config and sending this request ({{curl -X POST --data-binary ' ' http://127.0.0.1:8081/input}}) the response is never returned, probably because the stream is not closed. The correct behaviour seems to be not to allow to execute an async router when streaming.    """
"MULE-9385","Enhancement Request","sdk",5,"Add support for Ref Only parameters for Extension's operations","""*Add support for Ref Only parameters for Extension's operations*    Nowadays the *SDK* knows when introspect a parameter or not.   In the case of POJO parameters, the actual logic is the following:  * If a *@Parameter* is used, the SDK will only register the annotated fields.  * If it's a pure *POJO*, the SDK will look for all the getters/setters available.    But could be cases where we don't want to use annotations or the POJO to be introspected, _examples?_   * The POJO is too complex to be rendered in Studio.  * The POJO contains a reserved name that clash with other one in the extension schema.  * *I love DataWeave*, the future is DataWeave  * Because I want    For this cases doesn't exist support yet, to fix that a *DevKit* like *@RefOnly* should be implemented  """
"MULE-9383","Bug","Modules: HTTP",0,"Allow to receive/send http content with invalid content-type headers","""When a server returns a Content-Type HTTP header without a value (""""Content-Type:\r\n"""") an exception is thrown parsing the value when creating a Mule Message. While this is not probably a valid header when trying the same request with Firefox or Chrome the header is ignored so it would be reasonable to validate the header value before trying to use it and ignore if not valid.    This also happens when receiving a content type ended in a semicolon:  Content-Type: image/tiff;"""
"MULE-9393","Enhancement Request","e: DataSense",13,"Spike: Mule Runtime data sense execution API","""We need to do a spike for DataSense execution in the Mule Runtime. DataSense requires the Mule Runtime to resolve how to create components based on the application specific configuration.    Ideally we should allow to load single component (connectors, message source, operation) without having to load the whole application."""
"MULE-9392","Enhancement Request","Core: (other)",8,"Support configurable ObjectStore in every mule component","""We need to allow all components using ObjectStore internally to provide configuration to overriding the default ObjectStore configuration.    Components to be updated are:   - Idempotent Redelivery Policy   - Aggregators   - DevKit token manager"""
"MULE-9391","Task","Modules: HTTP",5,"Spike: Allow http:request to retry request when there are several IPs for the same hostname","""DNS servers may provide several IPs for the same hostname. This may be used for failover mechanism when a certain IP is not available.    We should provide a way to configure http:request to do failover and retry when a certain IP is not reachable and more than one IP has been resolved for a certain hostname.  """
"MULE-9389","Bug","Core: Concurrency / Threading",0,"Mule Context's getTransactionManager randomly returns null if called during context start","""This happens because of a race condition.    For instance, when a JMSXAConnector tries to get the transaction manager from the Mule Context and the Mule Context is still starting.    The problem seems to be in Spring's DefaultListableBeanFactory."""
"MULE-9395","Task","Extensions API",1,"Remove warning when building external extension","""When building an external extension a warning is shown because of a missing version in the parent pom for the org.apache.maven.plugins:maven-jar-plugin.    We should specify it to avoid this logs:    """
"MULE-9401","Bug","Extensions API",3,"Inconsistent names in XSD for list parameters","""When an extensions has a configurable list, the name of the root element of the list should always be written in plural.    The following parameter generates a root element called parameterList with a child element named parameterList.      The root name generated in the XSD should be parametersLists or parameters"""
"MULE-9400","Bug","Extensions API",5,"Missing child elements in XSD when the extension parameter is a List<Map>","""When an extensions has the following field, no child element is generated.      A child should be generated for this element"""
"MULE-9399","Bug","Core: Lifecycle",0,"Mule throws a LifecycleException when disposing an Extension Source","""*Mule throws a LifecycleException when disposing an Extension Source*    * When working with Mule Extension Sources, a way to fail at start time is to to throw an exception inside {{start()}} of a Source, this exception inside the SDK is analysed and if it could not be handled, is propagated to Mule. Mule when detect this exception starts to dispose the Source, when this occur a exceptions is thrown. Stack trace:    """
"MULE-9405","Bug","Core: Transformers",2,"NullPointerException when setting a context-property with a null value on org.mule.module.xml.transformer.XsltTransformer","""When a context-property for the xslt-transfomer has a null value,  is not handling it therefore setting a null parameter to  and it is supported to set null values so an NPE is thrown.    *Instead the XsltTransformer should handle this and throw a MuleException with the proper message.*    """
"MULE-9408","Enhancement Request","Extensions API",8,"Move immutable implementations of the extension model to the API","""Move the ImmutableExtensionModel familiy of objects to the extensions-api jar"""
"MULE-9407","Enhancement Request","Extensions API",13,"Replace extensions DataType with MetadataModel","""Leverage the new data sense MetadataModel to replace the org.mule.extension.api.introspection.DataType and provide a richer extension model"""
"MULE-9414","Task","Extensions API",8,"SPIKE: DataSense API for mule runtime","""We need to define how metaData will be resolved as a service from Mule and how it will be related to the Extension and its model"""
"MULE-9411","Task","Extensions API",8,"Add default implementations for MetaData interfaces","""Some interfaces require a default implementation provided by mule  * MetadataResolver * NullMetadataKey * MetadataKeyBuilder """
"MULE-9410","Task","Extensions API",5,"Create interfaces required for MetaData implementation","""Following are the basic required interfaces:      As specified in its spec:  https://docs.google.com/a/mulesoft.com/document/d/1inPuybiA3CTXa4Ihgz4OKl2eoI0Mlj-7vlscarQujnY/edit?usp=sharing"""
"MULE-9409","Task","Extensions API",3,"Create MetaData annotations","""Create the following annotations (and any other that is required for DataSense)       As described in it's spec: https://docs.google.com/a/mulesoft.com/document/d/1inPuybiA3CTXa4Ihgz4OKl2eoI0Mlj-7vlscarQujnY/edit?usp=sharing"""
"MULE-9416","Bug","Core: Logging",1,"Troubleshooting: DB insert and delete don't show the element xml and number line in the exception logging","""When an exception occurs in a DB Insert or Delete the logs shows """"null"""" the config file and the number line. Please check the null:null in bold below in the element section:    ********************************************************************************  Message               : The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by 'SQL151106174158370' defined on 'PLANET'. (java.sql.SQLIntegrityConstraintViolationException).  Element               : /jdbcInsertUpdateCountRequestResponse/processors/1 @ 612f4740-dff8-11e5-960f-8a315f85db5e:*null:null*  --------------------------------------------------------------------------------  Exception stack is:...    +*Steps to reproduce:*+  * In """"mule"""" project checkout to branch MULE-9416-TEST-TO-REPRODUCE  * Run test testRequestResponse of class InsertDefaultTestCase inside the DB Module. (.../GitHub/mule/modules/db/src/test/java/org/mule/module/db/integration/insert/InsertDefaultTestCase.java)  * In the logs you will see the exception copied above. """
"MULE-9424","Task","Core: Routing / Filters",2,"Properly define behavior for req-resp flows - HTTP","""HTTP Connector must return a 204 - No Content response in case a message is filtered."""
"MULE-9420","Task","Core: Routing / Filters",8,"Move all filters to the compatibility Module","""Remove all filters that can be replaced with expressions or that overlap with the validations module."""
"MULE-9418","Enhancement Request","Extensions API|sdk",3,"Add an optional display name metadata to components","""We need an equivalent to Devkit's @FriendlyName annotation. It should translate to model properties at all the models that this feature will have impact in (Sources, Parameters, Operations).    Since @FriendlyName its a bit confusing with the SDK @Alias annotation, @DisplayName sounds a little bit clearer.    If no value is specified, the name is inferred from the annotated element's name as it does now.  """
"MULE-9417","Enhancement Request","Core: Non-Blocking|Core: Routing / Filters",13,"Add support for non-blocking to JMS outbound request response endpoint","""Add support for non-blocking to the request-reply component"""
"MULE-9440","Enhancement Request","Extensions API",1,"Move extensions annotations to the extensions-api jar","""We no longer require the extension annotations to be on a separate artifact. On the contrary, we want to be able to leverage them in order for the fluent API to generate complete MetadataType models.    Merge them into one single artifact and modify the build"""
"MULE-9439","Enhancement Request","Core: Deployment",13,"Improve serialization of isolated objects","""Serialization/deserialization of java objects that where created inside isolated artifacts introduces the problem that, on deserialization, no every class could be visible in order to create the deserialized objects.    The way how this will be solve is still under discussion. This issue is created as a placeholder to make this missing part visible to the team."""
"MULE-9438","Task","Documentation / Website",8,"Document mule 4 classloading/deployment model","""All the changes introduced on the classloader/deployment model as part of the isolation story must be documented on this task."""
"MULE-9437","Enhancement Request","Core: Deployment",8,"Replace application plugins with extensions","""Replace application plugins artifacts with extensions."""
"MULE-9436","Task","Core: Deployment",8,"Define deployment model for extensions","""Extensions created with extensions API must define a package format, deployment lifecycle and isolation capabilities.  """
"MULE-9433","Enhancement Request","Build: Integration Tests",8,"Add isolation improvements to FunctionalTestCase ","""Isolation changes introduced on the deployment model should be reflected on the functional test infrastructure in order to have the same restrictions than a standalone execution.  Not sure that this will be exactly the same, as for example functional test on mule 3 are not the same than a mule 3 standalone execution, but it should be as similar as possible without causing too much disruption on the development process. """
"MULE-9432","Enhancement Request","Core: Deployment",5,"Isolate domains from core artifact","""Domains and child elements as applications and application plugins are exposed to all the resources included in the core artifact classloader.  Instead of using the core classloader as parent, domains should take a filtering classloader that exposes only the API defined on the core."""
"MULE-9431","Enhancement Request","Core: Deployment",8,"Invert classloading lookup process for deployed artifacts","""Mule 3 uses a parent-first classloading lookup process. This causes that plugins and application must explicitly define loader overrides when they want to use a different version thatn the one provided by mule.   It also means that some apps/plugins can stop working on following versions of mule when mule includes a library that was not used before.  To solve this issues and make upgrades easier, classloader lookup must be child-first but everything but mule core system packages."""
"MULE-9430","Enhancement Request","Core: Deployment",5,"Add a way to dynamically configure the exported API on the core artifact","""On the modularization approach we are implementing, all the core modules will be deployed as an artifact, so they will have to define what is exported to the other artifacts.  As the number of included core modules could depend on the version or distribution, the exported resources should be dynamically determined, having each module to define them explicitly inside the module binary."""
"MULE-9429","Enhancement Request","Core: Deployment",5,"Update artifact export policy to support packages and folders only","""Mule 3 plugin export policy is based on classes and packages prefixes (i:e: org.mule.api.* or org.mule.api.Message*).   Detecting if a given class is exported or not, in the presence of wildcards, could take some time. In order to improve the classloading lookup time and be more similar to what OSGi does, we should export packages/folders explicitly, with no wildcards."""
"MULE-9428","Enhancement Request","Core: Deployment",5,"Isolate applications from application plugins","""Applications are currently exposed to all the code included on application plugins, which is not good from the isolation point of view.  Application should only access to the resources explicitly exported by the application plugins."""
"MULE-9427","Enhancement Request","Core: Deployment",5,"Isolate application plugins","""Application plugins (aka connectors) are not isolate between them as all they are loaded in the same classloader.   Those plugins must be isolated in the same way server plugins are isolate on mule 3."""
"MULE-9426","Enhancement Request","Core: (other)",8,"Refactor plugin classloading features","""Extract and refactor code used to isolate server plugins in order to reuse it on the artifacts from the launcher module."""
"MULE-9444","Task","Modules: XML, XSLT, XPath, SXC",3,"Upgrade Saxon to 9.7.0.3-HE","""Upgrade Saxon due to several issues have been solved since 9.7.0-3-HE version.   * [List of issues solved in Saxon 9.7.0-3-HE|https://sourceforge.net/projects/saxon/files/Saxon-HE/9.7/]   * in addition to the ones fixed since 9.6.0-1-HE that is the current version used in Mule: [List of issues solved in Saxon 9.6-HE|https://sourceforge.net/projects/saxon/files/Saxon-HE/9.6/]"""
"MULE-9443","Task","Build: (other)",1,"Update Maven plugin versions","""Update Maven plugins versions and move the version to a property"""
"MULE-9447","Bug","sdk",3,"Connection Provider is not registered in XSD inside of a Config if an Extension only have a Source component","""*Connection Provider is not registered in XSD inside of a Config if an Extension only have a Source component*    * In the SchemaBuilder, when registering a Config, there is a logic of asking *if any Connected Operation exists* _(An operation that uses a @Connection)_, if not, the Connection Provider is not registered inside the Config.  * The border case comes when trying to have a Source (""""Connected Source"""") with out any operation or with Disconnected Operations, where SDK doesn't generate that Connection Provider although is necessary for the Source."""
"MULE-9446","Bug","Build: Integration Tests",1,"TransactionManager created by TestTransactionManagerFactory returns null for hashCode()","""This causes a null pointer exception when the created object is to be put in a HashSet, or a HashSet check for contains of the created object."""
"MULE-9445","Task","Build: Integration Tests",1,"Fix flaky test org.mule.module.launcher.DeploymentServiceTestCase.redeploysDomainZipRefreshesApps","""Test org.mule.module.launcher.DeploymentServiceTestCase.redeploysDomainZipRefreshesApps fails form time to time on mule 4 branch on the continues build"""
"MULE-9455","Task","Extensions API",1,"Remove endpoint references from generated schemas","""the concept of Endpoint has been removed from Mule 4.x.    The following replacements should be done on the schema generator:    * mule:messageProcessorOrOutboundEndpoint -> mule:messageProcessorOrMixedContentMessageProcessor  * mule:messageSourceOrInboundEndpoint -> mule:abstract-message-source        """
"MULE-9454","Enhancement Request","Extensions API",13,"Replace the NestedProcessor interface with a non blocking API","""The NestedProcessor interface was inherited from Devkit and serves the purpose of abstracting the concept of a MuleMessage/MessageProcessor. In mule 4 this will no longer be needed since MessageProcessor and MuleMessage will be API.    NestedProcessor should be removed in favor of MessageProcessor"""
"MULE-9453","Bug","Extensions API",8,"Pojo's properties not properly introspected depending on code conventions","""The org.mule.module.extension.internal.util.IntrospectionUtils#getExposedFields method checks a given class for fields annotated with @Parameter.    If no such field is found, then it uses Introspector.getBeanInfo(Class) to get the pojos properties. However, it then tries to match those properties to fields, assuming that the pojo was written using a code convention in which the getter name is just like the field but with the get prefix.    If the pojo was written using a convention such as """"_name"""", then getName() will not be matched to any field and will get dropped.    Because the whole purpose of the feature is to support pojos which source is outside of the developer's control, this bug should not behave like this.    The fix is harder than it seems. All the ObjectBuilder implementations work on terms of Fields. A deep refactor is needed so that Property accessors are also supported."""
"MULE-9452","Enhancement Request","Modules: XML, XSLT, XPath, SXC",3,"Add support for XPath 3.1 that includes maps and arrays as return types","""[Saxon 9.7 add supports for XPath 3.1|http://www.saxonica.com/html/documentation/expressions/xpath31new.html] which includes a few interested features such:  * Maps  * Arrays    Mule will be upgraded to Saxon 9.7 which supports XPath 3.1 but as these new types are not yet in JAXP API and Mule uses the java API instead of Saxon directly a custom component needs to be implemented in order to use Saxon s9api a get support for map and arrays return types."""
"MULE-9451","Task","Extensions API",8,"Separate Extension Model into a description and a runtime model","""Currently the ExtensionModel mixes extension description properties and properties required only at runtime.    In order to easily handle Serialization/Deserialization into a JSON for Studio and Mozzart, we need to separate them so that they can be easily consumed using a plain REST api.    The refactor involves remove the methods of the current interfaces required only at runtime into other interfaces that extend them with the same name and the prefix """"Runtime"""" on extensions-api, and refactor mule code so that we get the minimal interface required at each method.    """
"MULE-9456","Enhancement Request","sdk",8,"Remove the defaultPoolingProfile parameter from the all the ConnectionHandlingStrategyFactory methods","""Currently when using a concrete ConnectionHandlingStrategyFactory the developer must specify a defaultPoolingProfile for the connector and most of the times the default pooling profile is used like       So now we want that SDK manage the defaultPoolingProfile whether is supported or required so the dev doesn't need to think in default pooling profiles.    So to accomplish this we must:  * Remove the defaultPoolingProfile parameter from the all the ConnectionHandlingStrategyFactory methods and from all its references,  * Create a getDefaultPoolingProfile() method in the ConnectionManagerAdapter that returns the SDK defaultPoolingProfile when the final user didnt specified anything in the XML.    """
"MULE-9463","Enhancement Request","Extensions API",3,"Add return message attributes type to the OperationModel","""Just like the SourceModel which has a getAttributeType(), the OperationModel should expose a similar thing."""
"MULE-9462","Enhancement Request","Extensions API",3,"Create a contract around model properties","""Currently model properties can be of any class and have keys with an implicit contract.    We need to be able to:    * Clearly identify model properties by a well defined name  * Being able to specify if they are public (should be serialized by the agent) or private (information just for the sake of the runtime)  * Move all the public ones to the extensions-api artifact  * keep the privates on mule internals"""
"MULE-9461","Enhancement Request","Transport: File",13,"Implement watcher message source in new File connector","""Implement the watcher message source as described in the spec"""
"MULE-9460","Bug","sdk",1,"Specify version for maven-jar-plugin in mule-extension-parent pom","""Version plugin is missing"""
"MULE-9459","Enhancement Request","Extensions",5,"Make configurations name available to them","""Configurations have a """"name"""" attribute by default but there's no way to access it. It's marked as reserved when trying to add it as a parameter.   It would be helpful to make it available, for example, for logging purposes (""""JMS config 'basicJmsConfig' is set as whatever so this and that will happen."""")."""
"MULE-9465","Bug","sdk",5,"QName with invalid character is generated when using an Inner Enum class as parameter","""*QName with invalid character is generated when using an Inner Enum class as parameter*    When using a Enum Class as parameter of a Operation, the SDK generates a child element with the name of this class.  {code:title=SchemaBuilder.java}   attribute.setType(new QName(schema.getTargetNamespace(), enumType.getName() + SchemaConstants.ENUM_TYPE_SUFFIX));  {code}  But the problem comes when this Enum Class, is a Inner Enum Class, so the full qualifier name of this type would be, for example: {{org.mule.module.http.api.HttpConstants$ProtocolsEnumType}}, which contains the {{$}} symbol, is an Invalid character for a QName.    *What to do?*  * Fix generation of Inner Enums, replacing or deleting invalid characters.  * Check the same problem for Inner Classes    *Valid and Invalid characters:*  http://stackoverflow.com/questions/1631396/what-is-an-xsncname-type-and-when-should-it-be-used  """
"MULE-9484","Bug","Extensions API",5,"Cannot define a threading profile within my config","""I have a config with a ThreadingProfile element annotated with @Parameter. However, the schema produced does not recognised it as such."""
"MULE-9481","Task","Core: Transports",8,"Move transports and endpoints metadata resolution from Studio to mule core","""We need to move HTTP, FTP, JMS, File endpoints datasense resolution to the mule core"""
"MULE-9480","Bug","Extensions",8,"Injected object in configuration is not initialised","""When attempting to migrate the DefaultHttpListenerConfig to an extension configuration, it was failing because the injected HttpListenerConnectionManager was not initialised. Workaround was to initialise it from the config's initialise method.  You can look at those classes and find the workaround in branch MULE-8864, class HttpListenerConfig."""
"MULE-9479","Task","Extensions API",5,"Add support for Datasense in Sources model","""Add support for Datasense in Sources model"""
"MULE-9477","Task","Extensions API",5,"Refactor and extend Metadata test suite","""Refactor current Metadata testCases to improve extensibility.  Add more test cases, especially those needed for error handling."""
"MULE-9476","Enhancement Request","Extensions API",8,"Add MetadataCache to the MetadataContext","""Add the implementation of MetadataCache to the MetadataContext, as defined in the Metadata Spec document."""
"MULE-9475","Enhancement Request","Extensions",13,"Allow config level components in the Extensions API","""When an extension has several configuration models available, there's often the need to have operations, connection providers or even sources which can only function with a subset of those configurations. This is currently not possible.    We need to be able to:    * Define sources, connection providers an operations an a configuration level.  * The sources, providers and operations available to a configuration are those defined at its own level + the ones defined at the extension level  * It is possible to have configurations which share any of those components, even though they're not declared at the extension level. For example, an extension has three configs (A, B, C); Configs A and B both point to the AwesomeOperations class. For that to work, there has to be some common type abstraction between A and B so that AwesomeOperations can receive any of those on the operations annotated with @UseConfig  * Going back to the example above, if AwesomeOperations is only referenced by configuration A, it should be possible to write such operations depending on A exclusively, making it no longer necessary for A to share any kind of type abstraction with B or C  """
"MULE-9473","Enhancement Request","Extensions API",13,"Add multi-level key support for Datasense","""Implement the mechanism that allow multi level key resolving to the current metadata model.  """
"MULE-9472","Task","Extensions API",13,"SPIKE: Metadata multi-level key structure","""Define the first approach to take on Multi-level metadata keys"""
"MULE-9470","Task","Extensions API",8,"Review first ""SDK Support for Datasense"" PR","""Review first """"SDK Support for Datasense"""" PR"""
"MULE-9469","Task","Extensions API",3,"Prepare first Datasense PR","""Prepare datasense epic branches for the first pull request.   This includes squashing, code review and review of javadocs.    """
"MULE-9468","Task","Core: API|Extensions API",5,"Add Failure and Result handling to Metadata API","""Allow the developer to communicate errors occurred during Metadata retrieval using exceptions with FailureTypes, and then returning those errors gracefully as Results in the MetadataManager api"""
"MULE-9467","Task","Core: API|Core: Services|Extensions API",5,"Implement Operation metadata retrieval","""- Implement retrieval of Metadata from the MessageProcessor using the MetadataManager.     - Add concept of MetadataDescriptor for Operations and Parameters"""
"MULE-9511","Bug","Core: Logging",8,"Scheduler error when starting Mule Standalone","""Error message:      The error is thrown in the following scenarios:  1. When Mule starts  2. When an application is deployed.  3. When an application is undeployed.  """
"MULE-9485","Enhancement Request","Extensions",5,"Support object hierarchies","""Suppose I have 3 different kinds of authentication for my configuration, each one requires a different (could be similar) POJO. Right now I have to add each one as an optional parameter and check myself whether several have been added, since having only one is allowed.   It would make more sense to have just one parameter that references an interface or abstract class, and say I want all implementations/subclasses to be considered as possibilities.  See HTTP authentication or proxy configuration, for example (HttpAuthentication->abstract-http-request-authentication-provider, ProxyConfig->choice)."""
"MULE-9491","Bug","Build: Maven",2,"mule-app-maven-plugin generates an invalid archive if configuration files are within subfolders (v1.1)","""When using a maven project, deployment of the project fails if configuration files are within subfolders. It expects all configuration files to be present in the 'app' folder, and doesn't work in subfolders. The mule-deploy.properties file contents are properly populated by Studio but runtime fails during deployment of the application.    The archive file generated by the plugin leaves the subfolder within the configuration file inside the classes folder and the mule-deploy.properties is automatically generated by Studio when running the application and it doesn't include the classes folder on it.  Plus, if the application is exported the configuration files are duplicated by Studio in root of app folder and classes folder.    The proposed solution is to change the plugin to include in the root of the archive folder the configuration files and folders with configuration files and avoid duplicating them into classes folder too."""
"MULE-9490","Enhancement Request","Modules: HTTP",13,"Migrate Http Connector to extensions API","""The current HTTP connector must be replaced with a version developed using extensions API"""
"MULE-9489","Enhancement Request","Extensions",8,"Provide an InterceptiongMessageProcessor equivalent in SDK","""The HttpBasicAuthenticationFilter has exposed the need for InterceptingMessageProcessors to be supported in extensions. There should be a way to have these and not just MPs."""
"MULE-9487","Enhancement Request","Extensions",8,"Extensions should be able to import TopLevel parameters from other extensions","""Extensions that depend on TCP could take advantage of the API defined in the mule sockets module, which is why it would be great to support it just like say, threading profiles are.  Basically, one can define socket properties like this:    So if I define as a parameter a TcpClientSocketProperties I'd expected the schema to allow that."""
"MULE-9496","Enhancement Request","sdk",8,"Use flow paths to obtain Processors and Sources from a Flow in the MuleMetadataManager","""* Actually the *MuleMetadataManager* to retrieve the *MessageProcessor* or *MessageSource* from a flow uses the flow index.   * Using a index to retrieve this components ends up being short for the requirement of retrieve metadata from any message processor inside a flow, due that a flow can contain ramifications.  * Change the actual logic the *MuleMetadataManagager* to use *flow paths* to obtain MessageProcessors in the same way that the *Mule Debugger* or *Flow Stacks* do"""
"MULE-9494","Task","Core: (other)",5,"Mule 4 scopes revamp proposal ","""We need to review the different Mule 4 scopes and come up with an specifications on how the different scopes will look like in Mule 4 considering the required changes for error handling."""
"MULE-9500","Enhancement Request","Core: Logging",0,"Allow specifying custom log4j config locations.","""It would be useful if apps could customise in some ways from where the log4j properties file is loaded, i.e. specify this in mule-deploy.properties"""
"MULE-9498","Enhancement Request","Transport: Quartz",0,"Timezone attribute in Quartz connector and scheduler module","""As a user I want to set a specified timezone for the cron expression that I want to use.  Right now I have to set the cron in the timezone that I am, if i am using mule local I have to set the cron in my timezone. So I have to change the cron expression every time I change the environment.  Quartz Scheduler allow you to do this, but in java code. This is going to be useful if we can set the timezone in the transport like an attribute."""
"MULE-9505","Bug","Core: API",8,"Message Processors invocations inside an Until Successful are not notified","""Message Processors invoked inside an Until Successful scope are not notified through the message processor notification server.  For example, if you have set-payload inside an Until Successful scope. The invocation of the UntilSuccessful is notified but not the invocation of the set-payload.  Another example, if you have an set-payload inside an enricher, and the enricher inside an Until Successful. The invocation of the UntilSuccessful is notified, but  not the enricher. On the other hand, the set-payload invocation is notified. This causes notifications in the form of """"/myFlow/processors/0"""" and """"/myFlow/processors/0/0/0"""" but not """"/myFlow/processors/0/0"""""""
"MULE-9509","Task","Modules: HTTP",0,"Provide extension points in http module for RequestBuilder","""Allow to override steps of the of the RequestBuilder setup.  Allow for http module tests to be run from dependant modules."""
"MULE-9508","Task","Extensions API",13,"Apply feedback on DataSense review","""Apply feedback from PR"""
"MULE-9507","Enhancement Request","Transport: FTP / SFTP",5,"SFTP :Support two factor authentication","""An as SFTP connector user, I need to connect to an SFTP server that does Certificate and User/Pass authentication. Currently, mule can do either one or the other. See  https://github.com/mulesoft/mule/blob/mule-3.x/transports/sftp/src/main/java/org/mule/transport/sftp/SftpClient.java Lines 124 and 157.  Looks like mule could use a single login method and pass all parameters, and if some are not set then use only the others."""
"MULE-9521","Task","sdk",5,"Replace MetadataKey properties with typed properties. Add also to MetadataDescriptors","""Replace MetadataKey properties with typed properties  and add also to MetadataDescriptors.     This typed properties will be similar to the current ModelProperties."""
"MULE-9520","Task","Extensions API",8,"second round of review on DataSense","""review PR again an apply new changes"""
"MULE-9519","Enhancement Request","Extensions API",13,"Refactor extensions packaging to be compatible with new plugin architecture","""Make changes into the extensions packaging mechanism to support the work done on MULE-9436"""
"MULE-9518","Enhancement Request","Extensions API",13,"Create serializers for the ExtensionModel","""We need to create reusable serializer/deserializers to marshall extension models to json and back. These need to be reusable so that can be leveraged in Studio and in the agent.    Right now we're using XStream but it's doing a very poor job at it and it's hard to customize. Consider using Gson or any other proper tool (careful with the recursive references in the MetadataType)."""
"MULE-9527","Task","Build: Distributions",1,"Add TLS files in conf directory to Studio distribution","""Add conf directory to Studio distribution with only these two files:  tls-default.conf  tls-fips140-2.conf"""
"MULE-9525","Bug","Transport: JMS",0,"Deadlock shutting down Mule when using JMS","""In certain circumstance when Mule is shutting down while JMS messages are being received Mule can enter a deadlock and hang."""
"MULE-9531","Task","Modules: HTTP",0,"Upgrade AHC to 1.9.37","""Upgrade to latest ahc version."""
"MULE-9530","Bug","sdk",5,"Improve Config retrieval when resolving Metadata for MetadataAware components","""When resolving Metadata for MetadataAware components, we need to fetch the Configuration in order to initialize the MetadataContext.    Currently, we don't support dynamic configs, which result in two issues:  - We need to validate that the config that will be resolved is static, for all the available ways of acquiring a config (access with config-name, with extensionModel or implicit resolution). We need to make this validations without duplicating all the ExtensionManager logic for this.  - Even when there is no dynamic config support, it is required to pass a MuleEvent when fetching the config, so we are forced to create an empty event, which may result in an error if the config was indeed of dynamic nature. """
"MULE-9535","Enhancement Request","Core: Domains shared resources",8,"Ability to set a property at a domain level which can be used by every application","""As a user, I would like to be able to set a property in a domain, e.g. connection.url=123, and then reference it via ${connection.url} in every child app  """
"MULE-9541","Enhancement Request","Transport: TCP / UDP / SSL / Multicast",3,"Migrate Sockets module to Sockets extension","""Migrate Sockets module to Sockets extension"""
"MULE-9540","Bug","Modules: HTTP",2,"HTTP Connector MESSAGE_REQUEST_END notification message has no information about the HTTP response","""h5. Problem  HTTP connector is sending the """"request"""" mule message in both notification events so this makes impossible for notification listeners of these events to get data about the response such http.status.    In addition to that, events had mule messages with different ids so it will also make impossible to correlate a begin/end message.    h5. Proposed Solution  Both mule messages sent to begin and end notifications should have the same id and rootId, so the id and rootId will be propagated to the response mule message generated by HTTP module.  The mule message generated from the http response is the one that will be sent to the end notification so users could check the result of the request made.    h5. Caveats  HTTP transport works in a different way so there will be not the same data on this notification events.   The transport generated inbound properties for request and response based on its configuration, the connector used them to do the http request instead and they are not set to the mule message. As example, http.request, http.query.params, http.query.string but the URI is passed to the event as it was before."""
"MULE-9543","Enhancement Request","Build: Integration Tests",0,"Properly cleanup state in logging integration tests","""*LogConfigurationTestCase* and *ConnectorLevelMessageDispatchingTestCase* do not properly clean up the logger context they initialize."""
"MULE-9545","Enhancement Request","Extensions API",1,"ExtensionManager should have utility methods to local models by name and/or vendor","""The ExtensionManager currently supports retrieving all the extensions. It would be helpful to be able to locate by name and name+vendor"""
"MULE-9544","Bug","Modules: XA Transactions|Transport: JMS",0,"Reconnect Strategy not triggered for JMS with XA transactions","""When a JMSException occurs in the XA transaction handler, it is wrapped and that causes the reconnection strategy to not be triggered as expected."""
"MULE-9552","Enhancement Request","sdk",5,"Be able to define Metadata Resolvers at Operation class level","""*Be able to define Metadata Resolvers at operation class level*    * By now, the extension developer can define Metadata Resolvers (*ContentMetadataResolver*, *OutputMetadataResolver* and *MetadataKeyResolver*) at *Extension class level* or *Operation method level*.  * A nice to have feature is to be able to configure Metadata Resolvers at Operation class level, to impact the entire set of operations inside that class.  ** *Why?* : If this operations are separated in different classes, you maybe had a grand chance to have different resolvers.  """
"MULE-9551","Bug","sdk",1,"NPE while building an extension without @Operations","""java.lang.NullPointerException      at org.mule.module.extension.internal.capability.xml.schema.AnnotationProcessorUtils.getOperationMethods(AnnotationProcessorUtils.java:113)      at org.mule.module.extension.internal.capability.xml.schema.SchemaDocumenter.documentOperations(SchemaDocumenter.java:77)      at org.mule.module.extension.internal.capability.xml.schema.SchemaDocumenter.document(SchemaDocumenter.java:71)      at org.mule.module.extension.internal.capability.xml.schema.SchemaDocumenterModelEnricher.enrich(SchemaDocumenterModelEnricher.java:58)      at org.mule.module.extension.internal.introspection.DefaultExtensionFactory.lambda$enrichModel$2(DefaultExtensionFactory.java:300)      at java.lang.Iterable.forEach(Iterable.java:75)      at org.mule.module.extension.internal.introspection.DefaultExtensionFactory.enrichModel(DefaultExtensionFactory.java:300)      at org.mule.module.extension.internal.introspection.DefaultExtensionFactory.createFrom(DefaultExtensionFactory.java:121)      at org.mule.module.extension.internal.resources.ExtensionResourcesGeneratorAnnotationProcessor.parseExtension(ExtensionResourcesGeneratorAnnotationProcessor.java:108)      at org.mule.module.extension.internal.resources.ExtensionResourcesGeneratorAnnotationProcessor.lambda$process$0(ExtensionResourcesGeneratorAnnotationProcessor.java:77)      at java.lang.Iterable.forEach(Iterable.java:75)      at org.mule.module.extension.internal.resources.ExtensionResourcesGeneratorAnnotationProcessor.process(ExtensionResourcesGeneratorAnnotationProcessor.java:72)      at com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor(JavacProcessingEnvironment.java:794)      at com.sun.tools.javac.processing.JavacProcessingEnvironment.discoverAndRunProcs(JavacProcessingEnvironment.java:705)      at com.sun.tools.javac.processing.JavacProcessingEnvironment.access$1800(JavacProcessingEnvironment.java:91)      at com.sun.tools.javac.processing.JavacProcessingEnvironment$Round.run(JavacProcessingEnvironment.java:1035)      at com.sun.tools.javac.processing.JavacProcessingEnvironment.doProcessing(JavacProcessingEnvironment.java:1176)      at com.sun.tools.javac.main.JavaCompiler.processAnnotations(JavaCompiler.java:1170)      at com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:856)      at com.sun.tools.javac.main.Main.compile(Main.java:523)      at com.sun.tools.javac.api.JavacTaskImpl.doCall(JavacTaskImpl.java:129)      at com.sun.tools.javac.api.JavacTaskImpl.call(JavacTaskImpl.java:138)      at org.bsc.maven.plugin.processor.AbstractAnnotationProcessorMojo.executeWithExceptionsHandled(AbstractAnnotationProcessorMojo.java:545)      at org.bsc.maven.plugin.processor.AbstractAnnotationProcessorMojo.execute(AbstractAnnotationProcessorMojo.java:285)      at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)      at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)      at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)      at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)      at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)      at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)      at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)      at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)      at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)      at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)      at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)      at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)      at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)      at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)      at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)      at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)      at java.lang.reflect.Method.invoke(Method.java:497)      at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)      at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)      at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)      at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)      at org.codehaus.classworlds.Launcher.main(Launcher.java:47)      at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)      at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)      at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)      at java.lang.reflect.Method.invoke(Method.java:497)      at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)  [ERROR] error on execute: java.lang.NullPointerException"""
"MULE-9548","Bug","Modules: HTTP",5,"AHC improovment to 1.9.37","""Updating AHC library caused a 15% regression in the Proxy scenario, it appears to be a memory related issue, possibly a memory leak."""
"MULE-9558","Bug","Modules: HTTP",0,"HTTP failing response streaming calls exception strategy but returns generic error","""The response sent to the client is a simple 500 code, instead of corresponding to what is done in the Exception Strategy.    This happens only when there is a streaming response that is lazily evaluated."""
"MULE-9557","Bug","Core: Exception Handling",1,"The new stack trace report in 3.8 formatting should be the same as java’s standard one","""Every stack trace line in the current version has this format:    sun.reflect.DelegatingConstructorAccessorImpl.newInstance:45)  and it should be:    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)"""
"MULE-9556","Enhancement Request","Core: Non-Blocking",13,"Support non-blocking processing in one-way flows","""Currently the following scenarios are not supported meaning that http requester and jms outbound request-response endpoints will block, which in turn requires tuning.    """
"MULE-9561","Enhancement Request","Extensions API",5,"Crete a Json serializer for the MetadataResult class","""Create a GSON based serializer which leverages the MetadataTypeGsonTypeAdapter class and allows to properly serialize an OperationMetadataDescriptor to Json and back.    Try to have such serializer be as consistent with ExtensionModelJsonSerializer as possible"""
"MULE-9559","Enhancement Request","Extensions API",8,"Remove the need for extensions to explicitly declare a Describer","""Have extensions to automatically ship with a descriptor, manifest or similar resource which removes the need for extensions to ship with a describer.    Also, define what to do with all the model validators and other componetns which currently depend on SPI. We should not rely on that anymore"""
"MULE-9567","Bug","Modules: HTTP",8,"AHC/Grizzly: Readd locally closed connection validation","""Undo the remming of the else clause in HttpTransactionContext.listener#onClosed()"""
"MULE-9566","Bug","Modules: HTTP",0,"Content-Type set in request builder is not considered","""When you set up an HTTP request with a request builder and the header Content-Type, the actual request CT is taken from the payload. The problem is that in MuleEventToHttpRequest, the builder headers are set, then the outbound properties and then if there's no CT outbound property it is set using the data type. Since the check is only against outbound properties the builder header is ignored.  As a workaround, one must set the CT as an outbound property instead of using the request builder."""
"MULE-9565","Task","Extensions API",5,"Return UnionType when static metadata is fetch on a type that declares SubTypes","""Return UnionType when static metadata is fetch on an abstract POJO type or interface that declares SubTypes."""
"MULE-9571","Enhancement Request","sdk",5,"Enforce metadata dynamic output resolver for Map and Object","""The discussion for this feature appeared with the inheritance of metadata resolvers (from the Extension or the Operation class). What happens is that if you have an operation which doesn't need a dynamic resolver but the parent has one defined, it should *only* be applied if the operation return type is a  Map or Object. With that solution we avoid the need of an @IgnoreDynamicResolver annotation.    The other thing is that in SDK we want to be as restrictive as possible with the developer, and it may be a good idea to forbid operations which return type is Map and doesn't have a resolver assigned. """
"MULE-9570","Bug","Transport: FTP / SFTP",0,"SFTP: Pooled connections not returned to pool on server/network error","""When an sftp connection from a pool is disconnected because of a network error or disconnected by the server, it is not returned to the pool and is leaked."""
"MULE-9581","Bug","Extensions API",2,"Extensions must not be able to override a  ModelProperty","""Extensions must not be able to have more than one ModelProperty of the same type when being described.  If this occur an IllegalArgumentException should be throwed.    * Modify the method withModelProperty of the BaseDescriber."""
"MULE-9579","Bug","Core: Logging|Core: Transactions|Transport: JMS",1,"Using transactions when non blocking should log a warning not an info","""When I use a transactional context in a flow with non-blocking processing strategy this message is logged:        It logging level is INFO but it should be WARN"""
"MULE-9578","Bug","Extensions API",1,"Reorganize SDK packages","""Some classes in the Extensions API and framework and in wrong packages.    Other packages are excessively big. Rearrange."""
"MULE-9577","Bug","sdk",1,"Add lib folder to the extension zip even if there are no dependencies to add","""This is happening with the file extension. The solution is simply adding the lib folder to the extension zip whether exists dependencies in the pom.xml or not."""
"MULE-9574","Bug","Build: Libraries / Dependencies",1,"slf4j-api schould be 1.7.12 to avoid problems with async-http-client","""  with rule RequireUpperBoundDeps reports      and      So async-http-client library may call methods in slf4j-api which are currently not implemented in the version used for runtime (1.7.7)"""
"MULE-9586","Task","Modules: HTTP",0,"Fix flakyness in HttpRequestProxyConfigTestCase","""On some occassions, the test is run before the mock proxy has started, causing failures."""
"MULE-9595","Bug","Core: Expressions",0,"MEL cached expression with null safe property is invalid after returning null","""When an expression is evaluated and an inner node evaluates to null, the optimized expression will always return null for that inner node, no matter if the context now contains objects fir that expression and it shouldn't return null."""
"MULE-9592","Bug","Core: Endpoints",0,"MuleEndpointURI fails to extract right user and password","""MuleEndpointURI fails when handling special characters in the user and password fields. This happens because the user info is often handled decoded instead of raw, so encoded characters like """":"""" and """"@"""" are decoded and cause trouble when analysing the delimitations of the fields within the URI."""
"MULE-9606","Enhancement Request","Extensions API",3,"Decouple the extensions namespace from Spring","""The extensions namespace allows configuring how the runtime handles the extensions. That is currently implemented on the extensions-spring-support module, which means that all extensions have a test dependency to it (because the generated schema imports elements from mule-extensions.xsd)    Once the new parsers are implemented, we should move the extensions namespace support to a module which does not require coupling to spring"""
"MULE-9605","Task","Modules: HTTP",13,"SPIKE: migrate OAuth modulo to SDK","""Perform SPike on migrating the OAUth modulo to SDK"""
"MULE-9604","Enhancement Request","Extensions API",8,"Add support for package and resource export on Extensions","""Now that extensions are been built as plugins we need to add support for exporting packages and resources.    The following should be exported automatically:    * Classes annotated with @Extension  * Classes annotated with @Configuration  * Classes annotated with @Operation  * ObjectType parameters  * ConnectionProviders  * Generated schema and spring bundles  * Generated extension manifest    On top of that, there should be an annotation to allow manually exporting custom classes and resources... something like an extension level annotation similar to this:        Keep in mind that:    * The generated plugin descriptor should not reference the selected classes but their packages  * It's possible that several exposed classes belong to the same package. The plugin.descriptor should declare each package only once  * The Export annotation is additive. It does not override what's exposed by default."""
"MULE-9603","Bug","Extensions API",1,"Disallow packaging more than one extension in the same plugin","""one plugin should not contain more than one extension"""
"MULE-9602","Task","Build: Libraries / Dependencies",1,"Release MVEL 2.1.9-MULE-010","""Perform a release of MVEL that contains the fix for the linked issues."""
"MULE-9607","Task","Build: Libraries / Dependencies",1,"Upgrade MVEL to 2.1.9-MULE-010","""Upgrade to latest MVEL version."""
"MULE-9619","Bug","Extensions API",1,"NestedProcessors generates leaks of OperationMessageProcessor instances","""When there is a flow using validation:all, there is a constant generation of beans of type OperationMessageProcessor as singleton in the mule registry.    This constant generation, over time, causes OutOfMemoryError in the servers.    The flow that reproduces this issue is:  <?xml version=""""1.0"""" encoding=""""UTF-8""""?>  <mule xmlns:http=""""http://www.mulesoft.org/schema/mule/http"""" xmlns:validation=""""http://www.mulesoft.org/schema/mule/validation"""" xmlns=""""http://www.mulesoft.org/schema/mule/core"""" xmlns:doc=""""http://www.mulesoft.org/schema/mule/documentation""""   xmlns:spring=""""http://www.springframework.org/schema/beans""""    xmlns:xsi=""""http://www.w3.org/2001/XMLSchema-instance""""   xsi:schemaLocation=""""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd  http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd  http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd"""">      <http:listener-config name=""""http-lc-0.0.0.0-8081"""" host=""""0.0.0.0"""" port=""""8081"""" protocol=""""HTTP""""/>      <flow name=""""leak-operationmessageprocessorFlow"""">          <http:listener config-ref=""""http-lc-0.0.0.0-8081"""" path=""""/"""" doc:name=""""HTTP""""/>          <validation:all doc:name=""""Validation"""">              <validation:validations>                  <validation:is-true expression=""""#[1 == 1]""""/>              </validation:validations>          </validation:all>      </flow>  </mule>  """
"MULE-9618","Bug","Extensions API",1,"ConnectionProvider element missing from config XSD","""When a configuration specifies its own connection provider, the corresponding XSD element is only added if other connection providers are also defined at the extension level"""
"MULE-9616","Task","Core: Transports",0,"Reintroduce transport infrastructure in Mule 4","""Readd transport infrastructure and a couple of transports to validate."""
"MULE-9615","Bug","sdk",5,"Extension configs can not define the same Source/Operation Class","""*Extension configs can not define the same Source/Operation Class*    * Since MULE-9475, SDK supports to define *Source and Operation at config level*.  * With this feature if you have something like the following:     where you have *two different configs defining the same Source class*, the extension won't work at runtime due that the *generated schema is invalid*, due that the {{SchemaBuilder}} creates two times the same Top Level element _(one per config defining that Source)_.  * *Possible Solution:* When generating the schema, check if the Source/Operation class was already defined by other config and skip the generation.  """
"MULE-9614","Enhancement Request","sdk",8,"Allow Subtypes placeholder to be populated with any implementation of the base type ","""When an extension declares a @SubType replacement group, we should leave open the possibility for any implementation of the _baseType_ to be used to populate the parameter."""
"MULE-9613","Enhancement Request","sdk",8,"Spike on supporting parameters to have a provider for a dynamic list of possible values","""As a connector developer, I'd like to be able to have a dynamic resolver for the possible values that a given parameter can have with my current Connection/Configuration.    The idea is similar to what we already use to resolve the MetadataKey values that then are shown as a dropdown to the user so she can select one.     This is useful for cases when the possible values of the parameter come from a given set of data (like the channels you have configured in slack), but the set is dynamic since values can be created, updated or deleted, and you have to discover them each time.    """
"MULE-9635","Task","Modules: HTTP",2,"Include AHC/Grizzly performance fix in mule's custom ahc code","""Include the changes with the performance fix in ahc (https://github.com/AsyncHttpClient/async-http-client/commit/178ec0d668884be648f0a192666e1efcb228f857) into our ahc custom code."""
"MULE-9631","Task","Core: Transports",8,"Reintroduce file transport","""Undo the changes from MULE-8873"""
"MULE-9630","Task","Core: Transports",13,"Reintroduce HTTP transport","""Undo the changes from MULE-9111"""
"MULE-9629","Task","Core: Transports",3,"Cherry pick changes in transports from 3.x","""Including but not limited to: MULE-9503, MULE-9417, MULE-9556  """
"MULE-9624","Task","Core: Transports",8,"Refactor out transport spring support code","""Refactor out transport spring support code"""
"MULE-9623","Task","Core: Transports",8,"Refactor out transport support code in core","""Refactor out transport support code in core"""
"MULE-9622","Task","Core: Transports",8,"Separate transport core support to its own module","""Separate transport core support to its own module"""
"MULE-9621","Bug","sdk",8,"Update Subtypes schema generation to avoid name collisions with parameters","""Modify schema generation for subtypes to use type references instead of creating named elements.     With this, we should be able to have a parameter with the same name as the subtypes alias name"""
"MULE-9620","Enhancement Request","Core: Logging",2,"Updated log4j version to 2.3 for versions previous 3.8.","""A client pointed to us that the logger MP was impacting highly the performance of a simple application, updating the version of the logger from 2.1 to 2.3 decreases the impact of the logging from a 43% to 20%.    We also need to create a patch for the client (SE-3664)."""
"MULE-9639","Bug","sdk",3,"Application of function requiring Enum output fails","""I have a parameter declared as     where HttpStreamingType is an Enum (AUTO, ALWAYS, NEVER).  When I try to apply the function, however, I get:  """
"MULE-9643","Bug","sdk",5,"Expression for Map in POJO not generated","""I have a POJO containing a Map, which is used in an operation:    But the schema generated only consideres adding each element explicitly, not via an expression that resolves to a Map:  """
"MULE-9642","Bug","sdk",3,"Map in POJO not populated","""I have a POJO which I'm using in an operation and it contains a Map marked as a Parameter:    However, using the following the operation receives a requestBuilder that has a null map causing an NPE:  """
"MULE-9645","Bug","sdk",1,"MessageHandler should not restrict CompletionHandler's result type","""Right now the MessageHandler's handle method is defined as:    which basically means a Source should produce and expect the same """"kind"""" of MuleMessage since the payload and attributes type must be the same for the message and completionHandler. This is wrong since nothing can be assumed about the flow's result.  """
"MULE-9644","Enhancement Request","sdk",8,"Add Datasense support for partial fetching of multi-level keys . ","""A main concern regarding multiple-level keys was that all the possible combinations of the multiple levels had to be resolved at the same time, on a single fetch. This can be a time-consuming task\  To solve this we should add the possibility of partial construction/fetching of the keys that will be provided, allowing the connector developer to improve the responsiveness if its use case requires it.     A possible solution is to add a *List<MetadataKey> appendChilds(MetadataContext context, T key)* method to the MetadataKeyResolver interface that appends the result List<MetadataKey> to the partial fetched key.      Work started in: https://github.com/mulesoft/mule/tree/partial-key-fetching"""
"MULE-9662","Bug","Extensions API",3,"Child element not generated for SubType in Source","""If a message source has a Parameter for which a subtype is defined, the XSD attribute is generated but the XSD element is not"""
"MULE-9661","Enhancement Request","sdk",2,"Make CompletionHandler receive a MuleEvent instead of a MuleMessage","""Right now Sources are forced to create a CompletionHandler that takes a MuleMessage. However, the new message is quite limiting: you can basically only ask for the payload and the data type (attributes too but at that point it won't make too much sense). Things like the encoding cannot be determined. I think it would be best to use a MuleEvent."""
"MULE-9660","Bug","Core: (other)",0,"OAuth2 authorization-code-grant-type is always expecting a refresh_token when it is optional according to the spec","""h5. Problem  According to https://tools.ietf.org/html/rfc6749#section-1.5 refresh_token is optional:  {quote}     Refresh tokens are credentials used to obtain access tokens.  Refresh     tokens are issued to the client by the authorization server and are     used to obtain a new access token when the current access token     becomes invalid or expires, or to obtain additional access tokens     with identical or narrower scope (access tokens may have a shorter     lifetime and fewer permissions than authorized by the resource     owner).  Issuing a refresh token is optional at the discretion of the     authorization server.  If the authorization server issues a refresh     token, it is included when issuing an access token (i.e., step (D) in     Figure 1).  {quote}  More detail about this in:  https://tools.ietf.org/html/rfc6749#section-5.1  {quote}  Successful Response     The authorization server issues an access token and optional refresh     token, and constructs the response by adding the following parameters     to the entity-body of the HTTP response with a 200 (OK) status code:       access_token           REQUIRED.  The access token issued by the authorization server.       token_type           REQUIRED.  The type of the token issued as described in           Section 7.1.  Value is case insensitive.       expires_in           RECOMMENDED.  The lifetime in seconds of the access token.  For           example, the value """"3600"""" denotes that the access token will           expire in one hour from the time the response was generated.           If omitted, the authorization server SHOULD provide the           expiration time via other means or document the default value.       refresh_token           OPTIONAL.  The refresh token, which can be used to obtain new           access tokens using the same authorization grant as described           in Section 6.       scope           OPTIONAL, if identical to the scope requested by the client;           otherwise, REQUIRED.  The scope of the access token as           described by Section 3.3.    {quote}  Current implementation of OAuth2 authorization-code-grant-type is expecting always to get refresh_token so if the OAuth2 server during a refresh token operation sends only the access_token Mule is failing to get the refresh_token with the following exception:      h5. Proposed Solution  As described in the spec if there is a refresh_token issued by the OAuth2 server it should be used for getting new access_tokens if not it should fail when the current access_token is no longer valid (after a 401/403 status code and before retrying the request) and a exception of type should be thrown. For instance:   """
"MULE-9654","Enhancement Request","Build: Distributions|Core: Deployment",8,"Add a way to deploy applications that use plugins not packaged in the app","""As part of the isolation improvement on Mule 4, connectors and extensions will be packaged as application plugins. Those application plugins will be deployed inside each application that use them.  As the number of used plugins increases, so does the size of the application. Some plugins, In particular Data-weave (when converted to an application plugin) are pretty big which, would make the problem more significative.    Problem to solve is then how to define an application that can use plugins that are not packaged inside the application artifact.  """
"MULE-9653","Enhancement Request","Build: Distributions|Core: Deployment",8,"Add a way to share application plugins on the domain","""Provide a way to use application plugins on a domain in order to share resources from those plugins.  For example, if HTTP is an application plugin, I would like to share a configuration across the apps in the domain."""
"MULE-9652","Task","Build: Distributions",8,"Define standalone distribution content","""Need to define what would be the content of the standalone distribution: which modules and extensions will be available in the basic distro? If no every available module/extension is shipped on the distro, can the user build custom distributions to include them? """
"MULE-9651","Task","Core: Deployment",3,"Remove visibility of server plugins from applications","""Applications have access to functionality provided by server plugins by getting access to those plugin's classloaders.  In mule 4, we want to provide extra functionality only with application plugins, that is removing the visibility of server plugins from the app.  """
"MULE-9650","Task","Core: Deployment",8,"Define initial Mule API","""An initial Mule API must de defined, maybe exposing everything that we expose without isolation, so we can start cleaning it up later."""
"MULE-9667","Bug","Extensions API",3,"Extension sources should have a CompletionHandler which receives an ExceptionCallback","""Extensions sources use a CompletionHandler to get a callback when the owning flow finishes processing the message.    However, if the onComplete() method fails, an ExceptionCallback is needed so that the CompletionHandler notifies that it couldn't handle the response.    Notice that this requires having the MuleEvent moved over to mule-api"""
"MULE-9665","Bug","sdk",1,"Extensions using external parent doesn't compile due to lack of dependencies","""*Extensions using external parent doesn't compile due to lack of dependencies*    * When compiling an Extension using the external extension parent {{mule-extensions-parent}}, fails with the following error:    * This issue is because the {{mule-module-extensions-spring-support}} is configured with *test scope*"""
"MULE-9664","Bug","sdk",3,"Configs with sources require some ""connected"" operation","""i have the following configuration:    Then I define the following element:  {code:xml}      <httpn:listener-config name=""""lisConfig"""">          <httpn:listener-connection host=""""localhost"""" port=""""${serverPort}"""" protocol=""""HTTP""""/>      </httpn:listener-config>   {code}  However, when it's parsed the connection is ignored causing the following error:  {code}  org.mule.runtime.api.connection.ConnectionException: No ConnectionProvider has been registered for owner org.mule.extension.http.api.listener.HttpListenerConfig@5f642a7e  {code}  It seems the error is in org.mule.runtime.module.extension.internal.config.ConfigurationBeanDefinitionParser#parseConfigurationProvider since the provider is ignored if no """"connected"""" operations are found in the config:  {code:java}          if (MuleExtensionUtils.getConnectedOperations(configurationModel).isEmpty())          {              builder.addConstructorArgValue(new StaticValueResolver<>(null));              return;          }  {code}  As a worked around I added a dummy operation to the config that takes a connection."""
"MULE-9674","Bug","Extensions API",1,"Loading Interface Metadata type with ExtensionsFieldHandler adds inexistent fields to the MetadataType. ","""When using ClassTypeLoader to load an Interface Type with getter methods defined the resulting *MetadataType* contains inexistent fields      For example having an Interface Animal like this one:      The resulting MetadataType will contain a field named """"speciesName"""" """
"MULE-9673","Task","Modules: XML, XSLT, XPath, SXC",0,"Upgrade Saxon to 9.6.0.7-HE","""Upgrade Saxon due to several issues have been solved since 9.6.0-7-HE version.   * 9.6.0-1-HE is the current version used in Mule: [List of issues solved in Saxon 9.6-HE|https://sourceforge.net/projects/saxon/files/Saxon-HE/9.6/]"""
"MULE-9672","Bug","sdk",1,"Attributes clash between interface baseType and class subType in schema","""I'm defining the following subtype mapping, where ProxyConfig is an interface, DefaultProxyConfig (alias """"proxy"""") a proper implementation and NtlmProxyConfig (alias """"ntlm-proxy"""") another that extends it:    DefaultProxyConfig defines the following parameters:    The subtype is then used as a parameter for a ConnectionProvider:    When the schema is generated the following are types are defined:    Thus a conflict arises since both ProxyConfig and DefaultProxyConfig have the attributes from the latter, which is weird since ProxyConfig is an interface. The following error indicating the clash is thrown when trying to parse a test xml:  """
"MULE-9680","Task","Transport: TCP / UDP / SSL / Multicast",13,"Review tests for new TCP/UDP/SSL connectors","""Make sure new connectors have 100% feature parity with the old transport"""
"MULE-9679","Task","Transport: Email",8,"Review tests for new Email connector","""Make sure that the new EMail connector has 100% feature parity with the old transport"""
"MULE-9678","Enhancement Request","Transport: TCP / UDP / SSL / Multicast",13,"Implement new TCP, UDP and SSL connectors","""Implement new TCP, UDP and SSL connectors for Mule 4"""
"MULE-9677","Enhancement Request","Transport: Email",13,"Implement new Email connector","""Implement new email connector for Mule 4"""
"MULE-9676","Enhancement Request","Transport: FTP / SFTP",8,"Add SFTP support to new FTP connector","""Add SFTP support for the new ftp connector implemented in MULE-9216"""
"MULE-9686","Bug","Extensions API",8,"Wrong schema generation when Parameter List has a name that cannot be singularised.","""Having a List @Parameter attribute with a name that cannot be singularised  is generating the childs with the same name as the parent.  So for this cases the child name should be composed by the parent name and append to it a *-item*.    For example having      The generated schema will contain something like this for this element:      The parent should be named *bcc* and the child *bcc-item*    """
"MULE-9685","Bug","sdk",5,"Implicit provider generation fails assigning default value to attribute","""I have a ConnectionProvider with the following optional attribute:    Since all it's configuration is quite advanced, defining a connection is not required. However, when I try defining my config without it I get the following error:    This is the configuration definition:    Defining an empty http:request-connection within it solves the problem."""
"MULE-9684","Bug","sdk",8,"Extensions spring support module is required to use an extension","""In order to use an extension in a project, the following dependency must be present:    Otherwise things like abstractConnectionProvider won't be found."""
"MULE-9689","Task","Build: Maven",3,"Split Jar reactor from Distribution reactor ","""APIkit is included in Mule distribution, but it depends on the Mule jars. To build Mule distribution we need first to build the jars, then build APIkit and then the distribution."""
"MULE-9705","Task","Modules: HTTP",8,"Remove HTTP module - Migrate tests","""Migrate tests that use the old http module to use the new extension"""
"MULE-9698","Task","Modules: HTTP",8,"Migrate basic security filter to HTTP extension","""HttpBasicAuthenticationFilter needs to be migrated in a way that allows the same functionality to be used."""
"MULE-9706","Task","Core: Transports",5,"Reintroduce TCP/SSL transports","""Bring those transports back."""
"MULE-9709","Bug","sdk",3,"Validate SubTypes and BaseType alias names are not the same","""When using SubTypes mapping, if a subtype declares the same alias name that its base type or some of its peers, then model validation should fail."""
"MULE-9717","Enhancement Request","sdk",5,"Extensions should not depend on mule-module-extensions-spring-support","""*Extensions should not depend on mule-module-extensions-spring-support*    - In a opposite way that MULE-9665 do, extensions should not depend on {{mule-module-extensions-spring-support}}."""
"MULE-9716","Bug","Extensions API",1,"Subtypes model property should not be externalizable","""Subtypes model property should not be externalizable"""
"MULE-9715","Bug","Transport: FTP / SFTP",3,"Rename operation is missing a overwrite feature in the new file and ftp connectors","""When a file is renamed, a FileWriteMode is missing for the cases in which the target file already exists"""
"MULE-9713","Bug","sdk",1,"Top level parameters are not being registered for configuration specific operations ","""Actually when registering top level parameters the sdk introspect every configuration parameter and every extension operation parameter.    It must also introspect all the operations that are configuration specific.  In order to achieve this the _ExtensionNamespaceHandler#registerTopLevelParameters_ method should be updated with that logic."""
"MULE-9711","Task","Core: Transports",3,"Change namespaces of the transports","""This so they do not conflict with the new extensions for Mule 4."""
"MULE-9719","Enhancement Request","Extensions API",5,"Output MetadataResolvers should consider the message attributes","""Currently the output metadata resolvers only represent the message payload. There're cases in which it's also necessary to represent the message attributes (e.g.: when the attribute type is an interface).    It should be possible to provide a resolver to handle such cases"""
"MULE-9718","Bug","Extensions API",3,"Collections of enums not supported as child elements","""When an extension has a collection of enums as a parameter, the XSD only supports it as a expressionList attribute. It should be possible to also define it statically as child elements"""
"MULE-9725","Task","Transport: FTP / SFTP",0,"Refactor FTP connector code to allow FTPS one to reuse it","""Do some refactoring so that code is more reusable by the FTPS connector"""
"MULE-9723","Bug","Extensions API",1,"TlsContextFactory not properly parsed when used as extension parameters","""When extensions take TLsContextFactory as parameters, the keyStore and trustStore elements are ignored injecting a blank TlsContextFactory which doesn't honour much of its config."""
"MULE-9721","Bug","sdk",5,"Complex type child elements not parsed when default value is set","""In operations with complex parameters that have a default value like the following:        Then, support for creating the parameter as child element is provided, but is always overridden by the attribute's default value.   In the example, the operation will always take the users List form the """"users"""" attribute, instead of parsing the child elements    """
"MULE-9730","Enhancement Request","Modules: HTTP",5,"Support grizzly's PRESERVE_HEADER_CASE property","""Right now, all incoming headers are transformed to lower case by Grizzly. Thus all our code is based around that, meaning when we need a header like """"Host"""" we ask for """"host"""", same with """"Content-Type"""" and others.   However, the introduction of Grizzly property org.glassfish.grizzly.http.PRESERVE_HEADER_CASE means that when it's set to true all that code will fail. The property is very important for proxy scenarios where the headers received are meant to be sent back to another service exactly as received.   We should make sure our code works with that property and add tests to verify the proxy scenario is valid."""
"MULE-9729","Task","Modules: HTTP",1,"Upgrade grizzly to 2.3.25","""We need to upgrade to the latest version to be released around May 23 (2016)."""
"MULE-9727","Bug","Extensions",5,"Extension plugin not working if annotated class defines an operation that uses an enum class not included in the same package","""If the extension declares an operation that uses an enum class and it is not in the same package as the extension annotated class when application that uses this plugin is deployed it will fail due to the application classloader is not able to find the operation class when registering the extension.  This happens due to the exported packages is only fulfilled with the package of the extension annotated class.      As an example the mule-module-validation defines the extension:   so the metadata for the plugin would have this package as exported but at the same time the extension defines an operations with classes in the same package but internally end up using classes from   For this example the classes are: ValidationExtension->NumberValidationOperation->NumberType.  Where NumberType is an enum."""
"MULE-9731","Enhancement Request","Core: Non-Blocking",13,"Migrate 3.7 ReplyToHandler centric non-blocking support to use reactive streams API","""The existing approach has significant limitations and is a maintenance issue."""
"MULE-9780","Bug","Extensions API",1,"Metadata model properties should not reference classes","""Trying to get the extension from a mule app does not work.    When asking for a single instance the serializer crashes with the error:    {""""errorType"""":""""class java.lang.ClassCastException"""", """"errorMessage"""":""""com.google.common.collect.SingletonImmutableSet cannot be cast to java.util.List""""}    When asking for the entire list the error is:    {""""errorType"""":""""class java.lang.UnsupportedOperationException"""", """"errorMessage"""":""""Attempted to serialize java.lang.Class: java.lang.String. Forgot to register a type adapter?""""}    This happens because the MetadataKeyIdModelProperty class references types by class instead of using a MetadataType.    The mule app is a simple app that lists files of a directory:  """
"MULE-9735","Bug","sdk",5,"Mapped subtype from a different module than its baseType is not parsed correctly","""When extension A Imports a baseType """"Fruit"""" from extension B, and maps it to a new subtype """"Apple"""" (declared in A), when """"Apple"""" is used as a parameter of some B component, then the parsing fails not finding the type """"Apple"""" instantiate.    For the declarations:          Then, the following xml is valid for the schema, but the parser fails to instantiate the Apple    """
"MULE-9733","Bug","sdk",1,"Injected config not present during source initialisation","""I have an Initialisable Source that references it's config:    However, when initialise() runs, the config is null."""
"MULE-9732","Bug","Extensions",8,"DefaultExtensionFactory is setting the incorrect ClassLoader","""While doing some changes to classloaders as part of MULE-9652 I found that there is an issue related to how the extension classloader is set.  I'm testing my changes by using validations extensions in my application.    h5. Problem  DefaultExtensionFactory is setting MuleContainerSystemClassLoader instead of the application classloader when creating the RuntimeExtensionModel on method:      Actually, the extensionDeclarer has the correct reference to the app classloader:       h5. Expected result  Application should be successfully deployed and started    h5. Actual result  I'm getting a classnotfoundexception while the extension namespace handler is being registered. See log attached to the issue."""
"MULE-9741","Bug","Core: Endpoints",0,"Deadlocks comparing MuleEndpointURI","""A deadlock was found when comparing instances of MuleEndpointURI under load.     To reproduce use this code:    """
"MULE-9738","Enhancement Request","Build: Integration Tests",13,"Improve functional test case to work with extensions","""Functional test case uses a filtering classloader similar to the one used on the standalone container in order to reproduce a similar behaviour.  That classloader uses a filter that exposes only the mule API. That filter is created using the available mule-module.properties files.  In order to use created extensions on functional test cases, each extension must currently provide a mule-module.properties file. This file is only used for testing purposes and must be removed and improve the functional test case to use the API information already defined in the extension descriptor."""
"MULE-9736","Enhancement Request","sdk",2,"Add the capability to add attributes to the MuleMessage generated by the TestEventRunner ","""The framework that we use today to run the tests is outdated with some of the changes that are going on in mule 4, because of that, we can't run a flow with a message that contains attributes.    Would be ideal if we can add a method to the FlowConstructRunner   _withAttributes(Serializable attributes)_ so we can prepare the flow this way        """
"MULE-9755","Enhancement Request","Extensions API",1,"Add the concept of extension walker","""As the ExtensionModel grows in complexity how to navigate and find things on it also becomes harder, which leaves to bugs or omissions.    Create the concept of ExtensionWalker so that the complexity can be abstracted."""
"MULE-9753","Bug","Core: Deployment",8,"Classloading model prone to linkage errors","""Current classloading model  suffers from LinkageErrors when applications or plugins redefine classes from the container classloader, and those classes are exposed through the API.  Example:  Container has      and application classloader contains:      When the application executes new C(), the linkage error will be thrown as  the B parameter passed to A, is the B from the application classloader, instead of being the one from the container."""
"MULE-9752","Enhancement Request","Build: Distributions|Core: (other)",13,"Define services for the mule container","""Fill details  """
"MULE-9749","Task","Modules: HTTP",0,"Analyse ResponseFailureCallback changes impact","""Some small changes were required in the response callback used for failures. We need to make sure they don't impact the behaviour of the extension."""
"MULE-9748","Task","Modules: HTTP",0,"Analyse CurrentEventHolder use in HTTP extension","""Moving to 4.0, we need to analyse whether all the RequestContext related code is still necessary in the HTTP extension."""
"MULE-9772","Enhancement Request","Extensions API|sdk",8,"Extension sources should include the concept of ExchangePattern","""Sources should have the concept of Exchange pattern to indicate if they generate a response or not.    * First, a source should declare which patterns it does support (at least one).  * The supported types should be accesible from the SourceModel  * If the source supports more than one, then the SDK should generate DSL support so that the desired type is configurable  * The selected exchange pattern should be available in Runtime through the SourceContext  * It is the source's responsibility to honour that MEP, SDK will not enforce it    """
"MULE-9770","Enhancement Request","sdk",2,"include json representation of ExtensionModel inside extension's jar","""For external reference, the extension's jar should include a extension_model.json file with the JSON representation of the model"""
"MULE-9769","Enhancement Request","Extensions API",8,"ExtensionModel should say where is dynamic metadata supported","""It should be possible by just looking at the ExtensionModel to know  which operation parameters support dynamic metadata and which operation have dynamic return types"""
"MULE-9768","Bug","sdk",2,"Sources are instantiated twice","""ExtensionMessageSource creates the source during initialisation and during start (because of the reconnection strategy).  The issue was fixed in MULE-9490 because it was blocking the task but now we need to add a test."""
"MULE-9765","Task","Transport: TCP / UDP / SSL / Multicast",2,"move current sockets module to the transport compatibility layer","""move current sockets module to the transport compatibility layer, using a different maven group and artifact ids, so that it doesn't conflicts with the new sockets extension"""
"MULE-9763","Bug","Modules: File",1,"A warning is not shown when using default baseDir","""According to the spec this config should show a WARNING in start time because it is using the default baseDir:    """
"MULE-9761","Enhancement Request","sdk",5,"Validate the creation of recursive MetadataKeys","""*Validate the creation of recursive MetadataKeys*    Nowadays exist two border cases of {{MetadataKey}} creation:    * *Recursive Keys:* When creating a multilevel key, you can set a child for a key, this is adding a new level to the MetadataKey, but the problem comes when this child is a parent in the key hierarchy creating a recursive relationship. Besides of been a invalid case this also can be a source of bugs for the parts that uses MetadataKeys: MetadataKey serialiser, this kind of recursive structure produces a {{StackOverflowError}} when trying to serialise the object.{code:title=Recursive keys|bgColor=#FFFFCE} Root Key      +      |      v  +->Key1  |   +  |   |  |   v  |  Key2  |   +  +---+    """
"MULE-9760","Bug","Core: (other)",1,"Connection leak if pooling listener fails","""If a Connection provider is pooling connections and the pooling listener fails to execute the onBorrow() method, then the connection is not returned to the pool nor invalidated.    """
"MULE-9759","Task","Extensions|sdk",5,"Change test extensions packaging from jar to mule-extension","""We need to update the packaging of the test extensions so that we can use them inside mule apps"""
"MULE-9782","Task","Modules: HTTP",0,"Add RAML metadata support to HTTP extension","""The RAML metadata support was outside of the HTTP module but we now need to move it to the extension."""
"MULE-9779","Enhancement Request","sdk",8,"Extensions should generate studio plugin","""Whatever Devkit does"""
"MULE-9778","Enhancement Request","Core: Deployment|Core: Logging",0,"MuleLoggerContextFactory should not create artifact descriptors","""MuleLoggerContextFactory is creating artifact descriptors in order to determine which logging configuration should be used.  Creating descriptors requires to access the file system and requires and requires to create the artifact factories. In some cases, creating the artifact factory would require to create many different objects.  To avoid these problems the MuleLoggerContextFactory should use a service that searches for descriptors available in the deployment service's dependencies."""
"MULE-9777","Task","Core: Deployment|Core: Logging",0,"Review per-app logging on mule 4","""On mule 4, there are different types of mule artifacts. It must be defined what is the expected behaviour of those artifacts regarding logging.  As logging is highly related to classloading (because the logging context  is tracked by classlaoder), the new estructure of artifacts/classlaoders should be reviewed from the logging perspective and define how each artifact is supposed to log."""
"MULE-9776","Bug","Extensions",0,"Fix the http-ext to include it as a zip in the distribution","""Fix HTTP Extension to generate a zip and include it in the app-plugins folder to be treated as plugins. We should wait until the validations extension is fixed to move forward though."""
"MULE-9788","Task","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",0,"Re-enable PGP security tests","""PGP Tests are being skipped when no JCE installed because in previous versions of the JDK, some encryption methods were not available without JCE. Now we need to re-enable them."""
"MULE-9784","Bug","Core: Deployment",2,"Missing i18n resource for validation extension","""mule-module-validation when deployed as app-plugin (extension) it is not able to access its i18n resource bundle.    h5. Problem  Resource is not accessible due to org.mule.runtime.core.config.i18n.MessageFactory.getBundlePath() uses dot characters instead of slash characters.  Exception:      h5. Proposed solution  * To use slash instead of dot character for referencing to i18n resources due to they are exported as folders in MessageFactory  * Export the i18n resource file using  annotation from Extensions API so it will be accessible from the plugin classloader"""
"MULE-9798","Bug","Core: Deployment",1,"If a domain fails to be deployed a NPE is thrown when deploying and app that is registered for the same domain","""If the domain fails to be deployed then when an application is about to be deployed a NPE is thrown and also the status logged in console throws another NPE.    Domain:      Then application throws a NPE:      Finally the MuleDeploymentService throws another NPE:  """
"MULE-9790","Bug","Core: Deployment",8,"Provider not found error when running Mule Standalone","""When an application/domain is deployed the following   """
"MULE-9808","Bug","sdk",1,"Lifecycle is not being applied on the connection used in a Message Source","""If a source uses a connection that implements Initialisable interface, the initialise method is not being invoked.    This doesn't happen to the connections used for operations.    The test for this bug should consist in: Implementing Initialisable on HeisenbergConnection and setting some value during the initialise phase, and then check that value was correctly set. """
"MULE-9807","Bug","Modules: HTTP",8,"Byte to ByteArray ends up serialising Byte","""When the payload is a {{java.lang.Byte}} instead of returning that value HTTP listener returns its serialized value or something else.  To reproduce deploy the below flow and run {{curl -i http://localhost:8081/http-respose-byte}}.  This occurs because the default is to seek a transformation to a ByteArray and the ObjectToByteArray transformer does not handle single Bytes, so SerializableToByteArray is used instead.  """
"MULE-9802","Task","sdk",1,"Manifest generator should use ExtensionWalker","""Replace the custom iteration logic in ExportedArtifactsCollector with the ExtensionWalker"""
"MULE-9815","Bug","sdk",3,"Thrown exceptions are unwrapped and trace is lost","""Most exceptions that our internal HTTP client throws are wrapped in a IOException, thus the expected cause of a MessagingException from the HTTP requester is an IOException. However, most migrated test are failing because the exceptions received are more """"lower level"""".  For example, in HttpRequestTlsInsecureTestCase the exception received is a java.security.cert.CertificateException."""
"MULE-9813","Task","Extensions",3,"Extract plugin-only functionality from extensions-maven-plugin","""For plugins, the assembly functionality of mule-extensions-maven-plugin is needed. It has to be extracted and reutilized by both plugins and extensions builder."""
"MULE-9811","Enhancement Request","Extensions API",5,"Introduce the concept of @NoRef parameters","""Currently, parameters of complex types support either expressions or static string values. When a static string is supplied, it is interpreted as a reference to an object on the Mule Registry.    There're cases such as <tcp:send content=""""blah"""" /> in which the content attribute should be of type Object, but the static """"blah"""" value should not be interpreted as a reference, but as the actual String """"blah"""".    To support these cases, the @NoRef attribute needs to be created. It can be applied either to an operation parameter or a configuration field.     Should also include updating connectors such as File, FTP and Http """
"MULE-9810","Task","Build: Distributions",1,"Avoid exclusions for transitive dependencies in all-extensions pom","""As part of the distributions we have a pom artifact that groups the extensions that would be added to the distro as apps-plugins.  These extensions have to be declared as zip type but as currently the maven-assembly-plugin is configure to build the lib/opt folder we have a limitation due to libraries from these extensions are being copied to the lib/opt.    This issue is forcing us to duplicate ourselves when declaring dependencies in extensions due to they also have to be excluded.    There is a open bug in maven-assembly-plugin related to this issue, it is supposed to work if you do wildcard exclusion:  https://issues.apache.org/jira/browse/MASSEMBLY-799"""
"MULE-9820","Enhancement Request","sdk",13,"Add the concept of part name/level to MetadataKeys","""*Add the concept of part name/level to MetadataKeys*    * Nowadays {{MetadataKeys}} are able to have {{MetadataKeys}} childs to represent multilevel metadata keys, the problem comes that each level of metadata key doesn't know to which part of the entire multi level MetadataKey represent.  * Doesn't having the name of the level inside the MetadataKey complex the Metadata resolution due that there is not way to ensure that each MetadataKey is really the level that the resolution needed."""
"MULE-9834","Task","Core: Transports|Modules: Management / JMX",1,"Make management work in the compatibility module","""Fix management support for transport/endpoint specific stuff."""
"MULE-9831","Bug","Modules: File",3,"I cannot write an String to a file with an arbitrary encoding","""I have created an String with ASCII encoding and I want to write it in a file with encoding UTF-16."""
"MULE-9830","Bug","Modules: File",3,"file:write doesn't preserve encoding when writing an String","""I want to be able to create an String with an encoding different from the default platform encoding during my flow execution and later write that String in a file with that encoding."""
"MULE-9826","Bug","Modules: HTTP",0,"HTTP timeout when sending x-www-form-urlencoded POST","""To reproduce deploy the attached config and run {{curl -X POST -d 'a=1&b=2' http://127.0.0.1:8081/print-payload}}"""
"MULE-9824","Task","Core: Transports",3,"Rename transports packages so they don't collide with the core packages","""package org.mule.runtime is reserved for the runtime core classes. Classes in the compatibility plugin must have a different package prefix so they can be properly loaded by the new classloaders."""
"MULE-9822","Enhancement Request","Core: Logging",0,"Logged error should suggest how to enable flowstack","""When an error is logged there is a hint about how to enable verbose logging:        We should add:    """
"MULE-9821","Enhancement Request","sdk",8,"Improve MetadataResult error communication ","""*Improve MetadataResult error communication*    * Nowadays when resolving metadata, this result are wrapped within a {{MetadataResult<>}}, this wrapper helps communicating if the resolutions finished correctly or not, and in this last case, communicates which was the error message.   * For cases where the resolution is just for input or output, the error message is very simple, because there is a unique error for the single resolution, the problem comes when resolving the metadata for the entire {{Component}}, so you resolve metadata for the *input* and *output* at the same time, and in the case that something fails you receive a message that you don't know where it came from (input or output), or in a worst scenario you get 2 error messages which you don't know how are their fathers."""
"MULE-9840","Task","Build: Integration Tests|Transport: JMS",1,"Make a reusable ActiveMQ Broker for tests","""Make a reusable junit Rule for starting AMQ since that will be needed also in the system tests and the new JMS extension."""
"MULE-9838","Bug","sdk",5,"StringIndexOutOfBoundsException is thrown while documenting the schema with javadoc ","""StringIndexOutOfBoundsException is thrown while documenting the schema with javadoc.    """
"MULE-9837","Bug","Core: Event/Message",3,"Attributes are not copied when MuleMessage is","""When analysing some test that use a test queue element, the returned message had no attributes. The queue copies the event (and thus the message) but the attributes are not copied so they are lost."""
"MULE-9854","Enhancement Request","Core: DSL processing",3,"List of pojos not parsed","""Run ParameterizedConfigParserTestCase and place a breakpoint to obtain the configuration named heisenberg.    The ricinPacks collection is null although properly defined on the definition provider."""
"MULE-9853","Enhancement Request","Core: DSL processing",0,"Support DI on ObjectFactory","""It'd be great to be able to have dependencies injected in an ObjectFactory. Consider that it might not be possible to inject anything since by the time the getObject() method is invoked the spring registry might not yet be available, or maybe there's still not enough information to instantiate objects int the right order.    But at the very least, if the beans available on the SimpleRegistry (MuleContext, ConnectionManager, etc) could be injected, that'd be great."""
"MULE-9852","Bug","Core: Logging|Extensions",1,"Empty domain log files created for each extension","""When you start Mule with the default application these empty log files are created:        Even if you use the extension nothing is added to those files."""
"MULE-9851","Enhancement Request","Core: DSL processing",5,"Support for parsing maps","""Need to add support for parsing Maps. Just like with collections, it should be possible to provide a Supplier<Map> which creates the map instance    Examples of desired syntax:    *From String to list of strings*        {code:xml}  <heisenberg:deaths-by-seasons>              <heisenberg:deaths-by-season key=""""s01"""">                  <heisenberg:deaths-by-season-item value=""""emilio""""/>                  <heisenberg:deaths-by-season-item value=""""domingo""""/>              </heisenberg:deaths-by-season>              <heisenberg:deaths-by-season key=""""s02"""" value=""""#[['some', 'other']]""""/>              <heisenberg:deaths-by-season key=""""s02"""" value=""""#[['tuco', 'tortuga']]""""/>          </heisenberg:deaths-by-seasons>  {code}    *From String to Long*  {code:java}  private Map<String, Long> recipe;  {code}    {code:xml}  <heisenberg:recipes>              <heisenberg:recipe key=""""methylamine"""" value=""""75""""/>              <heisenberg:recipe key=""""pseudoephedrine"""" value=""""0""""/>              <heisenberg:recipe key=""""P2P"""" value=""""#[24+1]""""/>          </heisenberg:recipes>  {code}    *From String to Object*  {code:java}  private Map<String, Ricin> labeledRicin;  {code}    {code:xml}  <heisenberg:labeled-ricins>              <heisenberg:labeled-ricin key=""""pojo"""">                  <heisenberg:ricin microgramsPerKilo=""""22"""">                      <heisenberg:destination>                          <heisenberg:door victim=""""Lidia"""" address=""""Stevia coffe shop""""/>                      </heisenberg:destination>                  </heisenberg:ricin>              </heisenberg:labeled-ricin>          </heisenberg:labeled-ricins>  {code}"""
"MULE-9850","Bug","Core: DSL processing",0,"Lifecycle not applied on ObjectFactory output","""When a component definition uses an ObjectFactory, lifecycle is applied on it but not on the object that it produces.     It should be applied on both"""
"MULE-9848","Enhancement Request","Core: DSL processing",3,"Need to be able to provide the collection type when parsing a List","""When parsing a child list (either complex or simple types), there should be a way to provide a Supplier which instantiates a custom type of collection.    These might also lead to change the API so that the AttributeDefinition refers simply to collections instead of Lists"""
"MULE-9847","Enhancement Request","Core: DSL processing",3,"Add the capability to register multiple XmlInfoProviders","""Currently, the XmlInfoProviders are obtained via SPI. We need an api so that they can be added programatically by a ComponentBuildingDefinitionProvider"""
"MULE-9846","Enhancement Request","Core: DSL processing",3,"New parsers should support list of simple types","""Currently, the new parsers support parsing childs of complex types through the fromChildConfiguration factor method. We need something similar so that things such as List<String> or List<int> can also be parsed.     Example, List of String called pets         As an additional suggestion, I would rename fromChildConfiguration to fromChildParameter, or something like that  """
"MULE-9845","Task","Extensions",0,"When assembling extensions/plugins, exclude dependencies with boot/system packages","""This is to avoid including libraries in the assembly that will not be used.    This has to go hand in hand with a mechanism to determine which are those dependencies (currently, we only have a packages list in ContainerClassLoaderFactory#SYSTEM_PACKAGES and #BOOT_PACKAGES)"""
"MULE-9879","Bug","Modules: HTTP",2,"HTTP Listener sets arbitrary encoding","""When I send an HTTP POST to an HTTP listener the message DataType has encoding=UTF-8 although I didn't set in the request. I've tried to change the default encoding of the Mule server for UTF-16 configuring it in the wrapper.conf but it doesn't pay attention to it. You can reproduce deploying the attached config and running {{curl -ik -X POST -d """"a.json"""" -H 'Content-Type: juan/perez' http://localhost:8082/read-message}}.    h3. HTTP request  """
"MULE-9878","Bug","sdk",1,"Restarted configuration has no connectivity","""Testing whether connections are broken when configs are stopped I found restarting them has no effect. Take the following code:    When trying to send a request again it is refused.  It seems like in LifecycleAwareConfigurationInstance, the stop performs and unbind but since the bind is performed in the initialise method, the connection is not reestablished at start time."""
"MULE-9877","Task","Build: Distributions",1,"Remove dependency on mule-commons","""Mule 4 is still depending on mule-commons in order to use:  *  Bulk operation classes used on batch (org.mule.common.bulk.BulkOperationResult, org.mule.common.bulk.BulkItem)  * Connectivity testing (org.mule.common.Testable, org.mule.common.Result.Status, etc)  * Metadata (org.mule.common.metadata.ConnectorMetaDataEnabled, org.mule.common.metadata.MetaData, etc)  """
"MULE-9875","Bug","Modules: File",5,"Sometimes file:write acquires lock even when the lock is already taken","""When writing a file with a lock it fails only sometimes. To reproduce deploy the attached flow and run       This is the file structure:    temp  temp/.DS_Store  temp/file  temp/file.1  temp/file.10  temp/file.100  temp/file.1000  temp/file.101  temp/file.102  temp/file.103  temp/file.104  temp/file.105  temp/file.106  temp/file.107  temp/file.108  temp/file.109  temp/file.11  temp/file.110  temp/file.111  temp/file.112  temp/file.113  temp/file.114  temp/file.115  temp/file.116  temp/file.117  temp/file.118  temp/file.119  temp/file.12  temp/file.120  temp/file.121  temp/file.122  temp/file.123  temp/file.124  temp/file.125  temp/file.126  temp/file.127  temp/file.128  temp/file.129  temp/file.13  temp/file.130  temp/file.131  temp/file.132  temp/file.133  temp/file.134  temp/file.135  temp/file.136  temp/file.137  temp/file.138  temp/file.139  temp/file.14  temp/file.140  temp/file.141  temp/file.142  temp/file.143  temp/file.144  temp/file.145  temp/file.146  temp/file.147  temp/file.148  temp/file.149  temp/file.15  temp/file.150  temp/file.151  temp/file.152  temp/file.153  temp/file.154  temp/file.155  temp/file.156  temp/file.157  temp/file.158  temp/file.159  temp/file.16  temp/file.160  temp/file.161  temp/file.162  temp/file.163  temp/file.164  temp/file.165  temp/file.166  temp/file.167  temp/file.168  temp/file.169  temp/file.17  temp/file.170  temp/file.171  temp/file.172  temp/file.173  temp/file.174  temp/file.175  temp/file.176  temp/file.177  temp/file.178  temp/file.179  temp/file.18  temp/file.180  temp/file.181  temp/file.182  temp/file.183  temp/file.184  temp/file.185  temp/file.186  temp/file.187  temp/file.188  temp/file.189  temp/file.19  temp/file.190  temp/file.191  temp/file.192  temp/file.193  temp/file.194  temp/file.195  temp/file.196  temp/file.197  temp/file.198  temp/file.199  temp/file.2  temp/file.20  temp/file.200  temp/file.201  temp/file.202  temp/file.203  temp/file.204  temp/file.205  temp/file.206  temp/file.207  temp/file.208  temp/file.209  temp/file.21  temp/file.210  temp/file.211  temp/file.212  temp/file.213  temp/file.214  temp/file.215  temp/file.216  temp/file.217  temp/file.218  temp/file.219  temp/file.22  temp/file.220  temp/file.221  temp/file.222  temp/file.223  temp/file.224  temp/file.225  temp/file.226  temp/file.227  temp/file.228  temp/file.229  temp/file.23  temp/file.230  temp/file.231  temp/file.232  temp/file.233  temp/file.234  temp/file.235  temp/file.236  temp/file.237  temp/file.238  temp/file.239  temp/file.24  temp/file.240  temp/file.241  temp/file.242  temp/file.243  temp/file.244  temp/file.245  temp/file.246  temp/file.247  temp/file.248  temp/file.249  temp/file.25  temp/file.250  temp/file.251  temp/file.252  temp/file.253  temp/file.254  temp/file.255  temp/file.256  temp/file.257  temp/file.258  temp/file.259  temp/file.26  temp/file.260  temp/file.261  temp/file.262  temp/file.263  temp/file.264  temp/file.265  temp/file.266  temp/file.267  temp/file.268  temp/file.269  temp/file.27  temp/file.270  temp/file.271  temp/file.272  temp/file.273  temp/file.274  temp/file.275  temp/file.276  temp/file.277  temp/file.278  temp/file.279  temp/file.28  temp/file.280  temp/file.281  temp/file.282  temp/file.283  temp/file.284  temp/file.285  temp/file.286  temp/file.287  temp/file.288  temp/file.289  temp/file.29  temp/file.290  temp/file.291  temp/file.292  temp/file.293  temp/file.294  temp/file.295  temp/file.296  temp/file.297  temp/file.298  temp/file.299  temp/file.3  temp/file.30  temp/file.300  temp/file.301  temp/file.302  temp/file.303  temp/file.304  temp/file.305  temp/file.306  temp/file.307  temp/file.308  temp/file.309  temp/file.31  temp/file.310  temp/file.311  temp/file.312  temp/file.313  temp/file.314  temp/file.315  temp/file.316  temp/file.317  temp/file.318  temp/file.319  temp/file.32  temp/file.320  temp/file.321  temp/file.322  temp/file.323  temp/file.324  temp/file.325  temp/file.326  temp/file.327  temp/file.328  temp/file.329  temp/file.33  temp/file.330  temp/file.331  temp/file.332  temp/file.333  temp/file.334  temp/file.335  temp/file.336  temp/file.337  temp/file.338  temp/file.339  temp/file.34  temp/file.340  temp/file.341  temp/file.342  temp/file.343  temp/file.344  temp/file.345  temp/file.346  temp/file.347  temp/file.348  temp/file.349  temp/file.35  temp/file.350  temp/file.351  temp/file.352  temp/file.353  temp/file.354  temp/file.355  temp/file.356  temp/file.357  temp/file.358  temp/file.359  temp/file.36  temp/file.360  temp/file.361  temp/file.362  temp/file.363  temp/file.364  temp/file.365  temp/file.366  temp/file.367  temp/file.368  temp/file.369  temp/file.37  temp/file.370  temp/file.371  temp/file.372  temp/file.373  temp/file.374  temp/file.375  temp/file.376  temp/file.377  temp/file.378  temp/file.379  temp/file.38  temp/file.380  temp/file.381  temp/file.382  temp/file.383  temp/file.384  temp/file.385  temp/file.386  temp/file.387  temp/file.388  temp/file.389  temp/file.39  temp/file.390  temp/file.391  temp/file.392  temp/file.393  temp/file.394  temp/file.395  temp/file.396  temp/file.397  temp/file.398  temp/file.399  temp/file.4  temp/file.40  temp/file.400  temp/file.401  temp/file.402  temp/file.403  temp/file.404  temp/file.405  temp/file.406  temp/file.407  temp/file.408  temp/file.409  temp/file.41  temp/file.410  temp/file.411  temp/file.412  temp/file.413  temp/file.414  temp/file.415  temp/file.416  temp/file.417  temp/file.418  temp/file.419  temp/file.42  temp/file.420  temp/file.421  temp/file.422  temp/file.423  temp/file.424  temp/file.425  temp/file.426  temp/file.427  temp/file.428  temp/file.429  temp/file.43  temp/file.430  temp/file.431  temp/file.432  temp/file.433  temp/file.434  temp/file.435  temp/file.436  temp/file.437  temp/file.438  temp/file.439  temp/file.44  temp/file.440  temp/file.441  temp/file.442  temp/file.443  temp/file.444  temp/file.445  temp/file.446  temp/file.447  temp/file.448  temp/file.449  temp/file.45  temp/file.450  temp/file.451  temp/file.452  temp/file.453  temp/file.454  temp/file.455  temp/file.456  temp/file.457  temp/file.458  temp/file.459  temp/file.46  temp/file.460  temp/file.461  temp/file.462  temp/file.463  temp/file.464  temp/file.465  temp/file.466  temp/file.467  temp/file.468  temp/file.469  temp/file.47  temp/file.470  temp/file.471  temp/file.472  temp/file.473  temp/file.474  temp/file.475  temp/file.476  temp/file.477  temp/file.478  temp/file.479  temp/file.48  temp/file.480  temp/file.481  temp/file.482  temp/file.483  temp/file.484  temp/file.485  temp/file.486  temp/file.487  temp/file.488  temp/file.489  temp/file.49  temp/file.490  temp/file.491  temp/file.492  temp/file.493  temp/file.494  temp/file.495  temp/file.496  temp/file.497  temp/file.498  temp/file.499  temp/file.5  temp/file.50  temp/file.500  temp/file.501  temp/file.502  temp/file.503  temp/file.504  temp/file.505  temp/file.506  temp/file.507  temp/file.508  temp/file.509  temp/file.51  temp/file.510  temp/file.511  temp/file.512  temp/file.513  temp/file.514  temp/file.515  temp/file.516  temp/file.517  temp/file.518  temp/file.519  temp/file.52  temp/file.520  temp/file.521  temp/file.522  temp/file.523  temp/file.524  temp/file.525  temp/file.526  temp/file.527  temp/file.528  temp/file.529  temp/file.53  temp/file.530  temp/file.531  temp/file.532  temp/file.533  temp/file.534  temp/file.535  temp/file.536  temp/file.537  temp/file.538  temp/file.539  temp/file.54  temp/file.540  temp/file.541  temp/file.542  temp/file.543  temp/file.544  temp/file.545  temp/file.546  temp/file.547  temp/file.548  temp/file.549  temp/file.55  temp/file.550  temp/file.551  temp/file.552  temp/file.553  temp/file.554  temp/file.555  temp/file.556  temp/file.557  temp/file.558  temp/file.559  temp/file.56  temp/file.560  temp/file.561  temp/file.562  temp/file.563  temp/file.564  temp/file.565  temp/file.566  temp/file.567  temp/file.568  temp/file.569  temp/file.57  temp/file.570  temp/file.571  temp/file.572  temp/file.573  temp/file.574  temp/file.575  temp/file.576  temp/file.577  temp/file.578  temp/file.579  temp/file.58  temp/file.580  temp/file.581  temp/file.582  temp/file.583  temp/file.584  temp/file.585  temp/file.586  temp/file.587  temp/file.588  temp/file.589  temp/file.59  temp/file.590  temp/file.591  temp/file.592  temp/file.593  temp/file.594  temp/file.595  temp/file.596  temp/file.597  temp/file.598  temp/file.599  temp/file.6  temp/file.60  temp/file.600  temp/file.601  temp/file.602  temp/file.603  temp/file.604  temp/file.605  temp/file.606  temp/file.607  temp/file.608  temp/file.609  temp/file.61  temp/file.610  temp/file.611  temp/file.612  temp/file.613  temp/file.614  temp/file.615  temp/file.616  temp/file.617  temp/file.618  temp/file.619  temp/file.62  temp/file.620  temp/file.621  temp/file.622  temp/file.623  temp/file.624  temp/file.625  temp/file.626  temp/file.627  temp/file.628  temp/file.629  temp/file.63  temp/file.630  temp/file.631  temp/file.632  temp/file.633  temp/file.634  temp/file.635  temp/file.636  temp/file.637  temp/file.638  temp/file.639  temp/file.64  temp/file.640  temp/file.641  temp/file.642  temp/file.643  temp/file.644  temp/file.645  temp/file.646  temp/file.647  temp/file.648  temp/file.649  temp/file.65  temp/file.650  temp/file.651  temp/file.652  temp/file.653  temp/file.654  temp/file.655  temp/file.656  temp/file.657  temp/file.658  temp/file.659  temp/file.66  temp/file.660  temp/file.661  temp/file.662  temp/file.663  temp/file.664  temp/file.665  temp/file.666  temp/file.667  temp/file.668  temp/file.669  temp/file.67  temp/file.670  temp/file.671  temp/file.672  temp/file.673  temp/file.674  temp/file.675  temp/file.676  temp/file.677  temp/file.678  temp/file.679  temp/file.68  temp/file.680  temp/file.681  temp/file.682  temp/file.683  temp/file.684  temp/file.685  temp/file.686  temp/file.687  temp/file.688  temp/file.689  temp/file.69  temp/file.690  temp/file.691  temp/file.692  temp/file.693  temp/file.694  temp/file.695  temp/file.696  temp/file.697  temp/file.698  temp/file.699  temp/file.7  temp/file.70  temp/file.700  temp/file.701  temp/file.702  temp/file.703  temp/file.704  temp/file.705  temp/file.706  temp/file.707  temp/file.708  temp/file.709  temp/file.71  temp/file.710  temp/file.711  temp/file.712  temp/file.713  temp/file.714  temp/file.715  temp/file.716  temp/file.717  temp/file.718  temp/file.719  temp/file.72  temp/file.720  temp/file.721  temp/file.722  temp/file.723  temp/file.724  temp/file.725  temp/file.726  temp/file.727  temp/file.728  temp/file.729  temp/file.73  temp/file.730  temp/file.731  temp/file.732  temp/file.733  temp/file.734  temp/file.735  temp/file.736  temp/file.737  temp/file.738  temp/file.739  temp/file.74  temp/file.740  temp/file.741  temp/file.742  temp/file.743  temp/file.744  temp/file.745  temp/file.746  temp/file.747  temp/file.748  temp/file.749  temp/file.75  temp/file.750  temp/file.751  temp/file.752  temp/file.753  temp/file.754  temp/file.755  temp/file.756  temp/file.757  temp/file.758  temp/file.759  temp/file.76  temp/file.760  temp/file.761  temp/file.762  temp/file.763  temp/file.764  temp/file.765  temp/file.766  temp/file.767  temp/file.768  temp/file.769  temp/file.77  temp/file.770  temp/file.771  temp/file.772  temp/file.773  temp/file.774  temp/file.775  temp/file.776  temp/file.777  temp/file.778  temp/file.779  temp/file.78  temp/file.780  temp/file.781  temp/file.782  temp/file.783  temp/file.784  temp/file.785  temp/file.786  temp/file.787  temp/file.788  temp/file.789  temp/file.79  temp/file.790  temp/file.791  temp/file.792  temp/file.793  temp/file.794  temp/file.795  temp/file.796  temp/file.797  temp/file.798  temp/file.799  temp/file.8  temp/file.80  temp/file.800  temp/file.801  temp/file.802  temp/file.803  temp/file.804  temp/file.805  temp/file.806  temp/file.807  temp/file.808  temp/file.809  temp/file.81  temp/file.810  temp/file.811  temp/file.812  temp/file.813  temp/file.814  temp/file.815  temp/file.816  temp/file.817  temp/file.818  temp/file.819  temp/file.82  temp/file.820  temp/file.821  temp/file.822  temp/file.823  temp/file.824  temp/file.825  temp/file.826  temp/file.827  temp/file.828  temp/file.829  temp/file.83  temp/file.830  temp/file.831  temp/file.832  temp/file.833  temp/file.834  temp/file.835  temp/file.836  temp/file.837  temp/file.838  temp/file.839  temp/file.84  temp/file.840  temp/file.841  temp/file.842  temp/file.843  temp/file.844  temp/file.845  temp/file.846  temp/file.847  temp/file.848  temp/file.849  temp/file.85  temp/file.850  temp/file.851  temp/file.852  temp/file.853  temp/file.854  temp/file.855  temp/file.856  temp/file.857  temp/file.858  temp/file.859  temp/file.86  temp/file.860  temp/file.861  temp/file.862  temp/file.863  temp/file.864  temp/file.865  temp/file.866  temp/file.867  temp/file.868  temp/file.869  temp/file.87  temp/file.870  temp/file.871  temp/file.872  temp/file.873  temp/file.874  temp/file.875  temp/file.876  temp/file.877  temp/file.878  temp/file.879  temp/file.88  temp/file.880  temp/file.881  temp/file.882  temp/file.883  temp/file.884  temp/file.885  temp/file.886  temp/file.887  temp/file.888  temp/file.889  temp/file.89  temp/file.890  temp/file.891  temp/file.892  temp/file.893  temp/file.894  temp/file.895  temp/file.896  temp/file.897  temp/file.898  temp/file.899  temp/file.9  temp/file.90  temp/file.900  temp/file.901  temp/file.902  temp/file.903  temp/file.904  temp/file.905  temp/file.906  temp/file.907  temp/file.908  temp/file.909  temp/file.91  temp/file.910  temp/file.911  temp/file.912  temp/file.913  temp/file.914  temp/file.915  temp/file.916  temp/file.917  temp/file.918  temp/file.919  temp/file.92  temp/file.920  temp/file.921  temp/file.922  temp/file.923  temp/file.924  temp/file.925  temp/file.926  temp/file.927  temp/file.928  temp/file.929  temp/file.93  temp/file.930  temp/file.931  temp/file.932  temp/file.933  temp/file.934  temp/file.935  temp/file.936  temp/file.937  temp/file.938  temp/file.939  temp/file.94  temp/file.940  temp/file.941  temp/file.942  temp/file.943  temp/file.944  temp/file.945  temp/file.946  temp/file.947  temp/file.948  temp/file.949  temp/file.95  temp/file.950  temp/file.951  temp/file.952  temp/file.953  temp/file.954  temp/file.955  temp/file.956  temp/file.957  temp/file.958  temp/file.959  temp/file.96  temp/file.960  temp/file.961  temp/file.962  temp/file.963  temp/file.964  temp/file.965  temp/file.966  temp/file.967  temp/file.968  temp/file.969  temp/file.97  temp/file.970  temp/file.971  temp/file.972  temp/file.973  temp/file.974  temp/file.975  temp/file.976  temp/file.977  temp/file.978  temp/file.979  temp/file.98  temp/file.980  temp/file.981  temp/file.982  temp/file.983  temp/file.984  temp/file.985  temp/file.986  temp/file.987  temp/file.988  temp/file.989  temp/file.99  temp/file.990  temp/file.991  temp/file.992  temp/file.993  temp/file.994  temp/file.995  temp/file.996  temp/file.997  temp/file.998  temp/file.999  temp/out  temp/out/out  temp/out/output.1  temp/out/output.10  temp/out/output.100  temp/out/output.1000  temp/out/output.101  temp/out/output.102  temp/out/output.103  temp/out/output.104  temp/out/output.105  temp/out/output.106  temp/out/output.107  temp/out/output.108  temp/out/output.109  temp/out/output.11  temp/out/output.110  temp/out/output.111  temp/out/output.112  temp/out/output.113  temp/out/output.114  temp/out/output.115  temp/out/output.116  temp/out/output.117  temp/out/output.118  temp/out/output.119  temp/out/output.12  temp/out/output.120  temp/out/output.121  temp/out/output.122  temp/out/output.123  temp/out/output.124  temp/out/output.125  temp/out/output.126  temp/out/output.127  temp/out/output.128  temp/out/output.129  temp/out/output.13  temp/out/output.130  temp/out/output.131  temp/out/output.132  temp/out/output.133  temp/out/output.134  temp/out/output.135  temp/out/output.136  temp/out/output.137  temp/out/output.138  temp/out/output.139  temp/out/output.14  temp/out/output.140  temp/out/output.141  temp/out/output.142  temp/out/output.143  temp/out/output.144  temp/out/output.145  temp/out/output.146  temp/out/output.147  temp/out/output.148  temp/out/output.149  temp/out/output.15  temp/out/output.150  temp/out/output.151  temp/out/output.152  temp/out/output.153  temp/out/output.154  temp/out/output.155  temp/out/output.156  temp/out/output.157  temp/out/output.158  temp/out/output.159  temp/out/output.16  temp/out/output.160  temp/out/output.161  temp/out/output.162  temp/out/output.163  temp/out/output.164  temp/out/output.165  temp/out/output.166  temp/out/output.167  temp/out/output.168  temp/out/output.169  temp/out/output.17  temp/out/output.170  temp/out/output.171  temp/out/output.172  temp/out/output.173  temp/out/output.174  temp/out/output.175  temp/out/output.176  temp/out/output.177  temp/out/output.178  temp/out/output.179  temp/out/output.18  temp/out/output.180  temp/out/output.181  temp/out/output.182  temp/out/output.183  temp/out/output.184  temp/out/output.185  temp/out/output.186  temp/out/output.187  temp/out/output.188  temp/out/output.189  temp/out/output.19  temp/out/output.190  temp/out/output.191  temp/out/output.192  temp/out/output.193  temp/out/output.194  temp/out/output.195  temp/out/output.196  temp/out/output.197  temp/out/output.198  temp/out/output.199  temp/out/output.2  temp/out/output.20  temp/out/output.200  temp/out/output.201  temp/out/output.202  temp/out/output.203  temp/out/output.204  temp/out/output.205  temp/out/output.206  temp/out/output.207  temp/out/output.208  temp/out/output.209  temp/out/output.21  temp/out/output.210  temp/out/output.211  temp/out/output.212  temp/out/output.213  temp/out/output.214  temp/out/output.215  temp/out/output.216  temp/out/output.217  temp/out/output.218  temp/out/output.219  temp/out/output.22  temp/out/output.220  temp/out/output.221  temp/out/output.222  temp/out/output.223  temp/out/output.224  temp/out/output.225  temp/out/output.226  temp/out/output.227  temp/out/output.228  temp/out/output.229  temp/out/output.23  temp/out/output.230  temp/out/output.231  temp/out/output.232  temp/out/output.233  temp/out/output.234  temp/out/output.235  temp/out/output.236  temp/out/output.237  temp/out/output.238  temp/out/output.239  temp/out/output.24  temp/out/output.240  temp/out/output.241  temp/out/output.242  temp/out/output.243  temp/out/output.244  temp/out/output.245  temp/out/output.246  temp/out/output.247  temp/out/output.248  temp/out/output.249  temp/out/output.25  temp/out/output.250  temp/out/output.251  temp/out/output.252  temp/out/output.253  temp/out/output.254  temp/out/output.255  temp/out/output.256  temp/out/output.257  temp/out/output.258  temp/out/output.259  temp/out/output.26  temp/out/output.260  temp/out/output.261  temp/out/output.262  temp/out/output.263  temp/out/output.264  temp/out/output.265  temp/out/output.266  temp/out/output.267  temp/out/output.268  temp/out/output.269  temp/out/output.27  temp/out/output.270  temp/out/output.271  temp/out/output.272  temp/out/output.273  temp/out/output.274  temp/out/output.275  temp/out/output.276  temp/out/output.277  temp/out/output.278  temp/out/output.279  temp/out/output.28  temp/out/output.280  temp/out/output.281  temp/out/output.282  temp/out/output.283  temp/out/output.284  temp/out/output.285  temp/out/output.286  temp/out/output.287  temp/out/output.288  temp/out/output.289  temp/out/output.29  temp/out/output.290  temp/out/output.291  temp/out/output.292  temp/out/output.293  temp/out/output.294  temp/out/output.295  temp/out/output.296  temp/out/output.297  temp/out/output.298  temp/out/output.299  temp/out/output.3  temp/out/output.30  temp/out/output.300  temp/out/output.301  temp/out/output.302  temp/out/output.303  temp/out/output.304  temp/out/output.305  temp/out/output.306  temp/out/output.307  temp/out/output.308  temp/out/output.309  temp/out/output.31  temp/out/output.310  temp/out/output.311  temp/out/output.312  temp/out/output.313  temp/out/output.314  temp/out/output.315  temp/out/output.316  temp/out/output.317  temp/out/output.318  temp/out/output.319  temp/out/output.32  temp/out/output.320  temp/out/output.321  temp/out/output.322  temp/out/output.323  temp/out/output.324  temp/out/output.325  temp/out/output.326  temp/out/output.327  temp/out/output.328  temp/out/output.329  temp/out/output.33  temp/out/output.330  temp/out/output.331  temp/out/output.332  temp/out/output.333  temp/out/output.334  temp/out/output.335  temp/out/output.336  temp/out/output.337  temp/out/output.338  temp/out/output.339  temp/out/output.34  temp/out/output.340  temp/out/output.341  temp/out/output.342  temp/out/output.343  temp/out/output.344  temp/out/output.345  temp/out/output.346  temp/out/output.347  temp/out/output.348  temp/out/output.349  temp/out/output.35  temp/out/output.350  temp/out/output.351  temp/out/output.352  temp/out/output.353  temp/out/output.354  temp/out/output.355  temp/out/output.356  temp/out/output.357  temp/out/output.358  temp/out/output.359  temp/out/output.36  temp/out/output.360  temp/out/output.361  temp/out/output.362  temp/out/output.363  temp/out/output.364  temp/out/output.365  temp/out/output.366  temp/out/output.367  temp/out/output.368  temp/out/output.369  temp/out/output.37  temp/out/output.370  temp/out/output.371  temp/out/output.372  temp/out/output.373  temp/out/output.374  temp/out/output.375  temp/out/output.376  temp/out/output.377  temp/out/output.378  temp/out/output.379  temp/out/output.38  temp/out/output.380  temp/out/output.381  temp/out/output.382  temp/out/output.383  temp/out/output.384  temp/out/output.385  temp/out/output.386  temp/out/output.387  temp/out/output.388  temp/out/output.389  temp/out/output.39  temp/out/output.390  temp/out/output.391  temp/out/output.392  temp/out/output.393  temp/out/output.394  temp/out/output.395  temp/out/output.396  temp/out/output.397  temp/out/output.398  temp/out/output.399  temp/out/output.4  temp/out/output.40  temp/out/output.400  temp/out/output.401  temp/out/output.402  temp/out/output.403  temp/out/output.404  temp/out/output.405  temp/out/output.406  temp/out/output.407  temp/out/output.408  temp/out/output.409  temp/out/output.41  temp/out/output.410  temp/out/output.411  temp/out/output.412  temp/out/output.413  temp/out/output.414  temp/out/output.415  temp/out/output.416  temp/out/output.417  temp/out/output.418  temp/out/output.419  temp/out/output.42  temp/out/output.420  temp/out/output.421  temp/out/output.422  temp/out/output.423  temp/out/output.424  temp/out/output.425  temp/out/output.426  temp/out/output.427  temp/out/output.428  temp/out/output.429  temp/out/output.43  temp/out/output.430  temp/out/output.431  temp/out/output.432  temp/out/output.433  temp/out/output.434  temp/out/output.435  temp/out/output.436  temp/out/output.437  temp/out/output.438  temp/out/output.439  temp/out/output.44  temp/out/output.440  temp/out/output.441  temp/out/output.442  temp/out/output.443  temp/out/output.444  temp/out/output.445  temp/out/output.446  temp/out/output.447  temp/out/output.448  temp/out/output.449  temp/out/output.45  temp/out/output.450  temp/out/output.451  temp/out/output.452  temp/out/output.453  temp/out/output.454  temp/out/output.455  temp/out/output.456  temp/out/output.457  temp/out/output.458  temp/out/output.459  temp/out/output.46  temp/out/output.460  temp/out/output.461  temp/out/output.462  temp/out/output.463  temp/out/output.464  temp/out/output.465  temp/out/output.466  temp/out/output.467  temp/out/output.468  temp/out/output.469  temp/out/output.47  temp/out/output.470  temp/out/output.471  temp/out/output.472  temp/out/output.473  temp/out/output.474  temp/out/output.475  temp/out/output.476  temp/out/output.477  temp/out/output.478  temp/out/output.479  temp/out/output.48  temp/out/output.480  temp/out/output.481  temp/out/output.482  temp/out/output.483  temp/out/output.484  temp/out/output.485  temp/out/output.486  temp/out/output.487  temp/out/output.488  temp/out/output.489  temp/out/output.49  temp/out/output.490  temp/out/output.491  temp/out/output.492  temp/out/output.493  temp/out/output.494  temp/out/output.495  temp/out/output.496  temp/out/output.497  temp/out/output.498  temp/out/output.499  temp/out/output.5  temp/out/output.50  temp/out/output.500  temp/out/output.501  temp/out/output.502  temp/out/output.503  temp/out/output.504  temp/out/output.505  temp/out/output.506  temp/out/output.507  temp/out/output.508  temp/out/output.509  temp/out/output.51  temp/out/output.510  temp/out/output.511  temp/out/output.512  temp/out/output.513  temp/out/output.514  temp/out/output.515  temp/out/output.516  temp/out/output.517  temp/out/output.518  temp/out/output.519  temp/out/output.52  temp/out/output.520  temp/out/output.521  temp/out/output.522  temp/out/output.523  temp/out/output.524  temp/out/output.525  temp/out/output.526  temp/out/output.527  temp/out/output.528  temp/out/output.529  temp/out/output.53  temp/out/output.530  temp/out/output.531  temp/out/output.532  temp/out/output.533  temp/out/output.534  temp/out/output.535  temp/out/output.536  temp/out/output.537  temp/out/output.538  temp/out/output.539  temp/out/output.54  temp/out/output.540  temp/out/output.541  temp/out/output.542  temp/out/output.543  temp/out/output.544  temp/out/output.545  temp/out/output.546  temp/out/output.547  temp/out/output.548  temp/out/output.549  temp/out/output.55  temp/out/output.550  temp/out/output.551  temp/out/output.552  temp/out/output.553  temp/out/output.554  temp/out/output.555  temp/out/output.556  temp/out/output.557  temp/out/output.558  temp/out/output.559  temp/out/output.56  temp/out/output.560  temp/out/output.561  temp/out/output.562  temp/out/output.563  temp/out/output.564  temp/out/output.565  temp/out/output.566  temp/out/output.567  temp/out/output.568  temp/out/output.569  temp/out/output.57  temp/out/output.570  temp/out/output.571  temp/out/output.572  temp/out/output.573  temp/out/output.574  temp/out/output.575  temp/out/output.576  temp/out/output.577  temp/out/output.578  temp/out/output.579  temp/out/output.58  temp/out/output.580  temp/out/output.581  temp/out/output.582  temp/out/output.583  temp/out/output.584  temp/out/output.585  temp/out/output.586  temp/out/output.587  temp/out/output.588  temp/out/output.589  temp/out/output.59  temp/out/output.590  temp/out/output.591  temp/out/output.592  temp/out/output.593  temp/out/output.594  temp/out/output.595  temp/out/output.596  temp/out/output.597  temp/out/output.598  temp/out/output.599  temp/out/output.6  temp/out/output.60  temp/out/output.600  temp/out/output.601  temp/out/output.602  temp/out/output.603  temp/out/output.604  temp/out/output.605  temp/out/output.606  temp/out/output.607  temp/out/output.608  temp/out/output.609  temp/out/output.61  temp/out/output.610  temp/out/output.611  temp/out/output.612  temp/out/output.613  temp/out/output.614  temp/out/output.615  temp/out/output.616  temp/out/output.617  temp/out/output.618  temp/out/output.619  temp/out/output.62  temp/out/output.620  temp/out/output.621  temp/out/output.622  temp/out/output.623  temp/out/output.624  temp/out/output.625  temp/out/output.626  temp/out/output.627  temp/out/output.628  temp/out/output.629  temp/out/output.63  temp/out/output.630  temp/out/output.631  temp/out/output.632  temp/out/output.633  temp/out/output.634  temp/out/output.635  temp/out/output.636  temp/out/output.637  temp/out/output.638  temp/out/output.639  temp/out/output.64  temp/out/output.640  temp/out/output.641  temp/out/output.642  temp/out/output.643  temp/out/output.644  temp/out/output.645  temp/out/output.646  temp/out/output.647  temp/out/output.648  temp/out/output.649  temp/out/output.65  temp/out/output.650  temp/out/output.651  temp/out/output.652  temp/out/output.653  temp/out/output.654  temp/out/output.655  temp/out/output.656  temp/out/output.657  temp/out/output.658  temp/out/output.659  temp/out/output.66  temp/out/output.660  temp/out/output.661  temp/out/output.662  temp/out/output.663  temp/out/output.664  temp/out/output.665  temp/out/output.666  temp/out/output.667  temp/out/output.668  temp/out/output.669  temp/out/output.67  temp/out/output.670  temp/out/output.671  temp/out/output.672  temp/out/output.673  temp/out/output.674  temp/out/output.675  temp/out/output.676  temp/out/output.677  temp/out/output.678  temp/out/output.679  temp/out/output.68  temp/out/output.680  temp/out/output.681  temp/out/output.682  temp/out/output.683  temp/out/output.684  temp/out/output.685  temp/out/output.686  temp/out/output.687  temp/out/output.688  temp/out/output.689  temp/out/output.69  temp/out/output.690  temp/out/output.691  temp/out/output.692  temp/out/output.693  temp/out/output.694  temp/out/output.695  temp/out/output.696  temp/out/output.697  temp/out/output.698  temp/out/output.699  temp/out/output.7  temp/out/output.70  temp/out/output.700  temp/out/output.701  temp/out/output.702  temp/out/output.703  temp/out/output.704  temp/out/output.705  temp/out/output.706  temp/out/output.707  temp/out/output.708  temp/out/output.709  temp/out/output.71  temp/out/output.710  temp/out/output.711  temp/out/output.712  temp/out/output.713  temp/out/output.714  temp/out/output.715  temp/out/output.716  temp/out/output.717  temp/out/output.718  temp/out/output.719  temp/out/output.72  temp/out/output.720  temp/out/output.721  temp/out/output.722  temp/out/output.723  temp/out/output.724  temp/out/output.725  temp/out/output.726  temp/out/output.727  temp/out/output.728  temp/out/output.729  temp/out/output.73  temp/out/output.730  temp/out/output.731  temp/out/output.732  temp/out/output.733  temp/out/output.734  temp/out/output.735  temp/out/output.736  temp/out/output.737  temp/out/output.738  temp/out/output.739  temp/out/output.74  temp/out/output.740  temp/out/output.741  temp/out/output.742  temp/out/output.743  temp/out/output.744  temp/out/output.745  temp/out/output.746  temp/out/output.747  temp/out/output.748  temp/out/output.749  temp/out/output.75  temp/out/output.750  temp/out/output.751  temp/out/output.752  temp/out/output.753  temp/out/output.754  temp/out/output.755  temp/out/output.756  temp/out/output.757  temp/out/output.758  temp/out/output.759  temp/out/output.76  temp/out/output.760  temp/out/output.761  temp/out/output.762  temp/out/output.763  temp/out/output.764  temp/out/output.765  temp/out/output.766  temp/out/output.767  temp/out/output.768  temp/out/output.769  temp/out/output.77  temp/out/output.770  temp/out/output.771  temp/out/output.772  temp/out/output.773  temp/out/output.774  temp/out/output.775  temp/out/output.776  temp/out/output.777  temp/out/output.778  temp/out/output.779  temp/out/output.78  temp/out/output.780  temp/out/output.781  temp/out/output.782  temp/out/output.783  temp/out/output.784  temp/out/output.785  temp/out/output.786  temp/out/output.787  temp/out/output.788  temp/out/output.789  temp/out/output.79  temp/out/output.790  temp/out/output.791  temp/out/output.792  temp/out/output.793  temp/out/output.794  temp/out/output.795  temp/out/output.796  temp/out/output.797  temp/out/output.798  temp/out/output.799  temp/out/output.8  temp/out/output.80  temp/out/output.800  temp/out/output.801  temp/out/output.802  temp/out/output.803  temp/out/output.804  temp/out/output.805  temp/out/output.806  temp/out/output.807  temp/out/output.808  temp/out/output.809  temp/out/output.81  temp/out/output.810  temp/out/output.811  temp/out/output.812  temp/out/output.813  temp/out/output.814  temp/out/output.815  temp/out/output.816  temp/out/output.817  temp/out/output.818  temp/out/output.819  temp/out/output.82  temp/out/output.820  temp/out/output.821  temp/out/output.822  temp/out/output.823  temp/out/output.824  temp/out/output.825  temp/out/output.826  temp/out/output.827  temp/out/output.828  temp/out/output.829  temp/out/output.83  temp/out/output.830  temp/out/output.831  temp/out/output.832  temp/out/output.833  temp/out/output.834  temp/out/output.835  temp/out/output.836  temp/out/output.837  temp/out/output.838  temp/out/output.839  temp/out/output.84  temp/out/output.840  temp/out/output.841  temp/out/output.842  temp/out/output.843  temp/out/output.844  temp/out/output.845  temp/out/output.846  temp/out/output.847  temp/out/output.848  temp/out/output.849  temp/out/output.85  temp/out/output.850  temp/out/output.851  temp/out/output.852  temp/out/output.853  temp/out/output.854  temp/out/output.855  temp/out/output.856  temp/out/output.857  temp/out/output.858  temp/out/output.859  temp/out/output.86  temp/out/output.860  temp/out/output.861  temp/out/output.862  temp/out/output.863  temp/out/output.864  temp/out/output.865  temp/out/output.866  temp/out/output.867  temp/out/output.868  temp/out/output.869  temp/out/output.87  temp/out/output.870  temp/out/output.871  temp/out/output.872  temp/out/output.873  temp/out/output.874  temp/out/output.875  temp/out/output.876  temp/out/output.877  temp/out/output.878  temp/out/output.879  temp/out/output.88  temp/out/output.880  temp/out/output.881  temp/out/output.882  temp/out/output.883  temp/out/output.884  temp/out/output.885  temp/out/output.886  temp/out/output.887  temp/out/output.888  temp/out/output.889  temp/out/output.89  temp/out/output.890  temp/out/output.891  temp/out/output.892  temp/out/output.893  temp/out/output.894  temp/out/output.895  temp/out/output.896  temp/out/output.897  temp/out/output.898  temp/out/output.899  temp/out/output.9  temp/out/output.90  temp/out/output.900  temp/out/output.901  temp/out/output.902  temp/out/output.903  temp/out/output.904  temp/out/output.905  temp/out/output.906  temp/out/output.907  temp/out/output.908  temp/out/output.909  temp/out/output.91  temp/out/output.910  temp/out/output.911  temp/out/output.912  temp/out/output.913  temp/out/output.914  temp/out/output.915  temp/out/output.916  temp/out/output.917  temp/out/output.918  temp/out/output.919  temp/out/output.92  temp/out/output.920  temp/out/output.921  temp/out/output.922  temp/out/output.923  temp/out/output.924  temp/out/output.925  temp/out/output.926  temp/out/output.927  temp/out/output.928  temp/out/output.929  temp/out/output.93  temp/out/output.930  temp/out/output.931  temp/out/output.932  temp/out/output.933  temp/out/output.934  temp/out/output.935  temp/out/output.936  temp/out/output.937  temp/out/output.938  temp/out/output.939  temp/out/output.94  temp/out/output.940  temp/out/output.941  temp/out/output.942  temp/out/output.943  temp/out/output.944  temp/out/output.945  temp/out/output.946  temp/out/output.947  temp/out/output.948  temp/out/output.949  temp/out/output.95  temp/out/output.950  temp/out/output.951  temp/out/output.952  temp/out/output.953  temp/out/output.954  temp/out/output.955  temp/out/output.956  temp/out/output.957  temp/out/output.958  temp/out/output.959  temp/out/output.96  temp/out/output.960  temp/out/output.961  temp/out/output.962  temp/out/output.963  temp/out/output.964  temp/out/output.965  temp/out/output.966  temp/out/output.967  temp/out/output.968  temp/out/output.969  temp/out/output.97  temp/out/output.970  temp/out/output.971  temp/out/output.972  temp/out/output.973  temp/out/output.974  temp/out/output.975  temp/out/output.976  temp/out/output.977  temp/out/output.978  temp/out/output.979  temp/out/output.98  temp/out/output.980  temp/out/output.981  temp/out/output.982  temp/out/output.983  temp/out/output.984  temp/out/output.985  temp/out/output.986  temp/out/output.987  temp/out/output.988  temp/out/output.989  temp/out/output.99  temp/out/output.990  temp/out/output.991  temp/out/output.992  temp/out/output.993  temp/out/output.994  temp/out/output.995  temp/out/output.996  temp/out/output.997  temp/out/output.998  temp/out/output.999  temp/prefix  """
"MULE-9871","Task","Core: Deployment",8,"Review if packages imported from other modules must be explicitly declared","""Modules are declaring which classes are exported, both because the module own the class or because the class is a transitive dependency of a owned class.  Review if when a module requires to export a class from other module, that class must be declared as """"imported"""", so we can validate whether or not there is more than one module exporting the same package."""
"MULE-9870","Enhancement Request","Core: Deployment",8,"Change registry bootstrapping to avoid leaking classes on plugins","""Bootstrap process works searching for bootstrap properties files and then instantiating each required object using reflection.  To be able to create those objects, the plugin must expose the classes of the objects to bootstrap, which is not good.  Bootstrapping process should invert the dependency so each plugin can instantiate objects without requiring to expose them."""
"MULE-9869","Task","Build: Distributions",5,"Ensure that modules are exporting the right packages","""Ensure that each module exports everything that is transitively exposed from the module packages."""
"MULE-9868","Enhancement Request","Core: Deployment",13,"Create maven plugin to ensure that modules export a complete API","""Modules are defined exporting packages/resources.  In order to avoid classlaoding errors on runtime, each module must export every class that is part of the API exposed to other artifacts.  For example, if org.foo.A has a method doStuff(org.bar.B) then both org.foo and org.bar must be exported. If there are other dependencies, they must be also exported."""
"MULE-9867","Enhancement Request","Core: Deployment",13,"Add a way to share libraries/module between application plugins","""Different applications plugins can export classes from the same library (ex: connectors sharing a common SDK) or application plugins can extend the functionality provided by another connector (ex: FTP/FTPs).  If those plugins need to export the same classes, these classes must be shared in a library/module that is accesible to both plugins. Otherwise the application using those plugins will be exposed to two versions of the same class."""
"MULE-9866","Enhancement Request","Core: (other)|Core: Logging",8,"Provide better logging for classloading process","""Classloading model for mule 4 will be more complex than the one used on mule 3.x. In order to make easier to resolve classloading issues, it will be needed to understand what is going on.   Better logging must be provided, indicating which classes are loaded from which classloader, which classes are being filtered/accepted, etc.  """
"MULE-9865","Bug","Core: DSL processing",8,"New parsers still require the spring bundle","""The new parsers still depend on the spring bundle to locate the XSD. This forces new components to have a dummy NamespaceHandler which basically does nothing, just to load the XSD."""
"MULE-9864","Bug","Modules: HTTP",3,"Support expression in HTTP response builder headers field","""To make it possible for other teams to use the HTTP extension fully, the headers in the response should allow being set through an expression."""
"MULE-9863","Enhancement Request","Build: Libraries / Dependencies",1,"Define commons-pool version in dependency management","""Extract commons-pool version to a property and use it from dependencyManagemnt"""
"MULE-9862","Enhancement Request","Core: API",13,"Connection repository connectivity testing API implementation","""Implementation of API defined by MULE-9860"""
"MULE-9861","Enhancement Request","Core: API",8,"Dev tooling connectivity testing API implementation - Application","""Implementation of API defined in MULE-9704.    It seems we will have to rethink some of the capabilities of ExtAPI and move it to the runtime now that we have better capabilities over the mule configuration."""
"MULE-9860","Task","Core: API",5,"Define API for connectivity testing - Connection repository","""We need to define the mule API for doing connectivity testing when someone is defining a new connection or trying to test connection over a connection created in the connection repository."""
"MULE-9858","Task","Core: Event/Message",5,"Make Message CorrelationId/SequenceID etc. message attributes rather than properties","""Make Message CorrelationId/SequenceID etc. message attributes rather than properties"""
"MULE-9856","Task","Core: Event/Message",8,"Create MuleMessage builder","""Create MuleMessage builder"""
"MULE-9855","Task","Core: Event/Message",8,"Make MuleMessage immutable","""Make MuleMessage immutable"""
"MULE-9895","Task","Core: Event/Message",5,"Provide a builder api for creating DataType s","""Replace DataTypeFactory with a builder API and move its code to mule-api."""
"MULE-9893","Bug","sdk",3,"MetadataKeyId params are always considered as ParameterGroup","""*MetadataKeyId params are always considered as ParameterGroup*    * Since the introduction of MultiLevel MetadataKeys, to represent this levels SDK started to represent this Keys as ParameterGroup.  * The problem comes with simple MetadataKey that are not ParameterGroups, but they are considered in that way, failing at parameter value resolution time.  * *Classes to look*:  ** {{AnnotationsBasedDescriber}}  ** {{MuleExtensionAnnotationParser}}  ** {{MethodArgumentResolverDelegate}}  ** {{IntrospectionUtils}}"""
"MULE-9887","Bug","Extensions API",1,"Child element generated for map parameter is pluralized","""If the parameter is of type Map the child element associated to it pluralized even when it shouldn't.    Example:    The resulting schema add a child with name *accounts* instead of *account*    Expected: The child element should be the same"""
"MULE-9885","Bug","sdk",1,"Interface can be used as the type of a @ParameterGroup yet no error or warning is thrown","""SDK is not checking that the field annotated as a @ParameterGroup is instantiable , which allows things like:        That doesn't make any sense because we want to use @ParameterGroup to gather together actual fields. This behaviour shouldn't be allowed (it isn't harmful but it will confuse the user for sure).    Fix: Check that the @ParameterGroup type is instantiable and if it is not throw an error.   """
"MULE-12565","Task","Build: Libraries / Dependencies",1,"Upgrade Ant to 1.9.6","""Analyze if we need to keep Ant in the distro and if not, remove the library.  Else, update to 1.9.6"""
"MULE-9908","Bug","sdk",5,"Cannot have a Function parameter with Map<String, String> result","""I had a parameter defined as:    but the method org.mule.runtime.module.extension.internal.config.XmlExtensionParserDelegate#getResolverFromValue failed because org.mule.metadata.java.utils.JavaTypeUtils#getGenericTypeAt returned an empty Optional, rooted at a ClassNotFoundException trying to load Map<String, String>."""
"MULE-9905","Bug","Modules: File",1,"Implement FileAttributes#toString() so log messages make sense","""If I log a FileAttributes object I see this:   It would be useful to see al the FileAttributes information in a nice format"""
"MULE-9903","Enhancement Request","Core: Logging",5,"Verbose logging for Runtime","""Add the functionality included last Hackathon regarding logging verbosity in the runtime such as: product version, patches installed, classloader, etc...    *TBD*: Scope and get rid of the """"etc""""."""
"MULE-9901","Enhancement Request","Extensions",13,"Enrich all the extension with display properties","""Make sure that all currently available extensions receive a lot of love regarding display annotations.   Give the tooling as much information as possible. Even try to see how the updated extensions models would look like in the toolings we have.  Also evaluate if we need better framework support to communicate this, in which case report and fix those issues.  Edit: DisplayName annotation doesn't work on methods or types. We need to add these capability in order to enrich those names. """
"MULE-9900","Enhancement Request","sdk",5,"Support encoding while sending Strings in the Sockets Extension","""Nowadays, when we serialise the String that will be send/received through the socket we get the byte[] from it with  losing the encoding information.    Add a parameter to the SocketOperation and save the encoding information."""
"MULE-9899","Enhancement Request","sdk",13,"Use new parsing mechanism in extensions framework","""Take the work performed on the spike and complete it so that extensions use the new parsing mechanism"""
"MULE-9897","Enhancement Request","Core: DSL processing",3,"Support type converter on simple type collections","""Collection with simple types parsed from child configuration elements must also support a custom converter between the configuration type and the value generated by the user."""
"MULE-9918","Enhancement Request","Extensions API",2,"Add some default values to the @Optional annotation.","""It would be a good idea to have some default value constants in the Optional annotation for cases where the default value is highly used in multiple connectors.  For example:      This way we avoid having a PAYLOAD constant in each connector.    True and False are other posible default values."""
"MULE-9910","Bug","Extensions API",8,"Cannot name paramater as the name of the class","""It is pretty common that when you have an operation that receives a Pojo, the parameter name will be the name in camelcase.        Right now we force the users to change the name of the parameter of the class.    Even more inconsistent is the fact that if you have a Pojo with the following structure we generate the XSD perfectly and we don't complain about the child element name:    Expected: No renaming should be required for this simple scenario.      A DslModelProperty will describe how each element should be generated regarding wrapped and non-wrapped elements, by describing the element name, if its wrapper or not, and the wrapped element name."""
"MULE-9925","Enhancement Request","Build: Distributions",1,"Remove default app from distribution","""Mule Server now starts without failures without that application and it is no needed and the users must manually remove it."""
"MULE-9937","Bug","Core: DSL processing",5,"Lifecycle wrongfully applied on ObjectFactory instances","""Run OperationExecutionTestCase.    What happens is that the product of OperationMessageProcessorObjectFactory is receiving its lifecycle before the getObject() method is even invoked on ConfigurationProviderObjectFactory. This happens despite the order declared at org.mule.runtime.config.spring.SpringRegistryLifecycleManager.SpringContextInitialisePhase#SpringContextInitialisePhase    What's expected is that:    * ConfigurationProvider instances are registered first  * ConfigurationProvider instances receive lifecycle first  * OperationMessageProcessor comes later    Also consider that the same has to work for ConnectionProviderObjectFactory"""
"MULE-9934","Enhancement Request","Modules: HTTP",3,"Extract HTTP response creation logic from response builder component","""Right now, the response builder component that matches the XML code has the transformation logic. This will be a problem when said component is no longer required and is also inconsistent with the request builder code. Having the logic in a separate MuleEventToHttpResponse would be much clearer."""
"MULE-9929","Task","Core: Event/Message",5,"Remove MuleContext from MuleMessage","""Remove MuleContext from MuleMessage.    The following places where the muleContext is used have to be reviewed:    * DefaultMuleMessage#serializeValue()  ** transformer to byte[] from the registry  * DefaultMuleMessage$SerializedDataHandler  ** transformer to byte[] from the registry  * MessagingException#generateMessage()  ** get a transformation service  * WildcardFilter#accept()  ** get a transformation service  * AbstractSessionHandler#deserialize()  ** getExecutionClassLoader()  * SerializeOnlySessionHandler#storeSessionInfoToMessage  ** getObjectSerializer()  * DefaultMuleEvent  ** get muleContext from message to keep reference  * WsConfig$DynamicAttributeEvalutorMap#getEvaluatedMap()  ** getExpressionManager()  * OutputPayloadInterceptor#handleMessage  ** get a transformation service  * IsJsonFilter#accept()  ** get a transformation service  """
"MULE-9962","Bug","Extensions API",3,"Wrong validation is made when using Map<String,Pojo>","""When an operation returns a Map<String,Pojo> and the pojo is a concrete, none abstract class with getters and setters, an error is reported saying you need to add a metadata resolver.  *Pojo*    *Operation class*      *Error*      Expected: No error should be shown since there is no dynamic metadata."""
"MULE-9960","Bug","sdk",5,"POJO @Parameters default values are not being set.","""Having a POJO with any @Parameter that is @Optional and has a defaultValue, that defaultValue is never going to be set.  The defaultValues aren't written in the schema and are not taking in count when parsing the xml, instead always null is set for those values.    For example, for a simple POJO like this one:   """
"MULE-9958","Task","Core: API",8,"Make DataType getters return Objects instead of Strings","""Methods getMimeType and getEncoding currently return strings. They should return MimeType and Charset respectively."""
"MULE-9955","Task","Build: Maven",8,"Set up parallel builds in Maven ","""Set up the project modules to build in parallel at least for the 4.x CE branch.  Some tests may need tweaking in order to properly run in multithreaded mode, but our spike shows we can reduce build time by at least 50% in CE."""
"MULE-9953","Bug","Extensions API",5,"Unclear error message when building an extension with multiple providers","""When building an extension that has 2 or more connection providers with no XML annotation the error shown is useless since it doesn't tell you what were the error is, nor how to solve it.    The error should tell you the name of the classes that generated the conflict and suggest to use the @org.mule.runtime.extension.api.annotation.Alias annotation.    """
"MULE-9966","Task","Modules: HTTP",3,"Test Grizzly's PRESERVE_HEADER_CASE property","""Test Grizzly's PRESERVE_HEADER_CASE property"""
"MULE-9964","Bug","Modules: HTTP",0,"HTTP listener provider should reuse server","""Right now, the provider is creating a new server on each connect but since the management is cached it works."""
"MULE-9963","Enhancement Request","Core: DSL processing",5,"Validate that complex types are provided on a exclusive way","""por complex parameters (pojos, lists, maps), we want to allow the user to provide such value either as an expression parameter or as a child element. For example:        or         We need to have a way so that the parser automatically validates that if the myPojo attribute is present, then the my-pojo element is forbidden.    Corner cases:    * the myPojo element might have a default value, so Element.getAttribute(String) would return a non-null value anyway. We have to consider Element.getAttributeNode(String).getSpecified()  * given the myPojo attribute, the name of the child element to verify is calculated as follows:  ** for a Map: hyphenize(pluralize(""""myPojo""""))  ** for a List or Pojo: hyphenize(""""myPojo"""")    NOTE: hyphenize and pluralize functions are defined in org.mule.runtime.module.extension.internal.util.NameUtils, feel free to take them somewhere else as long as the SDK runtime is able to use them"""
"MULE-9976","Task","Core: DSL processing",3,"Add temporary support for spring property placeholders in new DSL","""For now, and until MULE-9825 is complete, we need to add basic support for spring property placeholders in the XML configuration."""
"MULE-9975","Task","Modules: HTTP",13,"Spike: IPv6 support","""Perform a spike on assessing the current support for IPv6 and detect the possible gaps.     The outcome of a quick assessment performed by [~nahuel] is that IPv6 is not fully supported. Following are the steps taken for the validation:    {quote}  Started mule as    ./mule -Djava.net.preferIPv6Addresses=true -Djava.net.preferIPv4Stack=false    Oracle JDK 8, OS X El Capitan, Amazon AMI with RedHat    Note: On wrapper.conf, the default is wrapper.java.additional.3=-Djava.net.preferIPv4Stack=TRUE    Deployed an app with a listener with the broadcast host configured in different ways:    HOST -- Result    0.0.0.0 -> OK  :: -> NPE/Protocol Family unavailable  0:0:0:0:0:0:0:0 -> NPE  [::] -> NPE  ::1 -> OS X: OK/ Amazon AMI using RedHat: Protocol Family unavailable  FF02::1 (ie all nodes) -> Address Family not supported  FF02::2 (ie all routers) ->  Address Family not supported  ::0.0.0.0 -> NPE/Protocol Family unavailable  {quote}    For this spike to be considered successful, we should have a clear understanding of the current support status and have identified the gaps."""
"MULE-9995","Enhancement Request","Core: API|Core: Event/Message",1,"Preserve media type parameters in mule","""Currently, when a media type is parsed, only the charset parameter is kept in mule. Maybe we should keep/propagate any other parameters as well."""
"MULE-9990","Bug","Extensions API",8,"DataSense service returns incomprehensible payload","""when DataSense for a given MP is returned, the JSON response is hard to understand and use. Use a better format."""
"MULE-9989","Bug","sdk",5,"Support full xml generation based on elements DslModelProperty","""In order to generate the application Xml, Studio and Mozart are required to introspect the MetadataTypes, follow naming conventions and special logic based on the type and its usages.    Ideally, we should be able to provide a way to generate the Xml based only in the DslModelProperty, which should contain all the required rules"""
"MULE-9988","Enhancement Request","Extensions API",5,"ConnectionProvider.connect() should not depend on the config","""Right now people find it hard to identify which parameters should be placed in the config and which in the connection provider.    Also, requiring the CP to have a config in order to connect overcomplicates the connectivity testing feature.     To solve the UX and implementation problem, we'll just remove the config parameter from the connect method so that ConnectionProviders can work standalone"""
"MULE-9987","Bug","Core: (other)",2,"Review DataType implementations equals/hashCode standard compliance","""Currently, DataType implementors have some logic in their equals method that does not comply with the java specification."""
"MULE-9986","Task","Core: Event/Message",8,"Introduce MultipartPayload","""Introduce MultipartPayload"""
"MULE-10000","Bug","sdk",5,"Add the concept of minimum Mule Version and Extension Category","""*Add the concept of minimum Mule Version and Extension Category*    * In the same way as DevKit does:   ** add the concept of min Mule Runtime version for extension, to be able to declare which is the minimum version that the extension requires to work correctly  ** add the concept of extension category *(Community, Select, Premium and Certified)*, this is required when packaging a connector and also for license checking."""
"MULE-9999","Bug","sdk",1,"Incorrect vendor when loading file extension","""When deploying an application that uses file extensions the vendors for the available extensions are listed in the log, but it is empty:    """
"MULE-9996","Bug","Core: (other)",3,"First successful is not notifying all paths","""The element first Successful like the one in the example bellow:        When asked the Mule context to create all the paths for a flow containing only this code it will return 4 paths:        Of those paths, this one flowname/processors/0/0 belongs to the processor chain.    Now the problem is, when running this code no notification informing the execution of the path flowname/processors/0/0 is coming.     If the processor chain is outside the first successful  the notification comes but not inside the first successful.  """
"MULE-10008","Bug","Core: Transformers",1,"StringToBoolean transformer transforms ""hello"" to false","""As shown in MULE-9948 and MULE-9915 this can cause problems when transformer expressions that end up configuring a message processor."""
"MULE-10003","Bug","Core: (other)",0,"OAuth2 authorization-code-grant-type should reuse refresh_token","""h5. Problem  According to the following section of RFC 6749:  https://tools.ietf.org/html/rfc6749#section-6  {quote}     The authorization server MAY issue a new refresh token, in which case     the client MUST discard the old refresh token and replace it with the     new refresh token.  The authorization server MAY revoke the old     refresh token after issuing a new refresh token to the client.  If a     new refresh token is issued, the refresh token scope MUST be     identical to that of the refresh token included by the client in the     request.  {quote}    It is up to be interpreted by readers but an interpretation would be: if the authorization server didn't return a new refresh_token the old one should be used when refreshing the access_token next time.    This scenario is what some servers called it """"offline"""" or """"never expire"""" and it is used mostly with APIs from mobiles.  Google's OAuth2 server supports this scenario:  https://developers.google.com/identity/protocols/OAuth2WebServer#offline  But they would also would need to support RFC 7009 'OAuth 2.0 Token Revocation' in order to allow uses to revoke an """"offline""""/""""never expire"""" refresh token for a given user/app.  https://tools.ietf.org/html/rfc7009  On the other hand, other implementations such Box.com do not support this and they always issue to clients both tokens during a refresh access_token. https://www.box.com/blog/oauth2-update-longer-lived-refresh-tokens/    h5. Proposed implementation  As the specification has this """"optional"""" scenario where refresh_token 'MAY' not be issued by the server when refreshing the access_token, the OAuth2 component should keep the old 'refresh_token' for next attempt.  MULE-9660 changed the behaviour to log a warning message if 'refresh_token' was not issued by the authorization server instead of failing, it was always expecting to get both tokens with every refresh token operation. So, that would be modified to keep the old refresh_token instead and the warning message reverted.   If during the next attempt to get a new access_token using the old refresh_token happens after the refresh_token was revoked in authorization server, an unauthorized exception would be thrown."""
"MULE-10019","Enhancement Request","sdk",5,"SDK date attributes should support ISO 8601","""SDK date or datetime attributes should support ISO 8601 format."""
"MULE-10017","Enhancement Request","Core: Event/Message",8,"Remove RequestContext","""Remove usages of RequestContext and RequestContext itself."""
"MULE-10012","Bug","Modules: File",1,"file:matcher minSize accepts negative numbers",""""""
"MULE-10011","Task","Core: Event/Message|Core: Transports",8,"Transport Message Compatibility/Adaption Documention","""In 3.x DefaultMuleMessage:  - Used default encoding, now it has empty (optional) encoding by default.  - Set CORRELATION outbound properties, not it doesn't.  - Used ENCODING (and CONTENT_TYPE?) in inbound property to set DataType when message created, now it doesn't.  - Updated DataType when outbound ENCODING or CONTENT_TYPE properties set, now it doesn't.  - Message allows null payload and converts to NullPayload internally, now it does not allow null.  - Message allowed inconsistency between `message.payload.class` and `message.dataType.type`, now it doesn't.  - Message allowed `message.payload.class` to be sub-class of  `message.dataType.type`, now it doesn't.  - Message allowed receiving a message as payload and copying its properties, now it doesn't.  - MessageInfoMapping is removed. Use set-correlation-id to get the same functionality.  - Splitter no longer has an enableCorrelation. use set-correlation-id to get the same functionality if needed."""
"MULE-10010","Task","Build: Integration Tests",0,"Improve integration tests performance","""There are several resource leaks in integration tests, which lead to the module taking over 30 minutes to build.  The log shows almost 200 hung threads after all tests had run.  As a workaround, we increased the PermGen space setting it to 256m, but we should be able to revert this after we fix the tests."""
"MULE-10025","Enhancement Request","Extensions API",8,"Minimize the amount of classes that extensions need to expose.","""Currently, extensions expose the config classes, the operation classes, the connection providers, etc.    Ideally, it should be possible to only expose the complex parameter and return types."""
"MULE-10024","Bug","Extensions API",2,"OperationContext should distinguish between null-value parameters and not passed parameters","""This is needed, for instance, in AbstractReturnDelegate, to know if mediaType and encoding were set. If not, the values that come with the original message must remain.    In the case where a value is an expression that evaluates to null, we should fail when setting that as mediaType or charset instead of silently leaving the values form the original message."""
"MULE-10021","Enhancement Request","Core: API",0,"Add capability to lookup for external bundles within mule","""For connectivity testing using just the parameters of a connection provider we need to be able to locate a bundle that may be stored externally from the runtime.    This change introduces a repository module for remote retrieval an local caching of external dependencies."""
"MULE-10037","Enhancement Request","sdk",5,"Create annotation to be able to provide descriptions/summaries for Components, Parameters, etc","""*Create annotation to be able to provide descriptions/summaries for Components, Parameters, etc*    * In the same way as DevKit does with the {{@Summary}} annotation, create an annotation to provide a way to give a summary or brief description of an Operation, Source, Configuration, Parameter, etc with out using JavaDocs."""
"MULE-10031","Enhancement Request","sdk",1,"Add an Extensible as a custom TypeAnnotation contributed by the SDK","""When a Class is annotated with Extensible, the SDK should contribute to the MetadataType of that Class with a custom TypeAnnotation that declares it as an SDK extensible component.    This should not be part of `ClassInformationAnnotation` since an extensible class is any non final class, but for the sdk an extensible type is only the classes annotated with Extensible."""
"MULE-10029","Enhancement Request","sdk",8,"Update Extension's SchemaBuilder to use the DslSyntaxResolver","""Currently, the schema builder has logic regarding when to generated a child element, a wrapper, how to express a collection based on the types, etc.     All this logic should be covered in the DslElementResolver, and the schemaBuilder should consume it in order to generate the according schema, instead of duplicating its logic."""
"MULE-10042","Task","Extensions API",5,"Operations should no longer be allowed to return a MuleMessage instance","""SDK operations should no longer be allowed to return MuleMessage instances since those will no longer have generic types. A new OperationResult object should be created instead so that we can keep using generics as a way of communicating metadata types and decoupling the extensions from the MuleMessage"""
"MULE-10048","Bug","sdk",2,"Extension Studio packager generates a wrong feature name","""Extension Studio packager generates a wrong feature name"""
"MULE-10045","Bug","Modules: File",3,"Redundant basePath attribute in file:create-directory","""When using {{file:create-directory}} the full path is composed by {{file:config/baseDir+file:create-directory/basePath+file:create-directory/directoryName}}, basePath is not needed since {{directoryName}} can use an expression."""
"MULE-10044","Bug","Modules: File",1,"file:create-directory accepts paths in directoryName attribute","""This causes that if I put a full directory in {{directoryName}} to create a directory ignoring the {{basePath}}      """
"MULE-10758","Task","Modules: HTTP",8,"Migrate HTTP Module Listener QA tests to HTTP Extension in Mule 4.x","""Migrate HTTP Module QA tests to HTTP Extension in Mule 4.x"""
"MULE-10057","Enhancement Request","Core: DSL processing",3,"Allow new parsers to support different children of same type","""Support for child elements with different names but the same type in the parsers"""
"MULE-10059","Bug","Build: Integration Tests",1,"Fix transports-parsers-tests xml schema","""Fix the following tests:    org.mule.compatibility.config.spring.parsers.endpoint.AttributeErrorTestCase.testError  org.mule.compatibility.config.spring.parsers.endpoint.ComplexEndpointTestCase.testComplex  org.mule.compatibility.config.spring.parsers.endpoint.MultipleTransformerRefsTestCase.testSingleRef  org.mule.compatibility.config.spring.parsers.endpoint.MultipleTransformerRefsTestCase.testMultipleRefs  """
"MULE-10069","Task","Core: Classloading",5,"Artifact must export resource files instead of resource's folder paths","""Artifacts are currently exporting resources using the resource path. For example, for a resource with path META-INF/test.properties, a META-INF entry is added to the module properties.  This introduces a problem as resource paths can be used in different jars (opposed to java packages which should not be reused)"""
"MULE-10068","Enhancement Request","sdk",2,"Email Connector: Support connection level headers for SMTP Connections.","""The Email connector must have support for a set of headers that are bounded in each SMTP operation."""
"MULE-10066","Task","Modules: WS Consumer",13,"Spike on SDK powered WS-Consumer","""Spike on effort and features needed"""
"MULE-10065","Bug","Extensions API",1,"Do not propagate attributes when operation does not set it","""sdf"""
"MULE-10064","Task","Modules: File",5,"Provide dynamic metadata resolvers for file and ftp attributes","""File and Ftp connectors share operations but use different implementations of the FileAttributes interface. Add a MetadataResolver which communicates the right type.    Consider that this also affect the TreeNode object that the list operation returns"""
"MULE-10063","Enhancement Request","Extensions API",13,"Support single resource transactions on SDK operations","""Support transactions for local, single resource transactions on operations."""
"MULE-10062","Enhancement Request","Extensions",5,"Add concept of standalone Email to Email Connector","""The new email connector does not have metadata support, we must add the resolvers to support it."""
"MULE-10078","Bug","Core: Domains shared resources|Modules: XA Transactions|Transport: JMS",0,"Properly handle disposal of XaTransactedJmsMessageReceiver","""The session and consumer for a XaTransactedJmsMessageReceiver are stored in a thread local. This causes these resources to be leaked when the receiver is disposed form a thread different than the one that started it."""
"MULE-10077","Bug","Extensions API",3,"Metadata Type resolution fails when an operation returns int[][]","""If an operation returns an int[][], then the generated MetadataType doesn't contain a TypeAnnotation"""
"MULE-10075","Enhancement Request","Extensions API",5,"Support text parameters","""We need to have String parameters which support extensive text. E.g.:        For this we can reuse the @Text annotation which right now is just a display hint."""
"MULE-10074","Enhancement Request","Extensions API",5,"Introduce the concept of @XmlElementStyle parameters","""We need a RefOnly annotation that can be applied to complex type parameters (all across the board) so that they cannot be defined inline, they can only be referenced from the registry or provided through an expression.    This annotation is:    * Exclusive with @NoRef   * Only valid when applied to complex types  * Redundant when applied to a non instantiable type"""
"MULE-10073","Enhancement Request","Extensions|sdk",2,"email: Add the capability of add attachments when forwarding and replying an email","""*email: Add the capability of add attachments when forwarding an email*    * In the same way when using the {{send}} operation, add the capability on {{forward}} operation to be able to add email attachments"""
"MULE-10083","Enhancement Request","Build: Integration Tests",8,"ArtifactClassLoaderRunner - Improve classpath classification for selecting which artifacts are already bundled within the container","""ArtifactClassLoaderRunner uses an exclusion filter pattern for artifacts that should not be included in the application classloader neither the plugin classloaders.  This is fine for a first version but there could be another way to solve this without having to explicitly set this filters due to they have the issue of keeping duplicated things that are already in pom files into an annotation (see org.mule.functional.junit4.runners.ArtifactClassLoaderRunnerConfig).     One approach could be to use maven instead and create a pom that depends in all the mule modules (modules, core, container, etc) that would go to the container, so the users of this runner could define that dependency as provided and that will go to the container class loader. But, still the test dependencies have also transitive dependencies to the same artifacts so they would be need to be optional or either provided so they are not linked from the tests scope artifacts."""
"MULE-10081","Enhancement Request","Build: Integration Tests",2,"ArtifactClassLoaderRunner - Add support for scanning multiple base packages when discovering extensions","""The current version only supports to configure one basePackage to be used when discovering extensions by scanning the class path for classes annotated with @Extension.  It would be nice to support multiple packages in order to allow customers to have extensions with a complete different package from the Mule built in Extensions.  Consider performance impact or other tools when implementing this, current version is using Spring to scan the class path."""
"MULE-10094","Bug","Core: Deployment",1,"Incomplete application is continously redeployed","""After configuring the continuous build to work in parallel, a test started to fail from time to time:  org.mule.runtime.module.launcher.DeploymentServiceTestCase.redeploysBrokenExplodedAppOnStartup.  After playing with the test, if a Thread.sleep(10000) is added right before the last assertion, then the test will fail. Why? Because the application redeployment does not occur just once, but it occur on every cycle of the deployment service."""
"MULE-10093","Bug","sdk",5,"Subtypes of a type declared only as a generic are not parsed correctly","""Subtypes of a type declared only as a generic are not parsed correctly."""
"MULE-10090","Bug","Extensions API",2,"Fix extensions studio plugin packaging","""In order to be able to load custom editor files provided by extensions we need to do the following:  - Rename field *editorsPath* => *path* to avoid breaking current mechanism and existing  - *editors.xml* doesn't need to be part of the jar used in runtime to run the app. Because of this, the file should not be placed under src/main/resources for it to be part of the generated plugin. The file should be located inside an *editor* folder and copied to the root at the same level as the *plugin.xml* file"""
"MULE-10104","Enhancement Request","Extensions",13,"Start development of the new WS consumer extension","""Create the necessary extension classes required to build a the new extension."""
"MULE-10103","Enhancement Request","Extensions",13,"SPIKE: new CXF proxy client for the new WS Consumer  ","""The current WS consumer works using the inbound and outbound properties for managing headers and attachments, since in mule 4.0 the properties concepts is going to dissapear a new proxy client must be created.  The client must be based on a specially configured CXF Client to allow sending raw XML representing a SOAP envelope over CXF for SOAP processing, WS-Security, etc.          """
"MULE-10102","Enhancement Request","Extensions",13,"Add Metadata support to WS-CONSUMER","""Add the necessary metadata resolvers needed to support datasense in the new WSC module.   This must cover Headers (Represented as a Key Value pair) and the body content for both input and output.    WSC usability is highly coupled to this."""
"MULE-10097","Bug","Modules: File",3,"file:matcher name should be mandatory outside a flow","""When a {{file:matcher}} is defined as a top level element it should be mandatory the {{name}} attribute.    """
"MULE-10111","Bug","Extensions",1,"ExtensionFunctionalTestCase creates wrong manifest directory when using #getConfigFiles()","""When extending from ExtensionFunctionalTestCase and using the method `String[] getConfigFiles()` for returning the list of XML files, the `ExtensionFunctionalTestCase#getEffectiveConfigFile()` fails in the `getConfigurationResources()` implmented by default, as it does return empty string rather than `null`.  By returning an empty string, the files generated by the extensions (META-INF/spring.schemas, META-INF/spring.handler, etc..) end up in the current folder of the module being tested rather than in the /target folder (target/META-INF/spring.schemas and so on..)    The fix should be checking for `!StringUtils.isBlank(configFile)` in all the ifs, rather than `configFile != null`."""
"MULE-10110","Bug","Modules: File",0,"File copy/move fail to overwrite when target file is in a different directory","""When you use the file:copy or file:move operation and you try to overwrite a file which leaves in a different directory than the source one, then it doesn't overwrite but fails saying that the file already exists"""
"MULE-10105","Enhancement Request","Modules: File",0,"notifyDeletes should default to false in file:listener","""Most use cases for file:listener often include a move or delete operation. Having delete notifications enabled by default can result in confusing loops.    Switch the default to false to better suite most common use cases."""
"MULE-10117","Bug","Core: Classloading|Core: Expressions",1,"MVELExpressionExecutor used after a TypeSafeExpressionValueResolver from extensions API cannot load application classes","""Having the configuration attached to this issue where it has an expression-component and uses sockets extension.  See  for more details, it part of socket's extension tests.    The expression-component fails due to it cannot find the class  which is the super class of the test being executed.     After debugging the code I found that  caches the compiled MVEL expressions but always uses the same instance of  which resolves only once the ClassLoader for executing the expresion by obtaining it from Thread.currentThread().getContextClassLoader() and assign it to a variable.  Therefore, when  resolves the  expression the parserConfiguration gets the extension classloader and when trying later to evaluate the expresion-component from the flow it cannot find the class."""
"MULE-10115","Task","Core: Event/Message",8,"Review how correlation is implemented/achieved","""Review the implementation/usages of *org.mule.runtime.core.message.Correlation*.    Ref: http://www.informit.com/articles/article.aspx?p=1398616&seqNum=6    """
"MULE-10141","Enhancement Request","Extensions API",8,"Support multi transactions in SDK powered operations","""SDK should allow extensions to have operations which join multi transactions"""
"MULE-10140","Enhancement Request","Extensions API",8,"Support XA transactions in SDK extensions at the operation level","""Allow SDK powered extensions to have operations which join XA transactions"""
"MULE-10138","Enhancement Request","sdk",8,"Add the concept of exclusive parameters","""Add a way for two optional parameters (at any level) to declare that only one of them can be defined at the same time.    This should not be applicable among required parameters."""
"MULE-10137","Enhancement Request","sdk",13,"Allow AnnotationBasedDescriber to work with AST trees","""Following in the work of MULE-10135, implement a Type abstraction which works with an AST tree obtained from an AnnotationProcessor.    This also includes changing the current SDK annotation processor to not explicitly enrich the model through the javadocs, but rather rely on this Type abstraction to already provide them. """
"MULE-10136","Enhancement Request","Build: Integration Tests",5,"ArtifactClassLoaderRunner - Add support for services","""Add support for testing MULE-9752  * Classification process should look for services, basically it would scan the classpath to get which jars or target/classes have a service.properties  * In order to classify the dependencies it will get all the compile dependencies for those discovered artifacts (as with plugins/extensions, compile is the scope defined for this matter)  * Once the classification is done a new artifactClassLoader (with the filter) has to be created as child of container CL but it should not be part of the hierarchy, sharedLibs will continue to be the parent of the composite CL and child of container  * In addition to that, a service discoverer would need to be written in order to change the discover default mechanism that Mule Service has for registering the services"""
"MULE-10135","Enhancement Request","sdk",13,"Annotation Based describer should be abstracted from classes","""The AnnotationBased describer currently works by introspecting through the java.reflect API.    Create an abstraction around types, methods, fields, etc which allows the describer to work without directly relying on a Class object"""
"MULE-10134","Task","Extensions",5,"Migrate extensions to use isolated test runner","""HTTP, FTP and validations are not yet using the isolated test runner.  This task is about migrating those extensions."""
"MULE-10126","Enhancement Request","Build: Integration Tests",8,"ArtifactClassLoaderRunner - Add support for artifacts with different versions","""The current version it is not considering different versions for artifacts, for instance if mule-core depends on commons-collections 1.1 and it doesn't export it and an extension/plugin has a dependency to commons-collection 2.3 and it is used internally by the plugin (it is not exported too) the classification and class loaders should be created each with the correct version.  We are not supporting this and the classpath is built by maven using nearest version resolution therefore on the described scenario the only commons-collection jar that will be in classpath is version 2.3 due to the testing is happening from the extension artifact."""
"MULE-10124","Bug","sdk",1,"SchemaGenerator doesn't generate elements in the same order","""elements in a generated XSD not necesarilly maintain order. Although this is not a productive problem since the test case is still valid and the runtime doesn't really care, it does makes code review harder, because when a schema does change you see a lot of changes which are unrelated.    For example look at https://github.com/mulesoft/mule/pull/2982#discussion_r71688076"""
"MULE-10123","Enhancement Request","Core: Exception Handling",13,"[SPIKE] Error handling proposal spec","""Per the error handling proposal, we need to implement an error-handler that takes on-error elements capable of assigning the handling to the one that can handle the type of error generated."""
"MULE-10120","Bug","Modules: HTTP",0,"Map not sent as form data if mimeType is application/java","""When a Java map is used as payload and the data type's mime type reflects this using """"application/java"""", said map is not sent as form data via HTTP. This is because we assumed under that scenario the calculated content type would be null (but it's """"application/java"""")."""
"MULE-10148","Task","Build: Integration Tests",5,"Refactor DeploymentServiceTestCase to avoid using pre-compiled classes and jars","""DeploymentServiceTestCase is currently using different class and jars files to build application, domains, extension and services during the deployment tests.  As those files are binary files, is impossible to review the changes on them during the code review process.   Also, every change on those file, requires the developer to unzip them into a temp location, change them and then recreate the files replacing the originals.  """
"MULE-10146","Enhancement Request","sdk",8,"SchemaBuilder doesn't support child elements for List of Date types","""Right now, we can provide the value of a Date/LocalDateTime/etc in the XML. That value is parsed and the object is constructed, but if I wanted to specify those objects as child elements of a List that's no possible because those types doesn't fulfil the condition of generating child elements:        What we should do is implementing  the logic for generating child elements in a metadatatype visitor for the shouldGenerateChildElements method."""
"MULE-10145","Task","Test: Testing Framework",2,"Remove mule-tests-functional from distribution","""Remove Mule Testing Framework and its dependencies from Mule distributions.  Remove JUnit  Remove XMLUnit    Users who wish to test their applications should use MUnit Framework."""
"MULE-10144","Enhancement Request","Build: Integration Tests",0,"ArtifactClassLoaderRunner - Add support to explicitly export plugin classes","""While migrating extensions there was this need for exporting classes from the plugin/extension that are not exposed. The tests need to access them for testing the features but they are not supposed to be exported as part of the API.  Implement a way to allow exporting particular classes for plugins/extensions."""
"MULE-10152","Bug","Build: Integration Tests",0,"ArtifactClassLoaderRunner - When loading modules for container classloader it is using launcher classloader instead of the correct one","""When discovering modules for container classloader it is using TCCL that is launcher CL instead of the one that holds only the urls classified for the container:    Instead, it should do:      """
"MULE-10151","Bug","Build: Integration Tests",0,"ArtifactClassLoaderRunner - Missing dependencies at classification when transitive dependency is declared explicitly with another scope","""The following scenario is not well handled by the ArtifactClassLoaderRunner.  If an artifact defines a transitive dependency explicitly it is not handled correctly:    So, when collecting provided dependencies as scope was part of the identity of a MavenArtifact there was not possible to get the transitive dependency for org.glassfish.grizzly:grizzly-http-server:jar.    Fix is to remove scope from the identity and traverse transitive dependencies by artifact identity: groupId/artifacItd/version (optional)."""
"MULE-10150","Bug","Modules: File",1,"File extension baseDir is actually a workingDir","""File extension baseDir is actually a workingDir because it works like unix working Dir and not like HTTP basePath which doesn't allow absolute paths and always appends paths to base."""
"MULE-10149","Enhancement Request","Extensions API",5,"Create serialiser for SubtypesModelProperty","""*Create serialiser for SubtypesModelProperty*"""
"MULE-10160","Task","Core: API",2,"Move lifecycle interfaces to mule-api","""Lifecycle interfaces must be moved to the mule-api project as they are need by other parts of the API"""
"MULE-10155","Enhancement Request","Extensions API",3,"Add the concept of keywords to the extension model","""When searching for a component in Studio palette (or even for Mozzart) we support the concept of associated keywords, that makes it easier to find elements in the palette.    This keywords have a weight that is used to determine the best match when the user types in the palette filter.     For example, the database connector has the following keywords:  {code:xml}  <keywords>   <keyword value=""""db"""" weight=""""1""""/>   <keyword value=""""jdbc"""" weight=""""1""""/>   <keyword value=""""tables"""" weight=""""1""""/>   <keyword value=""""trigger"""" weight=""""1""""/>   <keyword value=""""views"""" weight=""""1""""/>   <keyword value=""""store-procedure"""" weight=""""1""""/>   <keyword value=""""storeprocedure"""" weight=""""1""""/>   <keyword value=""""sql"""" weight=""""1""""/>   <keyword value=""""connection"""" weight=""""1""""/>   <keyword value=""""select"""" weight=""""1""""/>   <keyword value=""""insert"""" weight=""""1""""/>   <keyword value=""""update"""" weight=""""1""""/>   <keyword value=""""delete"""" weight=""""1""""/>   <keyword value=""""oracle"""" weight=""""1""""/>   <keyword value=""""db2"""" weight=""""1""""/>   <keyword value=""""mysql"""" weight=""""1""""/>   <keyword value=""""postgres"""" weight=""""1""""/>   <keyword value=""""database"""" weight=""""2""""/>   <keyword value=""""datasource"""" weight=""""2""""/>  </keywords>  {code}    We could have an annotation that could be used at  Extension Level that has a list of Keyword Pojos or a repetable Keyword Annotation.    Something like:  {code:java}  @Keywords({      @Keyword(value=""""db"""",weight=2),      @Keyword(value=""""jdbc"""",weight=2)  })  public class MyExtension{  ...  }  {code}  Or with the repeatable annotation:  {code:java}  @Keyword(value=""""db"""" weight=2)  @Keyword(value=""""jdbc"""" weight=1)  public class MyExtension{  ...  }  {code}"""
"MULE-10174","Task","Core: API",3,"Review where do ConnectionProvide specializations belong","""The ConnectionProvider interface has some specializations (PoolingConnectionProvider, CachedConnectionProvider, etc) and they all live in mule-api.    There's a concern if the specializations should move to ext-api, in order to keep the main mule-api as tight as possible.    Doing so has the following disadvantages:    * No real ease in backwards compatibility, since ext-api has to be as backwards compatible as the mule-api  * mule-core should have to depend on ext-api which is something we want to avoid"""
"MULE-10173","Enhancement Request","Extensions API",0,"ConnectionProviders should be better typed","""For metadata and transaction support purposes, we need a better way to determine the type of connection management that should be applied to each connection provider.    Because the current approach is based on the double dispatch pattern, it requires live instances which is not a good approach for these use cases.    ConnectionProviders should be typed in a way that it's simple to provide this information both in the meta model and in live instances."""
"MULE-10172","Task","Build: Integration Tests",8,"Migrate perf-test to mule4 to add them to a build using JMH","""Migrate perf-test to mule4 to add them to a build using contiperf."""
"MULE-10180","Bug","Core: Classloading",0,"Classloader leak when Oracle JDBC Driver is not used but included in application lib folder","""h5. Problem  During the disposal process of the application classloader the DriverManager is called to get the registered drivers in order to deregister them if they were loaded with the current classloader.    The DriverManager has an static block code that loads by SPI the drivers present in the classloader (from where the DriverManager was called) so whenever  is called during the classloader's disposable phase if the OracleDriver was not used by the application it will be loaded when  is called just before it will be deregistered by the releaser.  This has a side effect and generates classloader leaks due to OracleDriver leaves open inputStreams.    h5. Proposal  Remove the workaround for http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=5041014 in  and call method  (added in jdk7) that does a better job by closing the classloader and releasing any inputStream opened. This fixes the file locked in Windows OS environments to OracleDriver's jar file.    h5. Caveats  Oracle has still a memory leak that cannot be resolved with the proposal described here, two objects are left in ThreadLocal and not removed when the driver is deregistered.  The objects left in ThreadLocal are:   """
"MULE-10178","Bug","Core: Deployment",0,"InputStream not closed on core, launcher and spring-config","""While researching an issue on Windows when an application is undeployed and some files are not removed from file system I found a few inputStreams not closed. This will generate leaks and in OS' like Windows will lock files."""
"MULE-10175","Task","Build: Libraries / Dependencies",3,"Upgrade Repository module dependencies","""Analyze where the dependency comes from and upgrade to the latest version.  The current versions include betas and milestone releases."""
"MULE-10189","Enhancement Request","Extensions API",1,"Allow ModelProperties to be searched hierarchically","""Right now, you cannot have a hierarchy of model property since you cannot get them by a base class.    Make it happen"""
"MULE-10188","Task","Test: Testing Framework",3,"Create HTTP hamcrest matchers","""Create Hamcrest matchers that we can reuse in HTTP tests."""
"MULE-10186","Bug","Core: Classloading",0,"Classloader leak due to shutdown listeners are not cleared","""h5. Problem  During the disposal process of the application classloader there is a reference to the classloader due to  has an anonymous classes with an strong reference to the classloader.     The root cause of this issue is classloader doesn't not null the list of listener after it triggers the calls to them.    h5. Proposal  Clear the list of shutdown listeners"""
"MULE-10185","Bug","Core: Classloading|Modules: CXF",0,"ArtifactClassLoaderRunner CXF issue when running all tests, works when executed isolated","""Running all test ends up failing on these test when isolated runner is used. """
"MULE-10183","Task","Core: Transports",5,"Migrate compatibility transport IT tests to use isolated test runner","""Review what would be needed in order to migrate transports compatibility IT tests to use isolated test runner."""
"MULE-10182","Bug","Core: Classloading",0,"Duplicate class definition exception when disposing domain 'default'","""When starting a FakeMuleServer with an App that fails to deploy, the system proceeds to stop the domain 'Default' and an exception is raised.     Stack trace:    """
"MULE-10181","Task","Core: DSL processing",8,"Migrate core transformers to new parsing mechanism.","""Migrate core transformers to new parsing mechanism."""
"MULE-10194","Task","Core: Classloading",2,"Review boot packages needed to be exported when migrating IT tests to run with isolation","""While migrating integration tests to run with isolated test runner I needed to expose groovy and aop packages. review why this is necessary.    ContainerClassLoaderFactory:      This also applies to yourkit."""
"MULE-10197","Bug","sdk",3,"Add custom TypeAliasAnnotation for MetadataType","""When a Class is annotated with @Alias, then the metadataType should be able to preserve that information.    If no alias is provided, then the class simpleName will be used as alias."""
"MULE-10210","Task","Core: Deployment",1,"DefaultResourceReleaser should not be exposed, move to an internal package",""" and its implementation are exposed by launcher module, in addition to that they are part of runtime packages     This could end up in an linkage error due to these classes have to be loaded by each Application and Domain classloader in order to dispose the resources (jdbc drivers).    They have to be moved to an internal package."""
"MULE-10209","Enhancement Request","Core: (other)",3,"Contribute to the MetadataModel with custom TypeAnnotationAdapters","""Contribute to the MetadataModel with custom TypeAnnotationAdapters so serialization of custom annotations provided by the extension are serialized correctly"""
"MULE-10205","Task","Modules: HTTP",8,"Create HTTP service","""We need to move core HTTP functionalities to a service that can be exposed so others can create their own servers and clients. The HTTP extension will use said service as will OAuth, for example."""
"MULE-10203","Task","Build: Integration Tests",1,"Move to a separate module ArtifactClassLoaderRunner ","""Move code to another module"""
"MULE-10202","Enhancement Request","Build: Integration Tests",3,"ArtifactClassLoaderRunner - Make it more extensible","""* TestClass should be only used in JUnit context, so the classification and factory can be used outside a JUnit context   * Context, remove everything related to testClass and annotation to JUnit runner only  * ClassPathURLProvided should allow to extend it with a list of provided URLs  * Set the rootArtifactClassesFolder and rootArtifactTestClassesFolder paths to the classification context  * Change name to ClassLoaderRunnerFactory to ClassLoaderIsolationFactory  * Make protected the three methods on buildAppUrls, buildPluginsUrlClassification, buildContainerUrls (internal extension)  * Remove comma separated parsing logic from classloading code and put it in runner JUnit  * Define the public API   """
"MULE-10201","Enhancement Request","Build: Integration Tests",2,"ArtifactClassLoaderRunner - Add support to infer which kind of artifact is being classified","""There are different cases where classification and classloaders for running tests would happen:  * testing extension code from the test folder of the artifact  * testing plugin code from the test folder of the artifact  * testing an application that uses plugins/extensions     Each case defines how target/classes and target/test-classes folder would have to classified and in which classloader should go.    It would help to infer if the artifact being tested is a plugin, extension or application:  * plugin, the target/classes should go to the plugin classloader and target/test-classes to the application classloader  * extension, same as plugin in addition to that it should generate the metadata  * application, target/classes and target/test-classes should both go to the application classloader"""
"MULE-10221","Enhancement Request","Extensions API",8,"Create tooling packaging","""In order to separate the artifacts that are deployed when building a mule app and the artifacts that are used for tooling or dependencies management we need to generate another artifact.    Currently inside the Studio plugin we have the following information:      Also we have a MANIFEST.MF      The packaging we need to define should contain:  * The zip of the mule plugin that is deployed with the mule app using this extension.  * An icons folder with the following structure:   ** _theme.id_:    *** a small and a large version of the icon. The naming convention is: {prefix}-connector-small.png and {prefix}-connector-large.png   The current themes generated by the SDK are: *theme.classic*, *theme.light*  * The extension model json.  * The custom editor if the extension defines one.  * Sources of the extension if available (Community connectors currently package this).  * Javadocs of the extension if available (Community connectors currently package this).  * Generated documentation (The one DevKit used to generated, this is no the same as Javadocs).  * A descriptor/Manifest that has at least the following information:   ** Contribution Jar: This can be used to attach the sources for debugging purposes   ** Contribution Sources: The sources that the user needs to attach    ** Contribution Type: We need know if this is a template, a mule extension, or a mozart project.   ** Required Execution Enviroment: In the future maybe some extension will require java 9.    ** The dependencies (in the extensions case, the extensions this extension depends of).    The extension model already has the following information:   * Extension Version   * Min mule version   * Namespace prefix   * Namespace URI   * Namespace Schema Location  """
"MULE-10220","Enhancement Request","Extensions API",8,"Add the concept of operation and sources which don't require a config","""In the current model each operation needs to be executed with a resolved configuration. This is not something that is always needed. Some operations like http:basic-auth-filter doesn't require a config a trying to resolve one is an usability problem, since the extension doesn't contain an implicit config and most common thing is to have two configs defined."""
"MULE-10218","Enhancement Request","Extensions API",8,"Exclusive optionals should support nested groups","""To be completed...."""
"MULE-10217","Bug","sdk",1,"ParameterGroups with a ParameterGroup field of the same type of their parent produces a StackOverFlow","""ParameterGroups with a ParameterGroup field of the same type of their parent produces a StackOverFlow"""
"MULE-10216","Enhancement Request","Extensions API",8,"Support auto paging operations in SDK","""Support auto paging"""
"MULE-10215","Task","Extensions API",13,"Spike on introducing DSQL into the SDK","""Perform a Spike on introducing DSQL into the extensions. Consider:    * syntax  * execution  * data sense  * extension model"""
"MULE-10214","Bug","Extensions API",8,"@Import should not require a class element","""The import annotation requires a class element which makes DslSyntaxResolver to have that class in the classpath plus forces extensions to export too many classes."""
"MULE-10212","Task","sdk",0,"Use new MetadataType AnnotationTypes interface","""Mule changes regarding to https://www.mulesoft.org/jira/browse/MDM-12"""
"MULE-10236","Bug","Modules: CXF",1,"CXF components will throw a NPE when added after WMQ or AMQP inbound endpoints","""CXF components will throw a NPE when added after WMQ or AMQP inbound endpoints.  The org.apache.cxf.binding.soap.SoapTransportFactory#getDestination() method only recognize the http and jms protocols.  Endpoint URL protocol need to be replaced with http:// to works properly.  org.mule.module.cxf.builder.AbstractInboundMessageProcessorBuilder#getAddress() method already uses http as default protocol.    Pull request to fix the issue submitted. Link below:  https://github.com/mulesoft/mule/pull/2631"""
"MULE-10235","Enhancement Request","Build: Distributions|Core: (other)",2,"Move services from launcher to a new services module","""MULE-9752 define the concept of services for the Mule Container. This code was implemented inside mule-module-launcher, this issue is about moving out that code to a new mule-module-services so it can be used from other modules."""
"MULE-10234","Bug","Extensions API",5,"TypeAliasAnnotation value is populated with the wrong value","""When using subtypes, the TypeAlias value generated for pojos that don't use the @Alias doesn't have the expected value.    For a pojo with name *Book*, the value should be *book*  For a pojo with name *BasePojo*, the value should be *base-pojo*    Check the extensions located at https://github.com/mulesoft/mule-tooling-mock-connector/tree/mule-4.x/extension-with-subtypes  """
"MULE-10244","Enhancement Request","Extensions API",5,"Move META-INF generated folder and content from folder /classes to /generated-sources","""Right now we are generating all the XSD and resources of the extension under the folder {root}/target/classes.     For IDEs to work correctly and out of the box, generated sources should always go to {root}/target/generated-sources.    This makes the development of mule app for testing for the extensions much easier since the XSD are recognized automatically allow you ot use the autocompletion.    We need to move the location were the files is generated, but without changing the current way we package the extensions."""
"MULE-10243","Bug","Extensions API",1,"Subtypes cannot be parsed as top level elements","""Subtypes pojos not always find their way into a top level element parser"""
"MULE-10241","Bug","Extensions API",1,"ExtensionsFieldHandler does not consider ParameterGroups","""ObjectType does not contain the fields which should be derived from a ParameterGroup annotation"""
"MULE-10240","Bug","Modules: HTTP",3,"Some http config parameters should move to the ConnectionProvider","""Things like user/pass authorization are currently on the request config element, which will make it impossible to manage through the connectivity service.Those should move connection provider.    It would also be good to have a general review of all attributes to make sure that we're not missing anything else."""
"MULE-10238","Task","Core: Registry",0,"Get rid of SimpleRegistry from Mule","""We need to get rid of the SimpleRegistry that is no longer needed. To do so we also need to consolidate test using AbstractMuleContextTestCase to use the spring mechanism to create the MuleContext.    While the SimpleRegistry is later consolidated into the SpringRegistry it's causing issues since, for instance, is making transformers to be registered twice in the transformer graph. This is because the transformer is registered when a transformer is registered as an object intante in the SimpleRegistry but later the SpringRegistry creates a ConstantFactoryBean from it an when it does post processing of beans it registers the transformer twice.    This is avoid currently by checking duplicates object in the post processing of registered objects which is not the right way to do it."""
"MULE-10254","Bug","sdk",5,"@ParameterGroup doesn't work on abstract pojos","""If a pojo is used as a parameter and such pojo has a parameterGroup on a parent abstract class, then such parameterGroup is not injected."""
"MULE-10251","Bug","sdk",3,"InterceptingCallback implementation with out generic as return type of an operation produces an ArrayOutOfBoundException when describing an Extension","""*InterceptingCallback implementation with out generic as return type of an operation produces an ArrayOutOfBoundException when describing an Extension*    Having a {{InterceptingCallback}} implementation like :      Will produce an ArrayOutOfBounds exception when describing the annotated extension. This occurs in the {{IntrospectionUtils#unwrapInterceptingCallback}} when tries to get the generic value of the {{InterceptingCallback}}"""
"MULE-10248","Task","Core: Components",8,"Migrate components to use new parsing mechanism","""Migrate components to use new parsing mechanism"""
"MULE-10280","Task","Core: Exception Handling",8,"Create MuleEvent error field","""Define the new field within the MuleEvent to hold the error data field  This also involves:   - Take into account i18n   - Define exception type that may hold the error message so it can be used when the error field gets created."""
"MULE-10277","Task","Core: Exception Handling",8,"Implement error mappings for message processors","""All message processor must be allowed to define an error mapping, meaning when some error occurs, the actual type is a customised one:      To map any errors one could use ANY as sourceType or omit the sourceType attribute altogether.    Notice that this should also include allowing the on-error-propagate component to declare an error mapping for the re-thrown error."""
"MULE-10275","Task","Modules: HTTP",5,"Include exception mapping mechanism in HTTP","""The HTTP service/module/extension needs to declare mappings for each status code error, so as to know which code to send."""
"MULE-10274","Task","Extensions API",8,"Move extension model to the runtime so it can be used to describe any extension.","""We want to move part of the extension model to the Mule API since we need a mechanism to describe the different components that can be use in a mule application. This components descriptors will help us have a simpler interaction between mule and tooling and will also allow us to get information from an application just from parsing the configuration and using the descriptors like doing type checks at design time.    We want descriptors mainly for:   - Global elements   - Operations - simple message processors that execute a single action   - Routers   - Scopes   - Transformers    Descriptors will contain information about the parameters types of the operations, the return types and also if they reference other global elements in the configuration.    Use cases:    - Tooling XML writing         By providing information with the component describer on what are the possible parameters and how the component can be serialized in XML we have a mechanism for tooling to know how to deal with every component, show an editor for it, and write it to XML.         By providing information with the parameters that may reference global elements, and the type of those global elements, the tooling can know which are the possible global elements that may be referenced from a reference parameter.    - XML validation         Validations             - We can validate in design time the values provided for the parameters by the user. For instance, if the user configured an expression over an attribute that do not accepts expressions the we can validate it. Or if the user is referencing a global element that does not match the required type then we can validate it.         Type checking             - By having all the expected parameter types and the output types provided by then and propagation rules we can do type checking on design time. This also required type inference from the EL used to get the return type of an expression where the input type is known."""
"MULE-10272","Enhancement Request","sdk",8,"Add support to be able to add restriction to parameters values","""*Add support to add restriction to parameters values*    * When receiving an *Number* parameter in most cases that value should be restricted to the useful numbers, example:  ** *HTTP Connector Port*: 0 and 65535  ** *Anypoint MQ - Fetch size*: 1-10  ** etc...    * Also this can be made for *String* parameters, where a regex can be placed to validating that the input is correct, for example, for an email or a URL.    * This feature is UI focused and is really important to communicate with out reading a documentation, and more important with out running the mule app, if the configured values is correct or not."""
"MULE-10269","Task","Core: Exception Handling",8,"Define and implement mechanism to declare exception mappings per module","""We must define and implement a way for modules to declare exception mappings (e.g. via a provider) that the error type inference interceptor can get when a given message processor fails with an exception to determine the error type."""
"MULE-10268","Bug","Modules: HTTP",0,"Proxy Authentication Header is not included when using proxy for HTTPS target server","""When using HTTP Requestor with Proxy for HTTPs protocol, the Proxy Authentication is not included.  https://github.com/AsyncHttpClient/async-http-client/issues/1152    This is an issue reported in AHC and fixed in 1.9.39. MULE-10165 upgraded AHC so this issue will include a test in Mule to verify that the issue is fixed."""
"MULE-10267","Task","Extensions API",1,"Allow to define message-redelivery element within any SDK source","""We need the SDK to allow inside ANY message source a message-redelivery element (with the same structure as today's idempotent-message-redelivery). The SDK does not need to do any processing with it. The runtime will enforce the required behaviour"""
"MULE-10266","Task","Core: Exception Handling",13,"Define common error types and create mapping for internal exceptions within core","""We need to:   - Define the set of common errors thrown by the runtime   - Define the logic to map the internal processor exceptions to the common errors types   - Execute the mapping logic before invoking the error handler (done in MULE-10376)   - Move MessagingException away from the API (done in MULE-10376)   - Change Error handlers to receive always a MessageException (done in MULE-10262)"""
"MULE-10265","Task","Core: Exception Handling",5,"Create scope for error handling + transactions","""This is to:   - Rename transactional element to the new name for the error-handling + transaction scope   - Rename transactional attribute configuration.   - Rename all test cases"""
"MULE-10264","Task","Core: Exception Handling",5,"Implement message redelivery support","""This is to:   - Rename idempotent-redelivery-policy to redelivery-policy   - Process placeholder for redelivery-policy inside message source so it's part of the flow chain   - Create REDELIVERY_EXHAUSTED error type   - Migrate existing test cases."""
"MULE-10262","Task","Core: Exception Handling",3,"Include error type attribute into on-error handlers","""This is just to include the error type parameter with an UNKNOWN error type and be able to filter using it."""
"MULE-10261","Task","Core: Exception Handling",8,"Refactor exception strategies to new error handling semantics","""This task includes:   - Refactor choice-exception-strategy to error handler   - Refactor catch-exception-strategy to error-handler + on-error-continue   - Refactor rollback-exception-strategy to error handler + on-error-propagate: This task does not include get rid of <on-redelivery-attempts-exceeded>     This task does not include also changing any configuration parameter from existing exception strategies."""
"MULE-10260","Enhancement Request","sdk",13,"Add endpoint for retrieving keys by config or resolver ","""Provide the capability for retrieving all the MetadataKeys associated to a config or resolver."""
"MULE-10259","Enhancement Request","sdk",13,"Add DSQL into the SDK.","""Add the necessary mechanism to the SDK in order to handle DSQL queries on extensions     Full feature specification can be found [here|https://docs.google.com/document/d/11MvxHPCtKHZl5BJw8EM8lAhtAYpO16c8YSKFXJTBGOs/edit#]"""
"MULE-10257","Bug","Core: Classloading",0,"Cannot access test classes when running isolated tests","""Consider the SelectStoreProcedureTestCase in the DB extension. It doesn't work because the classloader can't find a class in which the store procedure is implemented. There should be a way to make utility classes available."""
"MULE-10306","Bug","Modules: XML, XSLT, XPath, SXC",0,"Add option to disable internal entity expansion in XML (leads to DoS)","""Internal entity expansion in XML allows the following DoS attack in the XSLT component: https://en.wikipedia.org/wiki/Billion_laughs    Like in MULE-7390 the solution would involve adding a parameter to disable entity expansion."""
"MULE-10303","Bug","Extensions API",5,"Extensions Parser fails to load pojos declared as top element if the pojo is only used as value of  Map","""The Extension parsers fails to load a global Pojo, when the pojo is only used as the value of a map.    The XSD element exists, but you get the following error:    The parameter looks like    The mule app is:    The pojo used for test:  """
"MULE-10301","Enhancement Request","Build: Integration Tests",1,"ArtifactClassLoaderRunner - Support for testing transports from compatibility plugin","""Add support for classifying transports as plugins in order to allow testing them with isolation before they are assembled to the compatibility plugin."""
"MULE-10300","Task","Build: Integration Tests",2,"ArtifactClassLoaderRunner - As maven dependency graph could generate loops between dependencies this should be handled while resolving dependencies","""When testing the runner from external extensions there was a loop created by the dependency graph maven plugin when jaxen artifact was having a link to itself. These scenarios should be avoided when reading the graph generated by the plugin.  Add a way to handle this cases and log a warn message."""
"MULE-10299","Task","Core: Event/Message",13,"Remove MuleEvent dependency on FlowConstruct.","""Maybe move it to the execution context?"""
"MULE-10298","Enhancement Request","Core: Deployment",13,"Deploy applications in parallel","""Mule application deployment is done sequentially, this means that one application is deployed (installed, initialized, started) before any other app is deployed.   Some applications can take a lot of time to deploy because the usage of components that require initializing many things, or just because the config XML is huge.  When there are many applications deployed in the same container, the time required to start all of them is significative. Making the deployment parallel would help to reduce the required time."""
"MULE-10297","Task","Core: Event/Message|Core: Exception Handling",5,"Remove event.getMuleContext() dependency from flow statistics","""Remove event.getMuleContext() dependency from flow statistics"""
"MULE-10296","Task","Core: Event/Message|Core: Exception Handling",5,"Remove event.getMuleContext() dependency from exception creation","""Remove event.getMuleContext() dependency from exception creation"""
"MULE-10295","Bug","sdk",3,"target attribute accepts expressions","""when the SDK automatically adds the target parameter, it accepts values such as #[flowVars.pepe]. It should not. It should verify that it's not an expression. it should also validate that it doesn't start with the flowVars. prefix either"""
"MULE-10294","Task","Core: DSL processing",5,"Support TypeConverters on simple type child elements","""We need to define a mechanism that complex elements that resolve to simple types can have a type converter."""
"MULE-10287","Bug","sdk",1,"Expressions not evaluated on @Text parameters","""When a parameter is annotated with @Text, the value is always assigned as is, without expression evaluation"""
"MULE-10286","Bug","sdk",8,"Stack overflow in DslSyntaxResolver when indirect cyclic reference found","""Consider the following classes:        DslSyntaxResolver contains logic to control composite relationships in a class. However, when that cycle is implemented through a parameter group, it is not detected and a StackOverflow arises"""
"MULE-10285","Bug","sdk",8,"@Expression has no effect when used in abstract parameter group","""Given the following classes        When using the Concrete class as a parameter, the text field expression is resolved even though marked as literal.             """
"MULE-10284","Bug","Extensions API",2,"@Text has no effect when applied to a parameter group in abstract class","""Given the following classes        When using the Concrete class as a parameter, the text field translates into the DSL as an attribute instead of an element. If Base were no longer abstract and used instead, then the text field behaves as expected          """
"MULE-10329","Bug","sdk",5,"SchemaBuilder wrongfully adds stuff when operation has a group","""Look at the XSD generated for the stored-procedure operation of the new DB connector. All the ParameterGroup elements are both as flattened attributes and child elements, as if they were pojos"""
"MULE-10326","Enhancement Request","Extensions API",5,"Provide a way to identify a subtitution group for a parameter and subtypes mapping when using the DslElementSyntax","""When generating the editors.xml for an extension that has a subtype mapping, or extensible elements, there is no way to identify the element associated group in order to allow other extensions to contribute to the element.    If you use the get the dsl for a base type, it has the element name of something that doesn't exists in the XSD and that it can conflict with a parameter model name.    Check extension: https://github.com/mulesoft/mule-tooling-mock-connector/tree/mule-4.x/extension-with-subtypes"""
"MULE-10325","Bug","sdk",5,"Invalid extension can be packaged when an operation has the same name as a POJO","""When an extension has an operation with the same name as a POJO (ignoring case) and that POJO is used as an argument of the operation, the extension can be packaged, but it should fail because a Mule app with this extension fails when deployed.    This is the signature of the failing method:      And this is the Mule exception:        The source code to reproduce this issue is [here|https://github.com/fbarrios/success-factors-connector/tree/40c2810a0406c75fee7e2059c9ab1a1dba55798c]."""
"MULE-10323","Task","Core: Exception Handling",5,"Define handlers reutilisation (refs)","""We need to define and provide a way for handler to be reused.  This includes deciding whether only whole error-handlers or even on-error components can be referenced.  This should allow us to get rid of the reference exception strategy."""
"MULE-10339","Enhancement Request","Extensions API",5,"Replace Function<MuleEvent, T> with a better abstraction","""This feature collides a little bit with LITERAL expression support, which ends up requiring the user to know about the ExpressionManager and the MuleEvent.    Provide a better API for doing that, one that is:    * A top level object, which is capable of evaluating the expression and returning its literal value  * Replaces ExpressionSupport.LITERAL  * Less verbose  """
"MULE-10336","Task","Tools",3,"Create a build tool to run formatter over all the projects","""Create an script to run the formatter maven goal over all the maven artifacts in the project."""
"MULE-10345","Task","Core: Expressions",8,"Define API for bindings between mule and EL","""Define API for bindings between mule and EL """
"MULE-10346","Task","Modules: CXF|Modules: XML, XSLT, XPath, SXC",0,"Upgrade woodstox to 5.0.4","""Upgrade to woodstox 5.0.4, which contains the fix for https://github.com/FasterXML/woodstox/issues/21 and https://github.com/FasterXML/woodstox/issues/22"""
"MULE-10360","Task","Modules: HTTP",0,"HTTP requester should support reconnection strategy","""When implementing/thinking MULE-10359, it has to be taken into account that it would be ideal to have a way to force a reconnection/session-refresh when the API returns an specific error value.    If that applies, then the current session should be destroyed and regenerated"""
"MULE-10356","Bug","Transport: HTTP(S) / Jetty",0,"Http inbound endpoint returns additional headers in 100 Continue response","""The HTTP inbound endpoint incorrectly handles """"Expect: 100-continue"""" because it adds additional headers that make some clients fail (like AsyncHttpClient).    Current response (wrong):  HTTP/1.1 100 Continue  Content-Type: text/plain  Content-Length: 0  Connection: close    Expected response (right):  HTTP/1.1 100 Continue"""
"MULE-10352","Bug","Modules: HTTP",0,"Make HttpClient Startable instead of Initialisable to match Stoppable","""HttpClient is now initialisable and stoppable, which causes a flow stopped and started to fail since the http client is not recreated but it is stopped."""
"MULE-10351","Enhancement Request","Modules: WS Consumer",13,"WSC Should use http requester to resolve WSDL if specified.","""The WS Consumer doesn't use the TLS configuration of the HTTP requester because it uses the Java Classes directly instead of the Mule Implementation.     """
"MULE-10349","Enhancement Request","sdk",13,"Support expression for ""response"" parameters in sources","""MULE-9864 had to be done as a workaround since right now it is not possible to have parameters in a source that support expressions.   Though it may make sense for parameters that are required when generating a message, when the response makes it back to the source (assuming the source handles responses) there is a MuleEvent to evaluate expressions against. Thus it does make sense that some of the parameters (the ones used to define a response, for example) support expressions.  Another option would be to generate child support for Functions, since those are allowed but a combination of a Map and a Function<MuleEvent, Map> must be used now to supports children and expression.  """
"MULE-10367","Enhancement Request","sdk",8,"Add support for excluding a type from top level element support","""As  a connector developer, I'd like to disable the generation of top level elements for a given type."""
"MULE-10365","Enhancement Request","Modules: File",5,"Add support for proxys in SFTP connector (for 4.x)","""The current SFTP connector does not offer proxy support out-of-the-box. It would be nice to be able to configure a proxy via attributes in the connector similar to the following:  <ftp:sftp-connection proxyHost=""""$  {PROXY_HOST}  """" proxyPort=""""$  {PROXY_PORT}  """" ....  Then in the SFTPClient class, within the login(String user, String identityFile, String passphrase) method, simply use the attributes set in the connector and use jsch to set a proxy like the following after getting the jsch session:  session.setProxy(new ProxySOCKS5(proxyHost, proxyPort));"""
"MULE-10363","Task","Modules: HTTP",0,"HTTP Oauth2 token manager support should be improved","""Consuming the oauth module when the API slightly different to the regular standard might be harsh to understand, ending in debugging the java mule-module-oauth component to truly understand what's happening.    Such usability issues are (there might be more):  1) if the *refreshToken* is missing in the *oauth2:token-response* the application fails at start up (some APIs do not invalidate their tokens, thus refreshing is useless)  2) if, for some reason, there's a need to access the already obtained access token, the oauth2 module requires me to pass a *tokenManager-ref* although I do not necessarily have the need to redefine anything on the object store. Just accesing the access token.  3) this is higly related to *2)*, where some times the obtained token must go in a different header than the *Authorization * one, or change the *Bearer * name for something else. Taking Slack API, the obtained token must go as a query parameter named """"token"""", to achieve it I need to implement the following app (ideally, accessing the access token should be simpler, as I already know which *http:requester-config* I'm working with):      4) is quite common to fail hard when understanding APIs, specially when trying to consume those that relies on OAuth to authenticate with. It will be nice to have a safety relay -like, where the first time authenticating and trying to extract the access token, besides showing how your MEL expression failed it also shows the *complete* body's response, so that the developer could quickly understand that maybe the ID is wrong, the MEL is wrong, or anything else.    """
"MULE-10378","Enhancement Request","sdk",5,"Support boolean and Enums in MetadataKeyId parameter","""Support boolean and Enums as MetadataKeyId parameter types."""
"MULE-10377","Enhancement Request","sdk",5,"Support keyless metadata fetching","""We should add support in the metadata mediator to get dynamic metadata without specifying a metadata key and removing the capability to get the static metadata that is not used by anyone and it's bounded in the extension model.  So the new metadata fetch without key should cover this 2 cases: * the key is required (has @MetadataKeyId) so default values should be used to build the key or if tehre are no default values to build the key the fetch *must* fail. * the key is not required  (operation without @MetadataKeyId) and the dinamic resolution should be done with the NullMetadataKey """
"MULE-10376","Task","Core: Exception Handling",8,"Implement support for error mapping and error type discovery","""Implement support for error mapping and error type discovery"""
"MULE-10375","Bug","Core: Classloading",8,"MuleArtifactClassLoader dispose fail","""When trying to dispose a MuleArtifactClassLoader the method   #createResourceReleaserInstance fails due to a classcast exception.    This seems only to fail when creating the CL loader through MuleClassLoaderFactory     """
"MULE-10370","Task","Core: Exception Handling",0,"Remove custom-exception-strategy element","""Remove custom-exception-strategy element and default-exception-strategy. Since this is the last component that requires the old exception handling infrastructure, as part of this task we also need to remove all of that code."""
"MULE-10369","Bug","Modules: FTP",1,"FTP Extension: ftp create dir or sftp in general without the working dir field throws NPE. ","""FTP Extension: using a ftp config without the working directly field throws NPE. It should default to server default for that user.     *Steps to reproduce FTP (works fine):*  * create app with ftp config without workdir.   * Send a http request http://localhost:9090/read-write-like-copy-remote-local-to-server-sftp:        ----  *Steps to reproduce SFTP:*  * Send a http request http://localhost:9090/cant-obtain-write-path  * This exception will appear:    {quote}  ********************************************************************************  Message               : Found exception trying to obtain path /Upload/text.out.  Payload               : org.mule.extension.ftp.internal.ftp.ClassicFtpInputStream@9bdf14a  Element               : /read-write-as-copy-config-remote-local-to-server-sftp/processors/1 @ a0907800-7c4c-11e6-b531-985aebc8e9b5  --------------------------------------------------------------------------------  Root Exception stack trace:  2: No such file.   at com.jcraft.jsch.ChannelSftp.throwStatusError(ChannelSftp.java:2846)   at com.jcraft.jsch.ChannelSftp._stat(ChannelSftp.java:2198)   at com.jcraft.jsch.ChannelSftp._stat(ChannelSftp.java:2215)   at com.jcraft.jsch.ChannelSftp.stat(ChannelSftp.java:2172)   at org.mule.extension.ftp.internal.sftp.connection.SftpClient.getAttributes(SftpClient.java:114)   at org.mule.extension.ftp.internal.sftp.command.SftpCommand.getFile(SftpCommand.java:48)   at org.mule.extension.ftp.internal.ftp.command.FtpCommand.getFile(FtpCommand.java:66)   at org.mule.extension.ftp.internal.sftp.command.SftpWriteCommand.write(SftpWriteCommand.java:52)   at org.mule.extension.file.common.api.AbstractFileSystem.write(AbstractFileSystem.java:116)   at org.mule.extension.file.common.api.StandardFileSystemOperations.write(StandardFileSystemOperations.java:171)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:498)  {quote}      ----  *Steps to reproduce SFTP:*  * Using the same config but changing the SFTP connection:       * Send a http request http://localhost:9090/read-write-like-copy-remote-local-to-server-sftp  * This exception will appear:  {quote}  2016-08-29 20:03:18,834 [[bacdc740-6e3c-11e6-973e-985aebc8e9b5].read-write-as-copy-config-remote-local-to-server-sftp.worker.01] ERROR org.mule.runtime.core.exception.DefaultMessagingExceptionStrategy -   ********************************************************************************  Message               : Exception occurred while trying to change working directory to null.  Element               : /read-write-as-copy-config-remote-local-to-server-sftp/processors/1 @ bacdc740-6e3c-11e6-973e-985aebc8e9b5  --------------------------------------------------------------------------------  Exception stack is:  Exception occurred while trying to change working directory to null. (org.mule.runtime.core.api.MessagingException)    com.jcraft.jsch.ChannelSftp.remoteAbsolutePath(ChannelSftp.java:2916)    com.jcraft.jsch.ChannelSftp.cd(ChannelSftp.java:339)    org.mule.extension.ftp.internal.sftp.connection.SftpClient.changeWorkingDirectory(SftpClient.java:100)    org.mule.extension.ftp.internal.sftp.connection.SftpFileSystem.changeToBaseDir(SftpFileSystem.java:98)    org.mule.runtime.module.extension.file.api.StandardFileSystemOperations.write(StandardFileSystemOperations.java:165)  {quote}    +*In the case of the FTP create directory*+  {quote}  2016-09-03 02:35:48,074 [[41723430-7198-11e6-93b2-0a0027000000].flow-copy-prepare-environment.worker.01] ERROR org.mule.runtime.core.exception.DefaultMessagingExceptionStrategy -   ********************************************************************************  Message               : null.  Payload               : null  Payload Type          : null  Element               : /flow-copy-prepare-environment/processors/0 @ 41723430-7198-11e6-93b2-0a0027000000  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.NullPointerException   at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)   at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)   at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)   at java.nio.file.Paths.get(Paths.java:84)   at org.mule.extension.ftp.internal.ftp.command.FtpCommand.createDirectory(FtpCommand.java:167)   at org.mule.extension.ftp.internal.ftp.command.FtpCreateDirectoryCommand.createDirectory(FtpCreateDirectoryCommand.java:34)   at org.mule.runtime.module.extension.file.api.AbstractFileSystem.createDirectory(AbstractFileSystem.java:152)   at org.mule.runtime.module.extension.file.api.StandardFileSystemOperations.createDirectory(StandardFileSystemOperations.java:325)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:498)  {quote}  """
"MULE-10404","Task","Core: Exception Handling",3,"Fix Error API issues","""We need to do a couple of improvements over the Error API in Mule:    - Make MuleEvent.getError() return optional instead of an Error. Since this API is not going to be expose through EL we can make it follow the general Optional rule.   - Rename ErrorType.getStringRepresentation() to ErrorType.getIdentifier()   - Remove every other method from ErrorType that is held by the MuleEvent since the user doesn't need to know about the parent or namespace."""
"MULE-10403","Bug","Modules: FTP",2,"FTP Extension: Write operation doesn't work using SFTP when the destination is a new file. It throws ""Found exception trying to obtain path..."" ","""Trying to write using SFTP with Mac doesn't work if the file doesn't exist. It throws:  {quote}  ********************************************************************************  Message               : Found exception trying to obtain path /Users/alejandro/sftp-test/output/text.out.  Payload               : org.mule.extension.ftp.internal.sftp.SftpInputStream@92728f  Element               : /read-write-as-copy-config-local-to-local-sftp/processors/1 @ fb1a0d50-6eea-11e6-89d4-985aebc8e9b5  --------------------------------------------------------------------------------  Root Exception stack trace:  2: No such file   at com.jcraft.jsch.ChannelSftp.throwStatusError(ChannelSftp.java:2846)   at com.jcraft.jsch.ChannelSftp._stat(ChannelSftp.java:2198)   at com.jcraft.jsch.ChannelSftp._stat(ChannelSftp.java:2215)   at com.jcraft.jsch.ChannelSftp.stat(ChannelSftp.java:2172)   at org.mule.extension.ftp.internal.sftp.connection.SftpClient.getAttributes(SftpClient.java:114)  {quote}    *Steps to reproduce:*  * Start SFTP Server  ** Launch System Preferences and go to “Sharing”  ** Click on the checkbox next to “Remote Login” to enable SSH and SFTP  ** Check it is working with executing in the cosole """"sftp localhost.""""  * Use this config copied at the end of the ticket.   * Send a request to """"http://localhost:9090/read-write-like-copy-local-to-local-sftp""""    +*App to reproduce:*+      """
"MULE-10402","Bug","Extensions API",0,"User should not need to create a maven-module-mapping.properties to be able to run their extension tests","""Users are forced to create a file named maven-module-mapping.properties to do a mapping or the artifact Id of the project and the name of the folder, even inside a single module project or if the name of the artifact and the folder is the same.      This file should not even exists in this scenario."""
"MULE-10401","Task","Core: Components",8,"Remove HTTP parsing mechanism","""Removing the set-attachment component from mule 4, there is no way to create a multipart payload. This means, for example, that a multipart request can't be generated.  We need to provide a way to create such a payload, considering all the set-attachment attributes (content type, name) but also filename and custom headers.  Now that operation UX is done we need to have a way of creating such payloads with DW."""
"MULE-10400","Task","Modules: HTTP|Transport: Email",5,"Review multipart implementation in HTTP","""We need to check the implementation regarding the multipart payload to make sure nothing is missing and no irrelevant component remain.    After this is finished, we will be able to migrate MULE-10233 to 4.x."""
"MULE-10397","Bug","Extensions API",1,"Default and ExpressionSupport Annotations are not persisted in the json when a Pojo field is not annotated with @Parameter","""If your pojo has the following definition, the default and expression support information is lost:      We should either support this and process the annotation when the field only has setters and getters, or we should fail at compile time."""
"MULE-10383","Bug","Core: Classloading",2,"Classloading issue using extension extending from ExtensionFunctionalTestCase using HTTP connector","""Consuming the HTTP connector from a test ends up in classloading issues throwing the following exception:        To try to workaround the issue, I edited the HttpConnector class, adding the HttpClient with the @Export annotation (making it visible in the plugin.properties as an exported package) but still got the same issue.    Code of the Java test      Code of the http-ext-integration-text.xml      Dependencies for the test I needed:  """
"MULE-10379","Bug","Core: DSL processing",1,"SAXParseException adding logger","""When using a {{logger}} I get a SAXParseException, without the loggers the application gets deployed and works fine. To reproduce try to deploy the attached application."""
"MULE-10414","Story","Core: Expressions",0,"Define API to do type inference for bindings (functions and variables)","""Define API to do type inference for bindings (functions and variables) """
"MULE-10413","Story","Core: Expressions",8,"Spike: Define how to define EL functions from modules","""Define how to define EL functions from modules"""
"MULE-10412","Story","Core: Expressions",0,"Define how to do beans lookup","""Define how to do beans lookup. One way this was done was using the app global which exposed the registry."""
"MULE-10409","Story","Core: Expressions",8,"Move enricher to compatibility","""Define the UX for enricher that uses MEL. We need to review how now having the enricher affects us considering the 3.x use cases."""
"MULE-10408","Story","Core: Expressions",5,"Define a way to hook to the default EL in Mule","""Define a way to hook to the default EL in Mule"""
"MULE-10406","Bug","Modules: FTP",5,"FTP Extension: In SFTP the create directory doesn't work, it says that the path to create doesn't exist.","""FTP Extension: In SFTP the create directory doesn't work, it says that the path to create doesn't exist.    Steps to reproduce:  * Start SFTP server in Mac  * try to create a directory"""
"MULE-10405","Bug","Modules: FTP",8,"FTP Extension: SFTP doesn't support the known_hosts validation if the key uses ECDSA or RSA ","""Testing with the MAC SFTP server when you connect using """"sftp localhost"""" the key added to your known_hosts file is using """"ecdsa-sha2-nistp256"""".    When I want to connect using Mule SFTP Connection I receive this warning   {quote}  Root Exception stack trace:  com.jcraft.jsch.JSchException: UnknownHostKey: localhost. RSA key fingerprint is bb:cb:63:07:52:24:32:13:d8:b8:ac:07:e3:2e:15:23   at com.jcraft.jsch.Session.checkHost(Session.java:797)    {quote}    If I add the entry after obtaining the ssh-rsa using the command """"ssh-keyscan localhost"""" it throws:  {quote}  org.mule.runtime.core.api.MuleRuntimeException: Error during login to alejandro@localhost.  2016-08-31 03:53:24,863 [[fb407c40-6f46-11e6-8f29-acbc32a683df].sftp-flow-create-directory.worker.01] ERROR org.mule.runtime.core.exception.DefaultMessagingExceptionStrategy -   ********************************************************************************  Message               : org.mule.runtime.core.api.MuleRuntimeException: Error during login to alejandro@localhost  Payload               : null  Payload Type          : null  Element               : org.mule.runtime.module.extension.internal.runtime.DefaultExecutionMediator$OperationRetryCallBack@1f147640 @ app  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.ArrayIndexOutOfBoundsException: 222   at com.jcraft.jsch.Util.fromBase64(Util.java:52)   at com.jcraft.jsch.KnownHosts.setKnownHosts(KnownHosts.java:218)   at com.jcraft.jsch.KnownHosts.setKnownHosts(KnownHosts.java:54)   at com.jcraft.jsch.JSch.setKnownHosts(JSch.java:317)   at org.mule.extension.ftp.internal.sftp.connection.SftpClient.configureHostChecking(SftpClient.java:187)   at org.mule.extension.ftp.internal.sftp.connection.SftpClient.configureSession(SftpClient.java:170)  {quote}"""
"MULE-10453","Bug","Core: Logging",8,"Memory leak caused by per-app logging","""Per-application logging is causing a memory leak as the logging context maintains a reference to the application classloaders.  The issue is easily reproduced  on a clean distribution, after default has started redeploy it a couple of times. A profiler will show that there are many MuleappplicationClassLoader instances with strong references when there should be only one.    This issue is not reproduced when mule is running using -M-Dmule.simpleLog"""
"MULE-10452","Bug","Core: (other)",3,"Memory leak caused by DefaultDataTypeBuilder's cache","""DefaultDataTypeBuilder contains a cache, used to avoid recreating the same instance DataType instance on each request.   This cache is not flushed when the app is undeployed, and because the key references the datatype instance, wich references the classloader, there is a memory leak"""
"MULE-10451","Task","Core: API",8,"Mule 4 Processing Strategy Spec","""Spec"""
"MULE-10450","Task","Core: API",8,"Introduce new Non-Blocking API","""Introduce new Non-Blocking API"""
"MULE-10449","Task","Core: API",5,"Non-Blocking API Spec","""Create/share/review spec for new non-blocking API."""
"MULE-10447","Task","Transport: FTP / SFTP",8,"FTP Extension: Test List operation after the changes and updates needed are done","""The list operation of the FTP Extension needs some changes and updates in it functionality. After they are done we need to test it again.  """
"MULE-10446","Task","Core: Concurrency / Threading",8,"Spec: Mule 4 Threading model","""Write a spec for the new threading model"""
"MULE-10440","Enhancement Request","Core: Deployment",8,"Define plugin versions and improve plugin dependencies","""Current version defines plugin dependencies by name.   As there will be multiple versions of a given artifact, the name is not enough.  Dependencies must be declared in a better way, maybe by defining the maven ID of each artifact.  Then the plugin dependencies must be resolved taking in account that there could be multiple versions of a given plugin"""
"MULE-10436","Enhancement Request","Core: Classloading",1,"Improve logging to help to resolve classloading issues","""FineGrainControlClassLoader should log what classes are being loaded, what lookup policy is being used and what classloader is finally used to load the class."""
"MULE-10435","Enhancement Request","Build: Integration Tests",5,"Add a way to shared libs on the isolated tests","""Applications can share libraries with artifact plugins deployed as part of the app. The isoalted test runner must support this feature so we can use libraries that are not part of the extensions (like DB drivers) on our tests"""
"MULE-10434","Bug","Extensions API",3,"Compilation fails for an extension with operations shared with different config","""I had an extension that have 2 configs, and they share the same operation, but after the merge of the MULE-10220 it stopped compiling.    The extension:    Operation:      Expected: The compilation should not fail, and when it fails, it should not fail with the execption it is currently failing. The error should specify the components that generated the conflict"""
"MULE-10430","Task","Core: (other)",8,"Spike for moving operation execution from ExtAPI to core","""The idea is to see what is the impact of moving the code to execute operation from extensions API to the core so we can reuse it for every operation that executes like a function."""
"MULE-10428","Story","Core: Expressions",8,"Allow transform processor to load the script from a file","""Since a dw script can be quite large, it would be ideal to load them from a file."""
"MULE-10426","Story","Core: Expressions",8,"Redefine DW current components ","""- Redefine DW current components    - set-payload vs dw:transform    - Make DW components as part of core namespace."""
"MULE-10425","Story","Core: Expressions",5,"Review new operator won't be supported in EL","""Review new won't be supported in EL. Need to evaluate the impact and define how to approach the fact that 'new' won't be accepted in the EL."""
"MULE-10424","Story","Core: Expressions",8,"Define bindings to use in Mule 4 from the event","""Define bindings to use in Mule 4"""
"MULE-10422","Task","Core: Exception Handling",5,"Add mechanism to provide an error message from failing components","""This task is to allow components in mule configuration to provide a MuleMessage with information related to the error like in http when there's an http status code validation but the response of the request must still be available to be used by the user."""
"MULE-10421","Task","Core: Exception Handling",8,"Define and implement how to deal with composite exceptions","""We need to provide a mechanism for components that execute many routes to provide a composite exception with the different errors that occur in each route and make that accessible by the user. (i.e.: scatter-gather).    This also includes supporting that in mule core components  """
"MULE-10456","Bug","sdk",13,"Exported types are not declared in the extension model","""When an extension declares an Exported type, and that types is not used, or used only as a ParameterGroup are not declared in the extension model of the Extension."""
"MULE-10461","Bug","Modules: FTP",1,"FTP Extension: In the create dir operation when the Directory already exist it doesn't mention the complete path, just the directory name","""For example  for this config:        It only displays """"Directory 'input' already exists."""" in place of *""""Directory /Users/alejandro/ftp-test/input/ already exists.""""* or *""""Directory 'input' already exists. in /Users/alejandro/ftp-test/""""*"""
"MULE-10460","Bug","Modules: FTP",1,"FTP Extension: SFTP delete log appears twice when a folder is removed","""When you add the in the log4j2.conf the DEBUG level to the FTP package it shows twice the line of folder deleted in SFTP. In the case of the delete of a file it only shows it once as expected. In the logs you will see both behaviours:    {quote}  DEBUG 2016-09-03 01:54:50,249 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.connection.SftpClient: Attempting to cwd to: /Users/alejandro  DEBUG 2016-09-03 01:54:50,250 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.command.SftpDeleteCommand: Preparing to delete file '/Users/alejandro/output/hello-world.txt'  DEBUG 2016-09-03 01:54:50,251 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.command.SftpDeleteCommand: Successfully deleted '/Users/alejandro/output/hello-world.txt'  DEBUG 2016-09-03 01:54:50,251 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.connection.SftpClient: Attempting to cwd to: /Users/alejandro  DEBUG 2016-09-03 01:54:50,252 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.command.SftpDeleteCommand: Preparing to delete directory '/Users/alejandro/output'  DEBUG 2016-09-03 01:54:50,254 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.command.SftpDeleteCommand: Successfully deleted '/Users/alejandro/output'  DEBUG 2016-09-03 01:54:50,254 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-delete-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.command.SftpDeleteCommand: Successfully deleted '/Users/alejandro/output'  {quote}"""
"MULE-10459","Bug","Modules: FTP",1,"FTP Extension: SFTP Rename operation doesn't work ","""When trying to do a Rename using SFTP it throws an exception """"Exception occurred while trying to change working directory to null.""""    *Steps to reproduce:*  * Start the SFTP server in mac and check it is running  * Try to rename a file/folder with a flow like this:      {quote}  DEBUG 2016-09-03 01:57:45,268 [[65af1b30-7191-11e6-93b2-0a0027000000].flow-sftp-rename-folder-and-file.worker.01] org.mule.extension.ftp.internal.sftp.connection.SftpClient: Attempting to cwd to: null  {quote}    {quote}  ********************************************************************************  Message               : Exception occurred while trying to change working directory to null.  Payload               : null  Payload Type          : null  Element               : /flow-sftp-rename-folder-and-file/processors/0 @ 65af1b30-7191-11e6-93b2-0a0027000000  --------------------------------------------------------------------------------  Root Exception stack trace:  java.lang.NullPointerException   at com.jcraft.jsch.ChannelSftp.remoteAbsolutePath(ChannelSftp.java:2916)   at com.jcraft.jsch.ChannelSftp.cd(ChannelSftp.java:339)   at org.mule.extension.ftp.internal.sftp.connection.SftpClient.changeWorkingDirectory(SftpClient.java:100)   at org.mule.extension.ftp.internal.sftp.connection.SftpFileSystem.changeToBaseDir(SftpFileSystem.java:98)   at org.mule.runtime.module.extension.file.api.StandardFileSystemOperations.rename(StandardFileSystemOperations.java:310)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)  {quote}"""
"MULE-10458","Task","Core: (other)|sdk",0,"Define how our socket factories should be enforced","""Right now, the TlsContextFactory claims to be able to generate client and server socket factories when in fact it only exposes a way of obtaining an SSLContext. The problem then is that if we don't exposed TlsConfiguration or our restricted client and server socket factories, users will have no way of obtaining a mule regulated socket factory that guarantees a cipher and protocol configuration that respects the admin setup.  We need to define whether we want to add that capabilities to the TlsContextFactory or refactor our TLS approach to allow another way of providing those socket factories."""
"MULE-10470","Bug","Modules: Email",3,"Upgrade javax.mail to latest version","""E-mail extension is being built using the 1.4.7 version of the javax.mail dependency (March 2013). We should upgrade to the latest version (1.5.6) released in August 2016. Available at: https://mvnrepository.com/artifact/javax.mail/javax.mail-api  Also, the dependency is marked as provided, so the version shipped with the distribution is being used. Consider shipping this library with the extension plugin."""
"MULE-10468","Task","Extensions API",5,"Define DslSyntaxResolver behaviour when type is not global","""Define how the resolve(MetadataType type) method should behave when the type doesn't allow global definitions and is not wrapped. Should it fail? Should it return an empty element Name?"""
"MULE-10466","Task","Build: Libraries / Dependencies",0,"Update javax transport version to 1.2","""Upgrade the library"""
"MULE-10482","Task","Build: Libraries / Dependencies",5,"Replace Geronimo dependencies with javax ","""We should consider upgrading all spec libraries to the latest version of the javax flavor and remove Geronimo packages from the distribution.    - J2EE  - JMS  - EJB  - JAX-RPC  - Servlet"""
"MULE-10481","Enhancement Request","Modules: Email",3,"Email: Add pagination support for the list operation.","""Now the SDK has pagination support, and we should make the list operation paginable.  Remember to modify Email's spec to reflect this change."""
"MULE-10480","Task","Core: Deployment",5,"Move deployment code to its own module","""Move deployment code to its own module"""
"MULE-10479","Bug","Extensions API",5,"Description is not populated in the extension model when the operation is declared at the Configuration instead of the Extension","""If you add operation at an @Configuration class, all the operations and parameters descriptions are empty    Operations    Generated JSON for the operations:      The description should be populated. For configless operations, all the descriptions are populated correctly"""
"MULE-10478","Enhancement Request","Extensions API",8,"Pojos should not have top level element support by default","""The current default is to add top level element support for all instantiable types on the XML dsl. This is fine for the code connectors but is problematic for cloud ones. Plus, not all core connectors need that either.    Additionally, the tooling becomes cluttered by an excess of top level elements, most of which are hardly needed.    Default should change to false, and this should explicitly enabled through a XmlHints annotation"""
"MULE-10476","Enhancement Request","Extensions: Maven Plugin",2,"Provide a way to specify mule plugin dependencies of an extension","""When packaging an extension we should include in the plugin.properties file an entry """"plugin.dependencies' that specifies the list of plugins that the extension is dependant on.    We should see if this could be auto-discovered or specified somewhere."""
"MULE-10475","Bug","Extensions API",8,"DSLSyntaxResolver crashes when resolving metadata types if the class is not in the classpath","""When loading the extension model and generating the XML definition in studio using as input a metadata type, the DSLSyntaxResolver crashes because it is looking for classes in the classpath.     The DSL should not depend on classes being in the classpath.    This was working before."""
"MULE-10474","Task","Extensions API",5,"Review email operations that return or receive a multipart mule message.","""Review the experience of the email operations that return or receive a multipart mule message, describe the final decisions in the Email Connector spec. """
"MULE-10473","Enhancement Request","Modules: Email",5,"Review Email operations that return mule messages.","""We dont want to expose the Message in the operations of extensions, so we should replace this with the OperationResult concept"""
"MULE-10485","Enhancement Request","Build: Integration Tests",2,"ArtifactClassLoaderRunner - Add support for reading the maven-shade-plugin configuration using Xpp3 Maven API","""While reading if the pom has maven-shade-plugin during the Workspace findArtifact resolution it would be nice to read the settings of the plugin in order to avoid hardcoding the dependency-reduced-pom.xml file name for reduced pom."""
"MULE-10484","Task","Build: Integration Tests",0,"ArtifactClassLoaderRunner - Improve exportPluginClasses to only export classes of the plugin that contains those classes","""While migrating extensions there was this need for exporting classes from the plugin/extension that are not exposed. The tests need to access them for testing the features but they are not supposed to be exported as part of the API.  MULE-10144 implements a way to allow exporting particular classes for plugins/extensions but these set of classes is exported by all the plugins/extensions due to there is no way to match which plugin/extensions contains those classes.  Find a way to improve this.    h5. Proposed solution  It should only be allowed to export classes for the rootArtifact if it is a plugin, therefore you would only be able to export classes when doing functional tests from the same plugin that is exporting those classes"""
"MULE-10507","Bug","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",0,"OAuth Authorization in HTTP Requester redirection URL only works on localhost","""The redirectionUrl needs to be something ESB can listen on as the callback(generated dynamic flow) will be using it. As a result, in CloudHub, this can only be using host: 0.0.0.0    However, when OAuth provider authenticates the login and send an HTTP response with a 'location' header of """"http://0.0.0.0:8081/callback"""", the browser is not able to corelate it to the one exposed by the application, which should be http://appName.cloudhub.io/callback.    We need an extra attribute, say 'ExternalRedirectionURL', to send to the remote OAuth provider, so that, when the OAuth provider returns the redirect, it's going to the ExternalRedirectionURL, which eventually will land on the redirectionURL where the ESB runtime is listening on."""
"MULE-10506","Bug","Modules: File",3,"File workingDir attribute should be at the file:connection level","""The file connector has the workingDir at the configuration level. This means that the connection provider of file is not considering it when doing connection testing. That should be used since it may be that the configured folder does not exists."""
"MULE-10505","Task","Build: Distributions|Modules: File",8,"Make mule-module-file-common an artifact plugin","""File common modules is currently distributed in the container an exposed in the API. File, FTP and FTPS extensions depend on that module.  As now plugins can depend on other plugins, file common must be removed from the container and converted in to an artifact plugin."""
"MULE-10503","Bug","Extensions API",1,"DSLSyntaxElement element name is not populated if the paramter has the @Text annotation","""For Database and Email extensions, some parameter are annotated with the @Text annotation.  {code}  public FooPojo {    @Text    @Parameter    private String superField;  }  {code}    When resolving the DSLElementSyntax using its metadata type, and getting the DSLElementSyntax for the field annotated with @Text,  the resulting DSLElementSyntax has an empty element name.     Without a name, we cannot persist it in the XML.    {code:java}      String fieldName = """"superField"""";      DslElementSyntax resultFromMetadata = getSyntaxResolver().resolve(parameterModel.getType()); //This is a FooPojo      DslElementSyntax metadataFieldDsl = getChildFieldDsl(fieldName ,resultFromMetadata);      assertElementName(fieldName ,metadataFieldDsl); //This fails  {code}"""
"MULE-10502","Bug","Modules: Management / JMX",1,"Custom URL path in JMX management module is not working","""Since the host attribute was deprecated, JMX urls with a custom path are not being correctly parsed, and the default */server* is always used as the path."""
"MULE-10501","Enhancement Request","Build: Integration Tests",8,"ArtifactClassLoaderRunner - Add unit tests for Aether classification process","""In order to support multiple versions for different artifacts (plugin/container) the classification process for the class loader isolated runner has been changed to use Eclipse Aether (Maven resolution API).  This code needs to be tested in order to avoid having to run all the tests that use the runner to check if a change there breaks something else."""
"MULE-10500","Bug","Modules: WS Consumer",0,"SoapFaultException must keep the original SoapFault","""When building a SoapFaultException, certain attributes of the original SoapFault are being kept. Instead, reference to the SoapFault itself should be kept."""
"MULE-10498","Enhancement Request","Extensions: Maven Plugin",2,"Review exported extension plugins when packaging.","""We should remove the capability to specify exported plugins in the <pluginDependencies> property and move to what the was defined to solve the classloading and testing issues.    Also add tests for this feature.  """
"MULE-10497","Task","Core: Event/Message",8,"Microbenchmark event/message creation/copying/usage","""Update and run benchmarks."""
"MULE-10495","Task","Core: Event/Message",5,"Improve test infrastructure for creating Events/Messages","""Review how messages/events are created. Migrate to use the builder."""
"MULE-10491","Enhancement Request","sdk",5,"Add missing UI TypeAnnotations to improve the POJOs support","""*Add missing UI TypeAnnotations to improve the POJOs support*    * Nowadays the ExtensionModel have several {{ModelProperty}} that contribute on how to render a UI:  ** *LayoutModelProperty*  *** Whether is a password  *** Whether is a text  *** The order of the element  *** Group  *** Tab  ** *DisplayModelProperty*  *** DisplayName  *** Summary    Some of these information there is no way to contribute to a {{MetadataType}} because a {{TypeAnnotation}} is missing and in some other cases the {{MetadataType}} is not contributed correctly."""
"MULE-10488","Task","Core: Exception Handling",5,"Allow on-error-* to handle several error types","""Need to support OR operator."""
"MULE-10520","Task","Core: Exception Handling",2,"Add test cases for routers and error handling","""We need to make sure that when a router fails it throws RoutingExceptions (ROUTING error type) but when an inner route fails the original exception is available."""
"MULE-10519","Task","Core: Exception Handling",8,"Move all exception classes away from MessagingException","""We need to hide MessagingException as much as possible and expose the exceptions that might make it to the user. This will mean no more """"causedBy"""" and restoring the behaviour in MessageVariableResolverFactory when handling """"exception"""" to stop wrapping it."""
"MULE-10517","Task","Core: Event/Message",2,"Add information on the EventContext about the origin of its events","""Notifications should contain this information. This will allow the system receiving this notifications to identify the source of those events. Currently, it is containing the name of the xml element for the source or the url of the inbound endpoint for compatibility module.    Some more data that would make sense:    * name of the receiving flow construct  * name of the module and operation of the connector receiving the event"""
"MULE-10516","Bug","sdk",5,"Declare config-ref attribute as a reference in the ComponentBuildingDefinition","""The SDK must declare the attributes pointing to pojos config-ref attribute as a reference when defining the component building definition of the operations.    Mule needs to know about the reference parameters in the config in order to clearly know the dependencies between different components in the configurations.    This let us create an isolated component together with it dependencies."""
"MULE-10514","Task","Build: Integration Tests",8,"ArtifactClassLoaderRunner - Refactor to encapsulate Aether API inside the runner implementation","""The following packages had to be exported as part of the migration to Aether, refactor the code to avoid exposing this as part of the API:    """
"MULE-10513","Task","Build: Integration Tests",1,"ArtifactClassLoaderRunner - Check how DSL metadata is generated for extensions","""org.mule.functional.api.classloading.isolation.ExtensionPluginMetadataGenerator is generating DSL metadata at the end when all the extensions were registered and its manifest created.  These means that spring stuff and xsds are created at that point to only one folder, actually it is added this URL to every plugin.    Check if this (having the whole metadata on each plugin resources) would have a problem with Extensions Runtime."""
"MULE-10509","Task","Transport: HTTP(S) / Jetty",2,"Migrate HTTP extension to depend on Sockets extension as plugin dependency","""As MULE-9867 added support for extension/plugins dependencies HTTP extension has to be migrated to use this new approach."""
"MULE-10523","Bug","Extensions API",2,"Exported elements are not in the list of types in the extension-model.json","""None of the exported types is populated in the types field of the extension-model.json    Check the sockets extension org.mule.modules:mule-module-sockets for example.    TcpClientSocketProperties should be in the list of types, but it is not."""
"MULE-10530","Task","Modules: HTTP",3,"Rename and make optional the ""key"" attribute of HTTP request operation","""The """"key"""" attribute is necessary for metadata resolution since we are returning an Object, however it should A) be named something like """"outputType"""" and B) be optional using the ANY type as default. Once MULE-10377 is done, this can be addressed."""
"MULE-10529","Enhancement Request","sdk",5,"Changes in metadata serialization for improved agent error handling","""Change metadata serialization API"""
"MULE-10528","Bug","Core: Exception Handling",3,"Do not allow UNKNOWN to be handle as error type in the config","""We should only use the UNKNOWN error type internally and not let the user use it in the config.    This is because we will probably have many UNKNOWN error types that we would be moving to specific error types in minor versions. If we let the user catch UNKNOWN, then if we change those we would be breaking backwards compatibility. In such case the users can use the ANY error type."""
"MULE-10538","Enhancement Request","Modules: Email",3,"Email: Remove the EmailIdConsumerExecutor.","""The EmailIdConsumerExecutor class is the responsible for looking in the incoming message if there are one or more emailIds to accept and perform some operation, as part as mule4 we want to avoid falling back to the incoming messages and be explicit when parameters are needed   """
"MULE-10537","Task","Modules: CXF",0,"Avoid wrapping exceptions to ME in CXF ","""Right now, the CxfOutboundMessageProcessor is wrapping the exceptions that occur when calling the client processor in a MessagingException. This allows the interceptor that catches that exception to use the latest event which went through the client processor. We need to figure out a way to not use a MessagingException and still get the same behaviour."""
"MULE-10536","Bug","Extensions API",5,"Content parameter should not support child element declaration","""When consuming an API that has dynamic entities, like salesforce, the most common way to do it is to use a map to represent the entity:      In this scenario, the child element name should not be pluralized, and when configuring it as a child, the name of the element should be *dynamic-object*, and not *dynamic-objects*"""
"MULE-10535","Enhancement Request","Extensions API",5,"Connections should be validated at start time","""When the application starts, all connection providers should get a connection, validate it and release it. If any of those fail, the application should not start.    User should be able to provide a <reconnect blocking=false /> to prevent the application from failing"""
"MULE-10533","Bug","Extensions API",2,"When using a list of maps, the map parameter items xml tag is not recognized by the parser","""If an extension uses List<Map<String,Object>> parameters, the parser fails to load the inline definition of the parameter with the following error:  {code}  org.mule.runtime.core.api.lifecycle.InitialisationException:   Configuration problem: The element 'map-parameter' does not have an associated Bean Definition Parser.  Is the module or extension associated with http://www.mulesoft.org/schema/mule/map-list present on the classpath?  Offending resource: URL [file:/Users/pablocabrera/dev/mule-tooling-mock-connector/extension-with-map-list/target/test-classes/mule-config.xml]  Caused by: org.springframework.beans.factory.parsing.BeanDefinitionParsingException:   Configuration problem: The element 'map-parameter' does not have an associated Bean Definition Parser.  Is the module or extension associated with http://www.mulesoft.org/schema/mule/map-list present on the classpath?  {code}    This is the operations definition  {code:java}  public class BasicOperations {   public String operationWithMap(@UseConfig BasicExtensionConfig config, List<Map<String,Object>> mapParameters) {     return null;   }  }  {code}    The mule app:  {code:xml}  <?xml version=""""1.0"""" encoding=""""UTF-8""""?>  <mule xmlns:doc=""""http://www.mulesoft.org/schema/mule/documentation"""" xmlns:spring=""""http://www.springframework.org/schema/beans"""" xmlns:xsi=""""http://www.w3.org/2001/XMLSchema-instance""""        xmlns:map-list=""""http://www.mulesoft.org/schema/mule/map-list""""        xmlns=""""http://www.mulesoft.org/schema/mule/core""""        xsi:schemaLocation=""""http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/map-list http://www.mulesoft.org/schema/mule/map-list/current/mule-map-list.xsd  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd"""">      <map-list:config name=""""MapStringPojo_Config"""" doc:name=""""MapStringPojo Config"""">          <map-list:connection>              <map-list:map-parameters>                  <map-list:map-parameter value=""""#[['a':'1','b':'2']]""""/>              </map-list:map-parameters>          </map-list:connection>      </map-list:config>      <flow name=""""dummy-flow"""">          <map-list:operation-with-map config-ref=""""MapStringPojo_Config"""" doc:name=""""MapStringPojo"""">              <map-list:map-parameters>                  <map-list:map-parameter value=""""#[['a':'1','b':'2']]""""/>                  <map-list:map-parameter value=""""#[['c':'3','d':'4']]""""/>              </map-list:map-parameters>          </map-list:operation-with-map>      </flow>  </mule>  {code}    The XSD has all the definitions maching this signature.    Expected: The app should be able to load the XML"""
"MULE-10532","Task","Build: Integration Tests",2,"ArtifactClassLoaderRunner - Add support for sharing libraries/modules between plugins","""MULE-9867 require to be supported from ArtifactClassLoaderRunner"""
"MULE-10531","Task","Modules: HTTP",1,"Migrate HTTP test that needs to access plugin classes from IT test to Functional Test Case in HTTP Extension","""MULE-9702 added test for HTTP extension, as part of isolation runner modifications classes cannot be exported for plugins except if the rootArtifact is the plugin that those classes belong to.  Currently only two tests would need to be moved to HTTP extension test folder:  org.mule.test.module.http.functional.requester.HttpRequestFunctionalTestCase  org.mule.test.module.http.functional.requester.HttpRequestProxyConfigTestCase  """
"MULE-10554","Task","Core: Deployment",8,"Separate artifact construction from artifact deployment","""In order to reuse classloader construction on the isolated test runner, we can't depend on deployment module form the runner module, as that creates a dependency cycle.   We must extract artifact classloaders contruction (and related concepts) to a different module. This new module must be related to artifacts and classloaders construction and the deployment module must manage only the deployment part of those artifacts  """
"MULE-10553","Task","Core: Concurrency / Threading",2,"Cleanup asynchronousProcessingStrategy vs threadingProfileType vs asynchronousThreadingProfileType overlap in schema","""Clenup the schema definition"""
"MULE-10548","Task","Core: Concurrency / Threading",8,"Cleanup WorkManager and WorkListener","""Remove unneeded and unused code. Cleanup the MuleContext."""
"MULE-10547","Task","Core: Concurrency / Threading",2,"Expose the type of processing the current thread is performing","""This is needed by the ProcessingStrategies to make scheduling decisions"""
"MULE-10545","Task","Core: Concurrency / Threading",8,"Change http selectors/workers to use a connector pool from the service","""This depends on the final definition of http module vs extension vs service."""
"MULE-10543","Task","Core: Concurrency / Threading",8,"Implement the SchedulerService","""Define the threading profiles for the container pools.  Hook up the ThreadingService with the service infrastructure."""
"MULE-10542","Task","Core: (other)",2,"Fix ToolingService class API","""The ToolingService class expose two methods that are not related at all.    While we won't to keep the ToolingService as an agregator of the funcionality that can be used for tooling, we should have a clear API.     Probably move the createApplication method to another class."""
"MULE-10575","Task","sdk",0,"Create serializer for the entity metadata ","""Create serializer in extension-api to be used by the agent."""
"MULE-10574","Enhancement Request","Extensions API",3,"Add model validator for parameters that have the same name as then entries of a map","""*Add model validator for parameters that have the same name as then entries of a map*  Exist a border case where a parameter is called exactly as the entry of a map, for example:  {code}  public void processDoor(Door door, @Optional Map<String, Door> doors) {}{code}  The SDK when generates the XSD representation of the {{doors}} parameter will generate an element called {{door}} the same name of the parameter {{Door door}}:  {code:xml}<flow name=""""pojoIsUsedInMapAndAlone"""">         <subtypes:process-door>             <subtypes:door>                 <subtypes:house-door isLocked=""""false""""/>             </subtypes:door>             <subtypes:doors>                 <subtypes:doorkey=""""leftDoor"""">                     <subtypes:car-door handle=""""left""""/>                 </subtypes:door>                 <subtypes:doorkey=""""rightDoor"""">                     <subtypes:car-door handle=""""right""""/>                 </subtypes:door>             </subtypes:doors>         </subtypes:process-door>     </flow>{code}  This will generate a clashing between the resolvers and finally having troubles in runtime.  Other cases to validate: * Same name of top level elements and operations  Add a validation to prevent this case."""
"MULE-10572","Task","Build: Integration Tests",1,"ArtifactClassLoaderRunner - Compatibility doesn’t install/deploy mule-plugin classifier jar","""It is missed the maven-jar-plugin declaration to add the jar classified."""
"MULE-10571","Task","Build: Integration Tests",2,"ArtifactClassLoaderRunner - TestContainerClassLoaderFactory is not using the ModuleDiscoverer with the list of only URLs for Container","""This ends up in a duplicated module error when container loads Mule Modules."""
"MULE-10570","Task","Core: (other)",8,"Create tooling client to communicate to the mule runtime services","""Create tooling client to communicate to the mule runtime services"""
"MULE-10569","Enhancement Request","Extensions API",13,"Support non-blocking operations in Ext-API","""Support non-blocking API in Ext-API operations"""
"MULE-10561","Task","Core: (other)",5,"Expose rest service to do connection testing over an application","""Expose rest service to do connection testing over an application / domain"""
"MULE-10560","Bug","Core: Classloading|Core: Logging",8,"The log4j2.xml confs in the apps are ignored in Mule 4.","""For example in the case of HTTP you can add this line:        You spect to see the HTTP Extensions DEBUG logs and also the Grizzly logs of the requests. But right now this is not working. In the case of FTP the same is happening."""
"MULE-10558","Bug","Extensions|sdk",5,"Definition Parsers doesn't load an object if the parameter name is the same of their base type","""*Definition Parsers doesn't load an object if the parameter name is the same of their base type*    *Heisenberg case:*    We have the following SubtypeMapping:  {code}@SubTypeMapping(baseType = Weapon.class, subTypes = {Ricin.class}){code}    And then the following operation:  {code}  public Map<String, Weapon> processWeapon(Weapon weapon) {      ...    }{code}    And then in a Mule app:    {code:xml}    <flow name=""""processWeaponAsChildElement"""">          <heisenberg:process-weapon >              <heisenberg:weapon>                  <heisenberg:ricin microgramsPerKilo=""""32432"""">                      <heisenberg:destination victim=""""Lidia"""" address=""""Stevia coffe shop""""/>                  </heisenberg:ricin>              </heisenberg:weapon>          </heisenberg:process-weapon>      </flow>{code}    When the definition parser try to load the object, treats {{</heisenberg:weapon>}} as the abstract base type of the subtype mapping instead of the wrapper of the concrete type.    This explodes with the following stact trace {code}org.mule.runtime.core.api.lifecycle.InitialisationException: Error creating bean with name 'processWeaponAsChildElement': Cannot create inner bean '(inner bean)#31eef343' of type [org.mule.runtime.module.extension.internal.config.dsl.operation.OperationMessageProcessorObjectFactory$$EnhancerByCGLIB$$99e38baf_42] while setting bean property 'messageProcessors' with key [1]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#31eef343': Cannot create inner bean '(inner bean)#56a73b6b' of type [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22] while setting bean property 'parameters' with key [<<weapon>>]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#56a73b6b': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22]: Constructor threw exception; nested exception is org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.     at org.mule.runtime.core.registry.AbstractRegistry.initialise(AbstractRegistry.java:93)   at org.mule.runtime.core.registry.AbstractRegistryBroker$1.onTransition(AbstractRegistryBroker.java:49)   at org.mule.runtime.core.registry.AbstractRegistryBroker$1.onTransition(AbstractRegistryBroker.java:45)   at org.mule.runtime.core.lifecycle.RegistryLifecycleManager.invokePhase(RegistryLifecycleManager.java:128)   at org.mule.runtime.core.lifecycle.RegistryBrokerLifecycleManager.fireInitialisePhase(RegistryBrokerLifecycleManager.java:54)   at org.mule.runtime.core.registry.AbstractRegistryBroker.initialise(AbstractRegistryBroker.java:45)   at org.mule.runtime.core.registry.MuleRegistryHelper.fireLifecycle(MuleRegistryHelper.java:123)   at org.mule.runtime.core.lifecycle.MuleContextLifecycleManager$MuleContextLifecycleCallback.onTransition(MuleContextLifecycleManager.java:77)   at org.mule.runtime.core.lifecycle.MuleContextLifecycleManager$MuleContextLifecycleCallback.onTransition(MuleContextLifecycleManager.java:74)   at org.mule.runtime.core.lifecycle.MuleContextLifecycleManager.invokePhase(MuleContextLifecycleManager.java:62)   at org.mule.runtime.core.lifecycle.MuleContextLifecycleManager.fireLifecycle(MuleContextLifecycleManager.java:56)   at org.mule.runtime.core.DefaultMuleContext.initialise(DefaultMuleContext.java:299)   at org.mule.runtime.core.context.DefaultMuleContextFactory.doCreateMuleContext(DefaultMuleContextFactory.java:194)   at org.mule.runtime.core.context.DefaultMuleContextFactory.createMuleContext(DefaultMuleContextFactory.java:77)   at org.mule.tck.junit4.AbstractMuleContextTestCase.createMuleContext(AbstractMuleContextTestCase.java:203)   at org.mule.tck.junit4.AbstractMuleContextTestCase.setUpMuleContext(AbstractMuleContextTestCase.java:132)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:497)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)   at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)   at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)   at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)   at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)  Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processWeaponAsChildElement': Cannot create inner bean '(inner bean)#31eef343' of type [org.mule.runtime.module.extension.internal.config.dsl.operation.OperationMessageProcessorObjectFactory$$EnhancerByCGLIB$$99e38baf_42] while setting bean property 'messageProcessors' with key [1]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#31eef343': Cannot create inner bean '(inner bean)#56a73b6b' of type [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22] while setting bean property 'parameters' with key [<<weapon>>]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#56a73b6b': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22]: Constructor threw exception; nested exception is org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:313)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:129)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:382)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:157)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1475)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1220)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)   at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)   at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)   at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)   at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)   at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:728)   at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:762)   at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)   at org.mule.runtime.config.spring.SpringRegistry.doInitialise(SpringRegistry.java:112)   at org.mule.runtime.core.registry.AbstractRegistry.initialise(AbstractRegistry.java:89)   ... 27 more  Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#31eef343': Cannot create inner bean '(inner bean)#56a73b6b' of type [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22] while setting bean property 'parameters' with key [<<weapon>>]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#56a73b6b': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22]: Constructor threw exception; nested exception is org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:313)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:129)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedMap(BeanDefinitionValueResolver.java:407)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:165)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1475)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1220)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299)   ... 43 more  Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#56a73b6b': Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22]: Constructor threw exception; nested exception is org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:275)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1137)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1040)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)   at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)   at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:299)   ... 51 more  Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22]: Constructor threw exception; nested exception is org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:163)   at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:122)   at org.mule.runtime.config.spring.util.LaxInstantiationStrategyWrapper.lambda$instantiate$84(LaxInstantiationStrategyWrapper.java:66)   at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:143)   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:995)   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:961)   at org.mule.runtime.config.spring.util.LaxInstantiationStrategyWrapper.instantiate(LaxInstantiationStrategyWrapper.java:64)   at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:267)   ... 56 more  Caused by: org.mule.runtime.core.api.MuleRuntimeException: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:946)   at org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory.<init>(TopLevelParameterObjectFactory.java:46)   at org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory$$EnhancerByCGLIB$$add4e145_22.<init>(<generated>)   at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)   at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)   at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)   at java.lang.reflect.Constructor.newInstance(Constructor.java:422)   at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)   ... 63 more  Caused by: java.lang.IllegalArgumentException: Class interface org.mule.test.heisenberg.extension.model.Weapon cannot be instantiated.   at org.mule.runtime.module.extension.internal.util.IntrospectionUtils.checkInstantiable(IntrospectionUtils.java:354)   at org.mule.runtime.module.extension.internal.util.IntrospectionUtils.checkInstantiable(IntrospectionUtils.java:349)   at org.mule.runtime.module.extension.internal.runtime.DefaultObjectBuilder.<init>(DefaultObjectBuilder.java:30)   at org.mule.runtime.module.extension.internal.config.dsl.parameter.TopLevelParameterObjectFactory.lambda$new$51(TopLevelParameterObjectFactory.java:48)   at org.mule.runtime.core.util.ClassUtils.lambda$withContextClassLoader$18(ClassUtils.java:942)   at org.mule.runtime.core.util.ExceptionUtils.tryExpecting(ExceptionUtils.java:143)   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:995)   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:961)   at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:941)   ... 70 more {code}"""
"MULE-10557","Enhancement Request","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",8,"Change OAuth callback API to support external url and avoid confusion","""We have the redirectUrl attribute in oauth2:authorization-code-grant-type for the local callback. It's somehow misleading because it's a local callback address to open a listener.    It would be better to rename it in addition to adding the external url, and possibly supporting a listener configuration."""
"MULE-10555","Task","Build: Integration Tests",1,"ArtifactClassLoaderRunner - Create on the fly the extension manifest for testing","""JUnits on test-runner have a hard-coded extension-manifest.xml for testing, find out if possible to generate this on the fly."""
"MULE-10585","Task","Core: Concurrency / Threading",8,"Make the container ThreadPools configurable","""Based on current definition of ThreadingProfile.    Allow functions of the processors and memory for this (available memory makes sense for the max size of the io pool)."""
"MULE-10583","Task","sdk",5,"Review MetadataService serialization API","""MetadataService interface is exposing more behaviour than it should be.        We need to handle the serialization for the different type of MetadataResult internally and not expose it in the API. Having only one method for obtaining the serialized string from the MetadataResult would be  away to go. """
"MULE-10582","Bug","Core: Components",8,"NPE when an operation throws exception inside a foreach","""When an extension operation is used inside a foreach and this one throws an exception the foreach component throws an NPE.     Stack Trace is:  """
"MULE-10580","Enhancement Request","sdk",8,"Operation reconnection should be decoupled from config reconnection","""Right now, when an operation fails due to connectivity, it attempts to reconnect using the same retry policy from the config.    This is bad mainly because the retry policy for an operation should not allow blocking=""""false"""".    Additionally, it is highly likely that the amount of retries, frequency and exhaustion policy that you want for reconnecting at deploy time are not the same ones as when you're executing an operation, since the operation will block while reconnecting.    We should define a way to configure these two reconnection moments separately."""
"MULE-10579","Enhancement Request","sdk",8,"Centralize and APIfy reconnection","""Right now, each time a component throws a connection exception it attempts to reconnect. However, if multiple of those are thrown concurrently by different components, many reconnections will be attempted concurrently.    Connections for a given config should happen in a thread safe manner, and many components shouldn't attempt to reconnect at the same time.    Also, if a source looses connectivity, it should be stopped until the connection is regained. When it does, the source should be notified of it so that it can resume. This should actually be the case with any component, but sources are particularly tricky so watch out."""
"MULE-10578","Bug","Core: Concurrency / Threading",0,"Exception thrown form a Work#run() is ignored by the WorkManager","""When the #run method of a Work throws an exception, it is ignored by the WorkContext. It must be logged at the very least."""
"MULE-10600","Task","Modules: CXF",1,"Upgrade CXF to latest 2.7.x patch release","""Upgrade to a version that includes the fix for https://issues.apache.org/jira/browse/CXF-7058"""
"MULE-10596","Task","sdk",0,"Release extensions parent POM 4.0-M3","""Release Extensions Parent POM 4.0-M3"""
"MULE-10594","Bug","sdk",5,"Generic types are not being exported in the extension manifest. ","""When having an operation that contains a generic type with generic types as output of an operation, the package of those generics is not being added to the  exported types in the extension.manifest    for example in the email:list operation.        In this case the POP3Attributes package is not being exported."""
"MULE-10593","Bug","Core: Deployment",0,"App with missing config fails to deploy but has status ""created""","""Even though deployment fails, the application status is """"created"""" so the Anypoint platform proxy interface reports it as """"starting"""" (which of course never finishes)."""
"MULE-10592","Task","Build: Integration Tests",1,"ArtifactClassLoaderRunner - Improve error message for dependencies not declared as expeted","""When checking for dependencies declared by the rootArtifact an exception could be thrown if they are not with the correct scope.  At the same time IDEA sometimes breaks the classpath and points to another target/classes (even compile the classes there) so it would be great to add to these kind of errors the rootArtifact coordinates."""
"MULE-10591","Enhancement Request","Modules: Email",1,"Email: delete the ""delete"" IMAP protocol operation.","""In the primary structure of the new email connector the delete operation had a lot of sense, but when the operation moved to be only for the IMAP protocol, since POP3 does not support email fetching by id, this is an overkill because IMAP has the capability to mark the emails as deleted and then physically eliminate them from the folder with the expunge operation."""
"MULE-10606","Enhancement Request","sdk",3,"Extension's API POJOs should have a getter method for each @Parameter field","""*Extension's API POJOs should have a getter for each @Parameter field*    * To be fully with compliant with DataWeave all the POJOs that an Extension expose _(operation parameter, operation return type, etc)_ should have a getter method for each {{@Parameter}} field.  * The fundaments for this new requirement are:  ** DW detects public attributes thought getter methods. This enables auto transformation.   If the POJO attributes are found by looking all the fields there is no way to detect when a field is an {{@Parameter}} (an be exposed) or not.  ** Does not exist any case where a *public* POJO have an attribute exposed by a {{@Parameter}} but doesn't have a *getter* to be able to access to the field value.    *Action* : Validate that the extension API POJOs have a getter for every {{@Parameter}} field.   _(Configurations, ConnProviders, Sources don't enter in this validation)_"""
"MULE-10602","Bug","sdk",8,"Parameter Model should include groups and exclusive optionals information","""*Model property for ExclusiveOptionals parameter groups should be externalizable*    * Nowadays the information about {{@ExclusiveOptional}} parameter groups are stored in the *no externalizable* {{ParameterGroupModelProperty}}. This makes imposible for UI generators (Mozart/Studio) know when to generate the proper support.  * Make the actual {{ParameterGroupModelProperty}} externalizable is not a good option due that it will expose a lot of java relationship between java objects that doesn't make sense.  * *Possible Solutions*:   ** Create a new externalizable model property to expose the information about {{@ExclusiveOptional}} parameter groups.  ** Create a custom serializer for the {{ParameterGroupModelProperty}} to just expose the needed information."""
"MULE-10612","Task","Modules: XML, XSLT, XPath, SXC",0,"Upgrade JAXB to 2.1.17","""Upgrade JAXB to 2.1.17"""
"MULE-10609","Enhancement Request","Extensions API",8,"ParameterResolver should be usable on a config or connection provider","""Right now the ParameterResolver is usable from an operation because we create a new instance per execution and we wrap the event.    There's also the need to be able to use it from configurations and connection providers. This means that the event needs to be communicated somehow else.    REQUIREMENTS:    * Enable the aforementioned  * Allow for those config/providers to use this with XML supported complex types (the DSL shouldn't be different if a ParameterResolver or a straight up value is used)  * Create a minimal facade to communicate the event. Something like:        Where Context is an initially empty interface which we can downcast to an internal implementation which holds the event. This context is to be obtained as an operation parameter:        DESIGN TASKS:    * Come out with a good name for the Context thing. I lean towards OperationContext or ExecutionContext, but both names are taken. Come out with a third viable option or rename OperationContext to something else.  * For the currently supported cases of operations which receive a ParameterResolver we need to either split the ParameterResolver interface in two (one which resolve() method is argless and one which receives the context), or make the context always required and force the operations to also receive the Context.  """
"MULE-10608","Task","Extensions API",0,"Remove support for literal expressions","""Remove such support since it's not needed anymore"""
"MULE-10607","Enhancement Request","Core: (other)",2,"HttpListener: add method to find the status of the listener","""So far there isn't any way to find out the status of the listener and the its initial status.  The Runtime Manager team is working on the management of flows and endpoints. We need to have the status of Http Listener to be able to manage it (start/stop)    Note that with the Http endpoint is was possible to know its status.    This should be included in mule 3.x and 4.x    """
"MULE-10622","Bug","sdk",1,"Extension model JSON inside a package is not a valid JSON","""When building [this sample extension|https://github.com/fbarrios/hello-world-connector-4.x/commit/6a5d018cf9d861db48d86b635ac047394f0b21d8], the generated JSON is not well formed, as it has duplicated the version key:    """
"MULE-10620","Bug","Modules: WS Consumer",0,"Envelope namespace used in body produces broken xml when getting the body","""When the body is extracted, it has the soapenv prefix but it lacks the namespace declaration for that prefix."""
"MULE-10619","Bug","Core: Deployment",2,"FilteringArtifactClassLoader is not being used by RegionClassLoader when loading classes and resources instead it uses the ArtifactClassLoader","""As part of the introduction of the RegionClassLoader when an ArtifactClassLoader is added to the region with the passed filter a new FilteringArtifactClassLoader is created but not later used to resolve classes and resources."""
"MULE-10615","Task","Modules: HTTP",1,"Define requester behaviour when outputType doesn't match actual type","""Right now, the outputType parameter is ignored by the request operation and t's only there for design time metadata definition. However, since the request operation will generate a certain output type we need to decide how to act when it does not match the user define one.   For example, if the user indicated that the request would produce a MultiPartPayload type but then a form url encoded response is received and a Map type returned, should we log a warning or should we fail entirely?"""
"MULE-10625","Bug","sdk",1,"Configurations are not registered in the XSD with their hyphenated name","""*Configurations are not registered in the XSD with their hyphenated name*    For example we have a configuration like:        In the XSD the configuration element will be registered as {{ConfigOne}}, but the ExtensionDefinitionParser will try to load it as {{config-one}}.  As consequence everything fails."""
"MULE-10641","Enhancement Request","sdk",8,"Allow declaration of MetadataResolver at parameter level","""Currently we support only to resolve Dynamic MetadataType for the Content parameter.  In order to have dynamic type inference for other parameters, regardless whether or not the parameter is the Content of the operation, we'll have to support the declaration of MetadataResolvers at parameter level.    """
"MULE-10640","Task","Build: Distributions",1,"Remove lib/shared folder from distributions","""Old mule 3.x used lib/shared folder to share libraries across different applications. That concept was replaced with the concept of domains and this folder deprecated. Now is time to remote it from the distro."""
"MULE-10639","Task","Build: Distributions",1,"Remove references to per-app distribution folder ","""Per-app folder was used on mule-3.x branches to place modules that had dependencies on third party libraries that were not part of mule distribution (like WMQ client).  This folder is not used anymore on Mule 4 as this kind of functionality will be provided by artifact plugins which will have access to app's shared libraries"""
"MULE-10635","Task","sdk",5,"Improve extension model serialization tests","""Improve extension model serialization tests in order to cover a more comprehensive and complex use cases."""
"MULE-10634","Enhancement Request","Extensions API",13,"Most externalizable model properties should be actual part of the ExtensionModel","""The extension model needs to be more prescriptive and be more front center with the stuff it has. ModelProperties should be all non externalizable and used for runtime implementation things only. All data model properties should be incorporated into the mainstream model.  The only currently identified exception are the DataSense ones"""
"MULE-10633","Enhancement Request","Extensions",13,"Support SDK extensions on domains","""Currently, it is not supported to define a config of an SDK based extensions on a domain. It should be"""
"MULE-10629","Bug","Core: Exception Handling",5,"Error handling locator API should work with Throwable","""Right now, all of our error handling locating logic works considering Exception. The problem there is that a) we are leaving out a part of the Java error hierarchy and b) we are casting to Exception in several places which could cause trouble.   We should use the more general Throwable, avoid the casts and add a proper type for things in Java under Error (IMO we should have a separate hierarchy from ANY so that those are not handled, though we need to be careful since some modules might need to handle things under Error)."""
"MULE-10628","Task","Modules: HTTP",5,"Review HTTP extension exported packages","""Currently, the http extension is not exporting some classes that are needed by its users, and some are even in an 'internal' package."""
"MULE-10646","Task","Modules: HTTP",8,"Refactor GrizzlyHttpClient to use BodyDeferringAsyncHandler","""As it turns out, the standard implementation of AsyncHandler which we are using saves the entire response to memory (see com.ning.http.client.AsyncCompletionHandler#onBodyPartReceived and its uses in GrizzlyHttpClient). This is a problem as there is no actual streaming and can cause an OOM when the response is large. It seems that in order to allow an InputStream to be used as payload and the data provided as the body parts arrive to be streamed down to other components reading it, we need to use a com.ning.http.client.BodyDeferringAsyncHandler providing it with a PipedOutputStream. Then the payload can be a PipedInputStream using that one. Special care should be taken since those two should write/read in different threads and the solution should be applied to both the blocking and non-blocking send.  Notice that when dealing with multipart or form url encoded data, reading the whole message is necessary (an InputStream should not be propagated). """
"MULE-10643","Task","Core: Deployment",0,"ResourceBundle class loader leak when undeploying application","""https://docs.oracle.com/javase/6/docs/api/java/util/ResourceBundle.html#clearCache(java.lang.ClassLoader)   should be called as part of DefaultResourceReleaser process for releasing resources for an Application/Domain ClassLoader.    This will prevent ClassLoader leaks when undeploying applications/domains.    Also ResourceBundle leaves a reference to the class loader if a non existent bundle was obtained just right before the dispose is made this reference should be nulled too."""
"MULE-10642","Bug","Core: Deployment",1,"Application name should appear in application undeployment message","""When I undeploy an application the message printed in the log doesn't mention the application name but an hexadecimal number, like this:        To reproduce undeploy any application by deleting its anchor file."""
"MULE-10652","Task","Build: Integration Tests",1,"ArtifactClassLoaderRunner - Add support for running isolated functional test cases on Mule Modules","""Currently we support PLUGIN and APPLICATION while classifying the rootArtifact, it should also be supported MODULE.  This means that the target/classes for the rootArtifact should not go to a plugin classification neither to application classification, it should go to container classification urls."""
"MULE-10649","Bug","Extensions API",3,"StackOverflow error while compiling extension with recursive pojos","""Compilation of an extension fails with StackOverflow when using as parameter of an operation a structure like the following:      Same happens if we use maps:  """
"MULE-10664","Bug","Modules: Email",2,"Fix parameters ordering in new Email connector","""Fix ordering:    * Connection configuration information needs to be always on top  * User/password always grouped together.  * Host/port always grouped together.  * Other stuff you can identify and improve"""
"MULE-10663","Enhancement Request","Modules: HTTP",3,"Improve field ordering in new Http connector",""" Fix ordering:    * Connection configuration information needs to be always on top.   * User/password always grouped together.  * Host/port always grouped together.   * Other stuff you can see"""
"MULE-10662","Task","Modules: HTTP",3,"Remove host/port from HTTP overrides","""will be replaced with expressions in <config> element"""
"MULE-10661","Task","Build: Integration Tests",1,"ArtifactClassLoaderRunner - URLClassLoaders are created for classification process, these CLs have to be closed","""Close URLClassLoaders used for searching resources and other stuff while creating the ArtifactClassLoader for tests."""
"MULE-10659","Task","Core: Transports",8,"Transports - Make tests run isolated","""MULE-10301 has added support for testing transports that will go to compatibility plugin. As part of MULE-10628 these transports artifacts were migrated to use isolated test runner but the plugin.properties had to be copied to these artifacts.  Clean up these plugin.properties to only export what is needed."""
"MULE-10655","Enhancement Request","Core: Flow",8,"Cleanup MessageProcessorChains to ensure consistency of injection and lifecycle","""Cleanup MessageProcessorChains to ensure consistency of injection and lifecycle"""
"MULE-10654","Bug","Extensions API",5,"Model Validator should not complain if the singularized name clashes with another parameter name, when the generic of the list is of the same as the parameter type","""It is a very common case that you can have operations for a single entity or multiple entities in the same connector.      Right now we are failing at compile time with the error:      Expected: The compilation should pass    Also, we should not mention internal implementations like ImmutableRuntimeOperationModel when reporting errors to the users"""
"MULE-10686","Bug","Modules: Jersey",0,"Disable entity expansion when processing XML to avoid DoS","""In the jersey module it's possible to trigger a DoS by submitting an XML Billion Laughs attack."""
"MULE-10685","Bug","Test: Testing Framework",1,"TestRunner fetches spring annotated classes when looking for Extensions","""ExtensionPluginMetadataGenerator calls  on method scanForExtensionAnnotatedClasses().    The true parameter means that it will look for spring specific annotations that not only are not needed but may cause the calling method to return unwanted classes, causing failures."""
"MULE-10683","Enhancement Request","e: DataSense",13,"Make DataSense tooling service consistent with the test connectivity one","""The current Metadata Service has consistency and conceptual problems. Problems are that:    * It requires a deployed app  * It requires providing the coordinates to an actual message processor  * It requires providing the metadata key, which is not only already present on the message processor, there's also not guaranteeing that the key supplied in the XML matches that on the API invocation.    We should move to a model similar to that of the connectivity testing service which:    * Can obtain metadata for a particular MP on a deployed app (using the key already configured in that MP)  * Allows pushing an entire config, deduces a minimal app, deploys it as a temporal artifact, extracts the data, disposes the temporal artifact. (This should be done reusing as much logic as possible from the connectivity testing service)"""
"MULE-10681","Enhancement Request","Extensions API",8,"Replace NullType with VoidType in places which makes sense","""Right now we use NullType to represent Void, although NullType is intended to be used as an actual null.    Find those places and replace them with a VoidType"""
"MULE-10679","Enhancement Request","Extensions API",13,"Replace Describer with extension loader concept","""Replace the concept of extension describer with that of ExtensionModelLoader."""
"MULE-10678","Enhancement Request","Modules: Email",2,"Email: Support deleteAfterRetrieve in the imap list operation","""Add a boolean parameter to the list operation of the imap protocol, so when all the emails are retrieved are also deleted."""
"MULE-10677","Bug","Core: Classloading",3,"schedulers module shouldn't export c3p0","""The schedulers module is currently exporting c3p0. This is not only conceptually wrong, it also generates leaks when the DB connector (which internally also uses c3p0) tries to dispose pooled datasources."""
"MULE-10689","Enhancement Request","Core: Classloading",3,"Allow plugins/extensions to include spring components","""Currenty, all spring classes are loaded from the container classloader.    Certain extensions or plugins may want to include their own spring components (for instance, spring-jms in the jms extension or the compatibility module plugin).    Currently, all org.springframework.* classes are loaded from the container classloader, which prevents the intended usage."""
"MULE-10696","Enhancement Request","Modules: HTTP",2,"Improve HttpRequestAttributes builder to accept nothing/old attributes","""The HttpRequestAttributes should have a builder to accept old attributes or nothing. Nowadays the constructor receives all the attributes and it is not very helpful:  """
"MULE-10693","Enhancement Request","Build: Maven",5,"Extensions modules take a long time to build","""Take for instance the http extension. When building that module on my local machine it takes around 3 minutes. After seeing the output log:        2 things can be observed  * The phases between lines 100964 and 179075 run 2 times, doubling the bulk of the work being done  * The phase process-classes which runs the ExtensionResourcesGeneratorAnnotationProcessor takes around xxx seconds. After profiling that code, i saw that in this case it is scanning the classpath looking for extensions 3 times (see ClasspathBasedDslContext#findExtensionsInClasspath()).    Bases on that observations, the build time for that module could be reduce by 1/6, going from 3 mins to around 30 secs."""
"MULE-10692","Task","Core: Classloading",1,"Improve exception messages when classes are not found in RegionClassLoader","""RegionClassLoader doesn't provide enough information for troubleshooting a   ClassNotFound exception."""
"MULE-10690","Bug","sdk",0,"Some TypeAnnotations doesn't override equals() and hashCode() methods","""*TypeAnnotations doesn't override equals() and hashCode() methods*    The {{TypeAnnotations}}:   * FlattenedTypeAnnotation  * TextTypeAnnotation    Doesn't override the *equals()* and *hashCode()* methods, this produce that equals {{MetadataTypes}} are considered different."""
"MULE-10713","Task","Build: Integration Tests",0,"Add a MuleArtifactFunctionalTestCase exclusions for EE artifacts","""MuleArtifactFunctionalTestCase included in CE provides a list of exclusions that must be applied when defining the container classloader.  As EE uses a different set of group Ids on the artifacts those artifacts must be added to the exclusion list  """
"MULE-10709","Enhancement Request","Modules: XML, XSLT, XPath, SXC",0,"Use custom factory builder for XML parsers to avoid vulnerabilities","""Use custom factory builder for XML parsers to avoid vulnerabilities"""
"MULE-10707","Enhancement Request","sdk",8,"Improve MetadataResults propagation in Metadata Service ","""Currently, the MetadataManager exposes an structure where each MetadataDescriptor is contained inside a MetadataResult.    Navigating through this elements is cumbersome and not clear for the user, since in the serialization we provide a flattened view.   We should simplify this error communication mechanism"""
"MULE-10712","Task","Core: Deployment",0,"Remove loader.override references","""Loader override is not used anymore. Remove references to it"""
"MULE-10711","Task","Modules: HTTP",2,"Include body in request/response builder with payload as default","""We need to include the body in the HTTP builders so that it can be parameterised without first modifying the Message."""
"MULE-10723","Bug","Core: Classloading",1,"com.ning.http.client.ws packaged is not exported in HTTP module","""The HTTP module exports various packages from async-http-client but not com.ning.http.client.ws which causes classloading issues for plugins using it such as the Mule Agent."""
"MULE-10722","Bug","Modules: FTP",0,"Not Handling FTP Connection Errors in FTPMessageReceiver","""While retrieving information from the FTP server, if a null line is read (check SE-4039) it is thrown a FTPConnectionClosedException, which is not handled as a (mule) ConnectException in the AbstractSystemExceptionStrategy.   """
"MULE-10720","Bug","Modules: XML, XSLT, XPath, SXC",0,"xml-to-dom-transformer default returnType should be org.w3c.dom.Document instead of byte[]","""The class  has no constructor and hence its inherited field returnType is set by its parent class,  which is .  """
"MULE-10718","Enhancement Request","Modules: HTTP",3,"Enrich HttpClient exception to include request URI","""When the requester fails sending a request, the only message is that it failed, there's no reference to the actual request that failed. This is a debugging pain since the requester is very dynamic and the actual request can vary and change completely, making it hard to pinpoint exactly which one failed."""
"MULE-10733","Bug","Extensions API",5,"Model validator not complaining for missing output resolver when returning a List<Map<String,Obkect>","""When writing an extension with metadata, if the operation returns a Map<String,Object> and there is not OutputResolver, a model validator fails and shows an error, but if the return type is a List<Map<String,Object>> the validation doesn't fail    *Invalid code*      The example above fails with the error:  {code}  org.mule.runtime.extension.api.exception.IllegalModelDefinitionException: createEntity 'Metadata' specifies 'java.util.Map' as a return type. Operations and Sources with return type such as Object or Map must have defined a not null OutputTypeResolver    org.mule.runtime.core.api.MuleRuntimeException: org.mule.runtime.extension.api.exception.IllegalModelDefinitionException: createEntity 'Metadata' specifies 'java.util.Map' as a return type. Operations and Sources with return type such as Object or Map must have defined a not null OutputTypeResolver     at org.mule.runtime.core.util.ClassUtils.withContextClassLoader(ClassUtils.java:946)  {code}    After adding the @OutputResolver to the create entity, the compilation doesn't fail, but it should fail for the createBulk  *Invalid code that doesn't fail*  {code:java}  public class BasicOperations  {      @OutputResolver(TestInputAndOutputResolverWithKeyResolver.class)      public Map<String, Object> createEntity(@Connection MetadataConnection connection, @MetadataKeyId String type,                                              @Content @TypeResolver(TestInputAndOutputResolverWithKeyResolver.class) Map<String, Object> dynamicObject);       public List<Map<String, Object>> createBulk(@Connection MetadataConnection connection,  @MetadataKeyId String type,                               @Content @TypeResolver(TestInputAndOutputResolverWithKeyResolver.class) List<Map<String, Object>> dynamicObjects);  {code}"""
"MULE-10731","Bug","Build: Integration Tests",0,"ArtifactClassLoaderRunner - Does not work when using Allure","""Cannot run isolated tests when enabling Allure.  Also the following error messages are logged:  """
"MULE-10730","Enhancement Request","Core: Event/Message",1,"Event.Builder.variables does not clear previous values","""In the interface   org.mule.runtime.core.api.Event.Builder we are needing a method to clear properties and variables.     The use case is as follows:  I have an Event completely defined and I want a copy of it BUT with no flow variables.    Currently there is no way to clean only the variables of the event. """
"MULE-10729","Enhancement Request","Core: Exception Handling",1,"on-error-continue by default should not print the exception","""Usually when you want to go on with the execution you don't care about the error."""
"MULE-12248","Bug","Core: Classloading",2,"ArtifactClassLoaderRunner - Change plugin export resolver to look for plugin.json descriptor","""Migrate the runner to use new descriptor instead of plugin.properties"""
"MULE-10735","Enhancement Request","Core: Transports",8,"ArtifactClassLoaderRunner - Automatically generate plugin.properties for compatibility libs","""Currently, for the proper running of the compatibility tests in an isolated manner, each library that has integration tests has its own plugin.properties to be taken into account when building the classloaders. This causes the same information to be repeated among different libraries.    It would be better if those files could be automatically generated, maybe by aggregating the mule-module.properties of the compile dependencies. This would also be useful for automatically generating the mule-module.properties of the compatibility plugin."""
"MULE-10753","Bug","Extensions API",5,"SDK: Inconsistent behavior when injecting a tlsContext in a pojo","""Take *ClientCredentialsFullConfigTestCase* in branch *oauth-ext*.    The *nested* case works correctly, since the inline definition of the tlsContextFactory is properly injected into the pojo *ClientCredentialsGrantType*.    However, on the *global* case, the name is never resolved and the tlsContextFactory remains null."""
"MULE-10752","Bug","Modules: HTTP",8,"HTTP Extension: when the requester and the listener use different protocols it gives a timeout","""When the requester tls conf uses  TLSv1.2 and the listener TLS conf uses TLSv1.1 it throws timeout. If you invert the versions it works fine.    You can check it in the test HttpRestrictedCiphersAndProtocolsTestCase#failsWithProtocolMismatch on the Branch MULE-10752    After the fix is done, please remove the ignore from the test HttpTlsContextCustomProtocolsTestCase#testGlobalTlsContextCustomProtocolsRestrictive which is failing from the same issue."""
"MULE-10751","Task","Core: (other)",8,"Complete support for locating a component in the configuration by path and name","""Complete support for locating a component in the configuration by path and name."""
"MULE-10750","Task","Core: (other)",3,"Basic support for locating a component in the configuration by path and name","""Basic support for locating a component in the configuration by path and name"""
"MULE-10749","Task","Core: Expressions",8,"Define mechanism to allow reuse of streams if they get consumed by dataweave.","""Define mechanism to allow reuse of streams if they get consumed by dataweave."""
"MULE-10748","Task","Core: Expressions",5,"Define mechanism to provide configuration for readers in dataweave","""We need to define a mechanism to configure readers in dataweave, for instance, a CSV readers needs to be configured with the field separator, or an XML reader needs to resolve what to return for an empty node, like a null or empty string.    There are two possible options so far:   - Define this properties in the mapping   - Define this properties when defining the data type    """
"MULE-10746","Task","Modules: WS Consumer",1,"Remove WS consumer module","""Remove the module."""
"MULE-10773","Bug","Core: (other)|Modules: XML, XSLT, XPath, SXC",3,"Jaxb unmarshaller doesn't support namespaces anymore","""After the security fix for xml factories the parser used by Jaxb stopped supporting namespaces."""
"MULE-10771","Task","Core: Non-Blocking",2,"Use a final (non snapshot version) of reactor-core for BETA","""We are depending on an SNAPSHOT version for reactor-core, as soon as the 3.0.3 is released we should upgrade our dependency.    """
"MULE-10770","Bug","Core: DSL processing",1,"IndexOutOfBoundsException on ApplicationModel when having an empty flow config","""Having a config with a flow without an element:      An IndexOutOfBoundsException is thrown when parsing it.   """
"MULE-10765","Task","Core: Expressions",8,"Define global bindings","""We need to define bindings like app, server, regex, etc."""
"MULE-10761","Task","Modules: HTTP",3,"HTTP Service: Move specific dependencies to the service and remove them from the container","""Libraries such as AHC and grizzly that are specific for http shouldn't be in the container classloader, but rather on the service's."""
"MULE-10760","Task","Core: Services|Modules: HTTP",8,"HTTP Service: Create request and response builders","""We need to provide a way for users to create requests (for the client) and responses (for the listener). This will also include a way to generate HttpEntity objects, considering the multipart one as well."""
"MULE-10756","Enhancement Request","sdk",13,"Spike JMS Extension migration","""Spike JMS Extension migration:    - Find gaps in spec vs transport  - Iteration one of configs and connections"""
"MULE-10784","Enhancement Request","Modules: WS Consumer",5,"Add soap faults support in the new Web Service Consumer.","""Add Soap Faults support when the soap server produces an error."""
"MULE-10783","Enhancement Request","Modules: WS Consumer",13,"Make the Web Service Consumer use the Soap Service","""To ease the first stage of development of the new WSC we used a basic http library as underlying transport to send the SOAP Request, we need to use the Http Extension to ensure consistency and give more options to configure. """
"MULE-10782","Enhancement Request","Modules: WS Consumer",5,"Add output metadata to the new WebService Consumer","""We should add output metedata for the response body and headers from attributes of the consume operation."""
"MULE-10781","Enhancement Request","Modules: WS Consumer",8,"Ensure test parity between the old and new Web Service Consumer","""Check that all the cases that were tested in the old connector are tested in the new extension."""
"MULE-10780","Task","Modules: WS Consumer",8,"Prepare the new WSC for merge.","""Prepare the new Web Service Consumer so it can be merged to mule 4.  This consists on:  * Add javadocs  * Prettify code and design.  * Basic runtime working  * Input Metadata working """
"MULE-10779","Enhancement Request","Modules: WS Consumer",13,"Add Security Strategies to the new WSC","""Add different security strategies to the new Web Service Consumer,   UsernameToken, Timestamp and Encryption were supported by the old connector we should at least add those to the new one."""
"MULE-10778","Enhancement Request","Modules: WS Consumer",8,"Add attachment support to the new Web Service Consumer","""Add attachment support"""
"MULE-10790","Task","Build: Integration Tests",5,"Add Allure configuration for the Extensions Tests.","""Add Allure configuration for the Extensions Tests."""
"MULE-10786","Bug","Core: Domains shared resources|Core: Sessions",2,"SessionHandler picks wrong serializer when connector is on domain","""Bug reported on MULE-7990 was re-introduced during the work for MULE-9929.  When the muleContext was removed from the MuleMessage, we lost the ability to change the object serializer that has to be used to deserialize a serialized session.  Problem was not detected as the tests covering this scenario on mule 3.x was deleted from 4.x as part of the original clean up before transports returned back."""
"MULE-10795","Task","Modules: WS Consumer",5,"Remove the old Ws Consumer from mule","""Remove The WS Consumer based on the cxf Module  Replace the ws consumer invocations in integration tests with the new SDK based WSC  """
"MULE-10793","Enhancement Request","Extensions: Maven Plugin",2,"Add support for building mule-service modules","""Add support in mule-extensions-maven-plugin to build services.    Define a mule-service artifact type."""
"MULE-10792","Bug","Extensions API",3,"Model validator does not enforce returning an OperationResult when the OutputResolver specifies an attributes resolver","""The following code should fail at compile time since the OutputResolver specifies an attributes resolver, but the return type is not an OperationResult:    """
"MULE-10804","Task","Core: (other)",2,"Improve error handling on Tooling Runtime REST API","""Improve error handling on REST API to allow understand what went wrong doing tooling operations.  Propagate errors from Mule Tooling Service API throw the REST and also propagate the exception stack trace from   These error handling features should be enabled/disabled through configuration."""
"MULE-10803","Bug","Core: (other)",3,"IT tests on Windows environment are failing for Tooling Runtime Client","""The way it is implemented to call Tanuki Service Wrapper is considering the application (default) anchor file to check the status of the Mule Runtime process.  This has issues when running the tests on Windows due to raise conditions are happening and the default application gets deleted.  Find a way to improve this logic."""
"MULE-10801","Task","sdk",1,"Rename MetadataTypeUtils to ExtensionMetadataTypeUtils","""Rename internal MetadataTypeUtils"""
"MULE-10796","Enhancement Request","Modules: WS Consumer",5,"WSC: Add tests for SOAP 12","""Currently all tests in the wsc are being executed with a SOAP11 service. We should add tests for SOAP 12 and fix the gaps, if there are any."""
"MULE-10818","Enhancement Request","Build: Integration Tests",2,"ArtifactIsolatedClassLoaderBuilder to add URLs to the application classloader","""The ArtifactIsolatedClassLoaderBuilder needs to provide a way to add jars to the application classloader (jars not maven coordinates) """
"MULE-10814","Task","Build: Integration Tests",1,"Unify coordinate language for ArtifactIsolatedClassLoaderBuilder","""The coordinate language should be such as:    If the optionals are not provided they should be assumed."""
"MULE-10812","Bug","Core: Agents",0,"ClassNotFound exception is thrown when resolving metadata thought Mule Agent","""When resolving the metadata of a component using the Mule Agent with the Tooling API the endpoint throws the following error:           Debugging internally, the ClassLoader that tries to load {{TransactionIsolation}} from DB Connector, is the ClassLoader of the *Agent* which doesn't have access to that class."""
"MULE-10810","Task","Core: Deployment",1,"Deployment should look for application resources relative to the artifactFolder","""When applications are deployed from Tooling Services API the internal implementation of the service delegates the deployment to the deployment module which is not taking into account the artifactFolder to search for the application resources, instead it is using the appName relative to MULE_HOME/apps/$appName    This has to be changed in order to allow Tooling Service API to use deployment service and deploy temporary applications that are not going to be added to the MULE_HOME/apps folder."""
"MULE-10809","Enhancement Request","Extensions API",13,"Support native libraries/required dependencies","""For extensions like DB or connectors like SAP, PeopleSoft, JDE users need to specify jars/libraries that are required for the connector to work, but cannot be packaged inside of it because of technical or legal restrictions.    We need to define a mechanism to provide this information in the extension model so that tooling can generate a proper UI for it.    As an example of the information we currently support we can check the editors in studio:  *SAP*    *MySQL*    *Oracle*  """
"MULE-10807","Bug","Modules: HTTP",8,"HTTP Extension: Sanity tests Requester ","""HTTP Extension: Sanity tests Requester """
"MULE-10806","Task","Modules: HTTP",8,"Migrate HTTP Module Requester QA tests to HTTP Extension in Mule 4.x","""After the inclusion of the Allure framework listener the numberValidator tests are failing """
"MULE-10825","Task","Core: (other)",2,"Move logic for temporary application deployment from Agent to Mule","""Tooling Service in Mule should handle the copy of the appLocation folder to a temporary folder in Mule and the same for an inputStream (with zip content)."""
"MULE-10823","Task","Core: (other)",8,"Integrate Metadata Services to Tooling REST API","""Integrate Metadata Services to REST API."""
"MULE-10822","Task","Core: (other)",0,"Remove auto-generated REST Client for Tooling Runtime Client","""It has limitations, implement it directly instead of auto-generating it from RAML."""
"MULE-10821","Task","Core: (other)",1,"Allow to enable/disable Tooling Runtime REST API verbose by query param","""Allow to pass a query param to enable verbose mode so errors and failures will be added to response on Tooling Runtime REST API."""
"MULE-10828","Task","Core: (other)",8,"Add support for resolving Metadata Keys to Tooling client","""Add support for resolving Metadata Keys to Tooling client"""
"MULE-10836","Task","Core: API|Core: DSL processing",8,"Decouple DSL API from spring module","""Decouple DSL API from spring module"""
"MULE-10830","Enhancement Request","Core: Deployment",1,"Add support for checking Mule's service when installed on Windows","""Linux script has support for checking the status of the process, on Windows there is no way to check the status of the service. Tanuki has support for it so it will be nice to include an 'status' command to the bat used on Windows.    https://wrapper.tanukisoftware.com/doc/english/launch-win.html#standalone-status"""
"MULE-10839","Bug","sdk",5,"Operation Exceptions are not being exported.","""All declared exceptions in an operation signature must be exported in the extension manifest.    For example having an operation with a signature like this one:      The packages of SalamiException and CustomException must be exported."""
"MULE-10852","Task","Core: (other)",0,"Define configuration for input parameters for the content of operations","""Define how operation content parameter/s needs to be configured for all connectors."""
"MULE-10851","Epic","Core: (other)",0,"Mule 4 - Operation UX","""Define how operation content parameter/s needs to be configured for all connectors taking into account:   - Type checking   - Auto-transformation of parameters   - Consistency for different types of connectors   - Have in mind the input parameters and the output parameters (http:listener, http:request)   - Have in mind how http policies work and policiies in general"""
"MULE-10850","Task","Modules: MuleClient",8,"Define replacement for MuleClient","""One of the idea is to include a mechanism that underneath uses the EL to execute functions that are the extensions operations.    This must also include the review of the usages of MuleClient to see if it's really needed as it is today."""
"MULE-10844","Task","Core: API",2,"Move serialization API from core to mule-api","""Move API defined on core/src/main/java/org/mule/runtime/core/api/serialization to mule-api project."""
"MULE-10857","Bug","Extensions API",3,"Definition parser doesn't support Connection Providers with alias","""When setting an alias for a Connection Provider, the packaged connector won't deploy due to a definition parser error.    This was tested in M3 but is reproducible in SNAPSHOT as well.    The bug can be reproduced using [this repo commit|https://github.com/fbarrios/hello-world-connector-4.x/tree/6ac23ed73aa2aa150bd098ef512d8c267967b2e7].    The error logged in the runtime is the following:  """
"MULE-10856","Enhancement Request","Modules: WS Consumer",8,"Improve WSC attachments UX","""We should add metadata support for attachments in the wsc.    Input:  * If at least one attachment is required the field should be marked as an ArrayType of binary types  * if no attachment is required the list should be marked as NullType.    Output:  * If the output contains at list one attachment the output of the consume operation should be a multipart payload object.  * if the output does not contains any attachments then the result should be an string type representing the xml body response.    We should also check if its possible to remove the """"Content ID"""" required from the list of parameters and automatically add this field to the requesting body.      """
"MULE-10867","Bug","Core: Exception Handling",1,"on-error-continue has a name attribute","""{{on-error-continue}} element accepts {{name}} attribute, which makes deployment fails because only top level elements can have a {{name}} attribute.    To reproduce try to deploy an application with this:    """
"MULE-10865","Task","Core: Exception Handling",8,"Write try transaction tests","""We need to write unit/functional tests for {{<block transactionalAction}} behavior."""
"MULE-10863","Bug","Core: API",2,"Remove unused Generic on TypeBuilder","""MetadataTypeBuilder no longer uses generics it should be removed from its uses."""
"MULE-10861","Enhancement Request","Extensions API",13,"Support new Error Handling in Extensions API","""Implement what was written in the matching spec"""
"MULE-10859","Task","Build: Maven",1,"Change groupId and artifactId from muleesb to mule","""Change all references to artifacts called muleesb to mule"""
"MULE-10877","Enhancement Request","Extensions API",8,"SDK should be able to handle parameters as TypedValues","""The SDK should be able to request any parameter not just as a single value, but as a TypedValue.    This should be the mechanism to obtain a DataType or MediaType of a given value."""
"MULE-10873","Task","Core: (other)",0,"Classloading: Drop unzipping mechanism when loading plugins ","""Plugins shouldn't be unzipped when generating the filtered classloader, as it not only generates overhead while unzipping or doing the house keeping after the app it's stopped (aka: deleting the files), but it will be also helpful from a tooling point of view.    This jira is part of a set of them where the main intent is to allow tooling to extract an ExtensionModel for any plugin, generating a classloader for that plugin in a simplified way (i.e.: no unzipping, nor cleaning after it was consumed)"""
"MULE-10872","Task","Core: (other)",2,"Add support on Tooling API to access remote Mule Runtime instance","""In addition to current support for accessing local mule instances it would have to allow access remove mule instances."""
"MULE-10870","Bug","Modules: HTTP",0,"Duplicate content-type created in response builder","""Content-type specified in http response builder and also in a property duplicates it:        Calling this flow will receive 2 content-type headers returned:    {quote}  curl -v localhost:8081  * Connected to 127.0.0.1 (127.0.0.1) port 8081 (#0)  > GET / HTTP/1.1  > Host: 127.0.0.1:8081  > User-Agent: curl/7.43.0  > Accept: */*  >  < HTTP/1.1 200  < Content-Length: 4  < Content-Type: application/json;charset=UTF-8  < Content-Type: application/xml;charset=UTF-8  {quote}    """
"MULE-10868","Task","Core: Concurrency / Threading",8,"Migrate scheduler module","""Quartz should be removed as a dependency of the runtime and be only on the scheduler service."""
"MULE-10885","Enhancement Request","Extensions API",13,"Support operation UX","""Add support for the new Operation UX guidelines"""
"MULE-10882","Bug","Modules: XA Transactions",0,"Unregister resources from Bitronix (ResourceRegistrar and ManagementRegistrar)","""In 3.6.2 the queue and resources are not being unregistered from the Bitronix registries. In 3.8.2 the queue is unregistered but the database connector is not, so redeploying an application with a db connector will cause a replication in the """"uniqueName"""". """
"MULE-10881","Bug","Core: Flow",1,"AsyncInterceptingMessageProcessor#processNextAsync not rethrowing exception","""Add the missing 'throw' in the catch block of processNextAsync"""
"MULE-10887","Enhancement Request","Modules: HTTP",0,"GrizzlyHttpClient#createGrizzlyRequest: separate RequestBuilderCreation from its actual configuration","""Seaparate the creation and the configuration"""
"MULE-10896","Task","Core: Deployment",8,"Extract classLoader model definition from artifact descriptors","""All the information used to create classLoaders is part of the artifact descriptors.  This makes hard to used different ways to create artifact (zipped/unzipped) as the creation of the classLoaders is split on different places."""
"MULE-10895","Task","Core: (other)",0,"ConnectionValidationResult support for JSON serialization/deserialization ","""Current version of the class has a field with the exception, this will not allow to be serialized and deserialized as JSON format when using it from Tooling Client."""
"MULE-10894","Bug","Core: Domains shared resources|Core: Services",2,"Add services support to domains","""Services are not currently available in domains."""
"MULE-10893","Task","Build: Distributions",1,"Remove Studio distribution","""Remove Studio distribution"""
"MULE-10892","Task","Core: Deployment",0,"Classloading: MuleArtifactUrlConnection must be enhanced to support any mule artifact","""The current implementation `MuleArtifactUrlConnection` supports mule plugin artifacts but it has to be enhanced to support any other artifact such as: services, plugin servers, applications and domains.    This will allow us to stop unzipping any artifact mule relies on when doing a deployment (no more exploded apps, neither plugins, neither <put any artifact here>). To do so, we need to also be sure that mule stops writing in the local folders of any application (e.g.: `your-app/.mule/`).    """
"MULE-10889","Enhancement Request","Modules: WS Consumer",8,"Soap Service: Create interceptor to parse embedded attachment in SOAP response.","""Currently, we are parsing the response in different ways if the client supports MTOM or doesn't because a response with embedded attachments does not parse the attachments before building the final response body.    We should try to create an interceptor that loads the attachments prior to the final response body gets build and then we can treat every response the same way."""
"MULE-10905","Enhancement Request","sdk",5,"Add support for implicit Keys Resolvers for Enum and Boolean MetadataKeyIds","""Add support for implicit Keys Resolvers for Enum and Boolean MetadataKeyIds"""
"MULE-10904","Enhancement Request","sdk",5,"Provide a way for the extension developer to inject mule default encoding","""Provide a way for the extension developer to inject mule default encoding so we avoid code like this:        We could annotate a parameter with @Encoding to automatically supply default mule's encoding if there is no value present."""
"MULE-10902","Task","Modules: Sockets",1,"Fix TCP tests to use system property instead of a flow var","""The following tests are still using a flow var to set the protocol and as a result are not actually being parameterised:   TcpSendAndReceivePojoTestCase  TcpSendAndReceiveStringTestCase"""
"MULE-10901","Bug","sdk",2,"@NullSafe does not work on POJO fields. ","""Having a POJO that is not parameter group when using the @NullSafe annotation in one of its @Parameter fields is not injecting anything.    We want the same behaviour that we have for operation @Parameters in this NullSafe annotated fields"""
"MULE-10900","Bug","sdk",3,"Source callback parameters can be part of only one CallbackPhase","""Source Callback parameters have a {{CallbackParameterModelProperty}} indicating from which CallbackPhase (*OnError* or *OnSuccess*) they are a part.   These parameters can be a part of both phases, but in the model property, just one phase is stored."""
"MULE-10910","Bug","Core: Exception Handling",2,"Remove BlockingMessageProcessor since it's not actually used","""Right now, the core provider defining the block component is using a specific type definition and an object factory. However, the object type from the latter is a MessageProcessorChain while the type definition a BlockMessageProcessor."""
"MULE-10907","Bug","sdk",2,"Function Types should be exposed as the generic type of it and not as a Function","""*Function Types should be exposed as the generic type of it and not as a Function*    * In the same way as the {{ParameterResolver}}, the Type that appears in the Extension Model should not be the {{Function<>}} type, instead should be the generic type of it, for example:   ** {{Function<Event, SomePojo>}}, should be exposed as {{SomePojo}}"""
"MULE-10923","Enhancement Request","Build: Distributions",5,"Add ShutdownHook to MuleDeployment rule ","""Add ShutdownHook to MuleDeployment rule to be sure that aren't left running any runtime when a test is aborted doing a """"control + c"""""""
"MULE-10922","Bug","Core: Concurrency / Threading",2,"DefaultScheduler periodic scheduling methods not working","""When using DefaultSchedulers methods scheduleAtFixedRate or scheduleWithFixedDelay, the task is only executed the first time and never again."""
"MULE-10921","Bug","Transport: FTP / SFTP",0,"FtpWork never processes file if lock is not granted","""When an FtpWork (FtpMessageReceiver) runs and cannot get the lock for the file (e.g. another FtpWork got the lock for another file with the same name; in another folder), the work finishes without removing the file from the scheduleFiles, causing it to never be processed. """
"MULE-10920","Task","Core: (other)",1,"Allow to configure timeouts for operations and connections on Tooling Client","""There is no way to set up timeout for tooling operations and connections to remote service too."""
"MULE-10919","Bug","Extensions API",8,"Parameter group resolution is super coupled to everything","""ParameterGroup resolution is coupled to model properties on each parameter which makes it super coupled to a lot of components.     We need a way to do the same thing without being tied to the model properties of a parameter model. An awful example of this is the NullSafeValueResolverWrapper. """
"MULE-10918","Bug","Core: Routing / Filters",0,"Until successful is losing session vars","""As a consequence of MULE-10100 where we prevented until successful from returning an event copy, the session vars altered within such component are lost. We copy the flow variables but not session ones which is causing the trouble."""
"MULE-10914","Enhancement Request","Test: Testing Framework",2,"Change ResponseAssertionMessageProcessor to use tasks instead of threads for assertions","""When dispatching a task to a Scheduler, if the dispatching tasks finishes before the dispatched task starts, the dispatched one may end up running in the same thread as the dispatcher.    To avoid this, we should put some token in the thread local of the thread running the task and use that for assertion, instead of asserting of the threads identity.    This is causing flakyness in NonBlockingFullySupportedFunctionalTestCase"""
"MULE-10945","Enhancement Request","sdk",1,"Populate Layout information for Transactional Action parameters","""*Populate Layout information for Transactional Action parameters*    * The {{Transactional Action}} parameter is injected when using a {{Transactional Connection}}, due that is injected by the SDK and not defined by the extension developer, there is no chance to be able to define a custom layout information.  """
"MULE-10944","Bug","Core: (other)",0,"Some hamcrest assertions are using mockito matchers","""Fix the tests"""
"MULE-10943","Bug","sdk",3,"Parameter placement order have two different default values","""*Parameter placement have two different default values*    * If a parameter doesn't use the {{@Placement}} annotation, the default order is {{0}}  * If the parameter use the {{@Placemente}} annotation, but without defining the order value, the value to be configured in the ext model will be {{-1}}    *Review the same for:*  * Tabs  * Groups  * Other layout information with default values"""
"MULE-10941","Task","Core: Expressions",2,"Review validate and exception uses","""The validate method used to throw an InvalidExpressionException so most uses remain that way, plus they rely on that to determine the failure instead of analysing the ValidationResult. We need to refactor all its uses."""
"MULE-10940","Task","Core: Expressions",2,"Define interaction between DataType and MetadataType (function)","""Need to start defining functions as bindings so we need to define how to type them."""
"MULE-10939","Task","Core: Expressions",8,"Cover all DW/MEL scenarios for ExpressionManager in tests","""Define infrastructure to run test in both modes."""
"MULE-10938","Task","Test: Testing Framework",1,"Add DW plugin to our tests dependencies","""We need to make it possible for everyone to use DW on their tests from now on."""
"MULE-10937","Task","Core: Deployment",8,"Separate deployment artifact implementations from deployment module","""Deployment model currently contains both deployment artifact implementations (artifact and factories) and deployment management logic (directory watcher, listeners, etc)  We need to have deployment artifacts in a different module so tooling can use it without having to depend on the deployment logic, which has to be used on the container only"""
"MULE-10933","Task","Core: (other)",2,"Add internal support for retrieving metadata in Tooling Client","""Tooling Client API would need to use for DataSense the Metadata for an operation, this operation would need to be implemented internally in the REST Client inside the tooling but should not be exposed to external clients."""
"MULE-10932","Task","Core: (other)",2,"Tooling API should allow to generate an Extension Model for a plugin","""Allow to generate the extension model for a plugin from Tooling API client."""
"MULE-10931","Task","Core: (other)",8,"Tooling API allow to do connectivity testing using ConnectivityTestingServiceBuilder","""Expose API for MULE-10930 to allow doing connectivity testing without deploying an application. This API will be changed later to also do deploy for the application as the current API in client is done."""
"MULE-10930","Task","Core: (other)",8,"Change Tooling REST API to allow doing connectivity testing using ConnectivityTestingServiceBuilder","""It will be required to expose (temporary) the service to do connectivity testing without deploying an application, therefore we will have to expose ConnectivityTestingServiceBuilder through this API."""
"MULE-10928","Task","Core: Policies",8,"Support parametrization of policies","""Policies support parametrization. For instance throttling policies allows to parametrize the number of request per seconds based on user input. This is to define a mechanism to define the parametrization of the policies when applied.  """
"MULE-10927","Task","Core: Policies",8,"Support http policy specific pointcuts","""This is to add support in HTTP connector to provide information specific to it to be able to apply pointcuts specific to HTTP"""
"MULE-10925","Task","Core: Policies",8,"Support http proxy policy injection without pointcuts","""This is full support for http proxy policies including:   - Variables scoping    - Source logic   - Source output modification   - Request logic   - Request content modification  """
"MULE-10947","Task","Core: Expressions",0,"Support mutation of java objects","""When working with policies, it needs to be possible to mutate the request attributes or the payload that is going to be sent by the http:request operation or the response of the http:listener source.    It must be possible to reset headers, add headers, remove headers from attributes."""
"MULE-10969","Task","Modules: HTTP",3,"HTTP UI improvements","""HTTP Request:  - """"API Configuration"""" -> """"API Specification""""  - """"Configuration overrides"""" should be moved to their own tab instead of going under """"Advanced"""".  - path should default to """"/""""  - host should have an example value of 0.0.0.0  - port should have an example value of 8081  - charset is represented as an object plus a checkbox which is called """"present"""" - not sure what the fix is, but need to discuss and clean this up.   - Response Settings should be a new Response tab, not a group    HTTP Listener:  - HTTP path should be on the top of the form  - charset is represented as an object plus a checkbox which is called """"present"""" (see above)  - configuration overrides should be a group, not a tab (especially since it only has one configuration option)  - Response Settings should be a new Response tab, not a group  - Error Response Settings should be a new Error Response tab, not a group"""
"MULE-10968","Bug","sdk",5,"WSC can't load embedded wsdl schemas on the types tag. ","""Having a WSDL with a types tag like this one:      that defines an inner schema in the wsdl file, we are not taking it in count and all the types that are described there are not going to be loaded."""
"MULE-10966","Task","Core: Deployment",1,"Artifact plugins must include full dependency information","""Artifact plugins currently provide the list of plugins names that are required as dependencies in order to deploy a given plugin.  That name is not enough as there could be multiple versions of a given plugin, which could or could not match with a the required version.  So, plugins must include the complete information of  to identify another plugin. Each dependency must include, instead of the name, the folowing information:  """
"MULE-10960","Task","Core: Policies",8,"Support error handling scenarios between policies and flows","""This is to properly define behaviour and support the error scenarios when executing the next operation.    What error type propagate when the flow/operation execution fails?.  Should we allow the user to handle error in the policies for request operations?."""
"MULE-10959","Enhancement Request","sdk",13,"Support Transactions in JMS Extension","""Support Transactions in JMS Extension    * Implies the support of binding sessions to the transaction thread  * How the transactional action is related to the ACK Modes  * Make it happen"""
"MULE-10958","Enhancement Request","sdk",13,"Support Sources in JMS Extension","""Support Sources in JMS Extension"""
"MULE-10957","Bug","Core: Expressions",2,"Error accessing variables within a transform element","""When trying to access the variables within a DW script, it fails because of an issue handling TypedValue class.    It seems that the problem is related to the fact that the variables binding is a type value with other type values inside."""
"MULE-10955","Bug","Core: Concurrency / Threading",1,"When shutting down a scheduler, it takes the timeout time even in there's no pending work to do","""This causes unneeded delay in the execution of the tests, as well as a potential issue when shutting down applications."""
"MULE-10953","Enhancement Request","Core: Concurrency / Threading",1,"Provide a lookup method for SchedulerService in MuleContext","""This is to avoid performing the lookup in the registry and handling RegistationException each time the service is needed."""
"MULE-10951","Bug","Core: (other)",0,"Tooling client does not support application deployment if there is not default domain","""In order to test this you can remove the default domain from domains folder in mule installation.    org.mule.tooling.service.api.DeploymentException: Couldn't deploy the application     at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:112)   at org.mule.tooling.client.internal.DefaultToolingRuntimeClient.deployApplication(DefaultToolingRuntimeClient.java:61)   at org.mule.integration.test.tooling.client.ConnectivityTestCase.deployEmailApp(ConnectivityTestCase.java:144)   at org.mule.integration.test.tooling.client.ConnectivityTestCase.cachingSuccessConnectionTesting(ConnectivityTestCase.java:112)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:497)   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)   at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)   at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)   at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)   at org.junit.rules.RunRules.evaluate(RunRules.java:20)   at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)   at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)   at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)   at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)   at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)   at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)   at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)   at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)   at org.junit.runners.ParentRunner.run(ParentRunner.java:363)   at org.junit.runner.JUnitCore.run(JUnitCore.java:137)   at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:119)   at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)   at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234)   at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)   at java.lang.reflect.Method.invoke(Method.java:497)   at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)  Caused by: org.mule.tooling.agent.rest.client.exceptions.ToolingServiceAPIException: HTTP 500 Internal Server Error{""""errorType"""":""""class org.mule.runtime.deployment.model.api.DeploymentException"""",""""errorMessage"""":""""Domain \u0027default\u0027 has to be deployed in order to deploy Application \u0027tooling-4a47ffd0-aa10-11e6-af37-a0999b1354f3\u0027"""",""""errorDetail"""":""""org.mule.runtime.deployment.model.api.DeploymentException: Domain \u0027default\u0027 has to be deployed in order to deploy Application \u0027tooling-4a47ffd0-aa10-11e6-af37-a0999b1354f3\u0027\n\tat org.mule.runtime.module.deployment.internal.application.DefaultApplicationFactory.createAppFrom(DefaultApplicationFactory.java:91)\n\tat org.mule.runtime.module.deployment.internal.application.DefaultApplicationFactory.createArtifact(DefaultApplicationFactory.java:79)\n\tat org.mule.runtime.module.tooling.internal.DefaultToolingService.createApplication(DefaultToolingService.java:57)\n\tat com.mulesoft.agent.services.tooling.MuleAgentToolingService.deployToolingApplication(MuleAgentToolingService.java:233)\n\tat com.mulesoft.agent.services.tooling.MuleAgentToolingService.deployToolingApplication(MuleAgentToolingService.java:170)\n\tat com.mulesoft.agent.external.handlers.tooling.ToolingRequestHandler.lambda$deployToolingApplication$2(ToolingRequestHandler.java:150)\n\tat com.mulesoft.agent.util.ResponseHelper.response(ResponseHelper.java:88)\n\tat com.mulesoft.agent.external.handlers.tooling.ToolingRequestHandler.deployToolingApplication(ToolingRequestHandler.java:148)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:497)\n\tat org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:151)\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:171)\n\tat org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:152)\n\tat org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:104)\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:387)\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:331)\n\tat org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:103)\n\tat org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:271)\n\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\n\tat org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:267)\n\tat org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:297)\n\tat org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:254)\n\tat org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1028)\n\tat org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:372)\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:381)\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:344)\n\tat org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:221)\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:696)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1515)\n\tat com.mulesoft.agent.rest.RequestLoggingFilter.doFilter(RequestLoggingFilter.java:95)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1486)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:519)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:138)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:564)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:213)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1097)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:448)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1031)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:446)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:271)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:246)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)\n\tat java.lang.Thread.run(Thread.java:745)\n""""}   at org.mule.tooling.agent.rest.client.tooling.applications.Applications.put(Applications.java:83)   at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:106)   ... 34 more"""
"MULE-10980","Bug","Extensions API",1,"Content parameters should not be available as attributes in the DSL","""What the title says. Applies to content parameters"""
"MULE-10977","Bug","sdk",3,"java.lang.Object is persisted as a type in the extension model JSON","""The following JSON is generated:      When the ExtensionModelJsonSerializer travels all the MetadataTypes for registering purposes, it ends up registering everything, even types such as java.lang.Object."""
"MULE-10975","Bug","Core: Routing / Filters",0,"AbstractAggregator eventGroups object store ignores the object store configuration in the registry","""On AbstractAggregator#internalEventsGroupsObjectStoreFactory the store should be looked up from the registry rather than from the deprecated static methods.    That way, when a core extension replaces the ObjectStores in the registry, the aggregator takes those instead of the defaults."""
"MULE-10974","Bug","Test: Testing Framework",2,"JDK Resources are not being found when running a test with MuleArtifactClassloader","""Running a test that requires a resource bundle that lives in the JDK, when the classloader cooked for testing is not delegating the look up of resources to its parent if the resource is not found."""
"MULE-10970","Task","Core: Components",8,"Make all message processor AnnotatedObject","""We need to guarantee that annotations are available for most components since having that in place will allow us to later add new features, for example."""
"MULE-10985","Bug","Core: Deployment|Core: Logging",2,"Parallel deployment causes runtime contention on Logger.","""We found that after the deployment worker threads are being blocked on """"org.mule.module.launcher.log4j2.LoggerContextCache.getLoggerContext(ClassLoader)"""" this was introduced when the feature for parallel deployment was introduced."""
"MULE-11007","Task","Core: API|sdk",5,"Decouple MulePluginModelJsonSerializer from mule-api into a mule-api-persistence module","""The mule-api project holds a representation of a Mule plugin model and it's serializer from/to JSON.    Ideally, that class should be moved to a different project, similar to what the mule-extensions-api has, where there's the domain objects in api, and a layer of persistence in a different module"""
"MULE-11001","Task","Build: Integration Tests",2,"ArtifactClassLoaderRunner - Lookup policies for Plugin in Region should honor dependencies","""The region build by the isolated class loader factory is not considering the dependencies between plugins therefore plugins are ended up with a lookup policy CHILD_FIRST instead of CHILD_ONLY and PARENT_FIRST (first one if the plugin doesn't depend in another one that goes to the region too and the second one is when the plugin declares the dependency so it can access to a the dependent plugin exported classes)."""
"MULE-10999","Bug","Core: (other)",0,"Update xmlbeans dependency to our fork in mule-common","""We've created a fork of xmlbeans to fix an issue since it has no support anymore. Now the mule-common dependency should be updated."""
"MULE-10996","Bug","Modules: HTTP",0,"Content-Length header case conflicts with streaming","""Because we are reacting to having """"Content-Length"""" as header (for querying and removal) having a different case has undesired consequences in terms of streaming. This happens for all headers so we need a general approach."""
"MULE-10995","Bug","Core: Concurrency / Threading",2,"Negative threadWaitTimeout used with SEDA processing strategy fails rather than waiting forever to enqueue.","""Negative threadWaitTimeout used with SEDa processing strategy fails rather than waiting forever."""
"MULE-10989","Bug","Core: Deployment",0,"Incorrect OS encoding displayed in the console","""h3. Description  As a result of a change in MULE-7655, the OS Encoding is being reported as the system's File Separator. It would be ideal if the Encoding was displayed.      h3. Steps to reproduce  # Start up a mule application  # Observe the Application reports the OS Encoding as '/'    Log:  {code}  **********************************************************************  * Application: default                                               *  * OS encoding: /, Mule encoding: UTF-8                               *  *                                                                    *  * Agents Running:                                                    *  *   Batch module default engine                                      *  *   JMX Agent                                                        *  *   Wrapper Manager                                                  *  **********************************************************************  {code}    h3. Workaround  Ignore the output and manually check the file.encoding property.     h3. Notes  See: {{org.mule.util.ApplicationStartupSplashScreen.*doHeader*}} (_Line: 23_)  {code:java}      protected void doHeader(MuleContext context)      {          header.add(""""Application: """" + context.getConfiguration().getId());          header.add(String.format(""""OS encoding: %s, Mule encoding: %s"""",                                   SystemUtils.FILE_SEPARATOR,                                   context.getConfiguration().getDefaultEncoding()));          header.add("""" """");      }  {code}  """
"MULE-11018","Enhancement Request","Core: Concurrency / Threading",2,"Allow to give names to the Schedulers retrieved from SchedulerService","""Having a name in the scheduler will help generate better log entries.  The tasks should also have some indication of where they were scheduled.    Also pass flow name via `org.mule.runtime.core.api.processor.strategy.ProcessingStrategyFactory#create` and use for processing strategy schedulers."""
"MULE-11016","Bug","Core: Concurrency / Threading",2,"Race condition when running repeatable scheduled jobs","""When using scheduledWithFixedDelay, a race cpndition may occur that causes the job to not run because a check is made before the state of the task is updated."""
"MULE-11037","Bug","Core: Services",3,"Mule service scheduler log file is being created under domain scope","""Steps to reproduce:    1. Unpack Mule distribution  2. Start Mule with {{./bin/mule}}  3. Stop Mule  4. Run {{ls -la logs}}  5. A log file named {{mule-domain-mule-service-scheduler-4.0-SNAPSHOT}} is being created.    The Scheduler Service log should be included in the {{mule_ee.log}}. If we want to have a different log for each service, it shouldn't be related to {{mule-domain}}"""
"MULE-11036","Task","Core: Concurrency / Threading",2,"Allow the creation of custom schedulers in the SchedulerService","""Allow the creation of custom schedulers with custom thread pools."""
"MULE-11034","Enhancement Request","Core: (other)",2,"Change SubflowMessageProcessorChain visibility to public","""In MUnit, we need to know if a processor obtained from the registry is a SubflowMessageProcessorChain (the one inside SubflowMessageProcessorChainBuilder), in order to be able to set the mule context and initialize it. This is to cover the scenario where someone wants to run a subFlow from our java test cases (FunctionalMunitSuite)."""
"MULE-11033","Bug","Extensions|sdk",2,"NPE when deserializing NO_DYNAMIC_METADATA_AVAILABLE json response","""When trying to deserialize the following json message a NPE is thrown:    NPE:  """
"MULE-11031","Bug","Core: Expressions",2,"Cannot reference flowVars directly using DW","""Though it is possible to have an expression like """"variables.myFlowVar"""", """"myFlowVar"""" directly does not work. This is a problem not only in terms of usability but compatibility since that was supported in MEL. The problem is that we are only binding the entire variable map but not each individually."""
"MULE-11029","Bug","sdk",5,"Parsers are not validating the presence of a required parameter","""For instance,  has a required color parameter but *null* is assigned.    See SubTypesMappingParserTestCase"""
"MULE-11026","Bug","Core: (other)",1,"Quartz scheduler is too verbose","""Every time you start or stop Mule, you get a lot of log lines from the Scheduler service.  The log should be reduced to only the necessary lines.    Start Log:      Stop log:  """
"MULE-11024","Task","Extensions API",8,"Move schema-related objects from extensions-spring-support to extensions-api","""Schema classes from extensions-spring-support are mandatory when using XML extensions, as they are consumed through SPI when generating schemas in the ModuleDelegatingEntityResolver class (particularly, the one implementing SchemaResourceFactory interface, SchemaXmlResourceFactory).    Without this refactor, it's impossible to consume this class (SchemaXmlResourceFactory) from the testing framework (AbstractMuleTestCase) through SPI, failing when running the tests."""
"MULE-11049","Task","Build: Integration Tests",1,"Remove SHITTY Maven plugin from build","""Remove shitty-maven-plugin """
"MULE-11047","Task","Core: Transports",8,"Remove dependency to HTTP extension plugin once HTTP service is implemented and compatibility module support migrated to use the service","""mule-transport-module-support depends on HTTP extension.  Once this dependency is removed and the module started to use the HTTP Service instead, the dependency as plugin to the HTTP extension plugin should be removed from the plugin.properties files in all the transports too."""
"MULE-11041","Bug","Modules: WS Consumer",3,"WS Consumer exceptions should implement ErrorMessageAwareException","""When receiving a WS error it is useful the SOAP response so the user has more details about the failure."""
"MULE-11057","Bug","sdk",1,"Extensions in XML that use ExtensionModel requires java classes when should not be mandatory","""Extensions in XML that use ExtensionModel requires java classes when should not be mandatory"""
"MULE-11056","Bug","Core: (other)",0,"Tooling client and mule applications share the same log file","""When the user performs test connectivity or fetching for metadata keys using the tooling client the logs are printed in the same file that mule uses for applications this create a little noise in the log files"""
"MULE-11054","Bug","Build: Distributions",1,"Mule embedded distribution artifactId should be mule-embedded","""Mule embedded distribution has the same artifactId as Mule root POM.  Mule embedded distribution artifactId should be renamed from {{mule}} to {{mule-embedded}}"""
"MULE-11051","Bug","Core: (other)",1,"Logger cannot be parsed after deploying from tooling client","""App:    <?xml version=""""1.0"""" encoding=""""UTF-8""""?>    <mule xmlns:httpn=""""http://www.mulesoft.org/schema/mule/httpn"""" xmlns=""""http://www.mulesoft.org/schema/mule/core""""   xmlns:doc=""""http://www.mulesoft.org/schema/mule/documentation""""   xmlns:spring=""""http://www.springframework.org/schema/beans""""   xmlns:xsi=""""http://www.w3.org/2001/XMLSchema-instance"""" xsi:schemaLocation=""""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd  http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd  http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd"""">   <httpn:request-config name=""""HTTP_Request_config"""" doc:name=""""HTTP Request config"""" />   <flow name=""""dataFlow"""" >    <poll doc:name=""""Poll"""" >     <logger level=""""INFO"""" doc:name=""""Logger"""" />    </poll>    <logger level=""""INFO"""" doc:name=""""Logger"""" />   </flow>   <flow name=""""dataFlow1"""" >    <httpn:request config-ref="""""""" path="""""""" doc:name=""""HTTP : Request"""" />   </flow>  </mule>      Stacktrace:    org.mule.tooling.service.api.DeploymentException: Couldn't deploy the application  org.mule.tooling.service.api.DeploymentException: Couldn't deploy the application   at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:112)   at org.mule.tooling.client.internal.DefaultToolingRuntimeClient.deployApplication(DefaultToolingRuntimeClient.java:61)   at org.mule.tooling.client.agent.impl.DefaultAgentDeploymentTooling.deploy(DefaultAgentDeploymentTooling.java:18)   at org.mule.tooling.messageflow.action.TestConnectorConnectionFromMuleConfigAction$1.run(TestConnectorConnectionFromMuleConfigAction.java:104)   at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:119)  Caused by: org.mule.tooling.agent.rest.client.exceptions.ToolingServiceAPIException: HTTP 500 Internal Server Error{""""errorType"""":""""class org.mule.runtime.deployment.model.api.DeploymentInitException"""",""""errorMessage"""":""""MuleRuntimeException: Could not create mule application since lazy init is enabled but there are component in the configuration that are not parsed with the new mechanism logger,logger""""}   at org.mule.tooling.agent.rest.client.tooling.applications.Applications.put(Applications.java:83)   at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:106)   ... 4 more      java.lang.Throwable: org.mule.tooling.service.api.DeploymentException: Couldn't deploy the application     at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:112)     at org.mule.tooling.client.internal.DefaultToolingRuntimeClient.deployApplication(DefaultToolingRuntimeClient.java:61)     at org.mule.tooling.client.agent.impl.DefaultAgentDeploymentTooling.deploy(DefaultAgentDeploymentTooling.java:18)     at org.mule.tooling.messageflow.action.TestConnectorConnectionFromMuleConfigAction$1.run(TestConnectorConnectionFromMuleConfigAction.java:104)     at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:119)    Caused by: org.mule.tooling.agent.rest.client.exceptions.ToolingServiceAPIException: HTTP 500 Internal Server Error{""""errorType"""":""""class org.mule.runtime.deployment.model.api.DeploymentInitException"""",""""errorMessage"""":""""MuleRuntimeException: Could not create mule application since lazy init is enabled but there are component in the configuration that are not parsed with the new mechanism logger,logger""""}     at org.mule.tooling.agent.rest.client.tooling.applications.Applications.put(Applications.java:83)     at org.mule.tooling.agent.rest.client.RestAgentToolingService.deployApplication(RestAgentToolingService.java:106)     ... 4 more         at org.mule.tooling.metadata.utils.MetadataUtils.showErrorMessage(MetadataUtils.java:393)     at org.mule.tooling.metadata.utils.MetadataUtils.showTestConnectionErrorMessage(MetadataUtils.java:384)     at org.mule.tooling.messageflow.action.TestConnectorConnectionFromMuleConfigAction.displayResultMessage(TestConnectorConnectionFromMuleConfigAction.java:136)     at org.mule.tooling.messageflow.action.TestConnectorConnectionFromMuleConfigAction.run(TestConnectorConnectionFromMuleConfigAction.java:125)     at org.mule.tooling.messageflow.dialog.GlobalElementDialog$1.widgetSelected(GlobalElementDialog.java:403)     at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:248)     at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)     at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)     at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)     at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)     at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)     at org.eclipse.jface.window.Window.runEventLoop(Window.java:827)     at org.eclipse.jface.window.Window.open(Window.java:803)     at org.mule.tooling.ui.modules.core.widgets.editors.GlobalRefEditor$AddGlobalElementAction.run(GlobalRefEditor.java:434)     at org.eclipse.jface.action.Action.runWithEvent(Action.java:473)     at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:595)     at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:511)     at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:462)     at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)     at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4230)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1491)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1514)     at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1499)     at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1299)     at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:4072)     at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3698)     at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127)     at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)     at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018)     at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)     at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:694)     at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337)     at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:606)     at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)     at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139)     at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)     at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)     at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)     at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380)     at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:497)     at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669)     at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608)     at org.eclipse.equinox.launcher.Main.run(Main.java:1515)     at org.eclipse.equinox.launcher.Main.main(Main.java:1488)  """
"MULE-11074","Bug","Extensions API",5,"Cannot use @ParameterGroup in sources","""When using a ParameterGroup on a source, and having a source callback which also takes a parameter group or a complex pojo, then the SDK tries ton inject the parameter group into the wrong field.    An example to reproduce is the HttpListener"""
"MULE-11073","Bug","Core: API",1,"SPI errors not caught in Abstract BuilderFactories","""Turns out, when a class is not found or a problem occurs doing the SPI loading, an Error is thrown. Because of this, our code using """"catch Exception"""" is ignored."""
"MULE-11072","Task","Core: Components",8,"Message Processors should be AnnotatedObject","""Make all MP to be AnnotatedObjects in order to store information needed by interception API later."""
"MULE-11071","Task","Core: (other)",8,"Change Mule Runtime Tooling Client API in order to allow Data Sense integration","""Change Runtime Tooling Client API in order to allow integration for DataSense resolution."""
"MULE-11069","Task","Core: API",8,"Spike: Interception API","""Spike to research and define the Interception API"""
"MULE-11066","Enhancement Request","Extensions API",1,"Connection Exceptions should not be wrapped inside of a RetryPolicyException is a NoRetryPolicy is selected","""*Connection Exceptions should not be wrapped inside of a RetryPolicyException is a NoRetryPolicy is selected*    * Nowadays if an Operation/ConnProvider/etc throws a {{ConnectionException}} this will trigger the *reconnection logic* (No matter if is configured with a {{NoRetryPolicy}})  * If the retry fails, it will throw a {{RetryPolicyExhaustedException}} although the retry policy is never executed and hides the true exception."""
"MULE-11065","Task","Core: Components",2,"Make all configuration components AnnotatedObject","""We need to guarantee that annotations are available for most components since having that in place will allow us to later add new features, for example."""
"MULE-11093","Enhancement Request","Modules: WS Consumer",5,"Add error handling capabilities to the new WSC","""Add error handling to WSC."""
"MULE-11092","Task","Core: Deployment",2,"Classloading: plugin.properties should be dropped in favour of mule-plugin.json","""Current status allow different ways of describing plugins: xml, sdk, or the plugin itself (by hand).    There must be a single way to identify a plugin, which will be the JSON mule-plugin.json descriptor to treat every plugin in the same way."""
"MULE-11087","Task","Transport: JMS",13,"Introduce first iteration of new JMS connector","""Merge first iteration, including spec and PR review"""
"MULE-11086","Enhancement Request","Extensions API",5,"Improve ErrorModel serialization in ExtensionModels","""*Improve ErrorModel serialization in ExtensionModels*    * Nowadays in an {{ExtensionModel}} the error models are serialized at *extension* level and also in each *operation* that declares it, not only serializing the error identifier, serializing the entire error hierarchy.  * Improve the serialization (like MetadataTypes) to have a normalized JSON where the error models from operations are just references to the errors defined at extension level."""
"MULE-11085","Bug","Core: Deployment",1,"Calling getMuleContext on an Application that failed to deploy throws NPE","""When calling getMuleContext on an application that failed to deploy it throws a NullPointerException because artifactContext is null."""
"MULE-11084","Bug","sdk",3,"Uptade Schema to allow parameters to be set in any order","""Uptade Schema to allow parameters to be set in any order"""
"MULE-11081","Enhancement Request","Extensions API",8,"Add support to declare ErrorTypes at ConnectionProvider level","""*Add support to declare ErrorTypes at ConnectionProvider level*  """
"MULE-11097","Bug","Core: Non-Blocking",8,"Reactor does not handle RejectedExecutionException's","""https://github.com/reactor/reactor-core/issues/275"""
"MULE-11105","Task","Core: Concurrency / Threading",1,"Move Scheduler interface to mule-api","""Move interface Scheduler to api so it can be used from other services."""
"MULE-11102","Task","Build: Distributions",2,"Minor changes in Extension API Maven Plugin to automate the release","""Added the release profile with the gpg, sources and javadocs plugins.  Added the update_deps_version.sh script. This will allow avoiding using the mvn versions:update-property plugin which it wasn't intended to change to versions that haven't been released yet.  Change the verify.groovy scripts of the IT tests to obtain the artifact versions from the pom and not being hardcoded."""
"MULE-11100","Enhancement Request","Modules: WS Consumer",5,"WSC: Use the HTTP service as default transport for HTTP urls.","""The WSC is using OKHttp to make the Http request when working through http, we should remove that and use the service that mule provides if no specific configuration is provided."""
"MULE-11099","Enhancement Request","Extensions API",13,"Callback phases should be explicit in the SourceModel","""The callback phases in the sources are now implemented behind the covers using model properties. They should be explicitly modeled in the SourceModel , since that information is needed by the new policies"""
"MULE-11098","Enhancement Request","Modules: WS Consumer",5,"Change the TLS context of the WSC configuration for an Object that handles security.","""Currently, the WSC can be configured with a TLS context that is used to Sign and/or Encrypt the SOAP messages, but no TLS actions are performed and it's just used to take the parameters that the object provides. The TLS context should be replaced with some parameter group that has similar attributes but that is not related with TLS"""
"MULE-11118","Bug","Modules: HTTP",0,"Return a 5xx response when thread pool is exhausted instead of ignoring the request","""The http connector silently ignores requests when overloaded. Even if not all of them can be answered (with success or error), at least some of the failures should be returned as a 503 status code."""
"MULE-11114","Task","Build: Distributions",1,"Add DataWeave to Runtime distribution","""Add DataWeave module to Mule distribution"""
"MULE-11111","Enhancement Request","sdk",1,"Validate invalid extension namespace","""Namespaces like `test` cause conflicts with mule namespaces, so we should avoid them"""
"MULE-11108","Bug","Extensions API",1,"ParameterRoleTypeAnnotation only present for content fields","""When an ObjectType is generated through the Ext-API, a ParameterRoleTypeAnnotation is added for the content fields. We should always add them and specify BEHAVIOUR role for the other parameters"""
"MULE-11128","Bug","Core: Exception Handling",0,"LocationExecutionContextProvider doesn't mask passwords","""When an exception occurs and LocationExecutionContextProvider provides the tag which produced the error, it isn't accounting for that element containing sensitive information.    It should consider that the tag could:    * Contain an URL with credentials  * Contain a password attribute    In either case, that information should be masked"""
"MULE-11125","Bug","Modules: XML, XSLT, XPath, SXC",2,"XMLInputFactory allows inline DTDs by default","""Disable inline DTDs which could be insecure."""
"MULE-11148","Bug","Core: Concurrency / Threading",8,"NoSuchMetodError hangs JVM","""When throwing  NoSuchMethodError from inside a custom processor the JVM asumes this is a critical error and hangs the VM.   Showing the following logs:        In order to reproduce this you could have a flow like:        With the following implementation for the processor:        Now if I were to wrap that error in a messaging exception       Then the vm will not hang  """
"MULE-11144","Bug","sdk",5,"Exclusive Parameters validations fails if the parameters uses an Alias","""*Exclusive Parameters validations fails if the parameters uses an Alias*    * When having an {{ExclusiveParameters}} with *isOneRequired* and the parameters are annotated with {{@Alias}} the validation fails saying:   Although these parameters are configured correctly.  * In runtime, the values are configured correctly, but at validation time, the validation uses the names without the alias: {{ref, type}} instead of {{ref, class}}.  * Classes to see {{OperationMessageProcessorObjectFactory}}, {{AbstractExtensionObjectFactory}}, {{ExtensionUtils#getMemberName()}}  * This is can be reproduced adding the {{isOneRequired}} to the {{ObjectSource}} parameter of the {{customValidation}} operation of the {{Validations Extension}}"""
"MULE-11150","Bug","Extensions API",3,"Duplicated parameter generated for source with @OnSucces and @OnError annotated methods","""When writing a source with the following operations, an error is shown indicating that the model is not valid   {code}   [ERROR] error on execute: org.mule.runtime.api.exception.MuleRuntimeException: org.mule.runtime.extension.api.exception.IllegalModelDefinitionException: Extension 'OnlySources' defines the ImmutableSourceModel 'AnotherSource' which has parameters with repeated names. Offending parameters are: [message]   {code}   This is the Source code:   {code:java}   @EmitsResponse  public class AnotherSource extends Source<String,BasicAttributes>  {        @UseConfig      private BasicExtensionConfig config;      /**       * Source Parameter description       */      @Parameter      private String anotherSourceParameter;        @Override      public void onStart(SourceCallback<String, BasicAttributes> sourceCallback) throws MuleException      {        }        @Override      public void onStop()      {        }        @OnSuccess      public void logSuccess( String successMessage){        }        @OnError      public void logError( String errorMessage, String details){        }  }  {code}"""
"MULE-11149","Task","Core: (other)",2,"Unify application deployment on Agent and Tooling Runtime Client API to receive a URL","""Improve the experience of the API by only having one deployment method that receives a URL."""
"MULE-11161","Enhancement Request","Modules: Security (Spring Security, Acegi, PGP, WS-Security)",0,"Update the cipher block used in PGP encryption","""Mule pgp encryptor is using an old cipher block CAST5. We should upgrade to more up-to-date AES-256 cipher."""
"MULE-11158","Bug","sdk",1,"Concrete ParameterGroup validation throws unexpected exception","""The following exception is thrown when an abstract class is used in a ParameterGroup.   The model error should be nicely communicated.    """
"MULE-11167","Enhancement Request","Core: Policies",8,"Policies should be non blocking","""A spike was performed in MULE-11166 and there's a branch with a first attempt of achieving that.    However, as stated on the linked issue, there're design principles in the current policies solution which prevent to go fully non blocking.    We should overcome those limitations in order to allow NB policies."""
"MULE-11166","Task","Core: Policies",8,"Perform spike on NonBlocking policies","""In order to support non blocking SDK operations, it'd be good to have policies applies in a Non blocking manner since right now the policies API is completely blocking.    Perform a spike and see what it takes"""
"MULE-11169","Enhancement Request","Extensions API",5,"Define a way to provide information about classes and bean references for tooling","""When Mule Module developers want to create classes given a full qualified name, or define that a field is a reference to something, using plane strings leads to a poor UI and UX.   Examples of this are the ObjectSource in the validation module:      In order to differentiate a simple string fields from any of this scenarios, we need to provide all the information that tooling can use to support this kind of fields.    For the field type, we could provide a annotation with the form of:       For the ref field, we could indicate it with a annotation marker @Ref"""
"MULE-11181","Enhancement Request","Build: Integration Tests",1,"ArtifactClassLoaderRunner - Add to API different builders for MuleContext implemented in functional test code","""The following classes in the module  mule-tests-runner needs to be moved to the api package as they are required by third party modules  (MUnit) :     * org.mule.munit.runner.TestBootstrapServiceDiscovererConfigurationBuilder  * org.mule.munit.runner.TestServicesMuleContextConfigurator  * org.mule.munit.runner.MuleContextManager.TestClassLoaderRepository    Please make sure this classes are part of the API"""
"MULE-11180","Task","Build: Integration Tests",2,"ArtifactClassLoaderRunner - ClassLoaders should be injected with the application classloader set as TCCL","""While setting services for instance the service manager is created and started, this could trigger to initialize a service and these services could use SPI therefore the application context classloader should be set as TCCL from the runner while injecting them."""
"MULE-11175","Task","Core: Expressions",8,"Spike: Functions in DW","""We need to define how functions will be passed to dw. This might regard creating function interfaces, a function DataType and the mechanism to make those 2 work. The goal is to provide a way to define dw functions through Java in the same way that ExpressionLanguageFunction did for MEL."""
"MULE-11173","Task","Core: (other)",8,"Spike: Allow ToolingRuntimeClient to load the Container class loader in order to support retrieving ExtensionModel","""Tooling Runtime Client should create the Container ClassLoader so it can later resolve ExtensionModel of an extension using deployment model from Mule."""
"MULE-11171","Bug","Build: Integration Tests",1,"ArtifactClassLoaderRunner - WorspaceReader is only resolving SNAPSHOT between projects in reactor","""The implementation of WorkspaceReader used for resolving Maven artifacts in TestRunner is only looking for SNAPSHOT versions when resolving references between projects/discovered as part of the reactor. This issue affects when releasing a version of an artifact that uses the TestRunner due to versions at that point are no longer SNAPSHOTS."""
"MULE-11170","Task","Core: (other)",1,"Split Tooling Runtime Client from API and implementation","""This will allow to release API and implementation with different versions."""
"MULE-11193","Bug","Modules: File",1,"File and FTP field ordering cleanup","""* For all operations that require a Path, the order should be path, then content, then other fields in alphabetical order.   * In the case of copy and move, source and target paths should be at the top  * """"Match With"""" is confusing. Use the term """"File matching rules"""" as the header  * For List, Recursive should go above the matching section  * For read operation, remove the advanced tab since it's not needed."""
"MULE-11192","Task","Core: (other)",2,"Tooling Runtime Client handle multiple configurations when building ApplicationModel for DataSense","""Current implementation only supports reading the first configuration file defined by mule-deploy.properties. It would need to be change the ApplicationModel from DataSense API in order to allow building it from multiple configuration files.  In addition to that, the mule-deploy.properties may not be present so default (by convention) config file name should be used."""
"MULE-11189","Bug","sdk",3,"NPE when using ParameterGroup on Source OnSuccess","""Declaring a `@ParameterGroup` in the `@OnSuccess` of a Source produces a NullPointerException.    Example        Produced:      If the ParameterGroup annotation is removed the method is invoked correctly."""
"MULE-11188","Bug","Extensions API",1,"SourceCallbackModel is deserialized as a TreeMap","""After deserializing the SourceModel, instead of having a SourceCallbackModel inside the optional value, it has a TreeMap generating a ClassCastException    """
"MULE-11187","Bug","Extensions API",3,"SourceModel deserialize returns null instead of Optional.empty() for sucessCallBack and errorCallback fields","""After deserializing an extension model with sources and no error or success callback, the SourceModel returns null values for the 2 optional fields.    Expected: When not provided, the value should be Optional.empty, not null"""
"MULE-11197","Bug","Transport: JMS",0,"Xa JMS applications interfere with each other when undeploying one of them","""As mentioned in SE-4799, when a Bitronix application is undeploy, that application and other ones using Xa Transactions start failing. These is caused by a race condition, since the writing of the journal is never protected by a lock, or synchronization.     Proposed solution: make the poll method of XaTransactedJmsMessageReceiver synchronized."""
"MULE-11196","Bug","Modules: HTTP",8,"Return a 5xx response when thread pool is exhausted instead of ignoring the request","""The http connector silently ignores requests when overloaded. Even if not all of them can be answered (with success or error), at least some of the failures should be returned as a 503 status code.    This issue is for 4.x, as the thread pool code changed from 3.x."""
"MULE-11212","Bug","Modules: WS Consumer",3,"WSC Extension: With WSS Timestamp using a timeToLive lower than a second doesn't send the expire tag","""Using a timeToLive lower than a second makes the request produced by the WSC to not include the the expires tag. In the case this isn't supported by CXF it would be better to remove the Nanoseconds/Microseconds timeToLive units.        For example using 999 milliseconds:          +*Steps to reproduce:*+  * Changing in the WSS functional tests the config as the example above.   * Make a request to http://localhost:${http.port.wsc}/test-security-timestamp  * You will see that the request contains the timestamp tag but no the expires tag. """
"MULE-11211","Bug","sdk",1,"Nullsafe fails takes a ParameterGroup as a required field of the annotated POJO","""Nullsafe fails takes a ParameterGroup as a required field of the annotated POJO"""
"MULE-11210","Bug","sdk",3,"Nullsafe ignores the ParameterGroups inside the annotated POJO","""Nullsafe ignores the ParameterGroups inside the annotated POJO"""
"MULE-11209","Bug","sdk",3,"Source callback parameters types are not exported","""Source callback parameters types are not exported"""
"MULE-11208","Bug","Modules: CXF",5,"When using the CXF module with MTOM, the wrong Content-Type is returned","""Downloading an attachment from an MTOM service started with the CXF Module, the wrong content type is being returned.    """
"MULE-11207","Bug","Modules: CXF",5,"CXF Module is not exporting the org.mule.apache.security package.","""The CXF module should export the org.mule.apache.security package.   This is used when creating secured services, the WSS4J interceptos should be referenced from the XML as shown bellow, if those classes are not being exported the CXF module will throw a class not found exception.    usage example:      """
"MULE-11202","Bug","Modules: WS Consumer",1,"headers element should go before body element","""In the WSC consume operation, inside the message element, the correct element order should be:  # headers  # body  # attachments    instead of the current:    # body  # headers  # attachments"""
"MULE-11231","Enhancement Request","Extensions API",13,"Allow operation parameters which override config ones","""There's one common pattern in extensions:        The logic behind this is if optionalSomeParameter is not provided, then it defaults to whatever config.someParameter says. However, because someParameter might be dynamic, the operation ends up requiring access to the Event in order to resolve that value.    Because operations need to no longer be capable of accessing the Message nor the Event, we need to:    * Have a way to mark that an operation parameter is an override of a config one  * It should validate that both parameters are of the same type  * It should allow both parameters to have different names  * It should support the config parameter to be dynamic  * It should be compatible with either (or both) parameters to belong to different parameter groups"""
"MULE-11229","Task","Core: (other)",13,"Spike on Mule Client","""Perform a spike on building the new mule client"""
"MULE-11228","Enhancement Request","Modules: Email",3,"Add error handling to Email connector","""Add error handling capabilities to the new email connector"""
"MULE-11227","Enhancement Request","Modules: FTP",3,"Add error handling capabilities to the Ftp connector","""Use the new error handling capabilities in the new FTP connector"""
"MULE-11226","Enhancement Request","Modules: File",3,"add error handling capabilities in File connector","""Use the new error handling capabilities in the new file connector"""
"MULE-11224","Enhancement Request","jms-module|sdk",5,"JMS: Add error handling","""- Improve exceptions to be more granular  - Add Error types declaration to the module"""
"MULE-11222","Task","sdk",13,"Allow to retrieve an ExtensionModel element from its ComponentIdentifier representation","""Allow to retrieve an ExtensionModel element from its ComponentIdentifier representation.    This implies that coming from a ComponentModel Application definition, and providing all the ExtensionModels associated to that Application, the user should be able to retrieve the ExtensionModel elements based only in the ComponentIdentifier of a node in the application."""
"MULE-11221","Enhancement Request","sdk",8,"Support Transactions in Sources","""Spike: Support Transactions in Sources, see #MULE-10961"""
"MULE-11216","Bug","sdk",1,"DB: Enable TypeInference for input parameters of BulkOperations","""DB: Enable TypeInference for input parameters of BulkOperations"""
"MULE-11215","Bug","sdk",1,"Parameters annotated with Content should not validate DSL rules","""Parameters annotated with Content should not validate DSL rules like not having a `name` field"""
"MULE-11214","Enhancement Request","sdk",3,"Add concept of ""resolverName"" to the NamedTypeResolver","""Currently the TypeResolvers have a `categoryName`, that relates a key resolver to an output or input resolver.    Since we now support multiple InputTypeResolvers for each operation, and In order for uniquely identifying a resolver associated to a Parameter without using it's class, we need that these input resolvers declare their own name.    By default, the name of an OutputResolver should be `output` and for an InputResolver `input`, valdiating later that these names are overwriten if more than one Resolver of the same name is found inthe same category"""
"MULE-11213","Task","sdk",0,"Migrate DB integration tests to new extension","""Migrate DB integration tests to new extension"""
"MULE-11232","Task","Core: (other)",1,"Tooling API should receive a Supplier<URL> for Tooling API URL configuration","""This will allow Studio to not start Mule when configuring the Tooling API runtime client but only when the client needs to get access to the Runtime."""
"MULE-11238","Enhancement Request","Extensions API",8,"Allow parameter groups to be optionally be explicit in the DSL","""Right now parameter groups are invisible at the DSL level. It should be possible to optionally make them implicit. E.g:        Translates to:        This is specially important for the interaction with tooling when the group pojo contains fields annotated with @Content.. It should be disallowed for pojo parameters to contain @Content fields. That should only be allowed on parameter groups (dsl explicit or not). Notice that this also means that the current support for ContentTypeAnnotation, etc, needs to be removed"""
"MULE-11237","Enhancement Request","Extensions API",8,"Add language rules into the extension model","""Right now there're a number of synthetic things into an extension DSL which are considered language rules and are not reflected into the extension model. For example:    * Non void operations get a target attribute  * Pooled connection providers get a <pooling-profile>  * Tls parameters don't contain a description of the type    These and all other language rules need to be explicit in the extension model for tooling purposes"""
"MULE-11236","Enhancement Request","Extensions API",3,"Allow parameters to have a type which belongs to a namespace different than the extension's","""Add a way in which it's possible to represent things like:        This doesn't have to rely on imported types, since the most common use case for this will be:    """
"MULE-11234","Task","sdk",13,"Spike: Provide support for creating a serializable ElementModel from an ApplicationModel","""Provide a service for moving from a configured Application to it's DSL serialization."""
"MULE-11233","Enhancement Request","sdk",8,"Replace DictionaryType with open ObjectType","""Once the  DictionaryType is removed from the MetadataType model, we should replace its usage in the Extensions with an open ObjectType    UPDATE:   This has already been implemented in the Metadata Model by Achaval in branch MDM-31"""
"MULE-11241","Enhancement Request","sdk",0,"Add support for Option Resolvers","""Continue and implement what is specified in MULE-9613 and https://docs.google.com/document/d/1Vjd0cvWeETuuqhGveWfraWIwwX5CeIjtara-i2yWuKE/edit"""
"MULE-11240","Bug","Modules: CXF",0,"Apply changes from CXF-7162","""Apply the changes made in CXF as per https://issues.apache.org/jira/browse/CXF-7162"""
"MULE-11249","Task","Extensions API",3,"Review ImportedTypesModel and SubtypeModels","""Once MULE-11248 has been resolved, review how to reference the Imported types source extension and the base type in the subtypes model.    Update:    - For ImportedTypes, we will use the TypeCatalog in a given ResolvingContext to identify the Extension that declares the imported type.  - Subtypes mapping of imported types as base type will work out of the box, as long as the type has been declared as imported.    For this to work properly, we are assuming that dependencies between Extensions are handled by other actor, such as deployment or tooling, to ensure that the context with all the information is available for resolving the type's declaring extension."""
"MULE-11248","Task","Extensions API",3,"Review ExtensionModel version and artifact locator","""Review if:    * The extensionModel needs the concept of getVersion() at all  * The extensionModel could benefit from some kind of artifacts locator/coordinates/whatever, or if on the contrary, only the deployment descriptors should contain that information."""
"MULE-11247","Enhancement Request","sdk",5,"Populate all parameters with a layout order","""Nowadays, parameters can have a LayoutModel which specifies (among other things) its order. If no placement is specified for any element, it is assumed that the element's natural order will be respected but that's only an assumption. We need to populate the LayoutModel with that information having into account 3 different scenarios:    1) All parameters have an order specified.  2) No parameter has an order specified.  3) Some the parameters have an order specified and some of them not (take a decision for this case and document it)."""
"MULE-11245","Task","sdk",13,"Fix memory leak in Extension Spring Support test cases","""*Fix memory leak in Extension Spring Support test cases*"""
"MULE-11244","Enhancement Request","sdk",5,"Expose Metadata result information such as resolver and category names in the MetadataService","""Nowadays it is impossible to obtain information about the MetadataResolvers from the outside. Such information is contained in the `MetadataResolverFactoryModelProperty` which is not externalizable (and shouldn't be).    We have to provide a way for accessing Metadata Resolver information such as resolver name and category name. Two options for doing this is:    1) Implementing capabilities to extract that information from a component in the MetadataService.  2) Add that information to the MetadataDescriptors"""
"MULE-11243","Task","Core: (other)",1,"Disable schema validations on LazyMuleArtifactContext","""It should be disable the xml/schema validation so ToolingService could deploy an application with an xml that may not be complete and allow doing connectivity testing."""
"MULE-11267","Task","Modules: (other)",2,"Migrate OAuth tests to MuleArtifactFunctionalTestCase","""Migrate OAuth tests to MuleArtifactFunctionalTestCase.    Check required provided dependencies."""
"MULE-11265","Task","Build: Integration Tests",0,"ArtifactClassLoaderRunner - Cannot handle classpath URLs escaped on Windows",""" is not able to findClassPathURL when the URLs are escaped, for instance Windows environments when folder has a whitespace."""
"MULE-11264","Enhancement Request","sdk",8,"Replace MetadataDescriptor with OperationModel","""In the MetadataService, we currently return a :        The information contained in the MetadataDescriptor is mostly the structure of the Operation with the types of each element.     We'd like to change the Service API so instead of returning the Descriptor we return a new OperationModel typed accordingly to the resolved dynamic type"""
"MULE-11263","Task","Modules: (other)",8,"Migrate OAuth http module usage to http service","""Migrate OAuth http module usage to http service"""
"MULE-11262","Enhancement Request","Build: Libraries / Dependencies",0,"Update commons-net to 3.5","""Update commons-net to latest version which includes the most recent bugfixes."""
"MULE-11257","Task","Modules: HTTP",8,"Remove Event uses from HTTP extension","""SDK must be Event agnostic so we need to remove it's uses from the HTTP extension as much as possible (if something cannot be done then it must be notified so the use case can be addressed)."""
"MULE-11256","Enhancement Request","Core: API",0,"Create POLICY artifact type","""org.mule.runtime.core.config.bootstrap.ArtifactType defines APP and DOMAIN types, along with an ALL type that implies both APP/DOMAIN.  This type is used support different type of objects in the bootstrap properties and to selectthe proper context builder for an artifact.  Now that policy artifact also define a context, a POLICY type must be defined and ALL type must be re-evalauted to see if still makes sense (there could be things that apply to APP/DOMAIN but no a POLICY)"""
"MULE-11253","Enhancement Request","Core: Policies",8,"Add a way to remove application policies","""Application policies can be added/removed on runtime based on configuration changes. Current version supports adding, but removing policies is not done yet."""
"MULE-11276","Bug","Modules: (other)",2,"OAuth callback doesn't support external listener references","""When the callbacks listeners for OAuth are configured referencing an already existing http listener, the same server used by that listener must be used instead of creating a new one.    This is working in 3.x, but we still need to figure out how to make it work in 4.x with the HTTP service."""
"MULE-11275","Bug","Core: Classloading",8,"NoClassDefFoundError using Groovy in RestAssured","""We are creating an SDK extension, and testing it with RestAssured. When running a test, the exception *NoClassDefFoundError: groovy/lang/GroovyObject* is raised.    The stack trace is:      Guillermo Fernandes helped me notice that *mule-module-spring-config-4.0* exports *Groovy*, but does not include the dependence.    If we remove it from *mule-module.properties* in that module, then the error is:        Guillermo found a possible temporary workaround:    - Create in our testing resource folder, the file *excluded.properties* with the following content:  """
"MULE-11274","Bug","Core: Expressions",0,"MVEL optimizer does not refresh when the payload type changes","""In out fork of MVEL, we added the feature that let us access an _invalid_ property of the payload (getting in return a `null` value) ([MULE-7510]). In this case, the optimizer creates the Accessors, having a NullAccessor in the place that property should be called. After the payload is transformed (to a type that has the mentioned property), the Accessors are not updated (SE-4960)."""
"MULE-11269","Task","Modules: (other)",2,"Migrate OAuth param extractor MEL to DW","""Migrate all MEL specific code in OAuth to use th DW expression language."""
"MULE-11284","Task","Core: Expressions",2,"Improve registration of global contexts","""Right now we have kept the """"search registry"""" approach to finding global binding contexts but this is very restrictive and we can't guarantee it will work for the SDK. We need to figure out a better way of doing this."""
"MULE-11278","Task","Core: Bootstrap / Standalone",2,"Upgrade Tanuki license","""Upgrade Tanuki Wrapper license since current expires in January 2017.  """
"MULE-11292","Bug","sdk",13,"Functions, TypedValues and ParameterResolvers are not supported inside a Pojo","""*Functions, TypedValues and ParameterResolvers are not supported inside a Pojo*    * To support {{Functions}}, {{TypedValues}} and {{ParameterResolvers}} model properties indicating this are used, due that for POJOs, model properties are not used, these resolvers can't be used.  * Think if this kind of parameters makes sense to be used in POJOs or how we should give support for this."""
"MULE-11290","Task","Core: (other)",1,"ExtensionModelLoaders should not be loaded for each MuleContext",""" uses SPI for discovering  in Container ClassLoader, this should only be made once instead of per each ExtensionManager created.    Having this code in one place only and outside the ConfigurationBuilder will allow Tooling Runtime Client to use it instead of copying the same logic twice."""
"MULE-11289","Enhancement Request","Extensions: Maven Plugin",0,"Rename all groupIds and validate that runtime dependencies are always provided.","""org.mule dependencies cannot have _compile_ scope.    plugins declared dependencies that has a groupId that starts with _org.mule.runtime_ or _com.mulesoft.mule.runtime_ should always be provided to avoid the extension to be packaged with those jars.    To enforce that we should validate it at package time."""
"MULE-11288","Enhancement Request","Extensions API|sdk",1,"Add all metadata model dependencies as provided in the extensions parent poms","""add the metadata-model-xml, metadata-model-json and metadata-model-java as provided dependencies on the extensions parent pom"""
"MULE-11287","Task","Core: API",1,"Copy bulk operation classes from mule-commons to mule-api","""Mule commons dependecy must be removed from mule 4. In order to to that, classes used for bulk operations, must be copied to mule-api project. (mule 3.x still depends on these classes, so they can't be moved)"""
"MULE-11304","Enhancement Request","Extensions API",5,"Cannot add @Alias annotation to operation parameter, function parameters and function names","""The Alias annotation does not include PARAMETER in its @Target's """
"MULE-11302","Bug","Modules: XML, XSLT, XPath, SXC",0,"Default XML Transformer factory does nor support StAXSource","""The Xalan lib in the endorsed folder does not support StAXSource, but that is being given to it when trying to get a Document from an XMLStreamReader."""
"MULE-11296","Task","Modules: Sockets",5,"Socket extension is not using CustomClassLoadingLengthProtocol","""Sockets extension defines different TcpProtocols, and almost all of them are used, but org.mule.extension.socket.api.connection.tcp.protocol.CustomClassLoadingLengthProtocol is not.  Probably this was an omision and must be added, otherwise that class must be removed."""
"MULE-11294","Task","Core: API",1,"Review which org.mule.runtime.core.api.debug package must be maintained","""Package org.mule.runtime.core.api.debug contains API used to provide debugging capabilities to Mule components. Parts of it will be replaced with the interception API, but other components should be maintained and probably moved to mule-api"""
"MULE-11314","Bug","Core: (other)",8,"Test connection issue with http listener, server is stopped","""Doing test connection with this app        you get the following message    Test connection failed: Server on host 127.0.0.1 and port 8081 is stopped.  Server stopped"""
"MULE-11313","Bug","Core: (other)|sdk",8,"NPE doing test connection for http request with default values","""If you try to do test connection with this app you get a NPE        stack trace    """
"MULE-11312","Bug","Core: (other)",8,"Test connection error when having two listener config with the same data","""If you try to execute test connection in this app:        It seems it tries to start a server in the same port twice"""
"MULE-11311","Bug","sdk",3,"allowInlineDefinition annotation is ignored on packaging","""An operation defined with the following signature:        Generates the following XML schema:          Which allows the definition of the query both as a child element and as an attribute.    The code is available here: https://github.com/mulesoft/mongo-connector/tree/d3e70daf96ee16652edb27f75e65e0f00e11662d  """
"MULE-11309","Enhancement Request","Extensions API",13,"Implement the Extensions Client.","""Develop a mule java client api to execute extensions operations.    A first API approach could be something like this. (without adding the capability to pass an Event)        Key points:   * Smart Connectors support  * Maybe the execute methods should receive an Event.  * Operation parameters default values and null safeness"""
"MULE-11307","Task","Modules: (other)",8,"Separate OAuth extension from the implementation","""This would allow for components to use OAuth authentication without needing to use the OAuth extension.    As part of this, remove the dependency of OAuth with the Event interface to a minimum."""
"MULE-11315","Bug","sdk",5,"Field setter for aliased inline parameter group fails to inject parsed value","""When a parameter group has a parameter with an Alias, like:         And used as an inline group:         then the aliased parameter `myName` is parsed correctly but fails to inject it in the Object, while the non-aliased parameter `age` is injected without a problem.  """
"MULE-11322","Task","Build: Maven",1,"Clean up POM unused properties","""Clean up POM unused properties"""
"MULE-11320","Enhancement Request","sdk",1,"Add stop capability to ExtensionWalker","""Add stop capability to ExtensionWalker"""
"MULE-11319","Enhancement Request","Modules: File|Modules: FTP",5,"Add list-exclusive operation to file and ftp extensions","""support exclusive list"""
"MULE-11318","Enhancement Request","Modules: File|Modules: FTP",5,"File and FTP list operations should return list of messages","""Drop TreeNode in favour of List<MuleMessage>"""
"MULE-11317","Enhancement Request","sdk",8,"Add support for Literal parameters","""*Add support for Literal parameters*    * Add a mechanism to be able to retrieve expression values for a certain parameter in the same way as {{ExpressionSupport.Literal}}"""
"MULE-11316","Enhancement Request","sdk",8,"Update the DslElementSyntax to be a tree representation of the component","""Currently, when using the DslSyntaxResolver to resolve the DSL of a top level component like an Operation or Source, the user has to manually iterate over the component's parameters in order to obtain the full tree-like representation of the element in the DSL.    Changing the DSL to provide a nested view of the elements will simplify it's traversal and allow for easier consumption of the API"""
"MULE-11332","Bug","Build: Integration Tests",1,"ArtifactClassLoaderRunner - Is not considering exclusions declared on rootArtifact pom file","""In some cases it is required to exclude transitive dependencies and this is declared in the pom.xml file of the rootArtifact but AetherClasspathClassifier is not considering this when creating the Dependency object for each test scope dependency declared as direct dependency."""
