"issuekey","type","components","storypoint","title","description_text"
"CLI-903","Improvement","Core",13,"Investigate locking down NPM dependencies","When deploying NPM modules, even if we specify exact versions in our package.json file, those dependencies could be less strict in what they choose to use. The end result is that every install of our NPM modules could be different, leading to difficult-to-reporduce bugs.    One solution is to use tools like shrink-wrap or lockdown:    https://www.npmjs.org/doc/cli/npm-shrinkwrap.html  https://www.npmjs.org/package/lockdown    Some goals:    * People can use NPM install from the NPMJS repo like before  * They only get the exact set of direct and indirect dependencies we've tested    There is a concern (as noted in APPTS-1879) that a dependency could be unpublished from NPM. It's unclear how prevalent that is, but it is a possibility.    If we instead decided to host a version of our nodules external to NPMJS, then we'd need to make sure we removed them from the main repo to avoid confusion.  "
"CLI-649","Bug","Titanium",5,"Android build tool warning directs user to run ""ti config""","h5. Description:  I was warned in console of a potential compatibility issue with my build tools. This warned told me to set with ""ti config"". This should be updated to reflect new tools.        h5. Steps to reproduce:  1) Install Android build tools 22  2) Create an android project in studio or CLI and run on emulator or device    h5. Result:  The console warning appears with references to ""ti config""    h5. Expected Result:  The warning should say ""appc ti config"""
"CLI-517","Improvement","Core",5,"Add ""appc test"" command","I would like not to use any NPM commands when using Arrow as I feel it is confusing to jump between the two.    Add `appc test` which passes through to `npm test`"
"CLI-531","Improvement","Core",5,"appc unpublish should support ""--project-dir""","h5. Description:  While closing a related ticket, I tried {{appc run}}, {{appc publish}}, and {{appc unpublish}} from outside the project directory. {{appc unpublish --project-dir}} does not work.    An error is shown like:      h5. Steps to reproduce:  1) Create or use an Arrow project, publish the app  2) From outside the directory, run {{appc unpublish --project-dir <your directory here>}}    h5. Result:  The app does not unpublish, {{appc unpublish}} help does not show support for {{--project-dir}}    h5. Expected Result:  Unpublish support for {{--project-dir}}"
"CLI-615","Bug","Titanium",5,"Unable to run 'appc setup' on io.js","appc won't setup on io.js    "
"CLI-563","Improvement","Security",0,"Alert users when attempting to run an app that belongs to a different org than they are currently logged in as","if the current user is logged in under Org A and tries to run an app created under Org B that fails. The error message is cryptic:    That's fine if the user has no rights to Org B, we shouldn't give any details about it. But if the user _is_ a member of the other org that the app belongs to, we should give more details about why we can't run this app. Specifically we should tell them they are logged in under Org A, the app is part of Org B and that they need to logout and back in under Org B to run it."
"CLI-561","Improvement","Verification",3,"Automatically prompt for new login when session is invalid","Every now and then I get the error we see reported in the Q&A a lot as well:        Logging out (I using {{-D}} to be sure) and in again fixes it.    I think the UX would be better if don't spit out an error but inform the user the session as expired and he needs to login again. Then under the hood logout, clean up whatever we can and present the login again.    "
"CLI-571","Bug","Core",1,"Appc ti -v returns Appc CLI version","When I run {{appc ti -v}} I get the output of {{appc -v}}.    *Steps to reproduce issue*:  1. Run {{appc ti -v}}    *Actual Results*:  Same output as {{appc -v}}    *Expected Results*:  Output should show the local Titanium CLI version."
"CLI-570","Bug","Titanium",8,"Titanium always does full rebuild, forced by encryptJS","When building a Titanium app for iOS Simulator, it always forces a rebuild because *JavaScript files need to be re-encrypted*. This even happens when you set deploy type to development. It does however *NOT* happen when you skip {{appc run}} and use {{ti build}} directly.    This issue makes rebuilds take a lot longer then needed.    h1. To reproduce    1. Create a project.  2. Run the project via AppC ({{appc run -p ios}}) once for an initial build.  3. Run the project via AppC again ({{appc run -p ios}}) and confirm it says: {{Forcing rebuild: JavaScript files need to be re-encrypted}} and later {{Forcing rebuild: ApplicationDefaults.m has changed since last build}}.  4. Run the project via AppC with development deployType ({{appc run -p ios -D development}}) once for a new build with changed deployType.  5. Run the project via AppC with development deployType ({{appc run -p ios -D development}}) again and confirm it says the same.  6. Run the project via Ti ({{ti build -p ios}}) once to generate a new build.  7. Run the project via Ti ({{ti build -p ios}}) again to confirm that this time it does not force a rebuild.    Found by this user:  https://community.appcelerator.com/topic/203/appcelerator-forcing-a-rebuild-for-javascript-re-encryption"
"CLI-585","Bug","Core",3,"Can not login in Appcelerator Studio","Can not login to Appcelerator Studio, I'm receiving the error:  ERROR | Required body parameter: userAgent missing  "
"CLI-579","Bug","Core",5,"Errors updating Core CLI when Studio is open","When trying to update the Core CLI from terminal (via {{appc use latest}} or {{appc setup}}) I get errors when Studio is open.    *Steps to reproduce issue*  1. Open Studio  2. Run {{appc use latest}} (do not already have the latest version installed)  -----------------------  3. Delete the latest folder from {{~/.appcelerator/install}}  4. Close Studio  5. Run {{appc use latest}}    *Actual Results*  2. Install of latest version fails  5. Install succeeds    *Expected Results*  Installs of latest version succeed    *Notes*  This makes it very difficult to install CLI updates from inside Studio.  I tested this many times. 10/10 installs succeeded with Studio closed, 10/10 installs failed with Studio open."
"CLI-577","Improvement","Core",5,"Need to add proxy logic to underlying appc process such as acs","same as we're using here     https://github.com/appcelerator/appc-cli/blob/c0f602a2992ee27fbe8c7a1328eedec422f912a7/lib/constants.js#L200    this code above should reference APPC_CONFIG_PROXY env    and this code should be refactored    https://github.com/appcelerator/appc-cli/blob/7a134ba6a50624ea9046b1d7578547b8760b21ee/lib/commands/login.js#L511    we need the front-end and the appc cli to both respect the proxy."
"CLI-574","Improvement","Core",3,"Login validation error message not passed through prompt from CLI","Please refer to Studio ticket.  https://jira.appcelerator.org/browse/TISTUD-7325    Studio is listening to CLI through socket communication through request and response protocol model.  In case of Sign-in, If user is not provided any credentials and entered Ok, will get the proper error message from CLI. The response looks like below.    {""type"":""error"",""message"":""validate error: you must enter a value for the Appcelerator ID"",""question"":[{""type"":""input"",""name"":""username"",""message"":""Appcelerator ID:""},{""type"":""password"",""name"":""password"",""message"":""Password:""}]}    If user provided wrong credentials, then CLI is not returning the error message from the server. Response looks like below.    {""type"":""question"",""question"":[{""type"":""input"",""name"":""username"",""message"":""Appcelerator ID:""},{""type"":""password"",""name"":""password"",""message"":""Password:""}]}    Expected: CLI should send error message, so that same will be passed back to the studio user, they can able to see what went wrong."
"CLI-573","Bug","Core",0,"Random ""Cannot find module"" errors when updating via ""appc use latest""","Every now and then people get {{Cannot find module}} errors during {{appc use latest}} and sometimes with {{appc run}}.    * https://community.appcelerator.com/topic/123/the-login-server-returned-an-error/19  * https://community.appcelerator.com/topic/150/can-not-login-to-appcelerator-studio/5  * https://community.appcelerator.com/topic/219/error-cannot-find-module-after-update-0-2-255  * https://community.appcelerator.com/topic/185/error-cannot-find-module-arrow/2 (slightly different, during appc runï»¿)"
"CLI-586","Improvement","Core",3,"Clean up appc new arguments","Clean up the undefined arguments passed to titanium during app creation. This could cause problems.    "
"CLI-582","Bug","Core",2,"CLI prompts for login twice when --env option is given in the command","The cli prompts twice for login when --env option is given during appc new or appc run command. However, if username and password are provided as part of the command then it prompts twice for organization even if a valid --org-id is also passed in the command    Steps to Reproduce:  1. Run the command ""appc new --env preproduction""    Actual Result:  The user is forced to enter username, password and organization selection two times.    "
"CLI-591","Bug","Titanium",2,"Build to an iOS device and then an iOS simulator fails","h5.Description    When building an iOS app, if you build the app for device and then build the device for simulator the build for simulator will fail with the following error    {code: title=error 1}  [DEBUG] [ioslib] [ios-sim] [DEBUG] Session could not be started: Error Domain=NSPOSIXErrorDomain Code=22 ""Installation Failed"" UserInfo=0x7f916347ea40 {NSLocalizedDescription=Installation Failed, NSLocalizedRecoverySuggestion=An error occurred while preparing the app for installation (no bundle identifier was found at the expected path)}  [DEBUG] [ioslib] [ios-sim] Exited with code: 1  [ERROR] Project failed to build after 7s 726ms  [ERROR] An error occurred running the iOS Simulator (ios-sim exit code 1)      From what I see, if I wait the full time required for the rebuild (1 hour) then it seems to work fine.    Setting [this line|https://github.com/appcelerator/appc-cli-titanium/blob/master/hook/titanium.js#L146] to be true makes the build work everytime!    The fix for CLI-588 *does not fix this issue*    h5.Steps To Reproduce    1. Create a new application using {{appc new}}  2. Run the app on simulator using {{appc run -p ios -T simulator}}  3. Run the app on device using {{appc run -p ios -T device}}  4. Run the app on simulator using {{appc run -p ios -T simulator}}  5. Clean the app {{appc ti clean}}  6. Run the app on simulator using {{appc run -p ios -T simulator}}    h5.Actual Result    2. App will be built successfully  3. App will be built successfully  4. App will not be built successfully (see error 1)  6. App will not be built successfully (see error 2)      h5.Expected Result    App should be successfully every time"
"CLI-588","Bug","Titanium",3,"Rebuilding an application for Android emulator fails","h5.Description    When rebuilding an application for Android emulator using 0.2.269 the build exits with the following         Full logs are attached as fullOutput.txt     *If I set encryptJS to true [here|https://github.com/appcelerator/appc-cli-titanium/blob/master/hook/titanium.js#L147] then the build has no problems.*    h5.Steps To Reproduce    1. Create a new application using {{appc new}}  2. Build the application for Android using {{appc run -p android -T emulator}}  3. Rebuild the application for Android using {{appc run -p android -T emulator}}    h5.Actual Result    The build will fail with the output above     h5.Expected Result    The build should pass"
"CLI-604","Bug","Titanium",3,"ENOTEMPTY error when creating titanium project ","Run the following command the first time, the project files are created in */Users/feonsua/work/sandbox1/sandbox2/sandbox3*  Run the command again, a classic project is created under */Users/feonsua/work/sandbox1/sandbox2/app1*, which is one directory up than what was being specified. Then the process is terminated with an error message.        This happens when the --project-dir specified is different from the project name."
"CLI-607","Bug","Titanium",1,"Creating a project with an invalid session errors out after logging in","h5.Description    After a session has been invalidated due to logging in on a different machine when creating a new project the CLI will prompt you to login again and authorize your hardware. After logging in the project creation fails with the below.        Just before this error when running with -l trace the following is output, it appears that the session that the CLI is using in not a valid session.         Full output is attached as fullOuput.txt    *When running {{appc new}} after this failure it does not fail*    h5.Steps To Reproduce    1. Login on machine Y {{appc login}}  2. Login on machine X {{appc login}}  3. Create an app on machine X {{appc new}}  4. Create an app on machine Y {{appc new}}  5. Login when prompted    h5.Actual Result    The project creation will error out with the above    h5.Expected Result    The project creation should be successful "
"CLI-606","Improvement","Core",5,"""appc -v"" should show both the NPM and active version","When we're debugging user problems we ask them to make sure they're on the latest version of the appcelerator NPM package. But the only way to check is:        We should include both the NPM and active version with {{appc -v}}.        Q&A: https://community.appcelerator.com/topic/285/appc-setup-causing-error-with-exit-code-1/2"
"CLI-605","Improvement","Core",5,"Attempt to retry when registry is not available","For the appcelerator front-end (apps-install) need to retry when registry is unavailable.    Will try up to 10 times with each iteration waiting 500 x N (where N= is retry count)"
"CLI-612","Improvement","Core",1,"Support logging in to VPC environment","When one or more VPC environments are configured for an organization, need to allow the user to be able to select the environment to log in.  Currently, logs into the production Node.ACS / ACS environment instead of one provided."
"CLI-611","Bug","Core",1,"Auth code is always required on login after session is invalidated","h5. Description  Whenever a user logs in on a machine after having a session invalidated, an auth code will be required when logging in.    For example:  # Log in to CLI on machine 1 using auth code    # Log in to CLI on machine 2 using auth code    # Attempt to use CLI on machine 1, session will be expired but an auth code will also be requested again      h5. Actual behaviour  A user needs to enter an auth code every time they log in to the CLI after their session is invalidated    h5. Expected behaviour  A user will only need to enter an auth code the first time they log in from a machine"
"CLI-610","Improvement","Core",1,"Device authorization code is referred to with two different terms when authorizing hardware","h5.Description    When authorizing a new machine you will be prompted with the following        And then when selecting how you would like to receive the code you will be prompted with the following        The code should only be referred to as an authorization code, or an activation code. Preferably an authorization code as that is what it is    h5.Steps To Reproduce    1. Logout of your machine with {{appc logout -D}}  2. Login with {{appc login}}  3. Run through the prompts    h5.Actual Result    The device auth code will be referred to using two different terminologies     h5.Expected Result    The device auth code should only be referred to using one terminology "
"CLI-609","Improvement","Core",1,"Improve password masking for appc-logger","see https://github.com/appcelerator/appc-cli/pull/145"
"CLI-614","Bug","Core",3,"Console logs incorrectly that setting org to undefined","There is an org in the session.  Unsure if this means the /user/organizations call to 360 is empty.  I'm not able to duplicate with any of my accounts.  If this is an empty orgs payload from 360 causing it, is there a way to drum up the actual URL and response?  Impersonating this user and hitting the endpoint in platform.appc yields the expected org (below).        user/organizations response:  "
"CLI-613","Bug","Core",1,"If you create an Arrow project with an existing name, then ""ERROR  | { errcode: 230, statusCode: 400 }"" is returned","*Details:* If you create an Arrow project with an existing name, then ""ERROR  \| \{ errcode: 230, statusCode: 400 \}"" is returned.    *Note:*  * This is a *regression* since this does not occur with Appc CLI 0.2.276; released in the wild  * This is *not a cloud issue* since this bug is reproducible if you point Appc CLI 0.2.279 to production    *Steps to reproduce:*  # Run {{appc new}}  # Select *Arrow App*  # Specify an Arrow project name that already existed    *Actual:* ""ERROR  \| \{ errcode: 230, statusCode: 400 \}"" message is returned.  *Expected:* ""ERROR  | App <APP_NAME> already exists."" message should appear instead."
"CLI-621","Bug","Titanium",1,"Running appc ti build -h fails with: 'Cannot read property 'properties' of undefined'","h5.Description    When running the command {{appc ti build --help}} or {{appc ti build -h}} the command errors out with the following error        When running with -l trace I see that the following parameters are passed in to the Titanium CLI  {{ARGS:  [ 'build', '-h', '-e', '-l', '-p', '-l', 'trace' ]}}   or  {{ARGS:  [ 'build', '-h', '-l', 'trace' ]}}    The above     Running the command with Titanium CLI@4.0.0-beta8 works with no issues.  Running the command with 0.2.276(prod latest) and 0.2.279(last preprod version) work with no issues so this is a *regression*.    h5.Steps To Reproduce    1. From the command line run {{appc ti build -h}}    h5.Actual Result    The command errors out with the above    h5.Expected Result    The command should print a useful help section"
"CLI-616","Bug","Titanium",8,"Building to android with SDK 3.5.1.GA fails when using appc cli 0.2.280","h6. This might be related to the encryption fix which went in CLI 2.8.0 : CLI-608  h5.Steps To Reproduce:  1. Make sure appc ali 0.2.280 is installed.  2. Build an app for android device/emulator with sdk 3.5.1.GA.    h5.Actual Results:  1. The build fails with errors:    2. Same app when built with SDK 3.5.1.GA & appc cli 0.2.279 builds successfully.  3. Same app when built with latest 4.0.0 & appc cli 0.2.280 builds successfully.    h5.Expected Results:  1. The build should take place successfully with no errors."
"CLI-622","Bug","Core|Titanium",3,"Wrapped `appc ti module --output json` should not show banner","The {{appc ti module -o json}} command shows the banner, where it shouldn't.    h1. Reproduce    * Run {{ti module -o json}} for the correct output  * Run {{appc ti module -o json}} for the incorrect (with banner) output        h1. Related code    https://github.com/appcelerator/appc-cli/blob/a86886e6636c132eb4daa90551c40066c251994b/bin/appc#L86-L89    h1. Suggested solution    If {{\-o}} and {{--output}} is the current standard for setting the output on any of the bundled CLI's, we should keep this standard and change the code to:        "
"CLI-628","Improvement","Core",5,"Improve Offline with Remote Verbiage","Improve the verbiage when the device is offline, and the app is built with remote security policy."
"CLI-626","Bug","Core",8,"Offline packaging is successful for Android & IOS with CLI 0.2.282","h6.This is a regression. I don't see this issue with appc cli 0.2.276    h5.Steps to reproduce:  1. Install appc CLI 0.2.282.  2. Create an app for android and ios platforms.  3. Go offline.  4. Package the app for both android & ios.    h5.Actual Results:  1. We can package successfully.    h5.Expected Results:  1. We should not be able to package as we are offline & production builds should fail."
"CLI-624","Bug","Core",5,"Platform-SDK: Logout request is incorrect","Calling AppC.Auth.Logout() results in an error in the callback. This is due to an incorrect 'post' rather than a 'get' to the dahsboard /auth/logout endpoint"
"CLI-636","Bug","Core",1,"appc -v returns undefined for NPM version","h5.Description    When running appc -v the NPM version is returned as undefined. This is because it relies on [this pull|https://github.com/appcelerator/appc-install/pull/17] for the NPM package which has not been published yet        h5.Steps To Reproduce    1. Using Appc CLI version 0.2.286 run appc -v    h5.Actual Result    Undefined is returned for the NPM version    h5.Expected Result    The NPM version should be returned and if not available undefined should not be shwon"
"CLI-635","Bug","Core",5,"If you create an Arrow project when the cloud is unstable, then a misleading error message is returned","*Details:* If you create an Arrow project when the cloud is unstable, then a misleading error message is return:    bq. Unable to register the new app with Appcelerator Platform either due to limited connectivity or other unexpected problem. Please retry later using the command 'appc new --import --project-dir /path/to/project' { \[Error: Resource Not Found\]    The {{appc new --import}} command is specific for importing Titanium mobile projects into the platform.    *Steps to reproduce:*  # In terminal, run {{appc new}} when the cloud is unstable  # Select *Arrow app*  # And finish the steps of creating an Arrow project    *Actual:* When the cloud is unstable, the following error message is returned:      *Expected:* Instead of {{appc new --import}}, the messaging should be:    bq. Please retry later using the command 'appc new'."
"CLI-634","Bug","Titanium",8,"Setup does not find latest 4.0.0.RC4","When I run {{appc setup}} the CLI does not find 4.0.0.RC4 while Studio does (see screenshot). Running the command with trace shows it does find 4.0.0.RC4 listed in the releases but somehow it thinks the installed 4.0.0.RC3 is the newest. Running {{appc ti sdk -r}} also lists 4.0.0.RC4.    Trace log:  https://gist.github.com/FokkeZB/27e1c31a9d1808ebcb61#file-console-log-L46"
"CLI-643","Bug","Titanium",2,"Appc ti -v should not print out a banner","h5.Description    When running the command {{appc ti -v}} the command prints the below        Every other version command does not print out a banner so the titanium banner should match the existing behavior for the other commands.    h5.Steps To Reproduce    1. Run {{appc ti -v}}    h5.Actual Result    A banner is printed out    h5.Expected Result    A banner should not be printed out"
"CLI-641","New Feature","Verification",8,"Support switching organizations directly without logging (out and) in","After working with the new CLI and Studio for a while, and being member of multiple organizations I've found it very cumbersome to switch between them.    On the website is a matter of selecting a different organization in the dropdown, but in Studio or CLI there is no such option.    For CLI, you have to run {{appc login}} or {{appc login -o <id>}} if you know the ID by hart. In both cases, you need to enter your username and password again.    The preferred solution would be to be able to do:    "
"CLI-655","Improvement","Core",5,"Implement 'appc info' command","We should implement an {{appc info}} command to display the following:    - Active Appcelerator NPM package version  - Active CLI version  - Active Titanium SDK version  - Studio version (if possible)    As suggested [here|https://jira.appcelerator.org/browse/CLI-606?focusedCommentId=352954&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-352954]"
"CLI-654","Bug","Core",1,"ETIMEDOUT is returned when you publish an Arrow app","*Details:* Occasionally, if you publish an Arrow app, ETIMEDOUT is returned.    *Steps to reproduce:*  # Create an Arrow project on Windows  # Publish the Arrow project: {{DEBUG=* appc publish -l trace}}    *Actual:* ETIMEDOUT is returned:      *Expected:* Appc CLI should be able to handle ETIMEDOUT."
"CLI-658","Bug","Titanium",5,"Encryption fails on Windows when using 64-bit Java","h5.Description    When building a project for device on Windows if the machine is using 64-bit Java then the encryption stage will fail with the following        Switching back to 32-bit Java works.    *Titanium CLI works fine with 64-bit Java*    h5.Steps To Reproduce    1. On a Windows machine check your Java using {{appc ti info -t jdk}}     If you see Program Files (x86) run the following command {{set JAVA_HOME=<64-bit Path}}  2. Create a project using {{appc new}} or use an existing one  3. Build the project using {{appc run -p android -T device --build-only -l trace}}    h5.Actual Result    The build will fail with the above error    h5.Expected Result    The encryption should pass, build should not fail"
"CLI-665","Bug","Core",0,"""appc new"" asks for login without prompting for it","I tried to create a new (Arrow) project and the CLI told me I needed to login first, but without prompting for the login like it used to do, it just exited.        h3. Expected    I'd expected it to prompt for the login directly."
"CLI-664","New Feature","Core",3,"App Preview CLI hook integration","There already is a Ti CLI hook available for App Preview.  Since we're doing this integration, it probably makes sense to ship this with the Ti CLI"
"CLI-667","Bug","Core",8,"Creating an arrow project when logged out fails to register the app","h5.Description    *Checking on platform.appcelerator.com shows that the app is actually created*    When creating an arrow project if your session has expired or you are logged out you will be prompted to log in and then carry on with the creation of the project. When the app is created the following is printed out        Full logs are attached as arrowOutput.txt    h5.Steps To Reproduce    1. Logout of the appc cli using {{appc logout}}  2. Create a new project using {{appc new}}  3. Enter your credentials  4. Select an arrow project and input a name    h5.Actual Result    When the project creation has finished the above message will be printed out    h5.Expected Result    The app should be created successfully "
"CLI-670","Bug","Core",0,"Proxy Server settings not carried through properly",".appcelerator/appc-cli.json is a file that is created on macs.  When users need a proxy server on a corporate network, they need to enter the proxy server in studio and the CLI.  Here are the problems I uncovered with regards to the CLI operation.     1) It looks like the values on both are different, proxy differs from proxyServer.       2) Also, not all parts of the CLI, especially when using Arrow are using the proxy server settings.  Especially on ""appc new"", ""appc login"", etc.. all need to ensure they are carrying over the proxy server settings.       3) We should allow the ability to do a ""appc config set proxyServer"" setting without having it to try to auto - update.  Otherwise, it will keep failing as it does not have the ability to work outside a network.     4) Also, some of the services like appc new are doing the up to 10 tries to try to get the source.  If it's using the wrong proxy server settings, it will lock a user out.       FINAL THOUGTS FOR RESOLUTION  - We had to edit the .appcelerator/appc-cli.json to have the right syntax to finally get it to work right.      - the titianium-connection-test -p proxy server usage seemed to be great  to work. Maybe we need to incorporate a proxy server test to make sure the syntax is right after a user enters it.     "
"CLI-679","Story","Core",8,"Build: Update, Package and Deploy the dependencies ","Unified CLI has a lot of dependencies/modules, and if a few of those modules are updated, then there is a chance that we are missing to include those updated modules in new version of appc-cli.    When we attempt to publish a new version of appc-cli, the proposal is -    - We know a list of dependencies (appc-cli-titanium, arrow, appc-platform-sdk...)  - Look for any code changes (in git) after the latest tag, or any changes after the recent version of appc-cli published date.  - For each modified dependent module,   -- Update the version  -- Publish the npm package  -- Tag a release in the specified branch (4_0_X or 4_1_X)  - Change the package.json of appc-cli with all of the modified module versions.  - Publish appc-cli.  - Tag appc-cli version in the github with the release name."
"CLI-676","Bug","Core",5,"CLI needs better support to handle proxy servers","We need better support to handle proxy servers inside the Unified CLI.  Here are some observations to make from being onsite with Comerica recently:     # if AppC Studio has already defined a proxy, can the CLI just use this setting? Studio will put a ""proxy"" server setting in the {{<HOME>/.appcelerator/appc-cli.json file}}. When you first install the CLI, there is no way to insert a proxyServer settings (it always tries to update without checking if a proxy required to get outside). The only workaround was to hack this file and all a proxyServer setting.  # When both are finally defined ( the proxy for studio + proxy for CLI ), the syntax for both seem to be different.  We had to modify to figure out which one worked.  The titanium-connection-test proxy flag seemed to work great. Maybe we can mirror some of the capability.   # We need to ensure that if the proxy is defined, then it should  follow through all the CLI commands.  Found that some commands may not have passthrough to use the proxy server if it is set.     EXPECTED RESULTS    # Provide an command or option to set the proxy server for CLI before the CLI tries to do ""appc use latest"" or run any initial commands ( as they might not work without a proxy server ).  Maybe the CLI can look for a proxy server to be set through studio and use that as well.   # CLI use the proxy server prior to running any request for external resource if the proxy server is set. "
"CLI-680","Bug","Core",8,"Set proxy details without downloading CLI core package","For customers behind proxy server, they are able to download Appc CLI npm package, but not able to download CLI Core. When they attempt to set the proxy server details using {{appc config set proxyServer <value>}} command, it is attempting to download CLI core before saving the config.    We should let users set the config without downloading CLI Core."
"CLI-683","Bug","Titanium",3,"Appc commands fail with no return output","h5.Description    When running {{appc run}} the command is returning and failing with no output, see below        h5.Steps To Reproduce    1. Run {{appc run}}    h5.Actual Result    The command returns with no output    h5.Expected Result    The commands should run as expected"
"CLI-682","Bug","Titanium",3,"Running appc ti commands fail with Error: Cannot find module './commands/config'","h5.Description    When running appc ti command it fails with the following        h5.Steps To Reproduce    1. Run appc ti    h5.Actual Result    The error above is printed out    h5.Expected Result    The command should not fail"
"CLI-687","Improvement","Titanium",5,"appc new should handle the Alloy --testapp option","The Alloy CLI exposed a new option in version 1.7.0 to copy the test application source when a new project is created.  See linked ticket. It would be nice if the Appc CLI can accept this option when creating a new project.  Right now, you have to create a new classic project, then run the Alloy new command.    So instead of running these commands:      A developer can just run this command:  "
"CLI-692","Bug","Core",1,"Directory permission error","Looks like this API is not passing the right args on a directory permission issue.    "
"CLI-691","Bug","Core",3,"using invalid connector on appc install returns error","I typed in the wrong connector and i get a registry error like it's down.    However, its because the registry api is correctly returning 404. our logic for handling down registry is not handling correctly.  need to fix this.    repro with    DEBUG=* appc install connector/appc.mongodb"
"CLI-699","Improvement","Core",1,"Add banner for trial accounts","Add a lightweight CLI banner for Developer trial account.  "
"CLI-700","Bug","Titanium",5,"If I am an indie user then the CLI should not download Soasta and APM","h5.Description    When creating a project is Soasta and APM are not on my system then the CLI will download them for me, however if I have an indie or team plan then these should not download as I am unable to use them on these plans.    h5.Steps To Reproduce    1. Remove APM and Soasta from your Titanium folder  2. Sign in to an indie account   3. Create a project    h5.Actual Result    Soasta and APM is downloaded for indie and team plans    h5.Expected Result    Soasta and APM should not be downloaded on plans that don't have it"
"CLI-703","Bug","Titanium",5,"When creating an app on prod the process errors with cannot call method 'indexOf' undefined","h5.Description    *This is a regression as when using 4.0.2, project creation has no issues*    When creating a project on production and using the latest CLI in preprod, project creation fails with the below         [This is the line|https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/new.js#L358] that is failing out    h5.Steps To Reproduce    1. Using the latest appc cli create a project on prod using {{appc new}}    h5.Actual Result    The project creation fails    h5.Expected Result    Project creation should not fail"
"CLI-708","Bug","Core",1,"Login token flag is not removed","*Details:* When you login with the token flag, ""token missing in API definition"" error is returned. *This flag should be removed since it is not supported anymore.* Snippet from the Arrow flow:  {quote}  JeffH  this is not a github token.  this is a security server token.  i donât think itâs fully supported anymore and we shoudl probably remove it until it is. we donât support github login tokens  {quote}    *Steps to reproduce:*  # In terminal, login with the token flag: {{appc login --username <EMAIL> --password <PASSWORD> -t <RANDOM_STUFF>}}    *Actual:* {{Error: body parameters: token missing in API definition}} error is returned:      *Expected:* Token flag should be removed since it is not supported anymore."
"CLI-706","Improvement","Registry|Verification",3,"Entitlements should be refreshed before failing over a limit","The following scenario has been causing confusion to several customers. The workaround if often simple, but by the time they or we figure it out, they already have a negative experience with a very crucial and sensitive step in our funnel.. paying us (or claiming their free Indie seat).    h2. Current situation  # User tries to build for ad-hoc or store.  # Studio/CLI says they can't and directs them to billing.  # User claims pays or claims his free Indie/Pro/Team seat.  # User tries to build for ad-hoc or store again.  # Studio/CLI still says they can't.  # User gets frustrated and jumps on the Q&A or email.  # We loose valuable support time to figure it out.    h2. Workaround  The workaround is for the user to logout and then in again, triggering their locally stored entitlements to be refreshed.    h2. Solution  Whenever the CLI/Studio would now abort because of a limitation in the entitlements, it should first refresh the entitlements and check again. Only then it should fail if the entitlements still don't allow the user to do what he wanted.    Related Q&A:    * https://community.appcelerator.com/topic/145/unable-to-package-ios-application-in-new-appcelerator-studio  * https://community.appcelerator.com/topic/487/issue-with-my-account-need-appcelerator-billing-help  * https://community.appcelerator.com/topic/145/unable-to-package-ios-application-in-new-appcelerator-studio  * https://community.appcelerator.com/topic/699/unable-to-publish-android"
"CLI-705","Bug","Titanium",0,"Setup does not install latest GA if a newer beta/RC/nightly is active","If you don't have the latest GA but you are running a newer beta/RC/nightly then {{appc setup}} will not install the latest GA for you and wrongly state that the newer beta/RC/nightly is the latest release:        h2. Expected  I'd expect the setup to install the newest GA and just not activate it if the current activated version is newer. It should say what version it is downloading (currently it's not) and reassure the user that his newer version will remain active:        Related Q&A:  https://community.appcelerator.com/topic/377/4-0-0-rc3-now-available/11"
"CLI-711","Bug","Titanium",3,"Appc run -h from within a Titanium project errors out on Windows with SyntaxError: Unexpected token ILLEGAL","h5.Description      When running {{appc run -h}} or {{appc run --help}} on Windows the command errors out with the below        Comparing the logging against {{appc run}} which run with no problems it appears that they are using a different titanium binary with the -h flag using {{C:\Users\Windo_000\.appcelerator\install\4.1.0-4\package\node_modules\appc-cli-titanium\node_modules\.bin\titanium}} and without the -h {{C:\Users\Windo_000\.appcelerator\install\4.1.0-4\package\node_modules\appc-cli-titanium\node_modules\titanium\bin\titanium}}    h5.Steps to reproduce    1. On a Windows machine run {{appc run -h}}    h5.Actual Result    The command will error out    h5.Expected Result    The command should print out help text"
"CLI-710","Improvement","Core",1,"Show notice banner when running CLI in preproduction","I would like to be able to more easily know if I'm running in preproduction when I run a command.    Print out an explicit banner in the CLI when running a command against pre-production.  This banner shouldn't show normally in production."
"CLI-709","Bug","Titanium",3,"Android classic app crashes on launch with java.lang.IllegalArgumentException due to CLI injected code related to ACS","h5.Steps To Reproduce:  1. Create a classic android app from studio or appc CLI.  2. Build it to an android device/emulator.    h5.Actual Results:  1. The app crashes at the splash screen with error:    2. We saw that when services are enabled on app creation CLI adds this code to the app.js which is causing the crash.    3. When services are enabled after the app has been created the app launches fine.    h5.Expected Results:  1. The app should not crash after launch on splash screen."
"CLI-716","Improvement","Core",1,"Update platform sdk to use new api on login","{{lastname}} property is now available on login response. we can use this instead of calling User.find to get it.    "
"CLI-717","Improvement","Titanium",3,"Improve feedback when creating a module","h5.Description    When creating a Windows platform module the process takes a lot longer than the other platforms, just android takes ~2s, Windows takes ~40s. This is unavoidable because there are certain steps to be taken such as moving all files to a temp directory if necessary due to path length issues.    If module creation occurs from the Titanium CLI using {{ti create}} then there is logging as shown in logging.txt, this logging is not shown by the Appc CLI and there is just a spinner for ~40s, there should be some more feedback from the CLI to let the user know what is happening.    h5.Steps to reproduce    1. Create a module using {{appc new --type timodule --name module  --id com.module --force}}    2. Create a module using {{ti create --type module --name module --id com.module --platforms all --urlblah --workspace-dir . --force}}    h5.Actual result    1. No logging occurs  2. Logging occurs    h5.Expected result    Due to the long creation time there should be some sort of feedback to the user other than a spinner"
"CLI-720","Bug","Core",3,"Appc info output is incorrect","The output for {{appc info}} is wrong. No platforms are shown, there are two banners, commands listed are for {{appc ti <command>}}, two newlines are needed before the ""Appcelerator CLI"" section, and the general output of the command seems to be for a different command altogether.        *Steps to reproduce issue*  1. Run {{appc info}}    *Actual Results*  The output is incorrect as explained above    *Expected Results*  The output should reflect the correct info for Appc CLI"
"CLI-722","Improvement","Core",0,"appc info: Should display all relevant versions, not just Installer + Core","Now we're wrapping Titanium + ACS + Alloy CLI in the AppC CLI which itself is 2 parts, things get confusing :) It would help if {{appc info}} would give you more detail like:        It would even better if it would show incompatibilities etc.    I think in the end we have to find an effective merge of {{appc ti info}} and {{appc info}} which has a good balance between detail and clarity."
"CLI-725","Improvement","Titanium",5,"Support for building Titanium 4.2 iOS apps","In Titanium 4.2, the iOS build changed how it copies files and this causes the encrypted files to be deleted prior to being packaged. appc-cli-titanium simply needs to unmark the encrypted files for deletion."
"CLI-724","Improvement","Core",1,"Fixed user-agent header for registry client","Reporting:    ""userAgent"": ""Appcelerator Arrow SDK/1.0.0"",    For user-agent header for registry client in CLI.  We should set it to the value of AppC.userAgent (from appc-platform-sdk) so we can get the correct version in our analytics.  "
"CLI-731","Bug","Core",1,"Error when publishing app","found publishable component appc-web-server at /Users/jhaynie/work/proto/appc-web-server  loading for publish /Users/jhaynie/work/proto/appc-web-server/package.json  Publishing application ... this could take several minutes  loaded config host=https://admin.cloudapp-enterprise-preprod.appctest.com, port=443, sid=connect.sid=s%3AcknqSFoZhNpq3XLrN8OEr26e.bR0sqEdPpbZOvn8SGNSdgzajFwBikOBVvGBQSorYBlg  sending {""method"":""get"",""url"":""https://admin.cloudapp-enterprise-preprod.appctest.com:443/publish/appc-web-server"",""headers"":{""Cookie"":""connect.sid=s%3addbR0sqEdPpbZOvn8SGNSdgzajFwBikOBVvGBQSorYBlg"",""User-Agent"":""Appcelerator/1.1.2 (Macintosh; Intel Mac OS X 14_3_0; en_US) Version/1.1.1 Safari/0.0.0 appcelerator/4.1.1-1"",""Accept"":""text/json, application/json""},""gzip"":true,""json"":{""orgid"":14301}}  receiving err=null, body={""success"":true,""message"":""Published version: 1.0.1. No version is deployed currently.""}  ERROR  | TypeError: Cannot read property '1' of null      at /Users/jhaynie/.appcelerator/install/4.1.1-1/package/node_modules/arrow/lib/cloud/index.js:229:24      at Request._callback (/Users/jhaynie/.appcelerator/install/4.1.1-1/package/node_modules/arrow/lib/cloud/index.js:186:4)      at Request.self.callback (/Users/jhaynie/.appcelerator/install/4.1.1-1/package/node_modules/request/request.js:197:22)      at Request.emit (events.js:110:17)      at Request.<anonymous> (/Users/jhaynie/.appcelerator/install/4.1.1-1/package/node_modules/request/request.js:1050:14)      at Request.emit (events.js:129:20)      at Gunzip.<anonymous> (/Users/jhaynie/.appcelerator/install/4.1.1-1/package/node_modules/request/request.js:996:12)      at Gunzip.emit (events.js:129:20)      at _stream_readable.js:908:16      at process._tickCallback (node.js:355:11)  "
"CLI-733","Bug","Titanium",5,"When building for Windows with encryption the build never gets further than JavaScript files need to be encrypted","h5.Description    When building for Windows with encryption the build does not get further than {{JavaScript files need to be encrypted}}. This *is a regression* from 4.1.1-4 as the build works fine there    h5.Steps to reproduce    1. Build a Windows project using {{appc run -p windows -T wp-device}}    h5.Actual result    The build will not pass {{JavaScript files need to be encrypted}}    h5.Expected result    The build should continue"
"CLI-735","Bug","Verification",5,"Android : If remote encryption property is set & app is built to emulator when machine is offline, no security violation is seen","h6. This is a regression. This issue was not see when last time security was tested (Don't remember what CLI version we tested last time).    h5.Steps To Reproduce:  1. Create a classic app.  2. Add the security property to the apps tiapp.xml    3. As its a new app it has to be built once before we go offline on our machine, but we also don't want to auto launch the app by building it from studio. To prevent this, build the app using ""-b"" (build only) flag from CLI when your machine is online.  4. Now go offline & build to android emulator from studio.    h5.Actual Results:  1. We see no security violation & the app launches fine.    h5. Expected Results:  1. We should see security violation."
"CLI-734","Bug","Core",5,"Developer banner should not show when a command is run with --no-banner or -o json","h5.Description    When logged into a developer account and running commands with {{\-o json}} or {{--no-banner}} the developer banner should not be shown. This is causing issues such as the dashboard not opening in Studio as seen [here|https://community.appcelerator.com/topic/2607/dashboard/3]            h5.Steps to reproduce    1. Log into a developer account  2. Run {{appc info -o json}} and {{appc new --no-banner}}    h5.Actual result    The developer banner is shown    h5.Expected result    The developer banner should not be shown"
"CLI-737","Bug","Titanium",5,"Files are encrypted on first build when building with development deploy type","h5.Description    When building with a deploy type of development(simulator/emulator build) on the first build the files are being encrypted. On iOS and Android this appears to be handled fine, however on Windows there appears to be issues as the build will not get further than the encryption stage. See the below logging for a comparison between 4.1.0 and 4.1.1-7 CLI.     I am *unsure if this is a regression* as it may be expected with the changes to build verification but it is a *change in behavior*.     Due to this on the first build to a Windows Phone emulator the build will stop at {{Processing JavaScript files}} and not continue, killing the build and rebuilding will fix this.    {code: title=4.1.0}  [INFO]  Building for Windows Phone emulator: 8-1-1  [INFO]  Deploy type: development  [INFO]  Debugging disabled  [INFO]  Profiler disabled  [INFO]  Forcing rebuild: C:\Users\WINDO_~1\AppData\Local\Temp\hmm10\build-manifest.json does not exist  [INFO]  Launching emulator: 8-1-1  [INFO]  Processing JavaScript files  [INFO]  Generating i18n files  [INFO]  Generating Native Type Wrappers  [INFO]  Generating stubs for: Platform.Object  [INFO]  Setting up native modules for CMakeLists.txt...      h5.Steps to reproduce    1. Create a project using {{appc new --type titanium --classic --name appName --id com.appc --force}}  2. Build using appc CLI 4.1.0 using {{appc run -p ios -T simulator}}  3. Create a project using {{appc new --type titanium --classic --name appName --id com.appc --force}}  2. Build using appc CLI 4.1.1 using {{appc run -p ios -T simulator}}    h5.Actual result    When building to simulator/emulator for the first time on 4.1.1-7 the files will be encrypted    h5.Expected result    Based on historical behavior when building to simulator/emulator the files should not be encrypted at all"
"CLI-740","Bug","Verification",5,"Remove unnecessary secondary call to retrieve user information","h6.Accounts Details  {quote}  Account:   fism_dl_tidistribution@fisglobal.com     Joined:   Jul 20, 2015 10:19 PM   Last Updated:   ---   Organization:   FIS Mobile Sandbox   (100000356)         Account:   fism_dl_tidevelopment@fisglobal.com     Joined:   Jul 20, 2015 10:20 PM   Last Updated:   ---   Organization:   FIS Mobile Sandbox   (100000356)  {quote}    h6.Still asking for the auth code. Here is the terminal output:   "
"CLI-741","Improvement","Core",8,"Allow for refreshing of session without logging in again explicitly","Although we have lengthened the session duration to three days, the better approach is to allow silent refresh of the session behind the scenes. Both Google and Salesforce have such a mechanism:    https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/intro_understanding_refresh_token_oauth.htm    https://developers.google.com/identity/protocols/OAuth2WebServer?hl=en"
"CLI-747","Bug","Core",1,"Node processes are getting orphaned in certain cases","If you kill a top level process like appc run (the first process), the sub processes that are spawned are not killed and become orphaned.    I am easily able to reproduce this with a test case.  Sometimes you can reproduce it with killing the process with CTRL+C before fully started running.    You can probably also easily reproduce this by starting an arrow server successfully then just sending a kill SIGINT to the main appc process from ps.  "
"CLI-746","Improvement","Core",5,"Add SPDX-compliant license string","We should use the SPDX ""LicenseRef-LICENSE"" instead of ""Appcelerator Commercial"" in our package.json files to avoid the warning ""license should be a valid SPDX license expression""    This would also include the addition of a LICENSE.md file at the root"
"CLI-755","Bug","Core",5,"Cannot run appc commands with CLI 4.2.0-5+","When using CLI core 4.2.0-5+ I am unable to build, clean, or run {{appc info}}. I get the below error:      *Steps to reproduce issue*  1. Install and use CLI core 4.2.0-5+  2. Build a project from the CLI    *Actual Results*  Commands fail with above error    *Expected Results*  Commands run without error    *Notes*  Workaround is to go to your appc-cli-titanium folder and run {{npm install}}    "
"CLI-754","New Feature","Core",1,"CLI: Add support for --no-progress flag to hide progress bars","The ""appc"" command uses a progress bar to show how much of an SDK has been downloaded or published. The problem is the progress bar keeps writing to stdout and if you subprocess the ""appc sdk"" command or pipe the output to a file, the output is all messed up. It would better to just have a flag that disables the progress bar."
"CLI-762","New Feature","Registry",5,"Publish titanium project templates to Marketplace","The appc-cli currently supports publishing only Arrow services to registry. It has to add support for publishing project templates into registry.    Users should be able to publish any existing titanium project as a template to Marketplace. If the root directory of the project already contains appc.json file specifying the type as 'template', then it should be able to publish the component to Marketplace, or if some information is missing, then appc-cli should prompt while the user is trying to publish."
"CLI-761","New Feature","Registry",8,"Publish titanium module into Marketplace","The appc-cli currently supports publishing only Arrow services to registry. It has to add support for publishing titanium modules into registry.    While appc-cli creates a module, it should create a appc.json file in the root of the project directory and should contain information about the author/owner, type (timodule), module description, version, license, support details, access level, license etc.    If the appc.json file is not available during publish, then it has to prompt for basic information, and then auto-create appc.json file, and then publish the module into registry."
"CLI-758","Bug","Core",1,"Cannot install 4.2.0-12+; memwatch-next install errors","When trying to install any CLI Core version 4.2.0-12 or higher, I get the below error:      *Steps to reproduce issue*  1. Do not have CLI 4.2.0-12 or higher installed  2. Run {{appc use 4.2.0-12}} or any 4.2.0-X where X > 12    *Actual Results*  I get the above error and cannot install    *Expected results*  I do not get an error and can install the CLI    *Notes*  Tested 4.2.0-12 through 4.2.0-24"
"CLI-768","Bug","Titanium",8,"Alloy app fails to build on window's with error ""Alloy compiler failed""","*This is a regression. Builds successfully with 4.1.2, 4.2.0-1 appc CLI. Did not check all the versions of the 4.2.0-X CLI as there are a lot. Went back till 4.2.0-40 & it failed. The build fails with 4.1.3-1 appc CLI as well.*    h6. Created this ticket In Unified CLI project as building with older CLI works fine. Please move to other project if suitable.    h5.Steps To Reproduce:  1. Create an alloy project on windows machine. (I used win 8.1 64 bit).  2. Build the app for windows or android.    h5.Actual Result:  1. The alloy compiler fails:      h5.Expected Results:  1. The alloy app build successfully on windows."
"CLI-767","Bug","Core",3,"""Missing required option: --id <value>"" error is returned if you specify all the required flags to create an app","*Details:* {{Missing required option: --id <value>}} error is returned if you specify all the required flags to create an app.    *Steps to reproduce:*  # Run the following command:  {{appc new --type titanium --subtype new  --platforms iphone --id com.appcelerator.testing --name monkey --project-dir ~/monkey  --url http:// --log-level trace}}    *Actual:* {{Missing required option: --id <value>}} error will appear:      *Expected:* No errors should appear."
"CLI-765","Bug","Core",1,"""appc new --type app"" is not available in the Appc CLI","*Details:* {{appc new --type app}} is not available in the Appc CLI.    *Note:* The following {{--type}} values are available in the Titanium CLI:      *Steps to reproduce:*  # In Appc CLI, run: {{appc new --type app}}    *Actual:* {{Unable to find plugin for project type ""app""}} error appears:      *Expected:* {{appc new --type app}} should be available."
"CLI-774","Bug","Titanium",8,"Support for WatchOS2 project in appc","With the latest Titanium CLI and SDK, we are finally able to build watch OS2 apps. We need *appc new* and *appc run* to support the following:    To create a watch OS 2 and titanium Project, follow these steps:  1. Create a new project: ti create --type app --name foo --id com.appc.foo --platforms all --url http://foo --workspace-dir .  2. cd into the project: cd foo  3. Add a WatchKit 2 app: ti create --type applewatch --name bar --template watchos2  4. Build the app: ti build -p ios -I 9.0 --launch-watch-app"
"CLI-778","Bug","Core",5,"Update check from the appcelerator npm does not inform the user of available update","Update check in the appcelerator npm relies on response from {{/api/appc/list}}, specifically the attribute {{latest}}, to check against installed versions and determine if there is new appc-cli package. However, the response does not have the {{latest}} attribute, the user is not informed of any updates.    bq. appc:util update check completed, latest is undefined +3ms"
"CLI-776","Bug","Core",3,"Community: 502 Bad Gateway is returned when building a mobile project with GA stack","*Details:* In the community, there are reports that when you build a mobile project, a *502 Bad Gateway* is returned: https://community.appcelerator.com/topic/2982/problem-with-build-application-on-mac-502-bad-gateway/2    *Notes:*  * Currently, we are unable to reproduce this issue internally.  * This issue seems to affect developers with an indie account, however, issue is still unreproducible internally with indie account.  * Clean install does not seem to remedy the issue.    *Possible steps to reproduce:*  # Switch to an indie account  # Make sure you have the GA stack installed on your machine; see Environment field  # Create a mobile project with {{appc new}}  # Then, run project with {{DEBUG=* appc run -p ios -l trace}}    *Actual:* 502 Bad Gateway is returned during mobile project build:      Also, see attachment for full community trace log.    *Expected:* Should be able to build a mobile project without any issues.  "
"CLI-792","Bug","Core",1,"Regression running project","â¡ appc run -l trace  fs.js:761    return binding.readdir(pathModule._makeLong(path));                   ^  Error: ENOENT, no such file or directory 'lib/commands'      at Error (native)      at Object.fs.readdirSync (fs.js:761:18)      at Object.<anonymous> (/Users/jhaynie/.appcelerator/install/5.0.0-20/package/index.js:61:19)      at Module._compile (module.js:460:26)      at Object.Module._extensions..js (module.js:478:10)      at Module.load (module.js:355:32)      at Function.Module._load (module.js:310:12)      at Module.require (module.js:365:17)      at require (module.js:384:17)      at Object.<anonymous> (/Users/jhaynie/.appcelerator/install/5.0.0-20/package/bin/appc:11:12)"
"CLI-791","Improvement","Core",3,"If login is needed it should end with a message before continuing with original command","The following shows that when a login is required for a command, there's nothing between the prompt for the login and the logs of the actual command - which in this case is a question as well.    This is confusing. There should be at least a blank line, but probably some message (_You are logged in_) before continuing.    "
"CLI-788","Bug","Core",2,"""use"" not listed in help","Running {{appc}} does not list the {{use}} command."
"CLI-785","Improvement","Core",1,"Prompts/Options for creating WatchOS2 project are confusing when not ran in project dir","The questions/options for {{appc new -t applewatch}} are confusing and need to be improved:    * Where's the project directory? ./appc-sample-ti500  ** Of the existing Titanium app or for the Watch app? Should say _Titanium project_  * What's the project name? appc-sample-ti500  ** Of the existing Titanium app or for the Watch app? Can it be the same? If so, it should have that as default. If not, it should say so and validate it is not.  * Do you want to overwrite? Yes  ** Any existing extension or the Titanium app? If it's about the extension then it should say so and only if one is present (when I did it hadn't). If it is about the app.. then I don't get it.  * Please provide your password for enabling Test service:  ** For the Watch app? If it's for the Titanium app then why prompt when I create a Watch app?    The question to overwrite is even more confusing because when there *is* already an extension with the given name it will fail:        *UPDATE:* I've seen that if I run {{appc new -t applewatch}} in the project directory itself it will only ask for the name."
"CLI-794","Improvement","Titanium",3,"""appc new --type applewatch"" should default to watchos2 instead of watchkit1","Since from now on people will likely create Watch OS 2 apps instead of WatchKit 1 extensions we should default to {{watchos2}} for {{appc new --type applewatch}}."
"CLI-798","Improvement","CLI",3,"For android, we're sending unnecessary data in build-verify","Notice the ""bindings"" property that is attaching a bunch of stuff that is unnecessary and wasteful.  We should remove this (and any other) key from the tiapp object before sending api.  "
"CLI-803","Improvement","Core",3,"Node 4.0 GA doesn't work with CLI","Running appc just immediately exits    Tried re-installing the npm with same result.  "
"CLI-807","Bug","Core",0,"Appc CLI core fails to install with memwatch errors with node 0.10.13 & 4.0.0","h5.Steps To Reproduce:  Follow the same steps for node 0.10.13 & 4.0:  1. Do appc use latest.  2. The 4.1.3 core will be downloaded & installation will begin.    h5 Actual Results:  1. The installation errors out at memwatch install :  *With node 0.10.13:*      *With node 4.0:*      h5. Expected Result:  1. The appc core installation gets completed successfully. "
"CLI-810","Bug","Titanium",3,"appc run -p ios is forcing rebuild for subsequent runs when there's no changes"," is forcing rebuild for every subsequent run, even when there's no changes in the project.    h4. Steps to reproduce.  1. appc new  2. appc run -p ios -l trace  3. appc run -p ios -l trace    h4. Expected result  If you look at the trace, ""invoking xcodebuild"" should happen for 2., ""skipping xcodebuild"" will happen for 3.    h4. Actual result  If you look at the trace, ""invoking xcodebuild"" happens for 2 and 3.    The line of code in question is here:  https://github.com/appcelerator/appc-cli-titanium/blob/master/hook/titanium.js#L201  If this is commented out, the problem here is solved, but unsure if there are other dependencies that might be affected by this line of code."
"CLI-812","Bug","Core",0,"Error when generating developer certificate and public/private keys when logging into preprod","h5. Description  When trying to log in to preproduction through CLI an error will display say ""The request is not recognized!"" after trying to generate developer certificate and private/public keys.    h5. Steps to recreate  1.Enter log in details in CLI   2. Choose a preproduction environment    h5. Actual Result  An error is displayed, although it appears it still logs into preproduction    h5. Expected Result  No error should be displayed"
"CLI-814","Bug","Core",2,"Failed to parse titanium config file: TypeError: Cannot read property 'selected' of undefined","This may be a duplicate, but I can't find one. Please repurpose as necessary.    From https://community.appcelerator.com/topic/3309/error-encountered-during-update-appcelerator-cli-is-currently-installing-or-upgrading-please-wait-until-it-has-finished-and-retry-your-command-afterwards/9    The error is:        The error appears to be in https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/run.js#L116"
"CLI-818","Bug","Verification",5,"If a login is required before switching orgs it shouldn't switch at all","If you use the newly added {{appc switch org}} and a login is required first because the session expired, you shouldn't not be asked what organisation to login to followed by the question which organisation to switch to.    "
"CLI-823","Bug","Titanium",3,"libtiverify.a in Ti SDK is replaced by libappcverify.a","Do {{appc run -p ios -T device}} on a project with {{<property name=""appc-sourcecode-encryption-policy"" type=""string"">remote</property>}} set in {{tiapp.xml}}.    The file {{mobilesdk/osx/<VERSION>/iphone/libtiverify.a}} in Ti SDK itself gets replaced by {{appc-cli-titanium/support/ios/libappcverify.a}}    Subsequent builds on projects without {{appc-sourcecode-encryption-policy}} enable will result in build failure.  "
"CLI-824","Bug","Titanium",5,"Appc CLI causes iOS Simulator builds to be encrypted","When trying to solve TIMOB-19612, it was discovered that the appc cli causes iOS Simulator builds to sometimes be encrypted and other times not encrypted. This is triggered when you are online and buildVerify() was not skipped (whatever that means).    iOS Simulator builds should probably not be encrypted unless the --deploy-type is explicitly set to ""test""."
"CLI-825","Bug","Core",5,"Publishing a stable version of appc-cli doesn't tag it as latest","I notice this issue when I was releasing appc-cli into our production servers. Though I had successfully published appc-cli@5.1.0, the latest version tag still references to something like 5.0.0 only.    If {{appc publish --prerelease}} command is executed, then the latest tag should still be the previous stable version. Otherwise, the latest version should be considered."
"CLI-827","Bug","Core",5,"Only CLI 5.0.2 & NodeJS 0.12.7 give: [Error: Module did not self-register.]","Only CLI 5.0.2 and NodeJS 0.12.7 show the following error during different commands:        CLI 5.0.1 with NodeJS 0.12.7 works fine, as does CLI 5.0.2 with NodeJS 0.10.40.    (x) CLI 5.0.2 & NodeJS 0.12.7  (/) CLI 5.0.1 & NodeJS 0.12.7  (/) CLI 5.0.2 & NodeJS 0.12.7  (/) CLI 5.0.2 & NodeJS 0.10.40    The workaround is to use ""appc use 0.X.X --force"""
"CLI-832","Improvement","Core",2,"Add additional logging for Arrow cloud login calls","The command {{DEBUG=* appc login}} doesn't log the requests and responses from the Arrow cloud login calls."
"CLI-828","Improvement","Core",5,"Add ""bugs"" URL to package.json","Adding a URL to the location of where ""bugs"" are filed makes it easier for developers.    "
"CLI-838","Bug","Registry",5,"Cannot login to prod; body parameters error","When using Appc CLI 5.1.0-36 and trying to log in to Production, I get the following error:        *Steps to reproduce issue*  1. Select CLI 5.1.0-36  2. Log out with {{appc logout}}  3. Login with {{appc login}}    *Actual Results*  I get the above error and cannot login    *Expected Results*  No error is encountered and login is successfull"
"CLI-836","Improvement","Core",5,"Packages should be rebuild if NodeJS version has changed since last use","When user updates (or downgrades) NodeJS this can break NPM packages or cause strange side effects like CLI-827. This seems in particular an issue with native extensions.    To handle this, the CLI should keep track of the NodeJS version used for each core package and if the NodeJS version has changed it should use re-install that package or use {{npm rebuild}}."
"CLI-847","Improvement","Core",1,"Add additional debug logging for error conditions in `appc use` and `appc login` ","When the registry server is down, the amount of information output to the console in debug mode is limited or non-existent.    Things to instrument:    * Retry of requests  * Error codes returned"
"CLI-843","Bug","Core",5,"If you run ""appc -v -o json"", then Appc CLI NPM will not understand the ""-o"" flag","*Details:* If you run {{appc -v -o json}}, then the Appc CLI NPM will not understand the {{-o}} flag i.e. ""The version specified -o was not found"" error will be returned.    *Notes:*  * This is a regression from Appc CLI NPM 4.2.0 *and* 4.2.1-4.  * The {{-o}} flag still works with other commands e.g. {{appc use -o json}} still returns the Appc CLI core versions in JSON format.  * To workaround this issue, you can specify the long format e.g. {{appc -v --output json}}    *Steps to reproduce:*  # Make sure you installed Appc CLI NPM version 4.2.1-5 or greater  # Run the command: {{appc -v -o json}}    *Actual:* Appc CLI NPM will not understand the {{-o}} flag:      *Expected:* Appc CLI NPM should understand the {{-o}} flag."
"CLI-842","Improvement","Core",5,"Improve performance of appc -v command","When the registry server is not reachable, or slow to respond, then {{appc -v}} command takes a long time to execute, and print package's version. Since it is just about printing the local package version, the availability of registry server shouldn't impact on {{appc -v}} command's performance."
"CLI-844","Bug","Core",8,"If you install a mobile app to device or simulator/emulator, the parent process does not fully terminate if you try to kill it","*Details:* If you install a mobile app to device or simulator/emulator, the parent process does not terminate if you try to kill it.    *Steps to reproduce:*  # In Studio or CLI, create a mobile project  # Install to device or simulator  # Wait for app to launch  # From Studio, press the terminate button. From CLI, kill the parent process    *Actual:* The parent process does not fully terminate.  *Expected:* The parent process should be completely killed."
"CLI-852","Improvement","Core",5,"appc run can not set port for Arrow apps","According to the documentation, we can set the port for an Arrow application using:  acs run --port XX  http://docs.appcelerator.com/platform/latest/#!/guide/Arrow_Cloud_Command-Line_Interface_Reference   But, using appc CLI there's no way to set a port for the Arrow app  http://docs.appcelerator.com/platform/latest/#!/guide/Appcelerator_Command-Line_Interface_Reference-section-43294287_AppceleratorCommand-LineInterfaceReference-run     "
"CLI-856","Bug","Core",5,"In Appc CLI, if you create a project with European character sets, then the CLI prompt will not accept them","*Details:* In Appc CLI, if you create a project with European character sets (e.g. B??ckerei H??chste), then the CLI prompt will not accept them.    *Note:*  * To workaround this issue, use the {{--name}} flag with the {{new}} command e.g. {{appc new --name  ""B??ckerei H??chste""}}  * This issue does not appear in Studio since they are using the {{--name}} flag.    *Steps to reproduce:*  # Create a mobile or Arrow project with {{appc new}}  # Go through the steps until you reach ""What's the project name?""  # Enter a name with European character sets e.g. ""B??ckerei H??chste""    *Actual:* Appc CLI prompt will not accept the European characters:      *Expected:* Appc CLI prompt should accept European characters when creating a project."
"CLI-865","Bug","Registry",3,"If incorrect credentials are input on login then the CLI will error with 'The registry server is currently unavailable'","h5.Description    *This is a regression*     The regression seems to be caused by the change [from this check|https://github.com/appcelerator/appc-cli/blob/5_0_4/lib/registry.js#L455] in 5.0.4 to [this check|https://github.com/appcelerator/appc-cli/blob/5_1_X/lib/registry.js#L455] in 5_1_X      When logging in using {{appc login}} and inputting incorrect credentials the CLI will error out with the below after retrying the login 10 times        *This is a regression* from 5.0.4 as the CLI will reprompt when incorrect credentials are input with 5.0.4        Running with DEBUG=* shows that the output received from registry is the same for both versions    {code:title=5.0.4}  arrow:sdk sending request to https://software.appcelerator.com/api/login  arrow:sdk response received err=null, body={ message: 'Invalid Appcelerator ID and password combination.',    code: 400,    success: false,    'request-id': '7a594b36-2dbe-4c0b-b77b-8df4ab6ccbc3' }, status code=500  registry result 500 application/json false undefined true 1  registry returned { message: 'Invalid Appcelerator ID and password combination.',    code: 400,    success: false,    'request-id': '7a594b36-2dbe-4c0b-b77b-8df4ab6ccbc3' }  login returned { [Error: Invalid Appcelerator ID and password combination.] code: 400 } { message: 'Invalid Appcelerator ID and password combination.',    code: 400,    success: false,    'request-id': '7a594b36-2dbe-4c0b-b77b-8df4ab6ccbc3' }  Invalid Appcelerator ID and password combination.  Invalid Appcelerator ID and password combination.      h5.Steps to reproduce    1. Run {{appc login -l trace}}  2. Enter some incorrect credentials    h5.Actual result    The CLI will send a login request 10 times and then error with {{ Error: The registry server is currently unavailable.}}    h5.Expected result    The CLI should throw a prompt asking for the correct credentials"
"CLI-864","Bug","Titanium",1,"Plugins directory generated on build for a classic project","h5.Description    When building a classic project there is a plugins directory generated when building the project. When running with {{-l trace}} it shows this line {{TRACE  | Update project alloy hook from version false to 1.0.0}} which originates from [here|https://github.com/appcelerator/appc-cli-titanium/blob/master/plugins/run.js#L137].     h5.Steps to reproduce    1. Create a project using {{appc new --type titanium --name classicApp --id com.appc --classic}}   2. Build the project using {{appc run -p ios}}  3. Check the applications directory    h5.Actual result    There will be a plugins folder in the app directory    h5.Expected result    There should not be a plugins directory in a classic application"
"CLI-861","Bug","Core",1,"The ""--output"" flag does not work with ""appc use"" command","*Details:* The {{--output}} flag does not work with {{appc use}} command.    *Notes:*  * {{appc use --output}} seems to be for internal usage: CLI-468.  * {{appc use -o}} still works.  * This issue appears in the current GA as well.    *Steps to reproduce:*  # Run {{appc use --output json}}    *Actual:* The output from the {{appc use}} command is not in JSON format:      *Expected:* The {{--output}} flag should work along with {{-o}} flag."
"CLI-869","Bug","Core",5,"In preprod, you cannot import a mobile project with a non-platform guid","*Details:* In preprod, you cannot import a mobile project with a non-platform guid.    *Notes:*  * If you point the current 5.1.0 stack to production, you cannot reproduce this issue.  * The *workaround* is to create another mobile project in preprod and use that project's guid.  * Even though importing a mobile project a non-platform guid works in production and a workaround is available, *this makes testing in preprod with AppcStudio very difficult.*    *Steps to reproduce:*  # Download and unzip XMLModule.zip  # Make sure you are pointing to *preprod*  # Run: {{appc new --import --project-dir <PATH_TO>/XMLModule -l trace}}    *Actual:* You will not be able to import the project. Login required error will be returned:      *Expected:* Should be able to import a mobile project with a non-platform guid in preproduciton."
"CLI-868","Improvement","Core",3,"Add CLI version installation status in ""appc use -o json"" output","Can we add CLI version installation status as part of ""appc use -o json"" command output.     Probably something like this or whatever is the best way possible.      Adding a new entry will not break existing consumers."
"CLI-871","Improvement","Core",5,"Improve the download payload of appc-cli package by de-duping modules","Currently some modules like appc-platform-sdk are referenced at multiple instances, and there is no need to have multiple copies of same module.     The build should run {{npm dedupe}} before shrinkwrap, so that it will aggregate into a higher package level."
"CLI-874","Story","Core",3,"include acs 1.0.31","acs cli 1.0.30 had to be removed because it was published with code from master instead of 1.3.1. we republished 1.0.31. appc cli needs to be updated as well. "
"CLI-875","New Feature","Core",5,"appc use command should allow --prerelease option","{{appc use}} command will receive only stable versions by default. If the user wants to pull prerelease versions as well as part of appc use command, then they should use a new option such as {{--prerelease}}."
"CLI-882","Bug","Core",5,"Cannot create an Arrow project with DEBUG=* and -l trace","*Details:* Cannot create an Arrow project with DEBUG=* and -l trace.    *Note:* This is a *regression* from 5.0.4 core.    *Steps to reproduce:*  # In terminal, run {{DEBUG=* appc new -l trace}}  # Select Arrow App  # Specify a name for your project    *Actual:* Arrow project will fail to be created:      *Expected:* You should be able to create an Arrow project with DEBUG=* and -l trace."
"CLI-881","Bug","Core",2,"If you create an Arrow project with European character sets, then the next prompt will be ""What is the api name?""","*Details:* If you create an Arrow project with European character sets, then the next prompt will be ""What is the api name?"".    *Steps to reproduce:*  # In terminal, run {{appc new}}  # Select Arrow App  # Create a project name with European characters like umlaut u    *Actual:* ""What is the api name?"" prompt appears; see attachment.  *Expected:* The ""What is the api name?"" prompt should not appear when you create an Arrow project."
"CLI-885","Bug","Titanium",1,"Appc new should be more cautious when unable to read Ti activeSDK value","When appc new failed to retrieve active Ti SDK version, following error occurred with the command {{appc new}}        h5. Reproduce steps  1. appc use 5.1.0  2. remove/rename {{.titanium/config.json}}  3. remove/rename {{Application Support/Titanium/mobilesdk}}  4. appc new    h5. Expected  result  you should see the following prompt instead of the undefined error      h5. Actual result  Project type selection prompt is not shown, and process errors out:  {{ERROR  | Cannot read property 'split' of undefined}}      "
"CLI-889","Bug","Core",5,"Windows: Using Node 4.2.2 32-bit results in failure to login","h5. Description:  NOT a regression, as this occurs with CLI 5.0.4.GA as well.  DOES NOT occur with Node 4.2.2 64-bit    While trying to login on Windows with Node 4.2.2 installed, after org selection we get an error:        h5. Steps to reproduce:  1) Install Node 4.2.2 32-bit on a windows machine  2) Run {{appc login}}  3) Enter credentials and select an org    h5. Result:  Failure as see above    h5. Expected Result:  Successful login"
"CLI-893","Bug","Core",8,"CLI fails to find core dependencies, incorrect location. ","h5. Description:  Appc CLI fails to find the core dependencies as they are not located in the correct path:       When checking the node_modules folder under apps-cli-titanium, the following modules are missing: {{alloy , titanium , appc-security , node-appc}}    h5. Steps to reproduce:  1. appc use 5.2.0-131  2. navigate to cli folder ( Default location on OSX: {{/Users/harrybryant/.appcelerator/install/5.2.0-131/package/node_modules/appc-cli-titanium/node_modules}} )  3. compare the above list of required modules to the modules found in the path location from step 2.    h5. Result:  Missing modules: {{alloy , titanium , appc-security , node-apps}}    h5. Expected Result:  Missing modules should be placed under path: {{/Users/harrybryant/.appcelerator/install/5.2.0-131/package/node_modules/appc-cli-titanium/node_modules}}"
"CLI-895","Bug","Core",5,"CLI should not honor invalid url in proxy settings","Studio might be writing down an invalid URL in the proxy configuration such as {{""proxyServer"": ""https://nullâ}}    CLI should not attempt to make a connection using this invalid URL, and it should rather attempt to remove the URL from its configuration."
"CLI-899","Story","Core",5,"Components being published with prerelease option should match version format m.m.p-x","The components such as appc-cli can now be published with prerelease option even with a version such as 4.0.0. However, according to the prerelease semantic versioning policy, the components should match version format m.m.p-x for being published with prerelease option.    If the version is not matched with that format, then CLI should throw error message and should not publish."
"CLI-898","Improvement","Core",0,"In production, ""appc use"" should not display all 100 published cores in a list","*Details:* Currently in production, if you run {{appc use}}, 100 published cores are displayed in a list:      This seems very unsightly and overwhelming. To make the list seem more manageable:  * The list should only display the latest ten published cores like before.  * *Or,* the list should be displayed in multiple columns.  * *Or,* there should be a pagination system either through flags or interactive prompting."
"CLI-901","Bug","Titanium",3,"Windows: appc-ti stdio can sometimes not register input","On Windows, I found when attempting to switch SDKs using:        That my input was not registered and my SDK was never changed.    Although the documentation for [stdio|https://nodejs.org/api/child_process.html#child_process_options_stdio] says _inherit_ is the same as _process.stdin/stdout_, replacing the current {{[process.stdin, process.stdout, 'pipe']}} with {{['inherit', 'inherit', 'pipe']}} solves the problem.  "
"CLI-908","Bug","Core",3,"NPM 3 Flat node_modules Breaks CLI","cli and appc-cli-titanium, at the very least, have paths inside of them that depend on nested node_modules. With npm 3, all of the dependencies and their dependencies are flatly stored in the one node_modules directory, which breaks these references in our code. We need to be less brittle with these references.    To reproduce, I am able to simply `appc use 5.2.0-155`, then try to do something like `appc ti clean` and you should see an error about not being able to find `node_modules/appc-cli-titanium/node_modules/titanium/bin/titanium`."
"CLI-914","Improvement","Titanium",2,"Jailbreak detection fails with <property name=""appc-sourcecode-encryption-policy"" type=""string"">embed</property>","An application will launch on a jailbroken device with the following property:      *Expected behavior*  Application closes or displays security exception splash screen    *Actual behavior*  Application loads regardless of jailbroken state    *Tested against the following*  iPhone 6 @ 9.0.2 fails to detect JB with embed policy  iPhone 4s @ 7.1.0 fails to detect JB with embed policy    *SDK and environment*  appc ti sdk  -> 5.1.1.GA  tiapp.xml sdk -> 5.1.1.GA    *Steps to test*  1) Open test app // vanilla alloy application  2) Add valid GUID  3) run   4) Record if the app launches on a jailbroken device     *Attached files*  Example application // guid stripped from tiapp.xml  "
"CLI-921","Bug","Core",5,"Appc alloy -v returns error","When trying to run {{appc alloy -v}} I get the below error      *Steps to reproduce issue*  1. Run {{appc alloy -v}}    *Actual results*  I get the above error    *Expected results*  My alloy version is returned"
"CLI-924","Bug","Verification",5,"appc-security-jailbreak-detect does not prevent application launch on rooted Android device","[Documentation|http://docs.appcelerator.com/platform/latest/#!/guide/tiapp.xml_and_timodule.xml_Reference-section-29004921_tiapp.xmlandtimodule.xmlReference-appc-security-jailbreak-detect] specifically says android rooted devices.   {quote}  The special property appc-security-jailbreak-detect can be used to increase the security of your application by preventing the mobile app from running on a Jailbroken (iOS) or rooted (Android) device.  {quote}    In my testing this does not work.     h2. Steps to reproduce    h3. Create app      h2. Add properties just to be extra sure that the properties in enabled  // note I test with no properties too      h2. Build the app      h3. Launch  Open the app on the device    h3. Expected vs Actual  *Expected*  App closes right away or doesn't open   *Actual*  App opens and works like a normal app"
"CLI-926","Bug","Core",2,"Error during arrow app publishing: unknown option `--username' with CLI 5.2.0-233","--username argument is not recognised with CLI  5.2.0-233          "
"CLI-928","Bug","Titanium",8,"9.2.1 iPhone crashes when jailbreak-detect is enabled","A customer has reported that a test app (source code attached) will crash on an iOS device at 9.2.1 when jailbreak-detect is setup in tiapp.xml    *Environment info*  SDK 5.1.2.GA  CLI 5.1.0    *Tested devices*  iPhone @ 9.2.1    *Test Case*       *Expected Result*  App runs basic hello world app    *Actual Result*  App crashes, no useful logs appear in the console      "
"CLI-941","Bug","Core",5,"Running appc access get on an unpublished app won't throw correct error","h5. Description  Trying to run this command should throw up an incorrect error.    h5. Steps to Reproduce  1. Create a connector  2. Run appc access get before publishing    h5. Expected Results  Error to appear along the lines of ""The server returned an empty response.  Note that components that have not been published yet will return empty responses like this.""    h5. Actual Result  Error thrown says ""No matching component!"""
"CLI-931","Bug","Installer",3,"Alloy/Titanium via Unified CLI exits with code 0 while child process exits with 1","As ""reported"" on Twitter (https://twitter.com/ercpe/status/694852549652975616), the cli interface always exits with code 0, even on build errors which makes executing it as a part of continuous integration nearly impossible.    Setup: Linux, 64 bit (haven't tried to run the build on a Mac yet).    I haven't done the initial installation of appcelerator myself, but appcelerator and titanium appears to be installed in the global node_modules directory:        Whenever i call {{appc}} or {{ti}} the binary exits with 0:            Executing the {{node}} command line from the output above fails because of the missing config json but uses a proper exit code:    "
"CLI-1027","Bug","Core",5,"Alloy: CodeAssist in the Appcelerator Studio does not work","When I try to type Alloy. in my controller (index.js), I expect to get CodeAssist options for type ahead. But that does not seem be working in my Studio instance. It works when I type Ti. but does not work for Alloy."
"CLI-934","Improvement","Core",1,"Output warning message if appc-install is less than 4.2.3-2","AppC CLI 5.2.0 requires appc-install 4.2.3 to work, refer to linked issues for details.    "
"CLI-933","Bug","Core",5,"Unable to unpublish appc-cli from registry","# Log into the production registry  # Do `appc use`  # Find a 0.2.X-era CLI  # `appc unpublish appc-cli/appcelerator@<version>`    Error: ""ERROR  | No component found or specified for unpublish"""
"CLI-936","Bug","Core",1,"If you use ""-o json"", then text is returned along with the JSON data","*Details:* If you use ""-o json"", then text is returned along with the JSON data.    *Notes:*   * This is  a *regression* from Appc CLI Core 5.1.0.  * This is *affecting Studio* from running an Android project; see no_android.png and no_android2.png attachments and see stack trace from Studio:    * This is *affecting Studio* from launching the dashboard:      *Steps to reproduce:*  # Create a Titanium mobile project  # In the mobile project, run {{appc ti project -o json}}    *Actual:* The warning message appears along with the JSON data:      *Expected:* Only JSON data should appear; no warning messages."
"CLI-940","Bug","Core",5,"iOS: Unable to package project. 'Undefined is not a function'","When trying to package a project for iOS, store or adhoc, I receive the following error:      *Steps to reproduce issue*  1. Create a new project (Classic or Alloy)  2. Try to package the project for App Store or Adhoc    *Expected Results*  The project is packaged successfully without error.    *Actual Results*  The above error is encountered and packaging fails.    *Notes*  Packaging from the CLI is working as expected.  No Studio logs are generated."
"CLI-945","Improvement","Core",3,"APPC publish should honor --no-prompt flag","{{appc publish --no-prompt}} flag should be honored, and if used there should be no prompts."
"CLI-943","Bug","Core",2,"Core 5.2.0 displays incorrect/confusing warning if NPM is still < 4.2.3","We hard-coded a minimum version for the NPM part of the CLI, but haven't updated it to use the GA so it's still asking for 4.2.3-2.    We need CLI-757 and CLI-696 resolved to prevent this in the future."
"CLI-950","Bug","Core",8,"Process doesn't cleanup children in certain scenarios","While running the arrow unit tests from the CLI, some of the cluster tests fail because the cli isn't properly given the arrow run plugin the time to run it's process exit handlers - orphaning child processes created by the plugin."
"CLI-949","Bug","Core",5,"Windows: config files are written to different drive than process.env.HOME","On Windows, some users are not able to create an arrow app from a different drive than the home drive.  This may also happen when {{HOME}} is not set initially, in either case appc will fallback to {{HOMEPATH}}. On Windows {{HOMEPATH}} is relative path.  \\  h5. Reproduce steps  1. appc use 5.2.0  2. appc logout  3. go to another drive  4. create an arrow appc  \\  h5. Expected result  An arrow app should be created after login  \\  h5. Actual result  `ERROR  | Error: You are not logged in. Please login again.`"
"CLI-952","Improvement","Core",5,"unpublish ""version"" flag confusion","See attached screenshot.  The CLI docs say you can use the flag --version when unpublishing a version but per the screenshot..it doesn't recognize it exists.  When you use the flag ""--ver"" it does work however.    Either both should work (as the docs indicate) or make one work and remove the indication that both should work."
"CLI-955","Bug","Core",3,"CLI should not tell a user to install a pre-release CLI as an update from a GA version","h5.Description    When telling a user that there is a new CLI we currently will tell them to update to a pre-release version. We should only tell a user to update if the version is not pre-release. See the below.        In the updateCheck method we appear to be [calling the|https://github.com/appcelerator/appc-install/blob/master/lib/util.js#L747] {{api/appc/list}} endpoint, we should either filter the pre-release CLIs from this using the prerelease parameter or we should use the {{api/appc/latest}} endpoint.    *This also shows that the logic used is incorrect or does not compare the actual version numbers as 5.2.0-265 should not be considered an update to 5.2.0*    h5.Steps to reproduce    1. Remove the lastUpdateCheck property from your appc-cli.json file  2. Run an appc command such as {{appc config}}    h5.Actual result    1. The following will be printed out, prompting the user to update to a pre-release version     h5.Expected result    1. We should only prompt a user to update to if the version is not pre-release"
"CLI-954","Bug","Core",3,"Install Appcelerator CLI - package wasn't found in unpacked tree","I'm getting the following warnings when running sudo npm install appcelerator -g.        The CLI still finished install and works OK      http://stackoverflow.com/questions/35626627/cannot-install-appcelerator-cli-package-wasnt-found-in-unpacked-tree"
"CLI-957","Bug","Titanium",3,"Unable to build modules from Appc CLI","I am unable to build modules from the Appc CLI.    *Steps to reproduce issue*  1. Create a new module using: {{appc new -n testMod --id com.appc.testmod}}  2. When prompted, select ""Titanium Module""  3. {{cd}} into {{testMod/iphone}}  4. Build the module with {{appc run -p ios --build-only}} or {{appc ti build -p ios --build-only}}    *Actual Results*  The module fails to build with respective errors:  {{ERROR  | No valid targets for run. Are you in a project folder?}}  and  {{[ERROR] Unable to find ""undefined"" module}}    *Expected Results*  The module build succeeds without issue, like the Titanium CLI command will:  {{ti build -p ios --build-only}}"
"CLI-963","Improvement","Core",3,"CLI: enable template options when creating Alloy project","At the moment there is no way to create the {{two_tabbed}} alloy project from CLI, a strongly desired feature related to linked tickets.    Command to use:  {{appc new -t titanium --template two_tabbed}} "
"CLI-969","Bug","Core",3,"If you install Appc CLI Core >= 5.2.1-3, then a corrupted appcelerator tgz will appear in the package folder","*Details:* In preprod, if you install Appc CLI Core >= 5.2.1-3, then a corrupted appcelerator tgz will appear in the package folder.    *Notes:*  * This does not occur with Appc CLI Core 5.2.0.  * On preprod, Appc CLI Cores < 5.2.1-3 does not contain the corrupted .tgz file.  * It does not seem to be the Appc CLI Core itself.    *Steps to reproduce:*  # Go to preprod  # Run {{appc use 5.2.1-16}} or later  # Go to {{~/.appcelerator/install/5.2.1-16/package/}}    *Actual:* The .tgz file will appear; see attachments.    *Expected:* The .tgz file should not appear in that directory.  "
"CLI-976","Improvement","Core",3,"""appc use"" seems to broken with core 5.2.1-18 in preprod","h5.Steps to reproduce:  1. Install core 5.2.1-18 in preprod & run ""appc use""    h5.Actual Results:  1. Error is thrown:    2. It seems to be intermittent.    h5.Expected Results:  1. ""appc use"" should list the available core versions."
"CLI-975","Bug","Titanium",1,"iOS: i18n and platform folders not handled correctly by Alloy in CLI","Please see ALOY-1365 for information about the changes made for Alloy referred to in this ticket.    When trying to build an Alloy project with existing {{i18n}} and {{platform}} folders (without an {{alloy_generated}} file present in them), no message is shown to move the folders/files and the build succeeds when it should fail.    *Steps to reproduce issue*  1. Create a new project with {{appc new}}  2. {{cd}} into the project  3. Create {{i18n}} and {{platform/ios}} directories. Place files in them  4. Build the project with {{appc run -p ios}}    *Expected Results*  The build fails and a message is shown indicating that the {{i18n}} and {{platform}} folders should be moved into the app directory    *Actual results*  No message is shown and the build succeeds    *Notes*  The project will correctly show the message and fail the build using {{ti build -p ios}}"
"CLI-987","Bug","Core",3,"Appcelerator Login not triggered when login is required on production build ","h3. When I try to build for Play Store while Appcelerator Login is required, an error is triggered, and the login screen is not shown. Error below.    This is from Appcelerator Studio.        "
"CLI-978","Bug","Core",3,"Appc config get <key> always returns null","h5.Description    When running {{appc config get <key>}} the value will always return null when using 5.2.0 or higher. *This is a regression from 5.1.0*    {code: title=5.2.1}  C:\Users\Ewan\Documents>appc config get environmentName  Appcelerator Command-Line Interface, version 5.2.1  Copyright (c) 2014-2016, Appcelerator, Inc.  All Rights Reserved.    null      h5.Steps to reproduce    1. Run appc config get environmentName    h5.Actual result    {{null}} will  be returned    h5.Expected result    The correct value should be returned"
"CLI-1139","Bug","Core",3,"appc ti create shows logging warning about a possible EventEmitter memory leak","h5.Description    When running {{appc ti create}} the below will be printed out warning about a possible EventEmitter memory leak        h5.Steps to reproduce    1. Run {{appc ti create}}    h5.Actual result    The above will be printed out    h5.Expected result    Although it is not the supported workflow, the above message should not be printed out and the user should be able to create an app successfully, or a message should be printed telling users to use {{appc new}}"
"CLI-989","Bug","Core",13,"CLI not responding on self signed certificate","h6.description  When we use self signed certificate internally for the firewall,  we are getting the following error for ""appc"" or ""appc setup"" command    {code:title=Error}  [010132125106:bin cprice$ DEBUG=* appc setup -l trace   appc:bin install bin is undefined +0ms   appc:bin main subcommand setup +4ms   appc:bin main setup found +9ms   appc:bin main - !installBin or couldn't find it null +0ms   appc:install preflight checks, is this windows? 0 +1ms   appc:install home directory located at /Users/cprice +1ms   appc:install install, wantVersion: , url: https://software.appcelerator.com/api/appc/install/, bin: +59ms   appc:download download start, quiet 0, banner 1 +2ms   appc:download download called with arguments: { '0': false, '1': false, '2': '', '3': '/var/folders/zs/hnjjcnrn72j7mrd6hhnj50k5z62p65/T/appc-1460744471524.tar.gz', '4': { _writableState: { objectMode: false, highWaterMark: 16384, needDrain: false, ending: false, ended: false, finished: false, decodeStrings: true, defaultEncoding: 'utf8', length: 0, writing: false, corked: 0, sync: true, bufferProcessing: false, onwrite: [Function], writecb: null, writelen: 0, bufferedRequest: null, lastBufferedRequest: null, pendingcb: 0, prefinished: false, errorEmitted: false }, writable: true, domain: null, _events: { finish: [Object] }, _maxListeners: undefined, path: '/var/folders/zs/hnjjcnrn72j7mrd6hhnj50k5z62p65/T/appc-1460744471524.tar.gz', fd: null, flags: 'w', mode: 438, start: undefined, pos: undefined, bytesWritten: 0 }, '5': 'https://software.appcelerator.com/api/appc/install/', '6': [Function], '7': false } +0ms   Finding latest version ... appc:download connection attempt 1 of 10 +4ms   appc:util request {""url"":{""protocol"":""https:"",""slashes"":true,""auth"":null,""host"":""software.appcelerator.com"",""port"":443,""hostname"":""software.appcelerator.com"",""hash"":null,""search"":null,""query"":null,""pathname"":""/api/appc/install/"",""path"":""/api/appc/install/"",""href"":""https://software.appcelerator.com/api/appc/install/""},""headers"":{""user-agent"":""Appcelerator CLI/4.2.4 (darwin)"",""host"":""software.appcelerator.com"",""appc-token"":null}} +179ms   - appc:util request error +1s { [Error: self signed certificate in certificate chain] code: 'SELF_SIGNED_CERT_IN_CHAIN' }   appc:download error from download was: { [Error: self signed certificate in certificate chain] code: 'SELF_SIGNED_CERT_IN_CHAIN' } +2ms   appc:error creating AppCError Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at support@appcelerator.com., com.appcelerator.install.download.server.response.error +1ms   appc:util fail { [AppCError: Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at support@appcelerator.com.] id: 'com.appcelerator.install.download.server.response.error', name: 'AppCError', message: 'Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at support@appcelerator.com.' } +2ms      appc:error creating AppCError Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at support@appcelerator.com., com.appcelerator.install.download.server.response.error +1ms   appc:util fail { [AppCError: Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at support@appcelerator.com.] id: 'com.appcelerator.install.download.server.response.error', name: 'AppCError', message: 'Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at support@appcelerator.com.' } +2ms   AppCError: Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at support@appcelerator.com.   at Object.exports.createError (/usr/local/lib/node_modules/appcelerator/lib/error.js:157:10)   at /usr/local/lib/node_modules/appcelerator/lib/download.js:49:29   at Request.<anonymous> (/usr/local/lib/node_modules/appcelerator/lib/util.js:535:10)   at Request.emit (events.js:107:17)   at Request.onRequestError (/usr/local/lib/node_modules/appcelerator/node_modules/request/request.js:831:8)   at ClientRequest.emit (events.js:107:17)   at TLSSocket.socketErrorListener (_http_client.js:271:9)   at TLSSocket.emit (events.js:129:20)   at TLSSocket.<anonymous> (_tls_wrap.js:942:18)   at TLSSocket.emit (events.js:104:17)     Server responded with unexpected error: self signed certificate in certificate chain. Please re-try your install again. If you continue to have this problem, please contact Appcelerator Support at support@appcelerator.com.        {code}"
"CLI-988","Bug","Core",1,"""-o"" (org-id) is not honored with appc login","*Details:* If you use {{-o}} to specify the org id with {{appc login}}, then you will still be prompted to specify the org.    *Notes:*  * This is not a regression from Appc CLI Core 5.2.2.  * {{--org-id}} still works with {{appc login}}.    *Steps to reproduce:*  # Login from the CLI with {{-o}}: {{appc login --username <user> --password <pass> -o <org-id>}}    *Actual:* You will be prompted for the org id; see attachment.  *Expected:* You should not be prompted for the org id."
"CLI-991","Bug","Core",3,"If you create a mobile project with ""appc new --project-dir"", then the CLI will prompt you to override the specified directory","*Details:* If you create a mobile project with {{appc new --project-dir}}, then the CLI will prompt you to override the specified directory e.g.:      *Notes:*  * This is *not a regression*.  * To workaround this issue, you will need to specify the project name at the end of the project-dir:    * This issue does not appear with {{appc ti create}}:       *Steps to reproduce:*  # Create a mobile project with all the required flags:      *Actual:* CLI will prompt you to override the specified project-dir; see above for output.  *Expected:* CLI should not prompt you to override the specified project-dir and just create the project in the specified project-dir."
"CLI-997","Bug","Core|Titanium",1,"""appc ti config -r <key>"" does not remove the key but instead asks for login","h5.Steps to reproduce:  1. Run ""appc ti config -r <key>"".    h5.Actual Results:  1. You will be asked to login to CLI. (I double checked & I was logged in already)  2. ""appc ti config --remove <key>"" works as expected.    h5.Expected Results:  1. ""-r"" flag should remove the key.  "
"CLI-998","Bug","Core",2,"We are displaying an OEM vendor name in logging and should not","We are displaying soasta in logging during new project setup and we should not.  The correct product name is AppC Test.  "
"CLI-999","Bug","Core",3,"""(node:19181) fs: re-evaluating native module sources is not supported."" message appears when you run ""appc new"" with Node 6","*Details:* If you run {{appc new}} with Node 6, then {{(node:19181) fs: re-evaluating native module sources is not supported.}} message will appear.    *Steps to reproduce:*  # Make sure you installed Node 6  # Run {{appc new}}    *Actual:* {{(node:19181) fs: re-evaluating native module sources is not supported.}} message will appear:      *Expected:* No weird messages should appear."
"CLI-1002","Bug","Core",3,"If you pass ""--help"" or ""-h"" flag to ""appc ti"", then ""Cannot read property 'match' of undefined"" error is returned","*Details:* If you pass {{--help}} or {{-h}} flag to {{appc ti}}, then {{Cannot read property 'match' of undefined}} error is returned.    *Notes:*  * This is *not a regression*.  * The help usage sill appears even though you will encounter the error.    *Steps to reproduce:*  # From terminal, run: {{appc ti -h}} or {{appc ti --help}}    *Actual:* {{Cannot read property 'match' of undefined}} error is returned:      *Expected:* No errors should be returned when using the help flag."
"CLI-1004","New Feature","Core",5,"CLI to use security server instead of registry for login","Part of the [SEC-4] arrow port of security server, we should have CLI point to the new security endpoint rather than registry. We will also need to probably have a proxy server re-route traffic from registry's old login endpoint to the new security server as we cannot guarantee all CLI will be updated at the same time.      There are the URLs that have been changed.    POST https://www.software.appcelerator.com/api/login  GET https://www.software.appcelerator.com/api/checkSession  GET https://www.software.appcelerator.com/api/orgs  POST https://www.software.appcelerator.com/api/org  GET https://www.software.appcelerator.com/api/whoami  "
"CLI-1003","Bug","Core",3,"If you run ""appc setup"" with the help flag, then ""appc setup"" will try to find/download the latest core first","*Details:* If you run {{appc setup}} with the help flag, then {{appc setup}} will try to find or download the latest core first before displaying the help options.    *Note:* This *is not a regression*.    *Steps to reproduce:*  # Run {{appc setup --help}} or {{appc setup -h}}    *Actual:* The CLI will try to find or download the latest core first:      *Expected:* The CLI should not find or download the latest core when running {{appc setup}} with the help flag."
"CLI-1009","Bug","Titanium",1,"""appc ti -v"" should not require login","Currently {{appc ti -v}} requires login, which it should not since you should always be able to get the version, just as you can for {{appc alloy}} and {{appc acs}}:    "
"CLI-1015","Improvement","Core",8,"LiveView hook should be moved to the Unified CLI","LiveView is a CLI plugin that lives under Studio and is not hooked into the (Unified) Titanium CLI until it has been run via Studio. Every time the LiveView version changes because you've updated Studio you also have to run it once via Studio to have the hook path updated.    The LiveView hook should be moved to the Unified CLI so that it no longer depends on Studio."
"CLI-1018","Improvement","Core",3,"appc should invoke acs cli with -h http://on-premise cluster","Rantha reported that he deployed an on-premise cluster with http only and when he used appc cli, the ~/.acs file ( result of invoking acs) uses port 443 instead of port 80. This is because appc cli didn't invoke acs cli properly , see ticket NODEJS-2513. "
"CLI-1022","Bug","Core",3,"If you set access to an Arrow connector, ""Successfully set access for <ACCESS_RIGHT> to null."" will appear","*Details:* If you set access to an Arrow connector, ""Successfully set access for <ACCESS_RIGHT> to null."" will appear.    *Notes:* This is not a regression from current GA stack.    *Steps to reproduce:*  # Generate an empty connector with {{appc generate}}  # Publish the connector  # In the connector, run: {{appc access set public}}    *Actual:* The following message should appear:      *Expected:* Confusing message should not appear."
"CLI-1021","Bug","Core",1,"""appc user remove"" returns ""invalid action"" error","*Details:* If you run {{appc user remove}}, {{Error: invalid action ""remove""}} is returned.    *Notes:* This is not a regression from current GA stack.    *Steps to reproduce:*  # In terminal, run {{appc user remove}}    *Actual:*  {{Error: invalid action ""remove""}} is returned:      *Expected:* No errors should be returned."
