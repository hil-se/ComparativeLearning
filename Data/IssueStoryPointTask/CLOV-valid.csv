"issuekey","type","components","storypoint","title","description_text"
"CLOV-1428","Suggestion","Reporting",2,"change classes/tests/results bottom left frame","""Change this:    !classes_tests_results.png!    Scope:   * add a title: https://developer.atlassian.com/design/1.2/typography.html   * use tabs: https://developer.atlassian.com/design/1.2/tabs.html   * use sortable table: https://developer.atlassian.com/design/1.2/tables.html """
"CLOV-1427","Suggestion","Reporting",1,"change cloud tabs","""The """"Package risks"""" and """"Quick Wins"""" tabs:    !cloud_tabs.png!    should have an ADG tabs look:    https://developer.atlassian.com/design/1.2/tabs.html    """
"CLOV-1426","Suggestion","Reporting",1,"change page footer look","""This: [^page_footer.png]  should look like this:    https://developer.atlassian.com/design/1.2/page-footer.html  """
"CLOV-1425","Suggestion","Reporting",1,"change dashboard boxes look","""This: [^dashboard_boxes.png] should look like this:    https://developer.atlassian.com/design/1.2/containers.html"""
"CLOV-1424","Suggestion","Reporting",1,"change small class histogram into container","""similarly as for coverage statistics    put into a box:  https://developer.atlassian.com/design/1.2/containers.html    this:  !small_histogram.png!"""
"CLOV-1423","Suggestion","Reporting",5,"change contributing tests table to TablesSortable etc","""Change a table with contributing tests:  !contributing_tests.png!    To do:   * table into TableSortable   * """"Show/hide tests"""" label into expander   * """"Select all/deselect all"""" labels into single master toggle   * remember about highlighting of lines of code and class' methods in a table"""
"CLOV-1420","Suggestion","Reporting",2,"change package and class list tables into TablesSortable","""Change this (project summary, package summary):    !package_and_class_list.png!    into a sortable table like this:    https://docs.atlassian.com/aui/latest/sandbox/#"""
"CLOV-1419","Suggestion","Reporting",2,"change project/package statistics to the boxed component","""Change this:    !package_summary.png!    Move it under a horizontal navigation (on overview tab for instance). Keep it as a boxed component (div grid). """
"CLOV-1415","Bug","Database|Reporting",2,"The clover2:clover goal does not pass the sourcepath property to underlying <clover-report> task","""*Original problem from the cloned issue:*    {quote}  Clover database contains FileInfo objects for every source file. One of FileInfo fields is an absolute path to given file. When database is written, it uses current platform file separator for file name ('\' for windows, '/' for Linux/MacOS). However, when database is read it interprets file name using again current platform file separator.     As a consequence, when database is generated on Windows and report generated on Linux, it cannot resolve file name properly - it takes whole path as a single path segment, resulting in paths like:    /path/from/report/generation/sourcepath/D:/path/from/instrumented/build/file.java    As a consequence report generation does create html file containing source code with highlighted coverage.  {quote}    *Problem with the clover2:clover goal:*    The clover2:clover call <clover-report> using a default report descriptor (which is located in the maven-clover2-plugin-X.X.X.jar/default-clover-report.xml). This report descriptor has a reporting defined like:    {code:xml}  <current outfile=""""${output}"""" summary=""""${summary}""""                       charset=""""${charset}"""" title=""""${title}"""" titleAnchor=""""${titleAnchor}""""                       span=""""${span}"""" alwaysReport=""""${alwaysReport}""""                       showInnerFunctions=""""${showInnerFunctions}"""" showLambdaFunctions=""""${showLambdaFunctions}"""">     <format refid=""""clover.format""""/>     <testsources refid=""""test.sources""""/>     <columns refid=""""clover.columns""""/>  </current>  {code}    i.e. there is no <sourcepath> property.     Possible fix #1:     * add the <sourcepath> property   * set it's value to a list of standard source roots, similarly as it's done for <testsources> tag    _excerpt from the CloverReportMojo:_  {code:java}  antProject.setProperty(""""testPattern"""", """"**/src/test/**"""");  {code}    _excerpt from the default-clover-report.xml:_    {code:xml}  <fileset id=""""test.sources"""" dir=""""${projectDir}"""">    <include name=""""${testPattern}""""/>  </fileset>  ...  <testsources refid=""""test.sources""""/>  {code}    so it could be like this:  {code:java}  antProject.setProperty(""""sourceRootsPattern"""", """"**/src/test/*;**/src/main/*"""");  ...  {code}    (!) potential problem: build may have source roots different than src/test/xxx and src/main/xxx; in such case sources would not be found; it means that settings this <sourcepath> property should be optional; it could be done via boolean flag    Possible fix #2:   * add the <sourcepath> property to the clover2:clover goal   * if it's not null then pass it's value to the <sourcepath> property in the <clover-report> goal in the report descriptor    (!) potential problem: how developers could easily find all source roots in all modules in their maven project in order to pass it as the property?   """
"CLOV-1431","Bug","Instrumentation",3,"JDK8 sources fail to compile when instrumented by Clover","""See the attached comparison of original and instrumented code:    [^unicode_decoding_error.png]    A problem is as follows:   * Clover has a UnicodeDecodingReader class which translates 6-letter character sequences """"\uNNNN"""" into a single UTF16 character   * this is used to correctly tokenize code identifiers (IDENT) written in non-ascii characters (a variable with German umlaut for instance)    In this specific example, some """"\uNNNN"""" sequences were translated inside comments, and some characters were """"swallowed"""". So for instance a fragment:        ends with """"java: illegal unicode escape"""".    Related issues:   * CLOV-1305 - syntax highlighting problem   * CLOV-1131 - Eclipse/IDEA editors get out of sync  """
"CLOV-1432","Bug","Grails Plugin",3,"Integration tests are not being instrumented in Grails 2.3","""Clover does not instrument integration tests in Grails 2.3.     Caused by:   * new GrailsIntegrationTestCompiler wrapper introduced in Grails 2.3.0 is not being recognized by Clover as a Groovy compiler   * GrailsTestRunner calls Groovy compiler internally and this compiler does not have grover.jar on a classpath, thus Clover AST transformer is not called    Todo:   * check how to recognize/pass inclusion/exclusion patterns to the internal compiler of GrailsTestRunner    Workaround:   * not available"""
"CLOV-1434","Bug","Grails Plugin",1,"Transitive dependency resolution fails in Grails 2.3 during installation of the Clover plugin","""Since Grails 2.3 sth has changed in the dependency resolution mechanism. As a consequence, when the Clover plugin is being installed for a first time, the transitive dependency to com.cenqua.clover:clover is not resolved and this jar is not available on class path.     As a consequence build fails when it tries to import """"cloverlib.xml"""".    Workaround: define a dependency to com.cenqua.clover:clover in BuildConfig.groovy (or in pom.xml)  - in the very same way as it was made in Clover-for-Grails 3.1.12 or older under the Grails 2.2.    Fix:    1) reconfigure dependencies.groovy  / pom.xml ?     2) roll back to a previous approach - i.e. merge clover-grails1 branch into default, produce one plugin version, rollback documentation"""
"CLOV-1438","Suggestion","Database|Instrumentation|Test Optimization",8,"Create an API for plugging custom I/O handler","""Currently Clover uses a standard Java IO/NIO libraries to read from and write to: a coverage database, coverage recording files (global and per-test), test optimization snapshots.     This is not sufficient when user want to run an application on a custom file system, such as Apache HDFS.    Provide an API which would allow to provide a custom IO handler.       Scope:   * writing coverage files (global and per-test)   * reading/writing database (optional - we deal a lot with file channels which might be a problem; a growable coverage recorder can be used at runtime instead of this)   * writing optimization snapshot (optional - not everyone uses test optimization)    References:   * https://answers.atlassian.com/questions/255286/does-clover-support-to-read-and-write-clover-db-and-coverage-recording-files-from-hdfs   * https://answers.atlassian.com/questions/48360/how-can-i-get-functional-test-code-coverage-reports-for-mapreduce-program"""
"CLOV-1442","Bug","Ant Tasks",2,"Use more unique property names in clover.xml","""The clover.xml contains the following properties:        Their names are not very unique so there's some chance that developer could actually use similar ones in his project. This may lead to clash an Ant properties are not read-only once set.     Use more distinct names, e.g. """"clover.project.name"""".     Update documentation on CAC accordingly. """
"CLOV-1441","Bug","CIJ Plugin",2,"Clover plugin doesn't load on IDEA 13 Startup","""  """
"CLOV-1443","Bug","Grails Plugin",2,"Clover Grails Plugin fails when tests are launched from IDEA","""Steps to reproduce:   * import Grails-based project into IntelliJ IDEA    * add Clover Grails plugin to the project   * run *forked* tests from IDEA    Build fails with an error like:        Workaround:   * disable forked test execution in IDEA    Probable cause:    IDEA does not call """"grails test-app"""" but executes the  GrailsScriptRunner, e.g.:        The most probably this runner does not import the _GrailsTest.groovy, which contains a definition of the testNames property."""
"CLOV-1446","Bug","CIJ Plugin",2,"Tree map report has an empty line in context menu","""Open TreeMap report in IDEA, right click on a class, a context menu is opened which has an empty first line:    !jump_to_source.png!  """
"CLOV-1451","Bug","Instrumentation",2,"Fix uncheched warnings for code instrumented by Clover","""Follow up of CLOV-1399:    {quote}  I tried it with 3.2.2 same issue for every instrumented class.  [WARNING] /Users/kasperni/workspace/cake-container/cake-container/cake-container-api/target/clover/src-instrumented/org/cakeframework/container/RuntimeContainerException.java:[24,758] unchecked cast  required: I  found: java.lang.Object    It is this generated line that generates the warning:    return (I) java.lang.reflect.Proxy.newProxyInstance(l.getClass().getClassLoader(), l.getClass()  .getInterfaces(), h);    It can be solved by adding a @SuppressWarnings(""""unchecked"""") to the instrumented file:    @SuppressWarnings(""""unchecked"""")  public static <I, T extends I> I lambdaInc(final int i, final T l, final int si)  {........}   {quote}"""
"CLOV-1449","Suggestion","Groovy|Reporting",2,"Test spock with XML importing","""Test how the <clover-report> can be used together with:   * Spock Spec classes with @Unroll    * test results imported from an external XML file    Purpose of test:    * check if runtime test names recorded by Clover matches test names reported by Spock     Outcome:   * document whether it works (and how) or not"""
"CLOV-1448","Suggestion","Groovy",3,"Test spock under gradle","""We don't support Gradle. However, it's worth checking how our Spock works (or not :-) ) with open-source gradle clover plugins available.    To do:    * prepare a sample app with a build.gradle script   * integrate Clover into it using the https://github.com/bmuschko/gradle-clover-plugin    * check if spock instrumentation works here   * publish results on CAC as a developer guide  """
"CLOV-1447","Suggestion","CEP Plugin|CIJ Plugin",5,"Add possibility to configure <profiles> in Eclipse and IDEA IDEs","""The <clover-setup> and <clover-instr> tasks allow to define <profiles> section, where we can select coverage recorder type etc. There's no possibility to configure it in Clover-for-Eclipse and Clover-for-IDEA plugins."""
"CLOV-1455","Bug","Instrumentation",2,"///Clover:OFF does not work with lambdas","""The following piece of code fails to be instrumented    Results in    [ERROR] /Users/kasperni/workspace/cake-container/cake-container/cake-container-impl/target/clover/src-instrumented/org/cakeframework/internal/container/handler/Foo.java:[28,58] cannot find symbol    symbol:   variable __CLR3_2_2133133hrrnhz2t    location: class org.cakeframework.internal.container.handler.Foo"""
"CLOV-1457","Bug","Grails Plugin",2,"clover-for-grails plugin is not working with grails.project.fork","""Hello,  When I run the grails test-app command in grails 2.3.5. I get the following error:      """
"CLOV-1459","Bug","Grails Plugin",2,"native2ascii error converting i18n bundles for plugin","""When running with -clover.on in our CI environment (TeamCity), we are getting a weird error:    Error native2ascii error converting i18n bundles for plugin [xxxx] java.lang.reflect.InvocationTargetException    It's not constrained to a single plugin, typically it lists different plugins. The full stack trace is:        Running without """"-clover.on"""" removes this problem. """
"CLOV-1462","Bug","CIJ Plugin",2,"ClassNotFoundException when running tests in IDEA 13.1 RC with Clover enabled","""Install IDEA 13.1 RC and Clover 3.2.2. Load Java project. Create a run configuration for JUnit, select """"Test kind: All in package"""", select """"Before launch: Make"""".    Run tests with Clover disabled - all tests are executed.     Run tests with Clover enabled - all tests are executed, but after second and next runs - ClassNotFoundException on a test class occurs. """
"CLOV-1466","Bug","Grails Plugin|Groovy|Instrumentation",3,"Several tests fail with Cannot cast object ... to class 'com_cenqua_clover.CoverageRecorder'","""See here for a travis build exhibiting this problem:    https://travis-ci.org/thehyve/transmart-core-db/jobs/21220075    19 tests there fail because of this problem. The culprit seems to be this line: https://github.com/thehyve/transmart-core-db/blob/5e8f0400b9ddce75e1d3d2adccf747e42bff3ee6/src/groovy/org/transmartproject/db/dataquery/clinical/TerminalConceptVariablesTabularResult.groovy#L39"""
"CLOV-1467","Suggestion","Ant Tasks|Maven plugin",3,"Rename com.cenqua to com.atlassian","""Rename all references to """"Cenqua"""" to """"Atlassian"""". It affects:   * java packages - com.cenqua.* and com_cenqua_clover (/)   * Clover-for-Eclipse plugins and features (/)   * com.cenqua.clover:clover artifact (clover core) (/)    Optional:    Rename also Clover-for-Maven plugin from 'maven-clover2-plugin' to 'clover-maven-plugin'.     (x) The maven plugin will not be renamed. Reason? Typing 'mvn clover:setup' in a project where clover-maven-plugin is not explicitly defined in pom.xml causes that Maven resolves the 'clover:setup' as 'com.atlassian.maven.plugins:maven-clover-plugin:maven-plugin:3.7' which is wrong. So it will be very confusing for customers.    """
"CLOV-1471","Bug","Maven plugin",3,"Maven clover2:setup triggers duplicate class exception","""We have several maven projects that have more than one source directory. The non-default directories are added using the build-helper plugin. The clover2:setup goal instruments all source folders, but then sets all non-generated directories as source folders on the maven project. That results in compile errors, since source files are both present in the clover instrumented sources and original location.    Example:  java/src << 1. default source folder  java/src-build << 2. additional source folder  target/generate-sources/jaxb << 3. generated source folder    Case (2) is causing problems."""
"CLOV-1470","Bug","Maven plugin",1,"Maven clover2:setup ignores generated sources","""We have several maven projects that contain only generated sources (target/generated-sources/...). The default source directory does not exist for those projects. clover2:setup does not work properly for those projects: the generated sources do not get compiled. We currently work around the issue by creating a marker file in the default source directory."""
"CLOV-1469","Suggestion","Maven plugin",1,"Maven plugin sholud handle target/generated-test-sources","""The AbstractInstrumenter recognizes only the target/generated-sources path:        It shall also detect the target/generated-test-sources."""
"CLOV-1478","Bug","Maven plugin",1,"Double instrumentation error when running 'mvn site' on JDK8","""Run 'mvn clean site' on the src/it/setTestFailureIgnore project using the JDK8 and Maven 2.2.1. It fails with an error:        The same site goal works correctly under JDK7.  """
"CLOV-1481","Bug","Instrumentation",2,"Invalid instrumentation code for test methods inside anonymous inline classes","""Clover generates incorrect reference to the static field  __CLR3_2_2_TEST_NAME_SNIFFER in case when a test method is declared inside   an inner (static or non-static) or inside an anonymous inline class, which are located inside a non-test top-level class.     In such case, the top-level class doesn't have the __CLR3_2_2_TEST_NAME_SNIFFER field (as it's not a test class), but inner/inline classes (which are test ones) are trying to access this field.         Code example:        """
"CLOV-1486","Suggestion","Reporting",1,"change historical report","""scope: header, footer, tables with """"added"""" and """"movers"""",     optionally, put charts in some boxes"""
"CLOV-1490","Bug","Groovy",3,"Clover safeEval method is imcompatible with Groovy's @CompileStatic annotation","""When trying to use Clover on a Groovy class that is marked @CompileStatic and it contains a null-safe operator (e.g. Bar bar = foo?.bar), then the groovyc compilation fails with the error:     No such property: bar for class: java.lang.Object    The error is that the generated  method returns an Object instead of the type of the property. This then causes Groovy compiler to fail later.    I've created a sample project that exhibits the problem at https://github.com/johnrengelman/clover-grooyv-compilestatic    Simply run     """
"CLOV-1492","Bug","Grails Plugin",3,"Grails' controller methods are not shown as entered","""Hello,  For some reason the method in a controller is marked as not entered even though the content inside is shown to be executed. Please can you help me rationalize/ understand this?    Please refer to me screenshots:  index_method_not_executed.png: to see that the index() method is not executed even though its contents are.  test_for_index_method.png: the test that is run to get the method to run.  """
"CLOV-1496","Suggestion","Reporting",3,"reduce html report size","""As a developer I'd like to have small HTML report size in order to reduce disk space consumption, especially in case of builds on CI server.     Possible ways to reduce report size:    1) extract list of packages to separate JSON file and load it dynamically using JS function (instead of embedding it on virtually every page)  (/) DONE    2) use some html compression utility (which would strip all whitespace etc)       https://code.google.com/p/htmlcompressor/#Compressing_selective_content_in_Velocity_templates    (x) performance of the HtmlCompressor is unacceptable (+340% time)    3) remove whitespace from most frequent loops from velocity templates (/) DONE"""
"CLOV-1497","Suggestion","Reporting",3,"improve report accessiblity","""http://www.w3.org/TR/wai-aria-practices/#TreeView"""
"CLOV-1498","Suggestion","Reporting",3,"improve navigation between report entities","""We can navigate vertically and horizontally, but on a file level we've got a break:        fix it so that we can jump from test file to test results for a file    fix it so that we have one """"source"""" tab for a file   -> put 'classes and methods' and 'contributing tests' into expandable tables, dialogs etc  """
"CLOV-1500","Suggestion","Reporting",3,"implement global search in the html report - backend","""Implement search box in a blue app header.  Generate JSON data:  * packages, files, classes, methods, tests  Split into several indexes (for smaller file size) as theoretical size is up to 40MB (200'000 objects per 200 chars).  Add """"automatic"""" option (up to 10'000 elements).   (/) Add options for:   <clover report>/<current>/<format>/<globalSearch scope=""""package,file,class,method,test|auto"""" limit=""""10000""""/>  (/) Add option for HtmlReporter:  --globalSearchScope=package,file,class,method,test|auto  --globalSearchLimit=10000  to choose which elements shall be searchable."""
"CLOV-1502","Bug","Reporting",1,"tree view is not compacted properly when only 1 package is present","""!tree_view_bug.png!    We have com.cenqua + samples.money instead of exactly one (root) node named """"com.cenqua.samples.money"""".   """
"CLOV-1503","Suggestion","Reporting",1,"provide explanation when number of files is greater than number of classes for a package","""There might be a case that number of files > number of classes listed:    !more_files_than_classes.png!    This is normal behaviour, because by default Clover hides entities having no executable code, such as: empty classes, enums (with no methods), interfaces (with no virtual extension methods).     However, this may be confusing for end user.     How we could improve this:    1) Set the showEmpty to true by default. Benefit: 'classes >= files' in all cases. Drawback: report will contain unnecessary noise.     2) Add [(?) Help] button above the table. Example:    !package_help.png!    3) Add tooltip for 'Files'  (TotalElements.getHelp())    4) Add small text below the class table. For example:    """"3 classes are not listed because they contain no executable code.""""  """
"CLOV-1505","Suggestion","Reporting",3,"replace a vertical navigation component by a sidebar","""Instead of the aui-vertical-nav use the aui-sidebar component. """
"CLOV-1509","Suggestion","Instrumentation|Test Optimization",3,"as a developer I'd like to have nanosecond precision for test duration","""In reports lots of tests have duration = 0. This is because unit tests are fast and the System.currentTimeMillis() is used to record start and end time of a test. Which is not precise by design.    We could increase precision to nanoseconds using System.nanoTime().    Note: we'd still need to call System.currentTimeMillis() to record datetime when test was run."""
"CLOV-1508","Suggestion","Reporting",2,"Upgrade HTML report to ADG 2.2+ / AUI 5.9+","""Upgrade AUI library to the latest version. We may need to make some corrections of CSS to be compatible (probably: colors, shadows, notification messages)."""
"CLOV-1511","Suggestion","Reporting",0.5,"""Show contributing test"" change to ...","""""""<a>Select tests</a> to highlight the code coverage"""" or something similar"""
"CLOV-1510","Suggestion","Reporting",0.5,"Remove ""See more"" links from the report dashboard","""for:  * Most complex packages  * Most complex classes  * Least tested methods  * Class Coverage Distribution  * Class Complexity          """
"CLOV-1512","Bug","Reporting",1,"The ""Show methods"" link does not open the modal dialog","""This happens for inner classes (i.e. when a class name contains """"."""")    May be caused by a way how Modal Dialog handles element id."""
"CLOV-1514","Bug","Reporting",1,"tool tips in dashboard widgets shall not be displayed on the right","""Tool tips are by default placed on the right, so they don't fit in the 'Clover Dashboard' view:    !screenshot-1.png!"""
"CLOV-1515","Suggestion","Reporting",1,"use ADG fonts and colours in Cloud View in IDEA","""The ADG HTML report in Clover 4 uses new colour set (shades of red instead of blue-red) for tag clouds. The Clover-for-Eclipse has this theme:    [^cloud_view_eclipse.png]    but the Clover-for-IDEA still uses the old colour set:    [^cloud_view_idea.png]"""
"CLOV-1517","Bug","Ant Tasks",1,"AntIntegrator adds unnecessary double quotes for -Dparam=value JVM options","""Class com.atlassian.clover.ci.AntIntegrator puts values of the following properties:    -Dclover.historydir and -Dclover.license.cert, -Dclover.license.path    in double quotes. On Windows platform it causes problems when a value contains space character - parameters are being split. See BAM-10740.    Add a check if OS is Windows and don't add double quotes in such case. """
"CLOV-1518","Suggestion","Reporting",5,"implement global search in the html report - frontend","""Implement search box in blue app header.    Generate JSON data:   * packages, files, classes, methods, tests    Split into several indexes (for smaller file size) as theoretical size is up to 40MB (200'000 objects per 200 chars).    Add """"automatic"""" option (up to 10'000 elements).     Add options for <clover report>     <index scope=""""package, file, ..., method | auto"""">    to choose which elements shall be searchable."""
"CLOV-1527","Bug","Reporting",1,"Clover tab with an HTML report generated by Clover 4 shall have a vertical scroll bar (BAM-14777)","""See BAM-14777."""
"CLOV-1526","Bug","Reporting",5,"View latest Clover information (BAM-14428)","""See BAM-14428."""
"CLOV-1534","Suggestion","Ant Tasks",1,"Move CloverCompilerAdapter out from org.apache.tools.ant.taskdefs package","""The org.apache.tools.ant.taskdefs.CloverCompilerAdapter may cause conflicts with Apache Ant packaged as OSGI bundle which exports the same package.     Possible fix:  (x) The Javac.getFileList() is a getter for compileList. Try using it - we must ensure that compileList and replacementCompileSet have the same size or  (/) Use reflections to access the package-protected field.    Thanks to this we could move CloverCompilerAdapter  to com.atlassian.clover package. """
"CLOV-1538","Bug","Instrumentation",2,"Instrumenting assignment of method reference to field results in reference to undefined symbol.","""Instrumenting the following snippet results in the compilation error  [ERROR] clover/src-instrumented/Test.java:[2,18] cannot find symbol  [ERROR] symbol:   variable __CLR3_3_000hysmxbbd  [ERROR] location: class Test    Source:  public class Test {      Runnable r = System::currentTimeMillis;  }    Instrumented code:  /* $$ This file has been instrumented by Clover 3.3.0#2014033113020816 $$ */public class Test {      Runnable r = __CLR3_3_000hysmxbbd.lambdaInc(0,System::currentTimeMillis,1);  }  """
"CLOV-1547","Bug","Grails Plugin|Groovy",3,"The Grails' @Transactional annotation conflicts with Clover's AST transformations","""The @Transactional annotation is the new Grails-y way of controlling transactional behavior in a service. It uses an AST transformation to essentially wrap public methods (if added to the class) in a GrailsTransactionTemplate. So you get code that looks like this:        The real body of the method is in the reject_closure5, which ends up calling a method named """"$tt_reject(...)"""".    Clover doesn't realize that the code originally under the reject method has essentially been relocated to the $tt__reject method.    Given that @Transactional is a core part of Grails (starting in 2.3, I believe) and the recommended way to control transactions going forward, this is probably something that should be addressed in Clover core."""
"CLOV-1546","Bug","Ant Tasks",1,"Resolve path to clover.jar when packed as OSGI bundle","""ClassPathUtil.getCloverJarPath() searches for a JAR in case when URL returned by class loader is like:         or        However, it does not handle a case for OSGI bundles, which have an URI like:        Fix: use getClass().getProtectionDomain().getCodeSource().getLocation().toURI()  """
"CLOV-1554","Suggestion","Ant Tasks",5,"Replace iText library","""Replace current iText 2.0.1 library by:   * a commercial version of iText 5.x or    * a PDFBox (http://pdfbox.apache.org) or other tool based on a good open-source license (Apache 2.0, MIT, BSD, PD)."""
"CLOV-1553","Suggestion","Ant Tasks",3,"Upgrade Atlassian Extras to 3.2.x","""API has changed in Atlassian Extras 3.x vs 2.5. There's no   LicenseManagerFactory.getLicenseManager()    We can compose our own license manager and decoder using:  Version1LicenseDecoder + Version2LicenseDecoder + DelegatingLicenseDecoder + CloverProductLicenseFactory + DefaultLicenseManager    However, there are problems with decoding the """"Clover Desktop"""" license = the CloverLicenseTest.testDesktopLicense fails.     Investigate:   * maybe Clover Desktop license format has changed?   * or maybe overlooked by atlassian-extras developers?   * or ... ?"""
"CLOV-1552","Suggestion","Ant Tasks",3,"Upgrade FastUtil library to version 6.5.2 or later","""API was changed since version 4.4.3, some methods used by Clover are missing and there's no direct replacement for them. Migrate Clover's code. """
"CLOV-1559","Suggestion","Integrations",40,"Create Bitbucket Connect Clover Plugin","""Bitbucket - Dan Bennett (Team Lead) - Investigate the creation of a Connect plugin to expose Clover functionality in Bitbucket diff & file viewer (same as Stash functionality)"""
"CLOV-1561","Bug","Database",1,"Distributed Coverage does not work due to java.rmi.UnmarshalException",""""""
"CLOV-1567","Bug","CIJ Plugin",2,"Test optimization in IDEA 14 shows wrong number of classes","""There are 2 test classes in the 'Moneybags' tutorial project. Running test optimization in IDEA 14 (EAP build 138.2458.8) shows """"3 test classes"""".    !idea14_clover_test_optimization.png!"""
"CLOV-1571","Suggestion","Ant Tasks|CEP Plugin|CIJ Plugin",8,"Upgrade third party libraries used by Clover - 2nd phase","""Upgrade third party libraries to their latest versions:   * Antlr 4.0, including java.g syntax file (x) tracked in CLOV-1329, CLOV-1331 and CLOV-1332   * atlassian-extras 3.2 (x) tracked in CLOV-1553   * cajo 1.175   * commons-lang3 3.3.2 (x)   * fastutil 6.5.2 (x) tracked in CLOV-1552   * GSON 2.2.2    * JDOM 2.0.4   * JSON - replace by com.google.code.gson:gson    Upgrade feasibility to be verified:   * theJIT   * KTreeMap/JTreeMap    Get rid of:   * Overlibvms (x) not until we drop Classic reports (Clover 4.1)   * Utils.js (x) not until we drop Classic reports (Clover 4.1)   * iText (x) tracked in CLOV-1554    To be considered:   * upgrade Log4j to or 2.0.x"""
"CLOV-1570","Bug","Reporting",1,"A historical report contains link to an XML report","""!wrong_links_in_a_historical_report.png!"""
"CLOV-1569","Bug","Reporting",1,"A wrong caption in a search box in an HTML ADG report","""!search_box_wrong_caption.png!"""
"CLOV-1568","Bug","Reporting",1,"An orphaned lozenge when there are no search results ","""!html_adg_orphaned_lozenge.png!"""
