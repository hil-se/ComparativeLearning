"issuekey","type","components","storypoint","title","description_text"
"CLOV-1086","Bug","CEP Plugin|CIJ Plugin|Reporting",2,"Line coverage data is inconsistent","""I'm running 2.4.1 on IDEA 7 and get inconsistent line and branch coverage in the editor: every line that is hit by the a test always gets """"1"""" as the hitcount.  """
"CLOV-379","Bug","Maven plugin",2,"Surefire classpath is incorrect when depending on a jar and a test-jar from the same maven module","""We have two different applications that have the same symptom. Their test cases work properly when executed without clover, but when we run them with clover, they fail because classes or resource files are missing from the classpath.    When running the builds with clover, the test cases are executed multiple times. Only the last time they run they fail. When checking the maven debug output (using the -X option), I found that the last time the test cases are run, a JAR file is missing from the classpath. With both applications it is a jar file from a maven module for which we both depend on the jar and test-jar types of the module.     For example we have the following in the pom.xml file:            <dependency>              <groupId>${parent.groupId}</groupId>              <artifactId>server-data-access</artifactId>              <version>${version}</version>              <type>test-jar</type>              <scope>test</scope>          </dependency>          <dependency>              <groupId>${parent.groupId}</groupId>              <artifactId>server-data-access</artifactId>              <version>${version}</version>          </dependency>    And for some reason, when the test cases are executed for the last time, the following second dependency is not included in the list of jars in the classpath.    I have attached the pom.xml files from the module for which the test cases fail (server-web.pom), the pom.xml files from its parents, the pom.xml file for the module that generates both a jar and a test-jar (server-data-access.pom) and the log file that I get when running maven with the -X option.    This is the classpath when the test cases fail (notice that  /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-data-access/target/server-data-access-1.0.2-SNAPSHOT.jar is missing):  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-web/target/test-classes  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-web/target/classes  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-model/target/server-model-1.0.2-SNAPSHOT.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/commons-lang/commons-lang/2.1/commons-lang-2.1.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-actions/target/server-actions-1.0.2-SNAPSHOT.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/bml/util/8.19.0/util-8.19.0.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/bml/tk-util/8.19.0/tk-util-8.19.0.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/jboss/netty/netty/3.0.0.GA/netty-3.0.0.GA.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/springframework/spring/2.5.6/spring-2.5.6.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-core/target/server-core-1.0.2-SNAPSHOT.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-data-access/target/server-data-access-1.0.2-SNAPSHOT-tests.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/hibernate/hibernate/3.2.6.ga/hibernate-3.2.6.ga.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/javax/transaction/jta/1.0.1B/jta-1.0.1B.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/hibernate/hibernate-validator/3.0.0.ga/hibernate-validator-3.0.0.ga.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/hibernate/hibernate-search/3.0.0.GA/hibernate-search-3.0.0.GA.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/apache/lucene/lucene-core/2.2.0/lucene-core-2.2.0.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/drools/drools-core/4.0.7/drools-core-4.0.7.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/mvel/mvel/1.3.1-java1.4/mvel-1.3.1-java1.4.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/javax/j2ee/1.3/j2ee-1.3.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/com/sun/xml/bind/jaxb-impl/2.1.3/jaxb-impl-2.1.3.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/javax/xml/bind/jaxb-api/2.1/jaxb-api-2.1.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/common/common-configuration/1.0.25/common-configuration-1.0.25.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/opensymphony/oscache/2.1.1/oscache-2.1.1.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/bml/bml-core/8.20.0-SNAPSHOT/bml-core-8.20.0-SNAPSHOT.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/bml/cache/8.20.0-SNAPSHOT/cache-8.20.0-SNAPSHOT.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/common/common-spring-util/1.0.25/common-spring-util-1.0.25.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/esper/esper/2.2.0/esper-2.2.0.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/antlr/antlr-runtime/3.0.1/antlr-runtime-3.0.1.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/org/antlr/stringtemplate/3.1-b1/stringtemplate-3.1-b1.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/quartz/quartz/1.5.2/quartz-1.5.2.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/com/mockrunner/mockrunner/0.3.1/mockrunner-0.3.1.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/common/common-abstract-unit-tests/1.0.25/common-abstract-unit-tests-1.0.25-tests.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/bml/unittest/8.20.0-SNAPSHOT/unittest-8.20.0-SNAPSHOT.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-data-access/target/server-data-access-1.0.2-SNAPSHOT-tests.jar  build 20-Nov-2008 08:47:57 [DEBUG]   /opt/bamboo/.m2/repository/com/oracle/oracle_jdbc/10.2.0.2.0/oracle_jdbc-10.2.0.2.0.jar    This is the classpath for when it succeeds:  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-web/target/test-classes  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-web/target/classes  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/xerces/xercesImpl/2.9.1/xercesImpl-2.9.1.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-model/target/server-model-1.0.2-SNAPSHOT.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/commons-lang/commons-lang/2.1/commons-lang-2.1.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-actions/target/server-actions-1.0.2-SNAPSHOT.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/log4j/log4j/1.2.13/log4j-1.2.13.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/bml/util/8.19.0/util-8.19.0.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/bml/tk-util/8.19.0/tk-util-8.19.0.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/jboss/netty/netty/3.0.0.GA/netty-3.0.0.GA.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/springframework/spring/2.5.6/spring-2.5.6.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-core/target/server-core-1.0.2-SNAPSHOT.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-data-access/target/server-data-access-1.0.2-SNAPSHOT.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/hibernate/hibernate/3.2.6.ga/hibernate-3.2.6.ga.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/javax/transaction/jta/1.0.1B/jta-1.0.1B.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/hibernate/hibernate-validator/3.0.0.ga/hibernate-validator-3.0.0.ga.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/hibernate/hibernate-search/3.0.0.GA/hibernate-search-3.0.0.GA.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/apache/lucene/lucene-core/2.2.0/lucene-core-2.2.0.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/drools/drools-core/4.0.7/drools-core-4.0.7.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/mvel/mvel/1.3.1-java1.4/mvel-1.3.1-java1.4.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/commons-io/commons-io/1.4/commons-io-1.4.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/javax/j2ee/1.3/j2ee-1.3.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/com/sun/xml/bind/jaxb-impl/2.1.3/jaxb-impl-2.1.3.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/javax/xml/bind/jaxb-api/2.1/jaxb-api-2.1.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/common/common-configuration/1.0.25/common-configuration-1.0.25.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/opensymphony/oscache/2.1.1/oscache-2.1.1.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/bml/bml-core/8.20.0-SNAPSHOT/bml-core-8.20.0-SNAPSHOT.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/bml/cache/8.20.0-SNAPSHOT/cache-8.20.0-SNAPSHOT.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/common/common-spring-util/1.0.25/common-spring-util-1.0.25.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/esper/esper/2.2.0/esper-2.2.0.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/antlr/antlr-runtime/3.0.1/antlr-runtime-3.0.1.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/org/antlr/stringtemplate/3.1-b1/stringtemplate-3.1-b1.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/quartz/quartz/1.5.2/quartz-1.5.2.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/com/mockrunner/mockrunner/0.3.1/mockrunner-0.3.1.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/common/common-abstract-unit-tests/1.0.25/common-abstract-unit-tests-1.0.25-tests.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/com/i4commerce/bml/unittest/8.20.0-SNAPSHOT/unittest-8.20.0-SNAPSHOT.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/Bamboo/xml-data/build-dir/MONITORING-NIGHTLY/monitoring-server/server-data-access/target/server-data-access-1.0.2-SNAPSHOT-tests.jar  build 20-Nov-2008 08:45:07 [DEBUG]   /opt/bamboo/.m2/repository/com/oracle/oracle_jdbc/10.2.0.2.0/oracle_jdbc-10.2.0.2.0.jar"""
"CLOV-1085","Bug","Test Optimization",2,"Message in Balloon after clean snapshot is bogus","""# Clean shapshot  # First Optimised test run the balloon message is ok (see CIJ-272 re my thoughts on it)  # Second optmised test run has some odd figures in it relating to expected savings and total test run time.    """
"CLOV-1084","Bug","CIJ Plugin",1,"No instrumentation Done, Always get two Tests run.","""Although 0 instr. was done, I still see two tests run.    """
"CLOV-701","Bug","Reporting",2,"Test Columns are empty (or -1) in project.js when generated via a JSON report  ","""When a JSON report is generated, the test fields:  """"ErroneousTests"""":0,""""FailingTests"""":0,""""FilteredElements"""":0.42738318,""""PassingTests"""":0,""""PcErroneousTests"""":-1,""""PcFailingTests"""":-1,""""PcPassingTests"""":-1,""""TestExecutionTime"""":0,""""Tests"""":0,    are all -1 or 0 in the project.js.  e.g.  https://bamboo.extranet.atlassian.com/browse/CCD-WCLV-488/artifact/Clover-HTML/project.js    The test data is definitely available in the HTML report."""
"CLOV-906","Bug","Grails Plugin",1,"Clover-for-Grails generates an exception when using the -clover.view option on the Grails command line.","""Clover-for-Grails generates an exception when using the -clover.view option on the Grails command line. According to Nick's assessment so far, this is a Windows-specific problem.    See output below:    """
"CLOV-930","Suggestion","Grails Plugin|Groovy",2,"Implement Test Optimization for Grails: -clover.optimize","""Running -clover.optimize will:  * save a clover.snapshot on the first build  * use this, to discern the optimal set of tests and their order, to run for subsequent builds based on:  ** which source files have been modified  ** length of test  ** test result - failed tests will always be re-run"""
"CLOV-940","Bug","Ant Tasks",3,"clover + ant + GWT does not compile and test with clover.","""https://support.atlassian.com/browse/BSP-2952      It looks like the GWT.clover.xxx are not executed.    build 06-May-2010 17:24:30 Build sequence for target(s) `clover.fullclean' is [clover.clean, clover.fullclean]  build 06-May-2010 17:24:30 Complete build sequence is [clover.clean, clover.fullclean, clover.save-history, GWT.clover.report, GWT.clover.json, checkstyle, common.checkstyle, buildonly, dist-dev, tools, apicheck-nobuild, apicheck, test, verify, common.all, build, doc, dist, -compile.emma.if.enabled, dev, GWT.with.clover, compile.emma.if.enabled, common.clean, GWT.clover.fullclean, common.build, GWT.clover.current, presubmit, all, GWT.clover.clean, GWT.clover.save-history, clover.snapshot, clover.json, clover.report, user, clover.log, common.compile.emma.if.enabled, ci, common.-compile.emma.if.enabled, GWT.clover.log, bikeshed, emma.merge, GWT.test, with.clover, jni, clean, clover.all, common.-create.emma.coverage.if.enabled, clover.xml, common.verify, -create.emma.coverage.if.enabled, buildtools, clover.current, samples, dist-bikeshed, soyc, GWT.clover.all, GWT.clover.xml, common.test, servlet, GWT.clover.snapshot, ]    However targets without GWT are executed."""
"CLOV-951","Bug","CIJ Plugin",2,"Assertion failing (call not made from EDT)",""""""
"CLOV-953","Bug","Build system|Grails Plugin|Groovy",3,"Occasionally clover is getting broken on the Hudson ","""We are using Grails 1.2.2 , Hudson, clover  From time to time Hudson fails with the following console output. Without any changes the next build can be fine.    Licensed under Apache Standard License 2.0  Grails home is set to: D:\Apps\grails-1.2.2    Base Directory: D:\Apps-Pub\HUDSON_HOME\jobs\LifePoints\workspace\Lifepoints  WARNING: Dependencies cannot be resolved for plugin [clover-3.0.2] due to error: null  Resolving dependencies...  Dependencies resolved in 1422ms.  Running script D:\Apps\grails-1.2.2\scripts\TestApp.groovy  Environment set to test  Clover: Using config: [on:true]  Using clover license path: D:\Apps-Pub\HUDSON_HOME\jobs\LifePoints\workspace\Lifepoints/clover.license    [taskdef] Could not load definitions from resource cloverlib.xml. It could not be found.  Error executing script TestApp: Problem: failed to create task or type clover-env  Cause: The name is undefined.  Action: Check the spelling.  Action: Check that any custom tasks/types have been declared.  Action: Check that any <presetdef>/<macrodef> declarations have taken place.    : Problem: failed to create task or type clover-env  Cause: The name is undefined.  Action: Check the spelling.  Action: Check that any custom tasks/types have been declared.  Action: Check that any <presetdef>/<macrodef> declarations have taken place.     at org.apache.tools.ant.UnknownElement.getNotFoundException(UnknownElement.java:484)   at org.apache.tools.ant.UnknownElement.makeObject(UnknownElement.java:416)   at org.apache.tools.ant.UnknownElement.maybeConfigure(UnknownElement.java:160)   at _Events.toggleCloverOn(_Events.groovy:302)   at _Events$_run_closure3.doCall(_Events.groovy:56)   at _GrailsEvents_groovy$_run_closure5.doCall(_GrailsEvents_groovy:58)   at _GrailsEvents_groovy$_run_closure5.call(_GrailsEvents_groovy)   at _GrailsEvents_groovy.run(_GrailsEvents_groovy:62)   at _GrailsEvents_groovy$run.call(Unknown Source)   at _GrailsClean_groovy$run.call(Unknown Source)   at _GrailsClean_groovy.run(_GrailsClean_groovy:29)   at _GrailsClean_groovy$run.call(Unknown Source)   at TestApp.run(TestApp.groovy:44)   at TestApp$run.call(Unknown Source)   at gant.Gant.processTargets(Gant.groovy:494)   at gant.Gant.processTargets(Gant.groovy:480)  Error executing script TestApp: Problem: failed to create task or type clover-env  Cause: The name is undefined.  Action: Check the spelling.  Action: Check that any custom tasks/types have been declared.  Action: Check that any <presetdef>/<macrodef> declarations have taken place."""
"CLOV-964","Bug","Groovy",1,"<testsources> does not work with Ant groovyc task","""Since TestSourceSet is not Serializable it doesn't work with Ant/groovyc.           """
"CLOV-977","Bug","Build system",1,"Clover's embedding of GSON brings in ""assembly-descriptor.xml"" into clover.jar which causes problems for ejbdoclet, others","""see support case https://support.atlassian.com/browse/CLV-5576 and forum post http://forums.atlassian.com/thread.jspa?messageID=257357810    the solution is to simply exclude this file when building the clover.jar  """
"CLOV-987","Bug","CIJ Plugin",1,"Cannot select contexts in IDEA 10.0.2","""I select either the filter button in the coverage panel or go via the project settings (same either way) to get to the clover setting dialog. I select the 3rd tab (Contexts) and check the check-boxes 'catch bosy' and 'property methods'. The boxes become checked but the Apply button remains disabled (this is the main issue).    I add a new custom context - and the Apply button is enabled.    I click apply and the check boxes all reset back to their un-set state. The custom context remains.    """
"CLOV-991","Suggestion","CEP Plugin|Reporting",2,"Ternary clauses never executed still get coverage","""I don't know if this is disoverable at all, but the following example will work with any ternary statement:    @Test  public void testTernaryStatement() {   ternaryStatement(true);  }    public static void ternaryStatement(boolean bool) {   String value = bool ? """"true"""" : """"false"""";   System.out.println(value);  }    This will mark the entire ternary statement as covered, while the false branch was in fact never triggered.      Since Clover is primarily a coverage tool, I marked this issue Major."""
"CLOV-1007","Bug","Maven plugin",1,"clover2:check fails with negative coverage if no class to instrument","""This happens either if no java class was found for instrumentation or if they were all excluded.  Clover then reports a negative coverage of -100%.    To my mind, this is not correct : strictly speaking, if no java class has to be tested for coverage, there is no relevant coverage value (I guess it is what the -100% means) but check should be OK.  """
"CLOV-1011","Bug","CIJ Plugin",1,"Coverage data not showing up in Intellij","""I've got the dev build from CLOV-1004, which worked for Intellij 10.3 but since I upgraded to 10.5.1, neither the latest public rev (3.1.0.v20110608114626-dev) nor the dev version of the plugin from CLOV-1004 works.    In the projects view, it looks like the code is instrumented.  But after I run a test, no coverage information is displayed.  When I explicitly update the clover database, nothing is updated.  The """"Test Runs"""" view behaves as if I never ran a test."""
"CLOV-1015","Bug","Maven plugin",5,"Test Optimization says 0 tests should run but all tests are run anyway","""Recently upgraded my Maven builds to use the Maven Surefire plugin version 2.9. Now my builds that run Clover2:optimized and say 0 tests should run, run all tests anyway. The upshot of this is that our optimized test runs are now taking over an hour versus the 15 to 20 minutes they were when the tests were correctly optimized away.      Here is a section of the log file that shows the problem:    """
"CLOV-1018","Bug","CIJ Plugin",2,"Can't Use ""Google App Engine"" Run Configuration in IDEA 10.5 when Clover Plug-in is Installed","""I am trying to start a GAE run configuration in IDEA 10.5 - after compilation and the web artifact being built, the process simply fails to start, with no errors.  I uninstalled the plug-in and the process once again starts correctly.    I also attempted to create a plain Java Application run configuration to start the process instead and this also fails with the same issue.  The GAE libraries are pulled in as module libraries, via a Maven POM.  I'm not sure if this is linked, but there definitely seems to be a problem with Run configurations when the main Java class being run is located in an external library, rather than being part of the project code-base.  I've checked the IDEA logs and no errors are thrown.  The plain Java Application run configuration had the following settings:    Main Class: com.google.appengine.tools.development.DevAppServerMain  VM Parameters: -Dappengine.sdk.root=<sdk_root> -javaagent:<sdk_root>/lib/agent/appengine-agent.jar  Program Parameters: --disable_update_check <war_file_location>  Working Directory: <sdk_root>"""
"CLOV-1025","Suggestion","Ant Tasks|Maven plugin",1,"Log the actual percentage coverage instead of ""Coverage check PASSED"".","""Clover logs the minimum percentage:  Checking for coverage of [90.0%] for database    But not the actual percentage.  Coverage check PASSED    Please add this logging, in order to help us know when it's safe to bump the threshold higher."""
"CLOV-1056","Bug","CIJ Plugin",2,"IDEA 11 error turning OFF Clover coverage","""Error during dispatching of java.awt.event.MouseEvent[MOUSE_CLICKED,(691,256),absolute(1963,178),button=1,modifiers=Button1,clickCount=1] on frame0  java.lang.NullPointerException   at clover.net.sf.jtreemap.swing.JTreeMap$Zoom.setNewDimension(JTreeMap.java:694)   at clover.net.sf.jtreemap.swing.JTreeMap$Zoom.execute(JTreeMap.java:664)   at clover.net.sf.jtreemap.swing.JTreeMap.zoom(JTreeMap.java:570)   at clover.net.sf.jtreemap.swing.JTreeMap$HandleMouseClick.mouseClicked(JTreeMap.java:616)   at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)   at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:269)   at java.awt.Component.processMouseEvent(Component.java:6507)   at javax.swing.JComponent.processMouseEvent(JComponent.java:3321)   at java.awt.Component.processEvent(Component.java:6269)   at java.awt.Container.processEvent(Container.java:2229)   at java.awt.Component.dispatchEventImpl(Component.java:4860)   at java.awt.Container.dispatchEventImpl(Container.java:2287)   at java.awt.Component.dispatchEvent(Component.java:4686)   at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4832)   at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4501)   at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4422)   at java.awt.Container.dispatchEventImpl(Container.java:2273)   at java.awt.Window.dispatchEventImpl(Window.java:2713)   at java.awt.Component.dispatchEvent(Component.java:4686)   at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:707)   at java.awt.EventQueue.access$000(EventQueue.java:101)   at java.awt.EventQueue$3.run(EventQueue.java:666)   at java.awt.EventQueue$3.run(EventQueue.java:664)   at java.security.AccessController.doPrivileged(Native Method)   at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)   at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:87)   at java.awt.EventQueue$4.run(EventQueue.java:680)   at java.awt.EventQueue$4.run(EventQueue.java:678)   at java.security.AccessController.doPrivileged(Native Method)   at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)   at java.awt.EventQueue.dispatchEvent(EventQueue.java:677)   at com.intellij.ide.IdeEventQueue.e(IdeEventQueue.java:694)   at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:530)   at com.intellij.ide.IdeEventQueue.b(IdeEventQueue.java:416)   at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:374)   at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:211)   at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:128)   at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:117)   at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:113)   at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:105)   at java.awt.EventDispatchThread.run(EventDispatchThread.java:90)    """
"CLOV-1062","Bug","Groovy|Maven plugin",13,"Clover-for-Groovy failed to instrument Groovy sources having methods overridden by metaClass ","""We were able to get clover report from maven-clover2-plugin even for groovy classes successfully. However when we try to override a method via Groovy metaclass in some tests, clover plugin fails on these tests.    We simply added the following lines to our tests.    MyClass.metaClass.myMethod = {     return """"called""""  }     Clover plugin gave the following error.    Exception in thread """"main"""" BUG! exception in phase 'instruction selection' in source unit Test.groovy Clover-for-Groovy failed to instrument Groovy source: Test.groovy    I attached the full stacktrace for further details."""
"CLOV-1077","Bug","CIJ Plugin",2,"Missing icons on TreeView and Cloud Report tabs","""On IDEA 11 the """"Tree View"""" and """"Cloud Report"""" tabs have missing icons. See attached screenshot. """
"CLOV-1082","Bug","Documentation",1,"Write up on CAC how to get Clover working with Maven and integration tests","""In particular:  * numClients=1 should be set in the config  * that the test runner JVM should not have -Dclover.distributed.coverage=ON set as this will override the numClients setting  * that a context listener that starts on webapp start needs to be registered in web.xml so that the webapp Clover runtime connects back to the test runner JVM so that tests proceed """
"CLOV-1087","Suggestion","Documentation",1,"Prepare tutorial how to configure distributed coverage for web applications","""Extend a following page:  http://confluence.atlassian.com/display/CLOVER/Working+with+Distributed+Applications  or add a subpage.     Prepare a step-by-step tutorial how to set compile options, deploy artifacts and set container options in order to test web applications. Things to be considered (not a complete list):     * fact that -Dclover.distributed.coverage=ON it will use the default settings including the default numClients=0     * numClients must be set to 1 in order to have blocking unit tests     * we need a servlet context listener to avoid circular dependency: unit tests are waiting for business code to connect, but business code will not connect until first request (which will be triggered by unit tests)"""
"CLOV-1090","Suggestion","Reporting",3,"Consistent statistics reporting in IDE and HTML reports for subpackages","""See https://answers.atlassian.com/questions/11664/package-summary-including-sub-packages    A problem is as follows.     In IDE (IntelliJ/Eclipse) in the Coverage view when we see statistics for given package it is a aggregated summary of the package and all its subpackages. By clicking """"Flatten packages"""" we can see statistics for a package without subpackages. See idea1.png.     In HTML report we can see aggregated coverage only for the whole project. When we click on a certain package, we see statistics gathered only from classes from given package and not its subpackages. See html1.png and html2.png.    The expected behaviour is as follows:    1) When we click on the """"Coverage"""" link in top-left frame in HTML report, the functionality shall be as it is now. I.e. it should open in the right (main) frame a list of packages, a statistics panel in the top-right corner will show stats for whole project, clicking on a package on the list will open a package details frame with stats in top-right corner for the package only.    2) When we click on the """"Coverage (Aggregate)"""" link in top-left frame, it will open in right frame list of package and a statistics panel for whole project (as it is now). But when user clicks on a package from list it will open a different package details frame with aggregated stats in top-right corner for the package and all subpackages.    3) A stats panel     for option 1 shall have a label like """"Statistics for package (without subpackages) <package name>"""" and     for option 2 like """"Statistics for package (with subpackages) <package name>""""    4) A stats panel should have a link """"show with subpackages"""" / """"show without subpackages"""" for easy switch between reports.    See html3.png      *Update:*    In new HTML report introduced in Clover 4, a package-level page could look this way:    [^clover4-adg-package.png]    so that toggle buttons would be similar to those a project-level page:    [^clover4-adg-project.png]    """
"CLOV-1097","Suggestion","CEP Plugin|Documentation",2,"Guide users through Eclipse setup","""Our current Clover-for-Eclipse documentation is hard to follow.     First it tells you how to enable Clover for your projects, mentions briefly that the views will pop up but won't have anything interesting on them yet, and then goes into great detail about each view.    It would be helpful to instead walk the user through how to enable Clover for a project, and then go straight to configuration. There's no need to explain the views until there's something to show on them!    It would also be helpful to describe how a project should be laid out. Do you need your test classes in the same Eclipse project as your source code, for example?  """
"CLOV-1108","Bug","CEP Plugin",1,"Eclipse does not exclude filtered-out methods from statistics","""When we define certain methods to be filtered-out in Eclipse, they are being marked as not executed (hit count = 0) instead of not being taken into consideration at all (no hit count).     What's interesting, an HTML report generated from Eclipse use filters correctly. Metrics in Eclipse says: 4 methods, 4 statements; Metrics in HTML says: 3 methods, 3 statements.    See attached screenshots."""
"CLOV-1109","Bug","Maven plugin",2,"Unit test failure during Clover2 custom lifecycle do not fail builds","""The Maven Clover2 plugin creates a custom lifecycle. When the unit tests are run in that lifecycle the build will not fail if there are test failures. This is because the lifecycle.xml file forces the Surefire plugin's testFailureIgnore configuration property to false. This is especially problematic in Jenkins builds where unit tests should fail the build (rather than allowing them to be unstable). Please remove this configuration or replace it with a mechanism that can be set in the POM.    The file in question is src/main/resources/META-INF/maven/lifecycle.xml. See the [related Answers discussion|https://answers.atlassian.com/questions/61973/clover-ignore-dmaven-test-failure-ignore-false]."""
"CLOV-1112","Bug","Database|Reporting",1,"Reading clover database across platforms does not resolve path correctly for FileInfo","""Clover database contains FileInfo objects for every source file. One of FileInfo fields is an absolute path to given file. When database is written, it uses current platform file separator for file name ('\' for windows, '/' for Linux/MacOS). However, when database is read it interprets file name using again current platform file separator.     As a consequence, when database is generated on Windows and report generated on Linux, it cannot resolve file name properly - it takes whole path as a single path segment, resulting in paths like:    /path/from/report/generation/sourcepath/D:/path/from/instrumented/build/file.java    As a consequence report generation does create html file containing source code with highlighted coverage."""
"CLOV-1111","Suggestion","CEP Plugin|Documentation",1,"Prepare tutorial how to instrument RCP application under Eclipse","""Prepare manual on confluence.atlassian.com describing how to instrument and run RCP application under Eclipse IDE. Topics to be covered:   * """"Run with Clover as ..."""" vs """"Run as ...""""   * various options in Run Configuration dialog   * adding Clover dependency via Xbootclasspath or manually created plugin   * exporting instrumented code (plugins, fragments, features, product)   * config.ini for product and Xbootclasspath - running exported product (separately) and running it in IDE    Prepare also code example showing how we can use Clover with RCP application.     Open issue: how to distribute it with Clover-for-Eclipse. Options:   * prepare sample aside and attach as zip to manual on confluence   * implement a wizard so that using """"File > New > Example > Clover RCP Example"""" will generate sample projects in workspace (preferred solution, but more work effort)  """
"CLOV-1129","Suggestion","Documentation",1,"Prepare manual how to set-up cross-platform testing","""Write how to set up Clover in case when someone is using a test framework not written in Java - for example shell scripts, C/C++ code. How to wrap this so that Clover can not only execute, but also optimize such tests. """
"CLOV-1131","Bug","CEP Plugin|CIJ Plugin|Instrumentation",2,"Unicode CR/LF characters in javadoc causes Eclipse/IntelliJ editors get out of sync","""Try the following example:    {code:java}  class Unicode {         void foo() {       System.out.println(""""1"""");       /** {@code \u000a} LF */      }                        void goo() {       System.out.println(""""2"""");            /** {@code \u000d} CR */      }                        void hoo() {       System.out.println(""""3"""");      }                    } // end  {code}    In Eclipse editor, every CR/LF written in unicode causes that it interprets it as newline character. As a result left ruler """"sees"""" more lines and all subsequent coverage blocks are shifted down.       In IntelliJ it's even worse, as we get exception. Stack trace:      """
"CLOV-1136","Bug","CEP Plugin",2,"Coverage ruler does not refresh correctly when all source code annotations are disabled","""A left Clover coverage ruler does not refresh correctly after change in coverage in case when we don't have Clover-related source code annotations enabled. Steps to reproduce:   - install Clover, enable it for a Moneybags project, perform full rebuild   - open MoneyBagTest -> coverage is red   - open Window > Preferences > Editors > Text editors > Annotations   - for all """"Clover: xxx"""" annotation types disable """"Vertical ruler"""", """"Overview ruler"""" and """"Text as"""" checkboxes   - run opened test case (right click, run as, junit test)    Result:   - JUnit view shows that tests were executed, Coverage Explorer view is also updated correctly, but the ruler is still highlighted in red   - now scroll the text editor up and down - ruler refreshes during repaint; (the same happens when editor is reopened or resized)    See attached screenshot.    Expected result:  1) ruler should refresh automatically when coverage data is changed, no matter whether source annotation is enabled or not OR  2) ruler should not draw any color if corresponding source code annotation is disabled  """
"CLOV-1135","Bug","CEP Plugin",1,"Coverage ruler does not read settings from Preferences","""A left ruler showing code coverage markers is always reading default color values (defined in plugin.xml), instead of current settings from IDE (Window > Preferences > ... Text editors > Annotations). Note that color in text editor is updated correctly. See attached screenshot. """
"CLOV-1137","Bug","Maven plugin",2,"Remove grover*.jar after build","""A maven-clover2-plugin creates a groover*.jar file in $java.io.tmpdir directory. This JAR is next being dynamically added as a build dependency artifact. It must be available till end of the build.    Unfortunately Maven has nothing like post-build-cleanup phase (which would be always executed at end of build). We need a workaround for this, for example:    1) Create a new Clover goal, like clover2:post-build-cleanup, which will remove this file.     2) Alternatively, find a way to add Clover groovy runtime classes to classpath, so that creation of JAR file would not be needed anymore.     As soon as this bug is fixed, a corresponding update of Bamboo Clover Plugin is necessary. See linked issue.    *Solution implemented:*    Instead of playing with post-build cleanup, there are two new options available in <clover-setup/> taks (Ant) and clover2:setup / clover2:instrument goals (Maven):   * skipGroverJar - if set to true it will not extract artifact at all (can be used only if there's no Groovy code in a project)   * groverJar - target location of grover.jar file (fixed name and location instead of generating temporary file name in java.io.tmpdir)  """
"CLOV-1139","Suggestion","Instrumentation",0,"as a developer I'd like to instrument Java8 source code with no parse error","""Ability to instrument source code containing Java8 syntax, but without instrumentation of the new language features (i.e. lambdas would be 'invisible"""" for Clover).   See:  http://openjdk.java.net/projects/lambda/  Scope:  * instrumentation (""""transparency"""" of new language features)  * java.g file  * reporting (syntax highlighting should still work)  Out of scope:  * changes in database format """
"CLOV-1138","Suggestion","Ant Tasks|CEP Plugin|CIJ Plugin",1,"Create utility for upgrading third party libraries bundled in Clover","""In Clover-for-Ant we have an upgrade.xml Ant script, which can repackage clover.jar and install new version of jfreechart library into it. We shall extend this script to support replacement of all third party libraries used in Clover. Such script should be also available for Clover-for-Eclipse and Clover-for-IDEA.     Keep in mind that we have to retrotranslate third party classes during repackaging to have them compatible with Java 1.4.    Keep in mind that we have to prefix java packages with """"clover."""" in order to avoid name space conflicts.    Packages:   * com.google.gson   * com.atlassian.* (Atlassian API)   * com.keypoint.*   * com.lowagie.*   * gnu.cajo.*   * it.unimi.dsi.fastutil.*   * org.apache.commons.*   * org.apache.log4j.*   * org.apache.oro.*   * org.apache.velocity.*   * org.codehaus.groovy.antlr (?)   * org.jfree   * retrotranslator   * org.apache.tools.ant.* (?)  """
"CLOV-1142","Suggestion","Ant Tasks|Instrumentation",8,"Expose a Service Provider Interface for Clover for handling new languages","""Create a Service Provider Interface for Clover, which will allow to attach new source code and/or byte code instrumenters. It will allow us to create a pluggable architecture so that new programming languages (e.g. Scala, JRuby, Jython, Closure) could be supported.     *Rough idea:*   * new language instrumenters can be attached by META-INF/services   ** they can provide some callback like canInstrument(File) or canInstrument(InstrumentationSource)   ** clover shall pass file/instrumentation source to such instrumenter together with Clover's configuration and an open instrumentation session   ** extension instruments on its own calling session.enterXyz()/exitXyz() methods   ** extension writes output file on its own   ** language instrumenter could work also with an Abstract Syntax Tree (e.g. Groovy or Scala - we may need a different way of attaching here)     * new language renderers can be attached by META-INF/services - move to another issue?      """
"CLOV-1141","Suggestion","Ant Tasks|Documentation|Instrumentation",13,"Refresh Clover-for-Scala prototype","""Tasks:   * take Scala prototype https://confluence.atlassian.com/display/DEV/ShipIt+12+Delivery+-+Clover+for+Scala,    * change the code so that it will use new Clover Service Provider Interface - CLOV-1142   * make it working with the latest Clover code base (version 4.0.x),   """
"CLOV-1140","Suggestion","CEP Plugin|Documentation",5,"Make Clover-for-Android prototype publicly available","""Take a ShipIt prototype prepared by Michael, merge with the latest Clover version, make it working on Eclipse ADT, publish manual how to use it on CAC/Clover-for-Android page. """
"CLOV-1143","Suggestion","Documentation",1,"Remove obsolete pages from Clover 3.1 space","""Hi Melanie,    May I ask your team to delete following pages from CLOVER space? All of them are obsolete or available in spaces for older Clover releases. They are unnecessarily cluttering current documentation.     https://confluence.atlassian.com/display/CLOVER/Changes+in+2.6.3.2+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.6.3+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.6.0+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.5.1+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.5.0+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.3+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.2+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.1+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.0+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.2-beta5+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.2-beta4+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.2-beta3+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.2-beta2+for+IDEA  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.1-beta1+for+IDEA    https://confluence.atlassian.com/display/CLOVER/Changes+in+2.6.3+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.6.2+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.6.0+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.5.1+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.5.0+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.3+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.2+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.0+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.2+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.1+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.2.1+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.1.0+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0.3+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0.2+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0.1+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0.0+for+Eclipse  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0.0.b2_1+for+Eclipse    https://confluence.atlassian.com/display/CLOVER/Changes+in+2.6.3+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.6.2+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.6.0+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.5.1+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.5.0+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.3+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.2+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.0+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.2+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.1+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.0+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.2.1+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.2.0+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.1.0+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0b2+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0b1+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0a5+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0a4+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0a3+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0a2+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0a1+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0.3+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0.2+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0.1+for+Ant  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.0.0+for+Ant    https://confluence.atlassian.com/display/CLOVER/Changes+in+2.6.0+for+Maven+2  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.5.0+for+Maven+2  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.3+for+Maven+2  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.4.2+for+Maven+2  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.2+for+Maven+2  https://confluence.atlassian.com/display/CLOVER/Changes+in+2.3.0+for+Maven+2  https://confluence.atlassian.com/pages/viewpage.action?pageId=110035179  https://confluence.atlassian.com/pages/viewpage.action?pageId=134873325  https://confluence.atlassian.com/pages/viewpage.action?pageId=103710921    https://confluence.atlassian.com/display/CLOVER/%5BTRASH%5D+Using+Clover+for+Maven+2+with+the+gwt-maven-plugin  https://confluence.atlassian.com/display/CLOVER/%5BTRASH%5D+Using+Clover+with+the+GWT-maven+plugin    https://confluence.atlassian.com/pages/viewpage.action?pageId=93683890  https://confluence.atlassian.com/pages/viewpage.action?pageId=71599635  https://confluence.atlassian.com/display/CLOVER/%5BTRASH%5D+Clover-for-Eclipse+User%27s+Guide  https://confluence.atlassian.com/display/CLOVER/%28hidden+draft%29+Clover-for+Eclipse+Upgrade+Guide  """
"CLOV-1144","Bug","Groovy|Maven plugin",3,"Support *.groovy files in src/main/java folder for groovy-eclipse-plugin","""*Problem:*    Clover fails during instrumentation of *.groovy files in case when sources are put in src/main/java directory, instead of src/main/groovy and when the groovy-eclipse-plugin is used.     *Steps to reproduce:*     * create a project with groovy-eclipse-plugin and maven-clover2-plugin   * put a *.groovy file inside src/main/java   * run build    *Expected error:*        A reason is that Java compiler is involved here, Clover is called, it filters out all files which do not have *.java extension and as a consequence it passes wrong argument to CloverInstr.    *Solution:*    1) Add check to AbstractInstrumenter (maven-clover2-plugin) so it does not call CloverInstr in case no matching files are found    2) Add support for src/main/java, src/test/java directories for Groovy - probably in GroovySourceScanner + CloverInstrumentInternalMojo      *Workaround:*    Put Groovy files in correct location i.e. src/main/groovy - they'll be handled correctly by Clover.    *Background:*    According to groovy-eclipse-plugin documentation, they recommend putting groovy files inside java folder - it's not nice, but it's the fastest set-up.     http://groovy.codehaus.org/Groovy-Eclipse+compiler+plugin+for+Maven"""
"CLOV-1150","Bug","Groovy|Maven plugin",5,"Clover does not instrument groovy source files, (groovy-eclipse compiler) when located in src/main/groovy","""When building a groovy project with maven, I am trying to get clover code coverage reports. With all source files in .java and in src/main/java, clover works fine. However, with all source files in .groovy and in src/main/groovy, clover can not instrument the files (clover2:instrument, or clover2:setup).     Everything that I can find is saying that clover versions after 3.1.3 support the maven groovy eclipse compiler (so long as the groovy files are located in src/main/groovy). See this ticket: https://jira.atlassian.com/browse/CLOV-1021?page=com.atlassian.jira.plugin.system.issuetabpanels:changehistory-tabpanel      There is another support ticket that I found that seems to cover the same issue, however I cannot access it. Here is the link  https://support.atlassian.com/browse/CLV-5878    A partial output log is included here. I will try to come up with a small test project that I can upload here. Any help would be appreciated.    """
"CLOV-1149","Suggestion","CEP Plugin",1,"Make possible to see instrumented sources in Clover-for-Eclipse","""Clover-for-Eclipse: Clover instrumentation in performed in memory during compilation. As a consequence when there is any build error, we can see original source only and cannot check whether the problem lies in the Clover instrumenter itself.     For example, in Clover-for-IDEA we can see instrumented sources because they're stored in temporary directory.    To be implemented: add an option to get instrumented sources in Eclipse too."""
"CLOV-1151","Bug","Instrumentation",1,"Clover fails to find coverage snapshot files when IBM JRE is used","""*Problem:* it seems that IBM JRE implementation differs from Oracle JRE in such way that Object.hashCode() can return a negative value. As a consequence, file name suffix generated for coverage snapshot and test slice snapshot may be composed not only of '0-9a-z_' characters, but also have minus """"-"""" sign in it.     As a result such file name does not match regular expression used for searching of coverage files and coverage is not read.     *Workaround:* rename coverage snapshot file(s) and remove """"-"""" character.  """
"CLOV-1162","Suggestion","Ant Tasks|Database",8,"Generate cumulative statement / complexity metric for need of methodContext filtering","""A method context has maxComplexity / maxStatements attributes which allow to reduce the scope of context filter for methods where these metrics are lower than defined level (by default maxComplexity/maxStatements is Int.MAX_VALUE, i.e. all methods are taken into account). Example:    {code:xml}  <methodContext name=""""trivial"""" regexp="""".*"""" maxStatements=""""1""""/>  {code}    However, customer reported a problem that it excludes methods containing inline classes, for instance:    {code:java}  // the getListener() method has only one statement: """"return <object>;""""  // if you use <methodContext name=""""trivial"""" regexp="""".*"""" maxStatements=""""1"""">  // then the whole code block will be filtered-out, including the actionPerformed() method  ActionListener getListener() {     return new ActionListener() {         public void actionPerformed(ActionEvent e) {             System.out.println(""""statement #1"""");             System.out.println(""""statement #2"""");         }     };   }  {code}    In the case above ActionListener() is an inner class so it has their own metrics. And because of fact that context filters are """"cumulative"""" (so that whenever any code pattern is matched, then the whole block is excluded), the whole getListener() method is filtered-out, including inner class.    *Solution:*    We cannot change existing metrics (without breaking backward compatibility) and we cannot change the way how blocks are excluded (it would make no sense). But we can create new metrics called: cumulativeComplexity and cumulativeStatements. It would work as follows:     * for every interface, class, enum or method find all inner classes, interfaces, enums or methods (*)   ** this can be checked by matching occupied code regions (on a database level during metric calculation - preferred) or during instrumentation (code parser)   * calculate cumulativeComplexity and cumulativeStatements by adding cumulative value from all inner objects to current entity complexity/statements value   * add maxCumulativeComplexity / maxCumulativeStatments to Ant clover-setup/clover-instr and Maven clover2:setup / clover2:instr goals   ** html reports would probably remain unchanged (just grey-out)    (*) yes we should make code more flexible in order to make it ready to support code constructs like default methods in Java8 interfaces or Scala's functions inside functions etc   """
"CLOV-1161","Suggestion","CEP Plugin|CIJ Plugin",2,"Add drop-down with two options for coverage","""Add the """"drop-down"""" listbox which will have """"show cumulative coverage"""" and """"show coverage from last run"""" options. It should be added in Eclipse and IDEA.    Note that the """"span"""" option is already available (Window > Preferences > Clover) but we can have either:   * have time-based span or    * set it to 0seconds which means load everything.      Background reason: coverage is cumulative. Some customer have pointed out that coverage data for successive incremental change/save/compile/test cycles can lie and show coverage that's no longer there. That's because we aggregate all coverage data since the last full rebuild. We will hopefully have a better way of showing this in the future. In the meantime, scrubbing the coverage for a project and re-running the tests will show the coverage of tests just run.    """
"CLOV-1160","Suggestion","Ant Tasks|CEP Plugin|CIJ Plugin",2,"Change default sort order in coverage report for packages/classes/methods","""Coverage report - show the least covered packages/classes/methods first. Table should not start with the highest coverage (starting from 100%) at the top, because developer is not interested in code which is already covered and tested, but in white spots. Add the possibility to sort by any column.    Affected: HTML/IDE"""
"CLOV-1159","Suggestion","Ant Tasks|CEP Plugin|CIJ Plugin",1,"Create small legend for Top Risks and Quick Wins in Cloud report","""Currently user does not know what the font size and colour means until he reads the documentation. Add small legend box or at least a single-line description for these two reports.     Affects HTML report as well as Eclipse/IDEA views. """
"CLOV-1157","Suggestion","CEP Plugin",1,"Run with Clover as on a project with no Clover","""Clover-for-Eclipse. When you have a project with Clover disabled, the """"Run with Clover as"""" and """"Run optimized"""" buttons are still active. It makes no sense, buttons should be grayed-out."""
"CLOV-1156","Suggestion","Documentation",1,"Refresh clover.atlassian.com","""The http://clover.atlassian.com/ page was not updated for last 2 years. Re-activate Bamboo builds related with this site to have live data. Add a link to this page on main Clover product page:    http://www.atlassian.com/software/clover/overview  """
"CLOV-1155","Suggestion","CIJ Plugin",2,"Simple installer for Clover-for-IDEA","""When someone downloads the Clover-for-IDEA from www.atlassian.com he gets clover-idea-x.x.x.jar file. What to do next? Of course you have to open IDEA, select Settings > Plugins > Install from disk, but user might not know. Especially when taking into account that """"Install from disk"""" is not available in older IDEA versions.     New feature: provide simple installer for Clover-for-IDEA. When user double-clicks on a JAR, a GUI installer starts (class defined in MANIFEST.MF) which asks for location of IDEA installation. Simple check whether selected folder contains config/plugins directory and copy jar into given location. Show also message how it can be installed from IDEA GUI.    Business value: makes Clover evaluation easier.  """
"CLOV-1154","Bug","CIJ Plugin",2,"Inconsistent popup menu in different IDEA versions","""IDEA 10 and newer is not showing the """"Exclude from compile"""" option when sources are instrumented. In IDEA9 it was working fine. See 'popup_menu_in_ideas.png' screenshot. My suspicion is that IDEA somehow does not treat instrumented file as a source code, thus hiding this option from popup menu.    What's more, when you click on the """"Jump to source"""" it opens the Explorer window, instead of opening the source file in IDEA.    See also:    META-INF/plugin.xml  com.cenqua.clover.idea.CloverPlugin.initComponent()    com.intellij.openapi.actionSystem.IdeActions;      @NonNls String GROUP_COMPILER_ERROR_VIEW_POPUP = """"CompilerErrorViewPopupMenu"""";    com.intellij.compiler.imp.CompilerErrorTreeView.addExtraPopupMenuActions();  """
"CLOV-1165","Bug","Ant Tasks",1,"Fix AbstractAntLogger","""The AbstractAntLogger class logs the message only if Ant Task is not null:        As a consequence, no log is availalbe in case when code it's called outside Ant - problem was found in open-source Gradle Clover Plugin."""
"CLOV-1166","Bug","Groovy|Maven plugin",2,"Clover does not work with Groovy 2.x","""*Problem:*    Clover instrumentation fails for Groovy 2.x with a stack trace like below:        *Reason:*    RecorderGetterBytecodeInstruction extends org.codehaus.groovy.classgen.BytecodeInstruction  and implements a following method:  public void visit(groovyjarjarasm.asm.MethodVisitor methodVisitor)    In Groovy 1.x MethodVisitor is an interface. In Groovy 2.x MethodVisitor is a class. Although RecorderGetterBytecodeInstruction compiles correctly with both Groovy versions, it fails at runtime during bytecode verification, becase visit() method gets different bytecode signature.    *Solution:*    Compile RecorderGetterBytecodeInstruction against two different Groovy versions. Load proper version using reflections at runtime.   """
"CLOV-1167","Bug","Grails Plugin|Groovy",1,"Grails Clover Plugin does not intercept 'testc' compiler","""Grails 2.x has introduced a new compiler for building unit tests (from test/unit directory). The 'testc' task is the *org.codehaus.groovy.grails.test.compiler.GrailsTestCompiler* Build log looks like this:        Clover does not intercept this compiler call (it supports Groovyc, Grailsc, GrailsCompiler). As a consequence unit tests are not instrumented and not included in coverage."""
"CLOV-1170","Bug","Maven plugin",1,"CloverOptimizerMojo does not support full include/exclude syntax","""*Problem:*    CloverOptimizerMojo does not support full include/exclude syntax, which can be handled by maven-surefire-plugin. Two cases are not handled right now:    (1) multiple paths separated by comma       (2) regular expression instead of Ant-style pattern      See: http://maven.apache.org/plugins/maven-surefire-plugin/examples/inclusion-exclusion.html    *Workaround:*    (1) use separate entries, like:      (2) not available; user can try to replace regexp by set of Ant-style patterns      *Implementation:*    CloverOptimizerMojo relies an Ant-style patterns underneath. The CloverOptimizerMojo.createFileSet() method has          fix for (1) - split every element in includes/excludes arrays using the comma delimiter and pass expanded arrays to appendIncludes()    fix for (2) - find all elements from includes/excludes arrays having %regexp keyword, run file search on _directory_ using a filename matcher with regexp, create include/exclude for every file matched  """
"CLOV-1173","Suggestion","Maven plugin",2,"Add maxComplexity / maxStatements for Clover-for-Maven","""Ant has extra maxComplexity and maxStatements attributes available which are not supported in Maven plugin, for example:    in Maven we have _name_ and _regexp_ attributes only:    *Possible solution*    Create <methodContextsExt> which would accept entries like:    Alternatively, extend parsing of existing <methodContexts> tag so whenever it finds the <methodContext> entry it will not treat it as name of new context but as a structure from sample above.    See also [-CLOV-1162-|../browse/CLOV-1162]."""
"CLOV-1177","Bug","CEP Plugin",1,"Errors in ErrorLog when toggling between projects with Dashboard view active","""1) Toggle between cloverized projects. Dashboard visible.    Message: Unexpected URI in the Dashboard view: C:\Users\Marek\.workspace-eclipse-3.4.2\Moneybags\.clover\report\dashboard-eclipse.html          2) Right click on a closed project, which  was cloverized before. Dashboard view visible.     Message: Error creating the dashboard        3) Cloverized project selected in Package Explorer, Dashboard view opened. Close the selected project.    Message: Problem generating Dashboard report      """
"CLOV-1175","Suggestion","Reporting",2,"Make HTML report more consistent about number of classes","""See attached screenshot. HTML report should list interfaces too."""
"CLOV-1185","Bug","CIJ Plugin",2,"Test optimization is broken in IDEA11 and above","""JetBrains have changed sth in IDEA 11 regarding unit test run configuration, as a consequence Clover does not """"see"""" and thus does not optimize all unit tests. Problem does not occur on IDEA 9.x, 10.x, 10.5.x. It is present on IDEA 11.x and probably also on 12.x.    See attached images."""
"CLOV-1184","Bug","CIJ Plugin",1,"Check Now button does not work if project is not opened in IDEA","""Install the latest Clover plugin version in IDEA. Click Settings > IDE Settings > Clover > Auto Update > Check now button.     If project is opened then pop-up is shown that the latest version is already installed. If no project is opened (i.e. you're on a IDEA's welcome page), pop-up is not shown. See attached images.    Problem occurs on IDEA 11.x and 12.x. """
"CLOV-1183","Bug","CIJ Plugin",2,"Cloud Report in IDEA shows interfaces","""Cloud Report in IDEA is inconsistent with a Cloud Report in Eclipse - it shows interfaces, which does not actually have any executable code. It shows also annotations.    Fix: don't list objects (interfaces, classes) which do not have any statements in the Cloud Report. Note that simple check if !isInterface() is not sufficient as interfaces in Java8 will have default methods with code."""
"CLOV-1182","Suggestion","CEP Plugin",3,"Multiple test cases in Test Runs view in Eclipse","""If unit tests are executed several times since the last build, the Test Run view shows multiple test results. Not a bug actually, but it could be improved by showing last results only. See screenshot. Affects all supported eclipse versions. """
"CLOV-1181","Suggestion","CIJ Plugin",2,"Multiple test cases in Test Run Explorer in IDEA","""Quickly click 'run' button in order to execute multiple sets of unit tests in parallel. IDEA runs them in parallel, as a consequence we've got duplicated test cases on a list. See attached screenshot. Affects all supported IDEA versions.     We should have test cases from last test run only."""
"CLOV-1179","Suggestion","Reporting",5,"Highlight whole method body if method is not covered","""If given method was not executed at all, the HTML report shows red highlighting only for method header. It's not a bug in code - our Velocity templates are just written this way. We should highlight the whole method body in red - in the same way as Eclipse/IntelliJ does. See screenshot. """
"CLOV-1178","Bug","CEP Plugin",1,"Fix ruler coloring when include coverage from passed only is enabled","""Eclipse. Java Editor. Left ruler showing coverage colours (green/yellow/blue). Rules shows """"yellow coverage"""" when the """"include from passed only"""" option is enabled. There should be no yellow colour in such case.     Note: source code is highlighted correctly, metrics are fine too.    See screenshot."""
"CLOV-1186","Bug","CIJ Plugin",5,"IDEA12 JavaSourceTransformingCompiler functionality has been removed","""Since build 122.694 Clover 3.1.8 cannot work with IDEA12 EAP, because the """"external"""" build functionality was introduced and the JavaSourceTransformingCompiler is no longer supported. See issue    http://youtrack.jetbrains.com/issue/IDEA-94612"""
"CLOV-1187","Suggestion","Grails Plugin",1,"Don't spam the console with println anytime clover grails plugin is installed","""From looking at the _Events.groovy hooks in the plugin, there are several println statements which will execute in all contexts, not just testing and not just when clover.on is specified. Specifically, the set classpath and compile start/end hooks will happen everytime any Grails command is run.    This is bad practice for a plugin. The println statements should be changed to use the grailsConsole which is available automatically    println """"foo"""" => grailsConsole.log """"foo""""    or grailsConsole.updateStatus """"foo""""    Secondly, this should probably be wrapped in a helper which only prints if the the clover is enabled, ie:    def logStuff(msg) {      if( config.on ) grailsConsole.log msg  }"""
"CLOV-1188","Suggestion","Ant Tasks|CEP Plugin|CIJ Plugin|Maven plugin|Reporting",13,"Aggregate coverage by current author and commit regex","""I love CIJ.  When I use git, I find myself making a lot of commits, and I want to see my test coverage aggregated by the jira ticket I've put in my commit log.  For example, let's say I'm working on a project for 3 days.  I might make 50 commits.  All throughout my development, I'd like to keep a running track of how the test coverage is *for my code, bounded by a commit regex*.  In other words, I'd like to use something like git blame, married with coverage, to give me feedback like """"Hey Zim, the feature you're working on only has 52% coverage"""".  Awesome-er still would be something like the class coverage pane, but using only lines I've changed.  So I could have a window that shows the classes I've changed, and a summary of the coverage for the lines that I've changed, again bounded by a the jira ticket in my commit logs.    This would be crazy to do in something other than a lightning fast DVCS like git or mercurial...but I have totally drunk the git cool aid."""
"CLOV-1189","Bug","Grails Plugin",0,"Report generation seems to get into an infinite loop, never finishes","""For some reason, in our Grails test environment, clover is stuck in what seems to be an infinite loop recording the data for all the files instrumented during the run.    This occurs at the end of a run started with """"grails test-app -clover.on"""" which runs both unit and integration tests.    Our project is fairly reasonable in size:      During the run, Clover generates an amazing number of files in the .clover/ directory (about 600,000 files *.s files)    At the end of the run we get:      I've attached a chunk of the log file looping on the report generation, the full log file is 4GB before I stopped it.    Also, I've attached a stack trace taken while it is seemingly looping.    It's weird, we are evaluating clover and it works fine on our other project module, but not this one. The configuration is the same:          """
"CLOV-1190","Sub-task","Groovy",2,"The <testsources> tag from <clover-setup> is not passed to groovyc","""As in subject. As a consequence, the DefaultTestDetector is always used for Groovy code.     *Fix:*    Build proper TestDetector instance in GroovycSupport, which will be next serialized into InstrumentationConfig (instrumentation.ser file), so that next the Grover can deserialize it and pass to InstrumentingCodeVisitor.  """
"CLOV-1192","Suggestion","Database|Reporting",5,"Create ClassInfo objects for anonymous inline classes","""During implementation of CLOV-1162 I've found that anonymous inline classes does not have their own ClassInfo object crated. Instead of this, methods of inline class are added to the enclosing class.    For instance, a following code:        is stored in clover database in this way:        It means that on reports the AggregatedMetrics.C class is presented as having 5 methods, while it has 2 actually.     It's not a bug. There was a design decision to not present anonymous classes in a report.     Possible improvement:   * create ClassInfo objects for anonymous classes   * add option for reporting whether to show anonymous classes (like InstrumentationSessionImplTestSample2$1) or not  """
"CLOV-1193","Suggestion","Build system|Instrumentation",1,"as a developer I don't need to run Clover on JDK1.4 anymore","""*Idea:*    Sun Java 1.4 has:   * end of public updates - Oct 2008   * end of Premier Support - Feb 2010   * end of Extended Support - Feb 2013   * see http://www.oracle.com/technetwork/java/eol-135779.html    IBM Java 1.4:   * is no longer Generally Available (GA) since Dec 2004;    * its End Of Servcie (EOS) will expire on September 2013:   * see https://www.ibm.com/developerworks/java/jdk/lifecycle/      According to various sources, most popular are Java6 and Java7; Java1.4 has a fraction of market right now:   * http://www.statowl.com/java.php  although the report above shows Java version in web browser. Production environment may be different (especially regarding IBM Java).      *Benefits:*    Dropping support for Java 1.4 would ease Clover development a lot, as we could:   * directly use Java5 generics in code   * replace raw collections (List, Map, Set etc) by typed collections (List<Foo> etc) in code    * get rid of Retrotranslator (2x faster build )   * it opens a door to introduce generic-based libraries in Clover code (for example replace Apache Commons by Guava)    *Tasks:*     * update Supported-Platforms page   * remove retrotranslator from build scripts   * update bamboo / maven configurations   * affects Clover, Clover-for-Maven2&3, Clover-for-Eclipse, Clover-for-IDEA  (note that Clover-for-Grails already need JDK1.5 or above)      *Out of scope:*     * replacing existing raw collections by typed ones (like List -> List<Foo> ), introducing foreach loops etc    ** this will be done gradually during daily development    """
"CLOV-1195","Bug","Groovy",8,"Groovy 2.x @CompileStatic annotation causes static methods to be ignored by Clover","""Adding @CompileStatic to a tested Groovy class results in 0% coverage for static methods.    e.g.    Can anyone confirm this? Thanks.  """
"CLOV-1196","Suggestion","Maven plugin",1,"Add testSources parameter for clover2:clover mojo","""The Ant <clover-report/> task has an optional nested <sourcepath> parameter where user can specify an Ant path that Clover should use when looking for source files.     Thanks to this, it is possible to generate report using sources from a different location (on a different machine, for instance).     Such option is missing for Maven clover2:clover MOJO. The workaround which can be used is to create a custom report descriptor, as described on https://confluence.atlassian.com/display/CLOVER/Creating+custom+reports, which is not convenient actually.    Fix: add <sourcepath> parameter for clover2:clover MOJO."""
"CLOV-1197","Suggestion","Build system|Maven plugin",3,"Perform migration of CLMVN and CLMVNONE from studio.plugins.atlassian.com","""The site studio.plugins.atlassian.com is deprecated. All new projects shall be migrated to bitbucket.org or eventually to ecosystem.atlassian.net.     *Deadline:*      * final deadline 5.03.2013    * it's recommended to finish it before 5.02.2013    *Scope:*    -1) Migrate SVN repositories-     * https://studio.plugins.atlassian.com/svn/CLMVN   * https://studio.plugins.atlassian.com/svn/CLMVNONE    -to Mercurial on Bitbucket-      -2) Migrate Bamboo builds (if necessary) from-      * https://studio.plugins.atlassian.com/builds/browse/CLMVN-TRUNK    -Note: CLMVNONE has no builds configured-    -to new Bamboo location.-      -3) There is no need to migrate Wiki pages and Code reviews (practically empty).-      -4) Migrate JIRA issues from-     * https://studio.plugins.atlassian.com/browse/CLMVNONE   * https://studio.plugins.atlassian.com/browse/CLMVN    -to-      * https://jira.atlassian.com/browse/CLOV     -if this is feasible and set component """"Maven 1 Plugin"""" and """"Maven Plugin"""", respectively.-    -Alternatively, create new issue trackers on Bitbucket or Ecosystem, copy all issues """"as is"""" and set projects read-only with a message that issue tracking shall be done in JAC CLOV project.-      -5) Update build scripts (Maven / Ant) and handle:-   * -new repository type (tagging)-   * -new way of deployment of binaries (optional)-    -Update also BEAC builds.-    """
"CLOV-1204","Sub-task","Build system",1,"Remove retrotranslator","""Remove all retrotranslator stuff:   * jar files (several extlib locations)   * build.xml and upgrade.xml files   * about boxes in Eclipse and IDEA   * etc/rights license files  """
"CLOV-1203","Sub-task","Build system|Instrumentation",1,"Update Supported-Platforms page","""On http://confluence.atlassian.com/display/CLOVER/Supported+Platforms:   * set JRE/JDK = 1.5 or later   * add footnote that support for JDK 1.5 has ended with 3.1.x  """
"CLOV-1202","Sub-task","Maven plugin",1,"Compile maven-clover2-plugin using JDK1.5","""Currently we have two executions of maven-compiler-plugin:   * one with source/target=1.3 for src/main   * one with source/target=1.5 for src/test    Use source/target=1.5 for the whole module. """
"CLOV-1206","Suggestion","Maven plugin",1,"CLMVNONE Use includes, instead of nested include to allow more than one pattern when merging","""Moved from https://studio.plugins.atlassian.com/browse/CLMVNONE-9    For Maven1 plugin: It would be better to change the following code in the clover:merge goal from:            to:        """
"CLOV-1205","Suggestion","Maven plugin",1,"CLMVNONE new property: maven.clover.instrumentationLevel","""Moved from https://studio.plugins.atlassian.com/browse/CLMVNONE-14    This should only be set to 'method' if used in conjunction with Test Optimization if the default level (statement) is not performant enough.  Valid values are """"statement"""" and """"method""""."""
"CLOV-1208","Suggestion","CEP Plugin|CIJ Plugin",1,"Show warning if new update is out of scope of the current license","""Case:   * user has a valid license key with a certain end-of-maintenance date   * new Clover version is released but the release date is later than maintenance end   * IDEA / Eclipse gives user an ability to upgrade but   * after upgrading user cannot use Clover anymore (!)    Improvement:   * check end-of-maintenance date from current license key, if it is < than release date of the upgrade we want to download, put additional warning about it the the upgrade dialog box"""
"CLOV-1209","Bug","CIJ Plugin",3,"Auto update version check reports new version when version strings are identical","""Under File > Settings > IDE Settings: Clover > Auto Update, when you press """"Check now"""" a window pops up saying:    """"New version available: 3.1.10.v20130108000000, you have 3.1.10.v20130108000000  Would you like to upgrade?""""    """
"CLOV-1232","Sub-task","Instrumentation",2,"Create GrowableBitSet class","""extend CloverBitSet,     add() method shall check index vs size() and call growToInclude();     make it thread-safe - check how antlr.collections.impl.BitSet.growToInclude() is implemented  """
"CLOV-1231","Sub-task","Instrumentation",3,"Use GrowableBitSet for PerTestRecorder.One","""In PerTestRecorder.One - wrap 'coverage' and coverageShortcut into a helper class (x)    set() method - if index is out of bounds then it shall resize 'coverage' BitSet and 'coverageShortcut' array (/)    refactor PerTestRecorder.Any, None, One, Many to top-level classes (/)    refactor ThreadVisibilityStrategy to top-level class (/)    write unit tests for (/)  ThreadVisibilityStrategy.SingleThreaded  ThreadVisibilityStrategy.Synchronized  ThreadVisibilityStrategy.Volatile  """
"CLOV-1230","Sub-task","Instrumentation",5,"Embed clover profile array in instrumented classes","""Enhance existing instrumentation and embed an array of CloverProfile in instrumented sources/classes, pass this array to Clover.getRecorder().    Java: source based instrumentation  RecorderInstrEmitter + Clover.getRecorder()     - add static field for _CLR class of *CloverProfile[]* type    Groovy: byte code instrumentation     - instantiate new CloverProfile[] { new CloverProfile(), ... } array at getRecorder() call    """
"CLOV-1228","Sub-task","Ant Tasks|Grails Plugin",1,"Document <profiles> element on CAC","""Write documentation for:   * http://confluence.atlassian.com/display/CLOVER/clover-setup   * http://confluence.atlassian.com/display/CLOVER/clover-instr   * https://confluence.atlassian.com/display/CLOVER/Advanced+setup+configuration  """
"CLOV-1227","Sub-task","Ant Tasks|Grails Plugin",2,"Add <profiles> element for <clover-setup> and <clover-instr>","""Enhance Ant tasks by adding new sub-types and attributes:        coverageRecorder   * fixed - default value as now, fixed-size coverage recorder requiring presence of clover.db to read the size   * growable - like for Android, no need to have clover.db   * shared - for Grails app, not only with dynamic size, but also reusing the same instance of recorder if initstring is the same    Parse it on Ant level, pass it to InstrumentationConfig and Instrumenter.   """
"CLOV-1235","Sub-task","Instrumentation",2,"Dynamically select coverage recorder based on clover.profile","""Clover.getRecorder():    Read -clover.profile system property and if securityexcetion or null then fallback to """"default"""".    If list of profiles is empty or given profile name was not found, fallback to fixed coverage recorder.    Should read coverageRecorder value and instantiate proper recorder type    Should fetch from cache using one of:    recorderKey = initString + """""""" + dbVersion + """""""" + cfgbits;  recorderKey = initString;    Add debug log messages for actions taken.    Prepare necessary tests for java and groovy (assert on log messages).  """
"CLOV-1236","Suggestion","Instrumentation",1,"Add 'clover.enabled' system property","""If set to 'false' it should disable recording of the coverage data at runtime."""
"CLOV-1249","Suggestion","Grails Plugin",8,"Grails: extract clover-runtime into build directory","""Usually it's here:    <home>\.grails\X.Y.Z\projects\<project_name>\classes"""
"CLOV-1248","Suggestion","CIJ Plugin",5,"IDEA: extract clover-runtime classes into build directories","""IDEA integration - put these classes into:   * out/production and    * out/test.     Add option in File > Settings > Project Settings or File > Settings > IDE Settings for this."""
"CLOV-1247","Suggestion","CEP Plugin",5,"Eclipse: extract clover-runtime classes into build directory","""Extract clover-runtime.jar into project's build folder so that other packaging tools could automatically pick these classes. Add pre-build or post-clean event handler to make sure that these classes will be still present after rebuild. Add some option in Window > Preferences or Project > Properties for this."""
"CLOV-1246","Suggestion","Maven plugin",5,"Maven: intercept maven-cargo-plugin and add clover-runtime dependency","""The maven-cargo-plugin is the most popular plugin for running in-container tests. Add <dependency> for clover-runtime there. Add configuration option to have a possibility to disable this."""
"CLOV-1245","Suggestion","Maven plugin",3,"Maven: intercept maven-war-plugin and add clover-runtime","""The same as CLOV-1242 but for maven-war-plugin"""
"CLOV-1244","Suggestion","Maven plugin",3,"Maven: intercept maven-rar-plugin and add clover-runtime","""The same as CLOV-1242 but for maven-rar-plugin"""
"CLOV-1243","Suggestion","Maven plugin",3,"Maven: intercept maven-ear-plugin and add clover-runtime","""The same as CLOV-1242 but for maven-ear-plugin"""
"CLOV-1242","Suggestion","Maven plugin",5,"Maven: intercept maven-jar-plugin and add clover-runtime","""Check if it would be possible to define some Maven property for maven-jar-plugin which would allow to define directory or list of files to be added to the archive. If yes, then extract clover-runtime into e.g. target/clover/runtime (note: it shall not interfere with CLOV-1241 somehow) and pass it to maven-jar-plugin. """
"CLOV-1241","Suggestion","Maven plugin",3,"Maven extracts clover-runtime into target/classes or target/classes-clover","""Automatic integration for unknown plug-ins: extract clover-runtime artifact into current build folder (target/classes for clover2:setup and target/classes-clover for clover2:instrument). Thanks to this these runtime classes might be automatically picked up and packaged. Check if there is any  Maven's build property holding list of classes which have to be updated.    Add configuration option for this, like:    """
"CLOV-1240","Suggestion","Maven plugin",3,"Create clover2:embed-runtime-jar goal","""Create MOJO for:        which will read the <targetJar> property and do the same what Ant task does.    Difference: we might use maven-assembly-plugin and download clover-runtime artifact for this."""
"CLOV-1239","Suggestion","Ant Tasks",3,"Create <clover-embed-runtime> task","""Create Ant task:    which will put all Clover's runtime classes into targetFile.     Unzip all com_cenqua_clover.* and com.atlassian.clover.runtime.* classes from clover.jar archive which is currently on a classpath (we've got a trick how to find it - see searching for clover.license) into a temporary directory and next put them into jar (use Ant <jar/> task for this or handle zip directly)."""
"CLOV-1238","Suggestion","Build system",5,"Split clover-core into clover-runtime + clover-core","""1) Use class dependency analyzer. Check for classes loaded via reflections too!!! (/) _class dependency analyzer was also used to strip third party libraries from unused classes_    2) Move runtime classes to clover-runtime module. (/)    3) -Rename packages to com.atlassian.clover.runtime.* but keep few core classes in com_atlassian_clover. Reason: Clover-for-Ant will still have single clover.jar probably and it will use FileInputStream(clover.jar) to dynamically extract classes form archive so we must be able to distinguish them.- (/) _cancelled; too many changes in referenced classes and runtime still """"borrows"""" few classes from core_    4) Enhance build script to publish this as com.atlassian.clover:clover-runtime artefact on Atlassian Central and Maven Central. (/)    Note:   - for backward compatibility clover-core shall still contain runtime classes and it's name will not change (com.atlassian.clover:clover) (/)   - -we can add dependency to clover-runtime in pom.xml, however - just to keep programmers informed about this change- (/) _dependency not added as clover-core already bundles the clover-runtime_    5) Update documentation on CAC and inform that new, small artifact is available since version 4.0.x. (/) _done_    6) Update UML in clover-maven-module-structure.graphml (/) _done_    7) Test it with Clover-for-Android (original clover-core exceeds method limit in Dalvik image)  (/) _couldn't test as Android Studio uses Gradle now and is based on IDEA not Eclipse_"""
"CLOV-1237","Suggestion","Ant Tasks|CEP Plugin|CIJ Plugin|Grails Plugin|Instrumentation|Maven plugin",40,"as a developer I'd like not to deploy clover.jar to app server","""*Embed clover-runtime.jar into created JAR/WAR/EAR*    *Problem:*    Instrumenting code by Clover is not enough, user has to manually add clover.jar to the runtime classpath. Otherwise it gets """"ClassNotFoundException com_cenqua_clover/CoverageRecorder"""" error. There are over 6'000 views on answers.atlassian.com about this problem (it's #1 on the list)    *Solution:*    Create a possiblity to automatically or manually embed clover-runtime.jar into produced JAR/WAR/EAR artifacts.     *Tasks:*    1) (/) Restructure Clover modules and find exact set of runtime classes, create clover-runtime.jar artifact out of it (will be published on Maven Central). Such subset was already found for Clover-for-Android, but it does not have classes for Distributed Coverage feature. See linked issue.     2) Create Ant task like <clover-embed-runtime-jar targetJar=""""my.jar""""/> which will allow to manually put runtime classes into it.    3) Check if it would be possible to intercept all <jar/> calls as well and do it automatically. Add option to disable this automatic integration and/or to specify regular expression pattern which jars shall be enhanced.    4) Create Maven goal like clover2:embed-runtime-jar with <targetJar> property.    5) Check how to automatically embed Clover runtime classes. Possibilities:   * extract clover-runtime.jar into target/classes or target/classes-clover   * scan build reactor, intercept packaging tasks like maven-ear-plugin, maven-jar-plugin, maven-rar-plugin, maven-war-plugin, maven-assembly-plugin   * modify maven project at runtime and add clover:clover-runtime dependency    6) Eclipse integration - we already have -Xbootclasspath for """"Run with Clover as..."""" but it's not enough if user has web application for example. Extract clover-runtime.jar into project's build folder so that other packaging tools could automatically pick these classes. Add pre-build or post-clean event handler to make sure that these classes will be still present after rebuild. Add some option in Window > Preferences or Project > Properties for this.    7) IDEA integration - put these classes into out/production and out/test. Add option in File > Settings > Project Settings or File > Settings > IDE Settings for this.    8) Grails integration - t.b.d."""
"CLOV-1251","Sub-task","Grails Plugin",5,"Prepare integration tests for SharedCoverageRecorder","""Integration tests like (all with partial global and per-test coverage):     * SharedCoverageRecorder with single InstrumentationSession and many classes     * SharedCoverageRecorder with multiple InstrumentationSessions, classes from sessions running together     * SharedCoverageRecorder with multiple clover databases (different initstrings)      * SharedCoverageRecorder with the same class compiled multiple times, different versions are running with coverage measurement,  """
"CLOV-1250","Sub-task","Instrumentation",5,"Prepare integration tests for GrowableCoverageRecorder","""Integration tests like:     * GrowableCoverageRecorder on a large code base     * GrowableCoverageRecorder with different strategies     ** PerTestRecorder.One / Many / None     ** ThreadVisibilityStrategy.SingleThreaded / Volatile / Synchronized    => especially check if/how per-test code coverage is affected by multithreaded tests of multithreaded application     * GrowableCoverageRecorder with DistributedCoverage  """
"CLOV-1253","Bug","Instrumentation",5,"Some of per-test recording strategies do not work for multi-threaded applications","""*Introduction*    We've got five per-test recording strategies:    * Diffing - clover.pertest.coverage=diff  * Null - clover.pertest.coverage=off  * SingleThreaded  - clover.pertest.coverage=<empty> and clover.pertestcoverage.threading=<empty> - DEFAULT POLICY  * Synchronized clover.pertest.coverage=<empty> and clover.pertestcoverage.threading=synchronized  * Volatile - clover.pertest.coverage=<empty> and clover.pertestcoverage.threading=volatile    *Current status*    1) A SingleThreaded does not work with multi-threaded apps. Of course it's designed for single thread only. But at least it should have a correct value of coverage for a test case from a current thread.     Expected number of hit counts is between:        but currently actualHits can be < than hits(current test) due to fact that CloverBitSet.set\(n\) is not thread-safe.    2) A Volatile strategy has a similar problem. CloverBitSet.set\(n\) is not thread safe. Starting/ending of test slices works fine.    3) A Synchronized is correct because we've got 'CloverBitSet.set\(n\)' wrapped in a synchronized block. Starting/ending of test slices works fine.    4) A Diffing needs more tests.     *Possible fix*    CloverBitSet could have two variants:   * compact - store hits as bit mask in long[] array - set\(n\) is not thread-safe, can be used for report generation as it consumes less memory   * exploded - store hits as boolean[] array - set\(n\) \{ arr[n] = true \} would be thread-safe, used for runtime recording; it consumes 8x more memory but on the other hand we usually don't have 10'000 tests running in parallel; number of parallel tests is ~ number of processor cores available  """
"CLOV-1255","Sub-task","Grails Plugin",2,"Prepare code example for Grails","""Prepare sample Grails project with domain classes, controllers and unit tests which will use the 'shared' coverage recorder."""
"CLOV-1256","Suggestion","Ant Tasks|Grails Plugin|Groovy|Maven plugin",0,"as a developer I'd like to instrument tests written in the Spock framework","""We use Clover for both Java and Groovy.    Unfortunately, Clover does not understand the tests we write in [Spock|http://code.google.com/p/spock/].    So a test like this:  {code}  class OpsWiseJobQueryTestSpec extends AbstractTestSpec {   OpsWiseJobQuery wait   static File existingFileMarker = File.createTempFile(""""opswiseJobQuery"""", """".txt"""")      void setup() {    wait = new OpsWiseJobQuery()    wait.manifestDir = existingFileMarker.getParentFile()    existingFileMarker.createNewFile()   }      void cleanup() {    existingFileMarker.delete()   }      def """"should work with completed job""""() {    expect:     state == wait.getJobState(manifestFilename)    where:     state      | manifestFilename     OpsWiseJobState.WAITING  |   """"non-existing-name.whatever""""     OpsWiseJobState.DONE  | existingFileMarker.getName()   }   }  {code}    Ends up with a coverage report like this:        I would expect to see just a single test passed.  """
"CLOV-1257","Suggestion","Grails Plugin",3,"Add clover.coverageRecorder field for Clover-for-Grails plugin","""*A follow-up of CLOV-1189:*    Support the coverageRecorder natively in the plugin config. It would be nice to go back to using the simpler configuration instead of the setuptask/reporttask closures. Like:        *Implementation:*     If coverageRecorder field is defined, then create a single profile named """"default"""" with coverageRecorder as specified and undefined distributedCoverage.    In case clover.setuptask is specified, then settings from this closure will override clover.coverageRecorder value.  """
"CLOV-1263","Bug","CIJ Plugin",8,"Race condition in IDEA during full rebuild and test execution","""Clover-for-IDEA. Race condition during database cleanup and running unit tests at the same time.     Steps to reproduce;    1. Open """"Moneybags"""" tutorial project  2. Prepare 'run all unit tests' configuration  3. Click """"Delete Coverage Database"""" button in the """"Cloverage"""" view  4. Click """"Rebuild now"""" in the prompt dialog  5. Quickly click """"Run (Shift+F9)""""    Problem:    Project is being rebuilt and clover.db is recreated, at the same time unit tests are compiled and also clover.db is being modified. There's a warning in console log like this:      """
"CLOV-1262","Bug","CIJ Plugin",3,"IDEA Darcula theme ignores <table border=0>","""Clover's """"About"""" dialog looks ugly when the """"Darcula"""" theme is selected in IDEA 12. Despite having <table border=""""0""""> in JEditorPane(""""text/html""""), it shows table with a border. Example:    !clover_about_idea12_themes.png!"""
"CLOV-1261","Bug","CEP Plugin",2,"PDF report with ""include failed test coverage"" option fails","""Eclipse    Install Clover-for-Eclipse, open tutorial project, select Run new report > PDF report > select """"Include failed test coverage"""" > click Finish.    PDF report generation fails with error log message:    """"The JVM report process failed with error code 1 - see log for details""""    !pdf_fail.png!    Increasing heap size from 512M to 768M solved the problem. To do: check why such small project requires so much memory.    Check also PDFReporter, Clover-for-IDEA."""
"CLOV-1260","Bug","CEP Plugin|CIJ Plugin",2,"Add url for 'utils.js' home page","""In Clover-for-Eclipse and Clover-for-IDEA """"About"""" dialogs the Utils.js link does not open the library home page. """
"CLOV-1259","Suggestion","Ant Tasks",5,"Reduce friction in tutorial","""Make Clover evaluation easier by simplifying the tutorial. The build.xml shall contain full Clover set-up so that just typing """"ant"""" shall produce all reports. So swap build.xml <-> build_completed.xml, fix """"test"""" target name, add default=""""clover.all"""" etc.     Futhermore, Ant and Maven configuration in tutorial shall be unified - use 'target' directory for both of them. Get rid of clutter like 'clover', '.clover', 'build' directories.     Update tutorial page on CAC.    Consider adding groovy-all-1.7.0.jar into /lib directory so that user won't need to define GROOVY_HOME path."""
"CLOV-1258","Suggestion","Ant Tasks|CEP Plugin|CIJ Plugin",8,"Upgrade third party libraries used by Clover","""Upgrade third party libraries to their latest versions:   * jebrains annotations 13.0 (/)   * ASM 5.0  (/) we're using ASM 3.0, 4.1 and 5.0 actually (for different purposes)   * commons-codec 1.9 (/)   * commons-collections 3.2.1 (/)   * commons-lang 2.6 (/)   * guava 18.0 (/)   * JCommon 1.0.23 (/)   * JFreeChart 1.0.19 (/)   * Log4J 1.2.17 (/)    * Velocity 1.7 (/)   """
"CLOV-1264","Bug","Grails Plugin|Instrumentation",5,"Performance problem with SHARED coverage recorder in Grails app","""Follow up of CLOV-1189.          If I uncomment the testsources enabled:false line, it runs about as quickly as before. Normally our coverage run takes about 42 minutes. With the above configuration it's been running for about 3 hours and is about half finished."""
"CLOV-1271","Sub-task","CIJ Plugin",5,"Test IDEA IDE - build server interaction","""Exploratory tests in user interface."""
"CLOV-1270","Suggestion","CIJ Plugin",13,"Write sequential integration tests for build server","""Prepare integration tests for external build feature. Test the scenario when 'parallel compilation' for 'external build' is disabled.    Check if any helper test classes for it are available in IDEA code based. """
"CLOV-1269","Sub-task","CIJ Plugin",13,"Implement parallel compilation handling","""Based on analysis of CLOV-1267"""
"CLOV-1268","Sub-task","CIJ Plugin",13,"Implement clover.db sharing between build server and IDE processes","""Based on analysis"""
"CLOV-1267","Sub-task","CIJ Plugin",8,"Check how parallel instrumentation can be handled","""External build supports parallel compilation. Modules are built in parallel, while files in a single module are compiled sequentially.     Clover expects that at least a single file is instrumented sequentially (the FileInto getCoverageMask which returns bitmask based on index range), so that the clover database contains continuous range of indexes for code elements from a single file. It means that we need to synchronize per file. It should not be a problem that subsequent files in database are from different modules.     possible solutions:    1) simple lock per whole file in some synchronized block; drawback: turns parallel build into single-threaded one.    2) batch operations, like first instrument whole file using relative indexes, next lock database and store information about whole file, database would return base offset value; still in sychronized block but locked for shorter amount of time;    3) change clover.db structure so that elements could be registered in any order; change FileInfo getCoverageMask function (and related); check for any data structures which needs to be made thread-safe;  """
"CLOV-1266","Sub-task","CIJ Plugin",13,"Check how clover.db can be accessed from build server and IDE processes at once","""probably there are two possible ways to interact with build server process and the IDEA IDE process:    1) build server performs (parallel) instrumentation in memory and at the end of the whole build writes or updates clover.db (it has write access); next it sends notification to IDE which refreshes views and editors; potential problems: deletion of database during build, locking files    2) build server performs (parallel) instrumentation sending information about code structure back to IDEA IDE, which manages the database and sends back indexes of elements; potential problems: high messaging overhead -> need to send at most one message per file -> need to introduce local offset constant per each file;"""
"CLOV-1265","Suggestion","CIJ Plugin",5,"as a developer I'd like to track build events in IDEA12 external build","""*Prepare empty plugin for external build.*    analyze external build API, prepare a simple plugin which will log compilation progress (module name, file name being compiled) and send notifications about it to IDE; it should also notify about """"compilation finished"""" event."""
"CLOV-1273","Suggestion","Groovy",8,"Reduce coverage requirements for groovy safe operator","""Currently any usage of the groovy safe operator requires that that reference be tested with a null and non-null value.  This adds significant overhead in the case where multiple calls are chained together with the safe operator.  It would be more useful as a coverage measurement if the chain was treated as one call.      Look at the following line as an example.    def value = a.getB()?.getC()?.getD()?.getE()    This line of code should require a test that sets value to null and a test that sets value to something non-null.  It should not however require a test where B is null a test where c is null a test where d is null and a test where e is null to reach 100% conditional coverage.    While I hope that lines that look like the above are not written very often, it still could happen, and having to write a bunch of tests to cover one line seems like a heavy burden.    """
"CLOV-1279","Suggestion","Documentation",1,"Document how to configure Clover + Bamboo with 'mvn deploy' goal on CAC","""The problem is that if 'mvn deploy' is used with Clover, it will deploy instrumented JARs into repository. There's no documentation on confluence.atlassian.com in the BAMBOO space how such separation can be achieved.       Create a page with a description like:      If you use """"Automatically integrate Clover into this build"""" option, then Bamboo will add clover2:setup + clover2:clover goals into every Maven task found in the Job (more details can be found here). It means that you shall not use """"mvn deploy"""" together with automatic Clover integration.    There are at least three ways to solve this problem:    1) Create a separate Plan (or Job) in which automatic Clover integration is enabled and the Maven 2.x task does not deploy artifacts (""""mvn verify"""" is used for instance). So this plan would be used only for Clover reporting.    Benefits: full Clover separation from the Plan (or Job) performing deployment    Drawbacks: doubled Plan (or Job)    or    2) Use manual Clover integration (""""Clover is already integrated into this build"""") but run Clover in a parallel build lifecycle. It means that you'd have to configure Clover goals manually in the pom.xml and use the """"clover2:instrument"""" instead of """"clover2:setup"""". You could have then just one Maven task with """"mvn clean deploy"""". Instrumented jars would have -clover.jar suffix.    Benefits: build is executed only once    Drawbacks: sometimes there might be problems with resolving correct (""""cloverized"""") dependent artifacts for multi-module projects or deploying the instrumented war to test server    or    3) Use manual Clover integration, but run Clover in a default build lifecycle. It means that you'd have to configure Maven task manually and use """"clover2:setup"""" goal. Then you have to use two Maven tasks - one with """"... clover2:setup test ..."""" and one with """"deploy"""". This is an approach you have followed (according to screenshots I see in attached pdf).    Benefits: no problems with artifact dependencies    Drawbacks: two Maven tasks     Recommendation: approach #3.     Steps for approach #3:     clean clover2:setup test clover2:aggregate clover2:clover    b) define """"Clover Report"""" artifact    On the 'Artifacts' tab, click Create Definition and complete the form as follows:  Name  This should begin with with """"Clover Report"""".  Location  This should point to the HTML report directory (e.g. target/site/clover)  Copy Pattern  Use **/*.*    More details on https://confluence.atlassian.com/display/BAMBOO/Enabling+the+Clover+add-on#EnablingtheCloveradd-on-ManualCloverintegration    """
"CLOV-1280","Bug","CIJ Plugin",5,"Error when trying to Check for an Update","""I just recently upgraded from IntelliJ IDEA 10.5.4 to 12.1.1 and now 12.1.2.  I think my last update to Clover was BEFORE I updated IDEA versions."""
"CLOV-1288","Sub-task","CIJ Plugin",13,"Implement communication between IDEA IDE and JPS builder",""" * notifications about build events, progress, error handling   * model refreshes"""
"CLOV-1287","Sub-task","CIJ Plugin",20,"Code instrumentation using jps-builders","""scope:  * java code instrumentation  * statement/method contexts  * test detection """
"CLOV-1286","Suggestion","CIJ Plugin",13,"as a developer I'd like to build projects using 'classic' build in IDEA12","""Make sure that new 'external build' feature support does not break the old build functionality when the compilation is performed in IDEA IDE process.     It shall still use JavaSourceTransformingCompiler class, old Project structure, event handling etc. """
"CLOV-1285","Sub-task","CIJ Plugin",13,"Write parallel integration tests for build server","""Create IT for external build process with a parallel compilation enabled."""
"CLOV-1284","Suggestion","CIJ Plugin",100,"as a developer I'd like to build modules in parallel using IDEA12 external build","""Support IDEA12 """"external build"""" feature with a """"parallel build"""" option ENABLED. To do:   * implement parallel compilation handling in clover core   ** affects FileInfo BitSet range for instance (will become non-continuous?)   ** concurrent addition of data to the model?   ** clover-report side-effects?   * write integration tests for clover core   * write integration tests for build server   * test idea ide - build server interaction"""
"CLOV-1283","Suggestion","CIJ Plugin",100,"as a developer I'd like to build modules sequentially using IDEA12 external build","""Support IDEA12 """"external build"""" feature with the """"parallel build"""" option DISABLED. To do:    * serialize Clover configuration for the JPS external process   * implement code instrumentation using builder API (jps-builders) and new project model (jps-model-api)   * implement notifications back to IDE   * implement model refreshing etc   * write integration tests for build server"""
"CLOV-1281","Suggestion","Instrumentation",1,"Improve message for NoSuchRegistryException","""See https://confluence.atlassian.com/x/AIP3F    A message """"Clover registry file: <path/to/clover.db> does not exist."""" is too general and does not help developer to understand what the exact problem is. Find a more meaningful message. """
"CLOV-1289","Suggestion","Reporting",5,"Support custom metrics in PDF report","""Currently the PDF report does not handle <columns> element so it's not possible to have a custom set of metrics in the summary. """
"CLOV-1294","Sub-task","CIJ Plugin",20,"Implement Clover data serialization from IDE to JPS","""The following data must be serialized and passed to JPS builder:   * global configuration - other.xml (license key, sid, install date)   * project settings - <project>.ipr (flush policy, initstring etc ...)   * module settings - <module>.iml (exluding entire module from instrumentation)   * idea test detector (default test detector + all test source folders)   * state of some buttons in UI (FeatureManager) (e.g. 'toggle build with clover')"""
"CLOV-1293","Suggestion","CIJ Plugin|Instrumentation",100,"as a developer I'd like to build continuously using external build","""Under the Project Settings / Compiler / Use external build checkbox there is the option 'Make project automatically'.    Enabling this feature runs 'continuous compilation', i.e. all sources are compiled as soon as they're modified (as saved actually, which happens automatically).     It means that we'd have Clover instrumenter called thousands of times during single IDEA IDE run. It means it would produce thousands of instrumentation sessions. And the current db structure is quite linear in search. And it would create thousands of coverage recorders - one instance per each class, practically.     Database structure and coverage records would have to be optimized for such continuous build approach.     Possible solutions:   * no instrumentation sessions, when new session starts, remove old data related with a source file being compiled and add the new one; might require extra index for fast search for the latest version   * using a SHARED coverage recorder;    * file-based hit count array indexes instead of the global one?  """
"CLOV-1292","Sub-task","Instrumentation",13,"Check how parallel instrumentation sessions can be handled","""External build will start/close single instrumentation session in which modules will be compiled in parallel (see CLOV-1267).    However, a parallel build in ant/maven might involve starting multiple instrumentation sessions at once (just think about <parallel> + <javac> in Ant for instance).     Check how we could deal with this. Possible problems:   * clover.db file locking (appending instrumentation session)    Areas for prototyping:   * clover db shared in memory   * clover db structure change - adding top-level index for sessions/files/classes etc, possibility to interleave data from several instrumentation sessions   * etc ..."""
"CLOV-1291","Suggestion","Reporting",8,"PDF report with class-level and method-level summary","""The PDF report contains package-level coverage table. Add an option for:   * <clover-report> Ant task   * clover2:clover mojo   * 'generate report' button in Eclipse    * 'generate report' button in IDEA    which would allow user to select report detail level:   * package (default)   * class   * method    for PDF file format. """
"CLOV-1295","Sub-task","Documentation",3,"Prepare documentation on CAC and AAC","""On Clover-for-IDEA pages:     * screenshot with """"Compiler"""" settings page from IDEA   ** external build can be enabled   ** incremental build shall be disabled (recommended)   ** parallel build must be disabled (refer to future story)    On supported platforms page:   * info that IDEA12.0-12.1 + Clover 3.1.8-3.1.11 must have 'external build' disabled    Release notes about this new nice feature    Update quiestion on AAC"""
"CLOV-1297","Bug","Reporting",5,"HTML report shows only one test result per file if external XML JUnit files are used","""In the <clover-report> we can define <testresults> element which causes that test results are being read from JUnit-compatible XML files, instead of from Clover's coverage recording files.     This works as long as the test name can be mapped to the method name (which is usually the case). However, in case of the Spock framework, test cases are named using a free text like:        which is later translated to a method named like:        As a consequence Clover is not able to match test name to the method name (in order to link to sources). It uses an empty test id to store the test result (SLICE_ID = -1). If there are more than one non-matched method in the same XML file, all get the same ID=-1, thus overwriting each other in hashmap. As a consequence only one is listed.    *Fix:*    Generate a unique test id using the test name - a String.hashCode() for instance.  """
"CLOV-1298","Bug","CIJ Plugin",3,"Contributed and unique coverage are equal","""Possible bug. Investigate why these values are identical for MoneyBags tutorial.     !unique_and_contributed_coverage.png!"""
"CLOV-1299","Sub-task","CIJ Plugin",8,"Find workaround or fix for IDEA-108852","""See http://youtrack.jetbrains.com/issue/IDEA-108852"""
"CLOV-1302","Bug","CEP Plugin",2,"The 'include line info' toggle works in the opposite way","""This toggle    !include_line_info.png!    works exactly opposite: when selected, the XML report does NOT contain <line> tags; and vice versa."""
"CLOV-1301","Suggestion","CEP Plugin",2,"Add more values for a 'threads' drop-down in report dialog","""The 'Generate Report' dialog has max 4 threads:  !report_generation_threads.png!    In age of multi-core multi-threaded processors, we shall have it up to 16 at least. """
"CLOV-1303","Bug","CIJ Plugin",5,"Exclusion icon decoration is not visible in IDEA","""Affects IDEA versions 10.5.x-12.1.x (works under IDEA 9.0.x). The toggle 'Annotate icons on included/excluded files ...' does not work:    !icon_decoration_do_not_work.png!"""
"CLOV-1326","Bug","Ant Tasks",3,"Class loader fails on clover.jar package-info","""Occurs in Bamboo, for instance.      """
"CLOV-1337","Suggestion","Ant Tasks|CEP Plugin|CIJ Plugin|Maven plugin",3,"as a developer I want be able to select 1.8 language level","""The """"1.8"""" language level shall be available for:   * <clover-setup> <clover-instr> Ant tasks   * clover2:setup clover2:instrument goal   * project settings in Clover-for-Eclipse, Clover-for-IDEA     Add such option, if necessary, write unit tests. """
"CLOV-1336","Suggestion","Database",20,"as a developer I'd like to have information about lambdas in the Clover database","""1) Evaluate how to represent Java8 lambdas - for instance:   - as a separate entity in the model, like a class or a method   - as an integral part of enclosing scope - similarly as the inline class is being handled by Clover    2) Design the DB format having in mind a future extensibility (like functions, functions-in-functions, global variables etc) for other JVM-based languages (like Scala or Closure)    3) Implement it.    Scope:   * database format    Out of scope:   * source code instrumentation   """
"CLOV-1335","Suggestion","Database|Reporting",13,"as a developer I'd like to generate reports with Java8 sources","""New language features might require enhancements of existing reports.     Evaluate how to represent lambdas - for instance:   - as a separate entity in the report, like a class or a method   - as an integral part of enclosing scope - similarly as the inline class is being handled by Clover    Scope:   * HTML, XML, JSON, PDF reports  """
"CLOV-1333","Suggestion","Instrumentation",20,"as a developer I'd like to instrument Java8 new language features","""This is an enhancement of CLOV-1139. Clover should be able not only to parse Java8 syntax without error, but also be able to add it's own code statements in order to measure code coverage for:  * lambda expressions  * ???  Scope:  * instrumentation (java.g file)  Out of scope:  * database format  * reporting"""
"CLOV-1328","Suggestion","Instrumentation",13,"as a Clover developer I'd like to use the latest version of ANTLR","""Clover uses ANTLR 2.x currently which is few light-years from the latest version, which is ANTLR 4.x. Upgrade to the latest ANTLR library version.     * check ANTLR 4.x license (it's different from 2.x) whether we can actually use it; if not - try to use 3.x, if possible   * check if there's any Java grammar (the best for Java 8) available for Antlr 4   * estimate whether it's better to use completely new grammar file and embed clover stuff there or to upgrade our existing grammar file from 2.x to 4.x   ** watch out for our custom extensions like unicode escape sequence handling, annotations etc"""
"CLOV-1338","Suggestion","CEP Plugin",3,"Warn if directory selected on Test Classes tab is disabled on Source Files tab","""On the """"Project Properties > Clover > Source Files"""" tab user can select which source folders shall be instrumented by Clover. By de-selecting the checkbox, the whole source root becomes excluded from instrumentation:    !source_files.png!    On the """"Test Classes"""" files user can select which source roots contain test sources:    !test_classes.png!    It it possible to have such combination that:   * source root is excluded   * source root is marked as a test root    This can be misleading. Add appropriate warning for it."""
"CLOV-1339","Suggestion","Instrumentation",20,"The <testmethod name="".*> does not match constructors","""*Problem:*    If you declare custom test detector, for instance:    {code:xml}  <clover-setup>    <testsources dir=""""src/test/java"""">      <testclass name="""".*"""">        <testmethod name="""".*""""/>      </testclass>    </testsources>  </clover-setup>  {code}    Then the test detector does not match constructors. As a consequence, a class like this:    {code:java}  public class SomeException extends Exception {    public SomeException(String s) {       super(s);     }  }   {code}    will be treated as APPLICATION not as TEST code.    *Background reason:*    {code:java}  public boolean isMethodMatch(SourceContext sourceContext, MethodContext methodContext) {          final MethodSignature signature = methodContext.getSignature();          return methodMatches(signature.getName()) &&                  methodAnnotationMatches(signature.getModifiers()) &&                  methodReturnPatternMatches(signature.getReturnType()) &&                  methodTagMatches(signature.getTags());      }    public boolean methodReturnPatternMatches(String methodReturnType) {          return methodReturnType != null &&                  (methodReturnTypePattern == null || methodReturnTypePattern.matcher(methodReturnType).matches());      }  {code}    The methodReturnType==null for constructors, thus constructor do not match the pattern.     *Solution:*    We could rewrite check like this:    {code:java}  return methodReturnTypePattern == null ||      (methodReturnType != null && methodReturnTypePattern.matcher(methodReturnType).matches());  {code}    However, this would require entirely new handling of code instrumentation for constructors. The reason is that code would be currently rewritten like:    {code:java}  public SomeException(String s) {          __CLR3_1_12_100hjv4vvu6.R.globalSliceStart(getClass().getName(), 0);          int $CLV_p$ = 0;          java.lang.Throwable $CLV_t$ = null;          try {              __CLR3_1_12_162c4pt0(s); // <<< ORIGINAL CONSTRUCTOR              $CLV_p$ = 1;          } catch (java.lang.Throwable $CLV_t2$) {              if ($CLV_p$ == 0 && $CLV_t$ == null) {                  $CLV_t$ = $CLV_t2$;              }              __CLR3_1_12_100hjv4vvu6.R.rethrow($CLV_t2$);          } finally {              __CLR3_1_12_100hjv4vvu6.R.globalSliceEnd(getClass().getName(), """"SomeException.SomeException"""", 0, $CLV_p$, $CLV_t$);          }      }        private __CLR3_1_12_162c4pt0(String s) { // << COMPILATION FAILURE, MISSING RETURN TYPE          super(s);          __CLR3_1_12_100hjv4vvu6.R.inc(1);          __CLR3_1_12_100hjv4vvu6.R.inc(0);      }  {code}    Problems:   * call to super() must be first   * we should not move constructor body into another method  """
"CLOV-1341","Bug","Instrumentation",5,"Implicit return in Groovy switch statement is instrumented incorrectly","""*Problem:*    Consider the following code:         * switch statement is the last statement in function, so it's value is being returned from a function call   * new Integer() / new String() are last statements before 'break' which is a function's exit point   * thus 10 or """"abc"""" are returned    Clover instruments code as follows:         * as a consequence, the last statement before 'break' becomes recorder.inc(), which returns void; as a result the create() function returns null    *Workaround:*    Use return instead of break in a switch statement, e.g.:          *Fix:*     *  do not add recorder.inc() before 'break'; drawback of the solution: we loose tracking of empty breaks, see below.        in the code above it would be nice to have """"case2: case 3: recorder.inc(3); break;"""" colored in green, despite that code makes nothing ...  """
"CLOV-1350","Suggestion","Reporting",1,"Add ADG navigation bar in the HTML report",""" * probably should be optional, because we embed reports in Bamboo -> how to handle this? all links from navigation bar shall be available somewhere else?     * what to put in the nav bar? we don't have 'create issue' button for sure ;-)"""
"CLOV-1348","Suggestion","Reporting",2,"review navigation links on a page summary","""frames/no frames - deleted show help - exists on some of pages overview/package/file - moved to breadcrumbs on a page header  todo: discuss with UX designer how breadcrumbs shall show the structure, e.g.:  - shall we display report name and a project name only?  - or some main section?  - or the entire path - if so, shall we have:  Report > Project > Test/App/Clouds > Package > FIle/Class > (Test)  or something else?"""
"CLOV-1344","Suggestion","Ant Tasks|CEP Plugin|CIJ Plugin",3,"Added LICENSES.html file to Clover artfiacts","""Add the LICENSES.html file containing a table with:   * name of third party library   * link to home page (download sources / binaries)   * link to the license file    into the following artifacts:   * Clover-for-Ant ZIP   * Clover-for-Eclipse update site ZIP   * Clover-for-IDEA plug-in JAR    Note:   * there's no need to add such file in the Clover-for-Grails and Clover-for-Maven2&3, because these plug-ins do not contain any third party libraries embedded in it (just references in pom.xml / BuildConfig.groovy)    Reason for change:    * ensuring that we obey requirements imposed by various open source licences    """
"CLOV-1356","Sub-task","Reporting",0,"Test if syntax highlighting in html report works fine","""check manually or extend existing test case"""
"CLOV-1355","Sub-task","Instrumentation",3,"Add new grammar rules for java8 syntax","""just to correctly parse new syntax, do not add clover instrumentation to these new code constructs    something like:    lambda :      ( lambdaNoArgs | lambdaImplicitTypesArgs | lambdaExplicitTypesArgs )     '->'     ( lambdaExpressionLikeStatement | lambdaCodeBlock )    plus extend the method definition and add 'default' keyword as optional; probably won't need to distinguish between method declaration in interface and in a class"""
"CLOV-1354","Sub-task","Instrumentation",3,"Set up a Bamboo build for JDK1.8","""run all clover tests, including tests of java8 syntax on JDK1.8 on Bamboo"""
"CLOV-1353","Sub-task","Instrumentation",13,"Prepare unit tests compiling and instrumenting code samples","""test:  compile code samples from CLOV-1352 using JDK1.8 javac  instrument these code samples using Clover    expected:  no instrumentation of lambdas yet, just test if files are parsed correctly"""
"CLOV-1352","Sub-task","Instrumentation",13,"Create code samples with java8 syntax","""annontations on java types  repeating annotations  lambdas  virtual extension methods"""
"CLOV-1363","Sub-task","Reporting",8,"Ensure that reports show the test name and not the method name","""Make sure that HTML, XML, PDF, JSON reports will display the test name (like """"my test name"""" taken from def) rather than the actual name of test method (like $spock_feature). """
"CLOV-1362","Sub-task","Instrumentation",8,"Add Spock test name patterns in default test detector ","""Clover's default test detector should properly recognize Spock-framework test classes and which methods are test ones and which are helper ones. We shall not see stuff like this in the test summary:      """
"CLOV-1361","Sub-task","Instrumentation",13,"Implement test name to method name mapping in Clover","""Based on the investigation results from CLOV-1360 write proper mapping in Clover so that we could keep original names of test cases in Clover database (like """"my test name"""" instead of $spock_feature_1).     And these tests should properly """"link"""" to appropriate sections in source code - for instance in order to allow navigation in HTML report from test result to the test class source code."""
"CLOV-1360","Sub-task","Instrumentation",13,"Analyse how tests are converted by Spock ","""Analyse how a test named like:        is converted to a method like:        It's being done during AST transformation I guess.     Check how it's possible to either:   * reverse engineer this behaviour i.e. get a back-ward mapping $spock_feature_1_0 -> def """"my test name"""" or   * reproduce this behaviour, i.e. instrument methods in such order/way that Clover could 'calculate' the same method name   """
"CLOV-1359","Sub-task","Test Optimization",13,"Fix test optimization and check all class versions","""Depends on CLOV-1358    Test optimization should scan for hit count indexes of all versions of given class. This is necessary in order to workaround the problem of the groovyc compiler which resolves some of symbols at runtime and thus it does not always recompile test class if application class is not changed. """
"CLOV-1358","Sub-task","Database",40,"Enhance Clover database to keep full instrumentation history","""*Problem:*    Currently Clover database keeps list of instrumentation sessions plus information about classes which is a sum of all previous instrumentation sessions in such way that for given class only the latest class version is stored.     There are two limitations of current design:    1) Test optimization might not work correctly for some test frameworks for Groovy language. This is due to nature of the Groovy language itself, where compiler allows to compile code which does not have all symbols resolved (they're being resolved at runtime). As a consequence if a dependent application class is changed, this does not to have trigger recompilation of the test class. See comment for more details.     2) Syntax highlighting in HTML report is always based on the latest class version, so if someone has older source file, it can be rendered incorrectly. There's a warning for this in HTML report, but we could fetch the actual line/char indexes from the older class version.    *Solution:*    1) Enhance UpdateableRegFile and keep all versions of classes. This should be optional and disabled by default.     2) Enhance RegFile API to allow querying for older versions of given file (by default it should always return the latest version).     3) Add new option for <clover-setup> and <clover-instr> to allow to keep full instrumentation history. Either as """"true/false"""" or as a number (maximum number of versions of the single class to store).    4) Add API to calculate index bitset as a logical OR of bitsets from all versions of the given file or class.  """
"CLOV-1357","Suggestion","Ant Tasks|CEP Plugin|CIJ Plugin|Instrumentation|Maven plugin|Reporting",13,"as an administrator I need to monitor Clover usage on machines","""As a system administrator I need to have a way to track down usage of Clover licenses within my organization in order to make sure that Clover is not installed or used on more machines than the license allows to. Currently there is no tool for this purpose and the only indirect way is to scan for clover license files.     One of possible solutions:   * add the environment variable which will enable tracking of clover license usage, such variable could be set on all machines in users' profiles by system administrator     * the variable would point to the URL which will collect data about license usage, e.g.:        * whenever code instrumentation or report generation is performed and the environment variable is defined, clover will connect to the specified URL using simple HTTP GET request     * it would be up to the system administrator to collect data from such HTTP GET requests (e.g. parsing apache logs, using some php script to store data in database ...)     * options of HTTP GET          Scope: clover core (would work in ant, maven, grails, eclipse, idea ...)"""
"CLOV-1369","Suggestion","Build system|Instrumentation",1,"as a developer I don't need to run Clover on JDK1.5 anymore","""*Idea:*    Sun Java 1.5 has:   * end of public updates - Oct 2009   * end of Premier Support - May 2011   * end of Extended Support - May 2015   * see http://www.oracle.com/technetwork/java/eol-135779.html    IBM Java 1.5:   * its End Of Servcie (EOS) will expire on September 2015   * see https://www.ibm.com/developerworks/java/jdk/lifecycle/    According to various sources, most popular are Java6 and Java7 with Java8 growing up; Java1.5 has a fraction of market right now:   * http://www.statowl.com/java.php   although the report above shows Java version in web browser. Production environment may be different (especially regarding IBM Java).    *Benefits:*    Dropping support for Java 1.5 would improve Clover development, as we could:   * use @Override for interfaces   * use newer version of Guava (we're on Guava 9 (!) due to required JDK1.5 binary compatibility)   * have all Clover modules and plugins on the same JDK level   ** Groovy/Grails require JDK6+ to compile and execute   ** Clover-for-IDEA (IDEA12 JPS) requires JDK6+ to compile and execute   ** rest is on JDK5    *Tasks:*     * update Supported-Platforms page   * update guava library (and all others which are compiled against jdk6)   * update build scripts   * affects Clover Core, Clover-for-Ant, Clover-for-Maven2&3, Clover-for-Eclipse, Clover-for-IDEA, Clover-for-Grails       *Out of scope:*     * adding Override annotations - this will be done gradually during daily development    """
"CLOV-1382","Suggestion","CEP Plugin|CIJ Plugin",2,"Add lambda toggle to report wizards in Eclipse and IDEA","""Add toggles for showInnerFunctions and showLambdaFunctions in report wizards in Eclipse and IDEA plugins. Toggles shall be visible for HTML and XML reports.     Consider using a drop down """"show lambda functions"""":   - NONE (inner=false, lambda=false)   - FIELDS ONLY (inner=false, lambda=true)   - FIELDS AND METHODS (inner=true, lambda=true)  """
"CLOV-1381","Suggestion","Maven plugin",1,"Add showInnerFunctions and showLambdaFunctions to clover2:setup","""Command line tools and a <clover-report> Ant task have these options.     Add:    showInnerFunctions=false   showLambdaFunctions=false    to CloverReportMojo. Pass these values to a report descriptor. Define such values also in the default descriptor (clover-report.xml)."""
"CLOV-1380","Suggestion","Test Optimization",8,"Create API for handling optimization snapshot","""*See:*   * [Hacking Clover / Updating optimization snapshot file|https://confluence.atlassian.com/display/CLOVER/Updating+optimization+snapshot+file]   * [src/it/optmized/snapshot-hacking|https://bitbucket.org/atlassian/maven-clover2-plugin]    *Problem:*    Internal classes are used to manipulate snapshot.        *Fix:*    Create proper interfaces/classes in c.a.c.api.optimization  """
"CLOV-1379","Suggestion","Database",8,"Create API for handling coverage recording files","""*Problem:*    Currently there's no API which would allow to create a global recording or a per-test recording file. Such API would be useful, e.g. for conversion of coverage data from other tools such as Cobertura or Emma.     *Fix:*   - publish global and per-test recording file format on CAC (including naming convention for files)   - expose class for global coverage file (equivalent of FileBasedGlobalCoverageRecording)    - expose class for per-test coverage file (equivalent of FileBasedPerTestRecording)  """
"CLOV-1378","Suggestion","Database|Instrumentation",3,"Interfaces and a template class for handling instrumentation sessions","""*Problem:*      * We need some concrete classes in the API to perform the instrumentation. At the moment we have an InstrumentationSession interface but no way to get an instance of this!    * We need a way in the API to construct a MethodSignatureInfo (same problem as InstrumentationSession).    In order to update content of a database and store new instrumentation session a number of internal classes must be used, e.g.:          *Fix:*   - move MethodSignature, Modifier, Modifiers, Parameter to API   - create factory for FixedSourceRegion, ContextSet    - enterMethod (and others) shall use ContextSet from API  """
"CLOV-1377","Suggestion","Database|Instrumentation",1,"Interfaces and factory methods for loading Clover database","""*Problem:*    Database entities are already in c.a.c.api.registry package.     However, in order to load the database you have to call an inner class, for example:        *Fix:*    Create proper interfaces and a factory hiding the CoverageDataSpec and CloverDatabase. """
"CLOV-1376","Suggestion","Database",3,"Change signature of getXyz() methods in HasXyz interfaces","""Current signatures have <? extends X>, for example:        This works fine for Clover's internal data structures (as there are subclasses), but it's not usable by developers using this API. It should be possible to have an assignment like:        Fix: change to <? super X>.     Note: We may need to expose additional methods in interface. They could throw Exception(""""not implemented"""") or return nulls."""
"CLOV-1375","Suggestion","Database|Instrumentation|Reporting|Test Optimization",8,"Extend API for loading and manipulate coverage files ","""Clover 3.2.0 published new interfaces describing a database model (com.atlassian.clover.api.registry). We need to reveal more Clover stuff via API in order to make it more usable by other developers.    For example:   * loading database and coverage files, handling instrumentation sessions   * manipulating coverage files"""
"CLOV-1384","Bug","Instrumentation",2,"Fully qualified java.lang is not used for system properties in Clover.getRecorder ","""Generated code:      """
"CLOV-1388","Suggestion","Groovy",20,"as a developer I'd like to have Spock @Unroll annotation being recognized by Clover","""The  annotation causes that a test name will be unrolled for every combination of test data. It means that we can have multiple tests having different name, which in fact are related with exactly the same test method, but ran with different input arguments.     Examples (from http://docs.spockframework.org/en/latest/data_driven_testing.html):          Problem for Clover: we don't know neither a number of tests nor their names during compilation. it would have to be deferred to runtime.     => add some inner class for a test class which would monitoring the test name and somehow pass to the per-test coverage recorder?  """
"CLOV-1389","Bug","Instrumentation",13,"Instrumentation of a branch condition with a generic type leads to javac compilation error","""*For a declaration like this:*  {code:java} public <T> T getFeatureValue(); ... if (client.getFeatureValue()) { {code}  the instrumented line gets instrumented like:  {code:java} _CLR3_1_113f23f2hnz3nmqe.R.inc(5146);if ((((client.getFeatureValue())&&(CLR3_1_113f23f2hnz3nmqe.R.iget(5147)!=0|true))||(_CLR3_1_113f23f2hnz3nmqe.R.iget(5148)==0&false))) {{ {code}  which leads to compilation error:    *Reason:*  Javac performs autoboxing of the if condition. However it cannot deal properly if the same generic value is used with && or || operators. It looks like if javac wraps the entire if condition, not a single element.   Look at the example:    *Workaround:*  Don't rely on boolean autoboxing and change a generic type to Boolean.   or  Extract expression being autoboxed to a local variable and evaluate before """"if"""". Use the variable in """"if"""".    or  surround problematic code block with """"///CLOVER:OFF"""" and """"///CLOVER:ON"""" inline comments (note that three slashes are used)"""
"CLOV-1390","Bug","Instrumentation",1,"clover intrumented testcode with PersitenceConstructor and parameters fails ","""If the integration tests running without clover instrumentation the test works fine, but with clover instrumentation the one test will fail.          its seem to be a problem with follow declaration    """
"CLOV-1393","Suggestion","Reporting",1,"review ADG page layout in the HTML report","""review layouting of various components on the page and an interaction between them"""
"CLOV-1396","Bug","Grails Plugin",2,"""No such property: testTargetPatterns"" exception with Grails 2.3","""Unable to use Clover-for-Grails with Grails 2.3. Build fails with an exception:    *Reason:*  In the Grails 2.3 the _GrailsTest.groovy has been refactored into GrailsProjectTestRunner and GrailsProjectTestCompiler. The testTargetPatterns property has been removed.    *Probable fix:*  Replace testTargetPattern by iterator over testNames. """
"CLOV-1395","Bug","CIJ Plugin",13,"IDEA13 compatiblity issues","""Compatiblity issues of Clover-for-IDEA with the latest IDEA13:    1) Attempt to load a license key from a file (About Clover box > License button > Load) fails with an error:        2) Compilation of the project with Clover enabled fails with compilation error """"package com_cenqua_clover"""" does not exist. The most probably Clover fails to add clover.jar to project's class path.          3) There is no option to enable/disable external build feature. It seems that the """"classic"""" build functionality has been removed in IDEA13.    """
"CLOV-1397","Bug","CIJ Plugin",13,"Java+Groovy compilation fails with Clover enabled in IntelliJ 12.1.x","""When building my project in IntelliJ the build fails with the following exception. I saw a couple other similar comments about how using an external build can cause problems but I thought this was fixed with Clover 3.2? If I turn off the external build then the compilation does succeed. The project is a combined Java/Groovy project if that matters. Let me know if you need any more details.          {panel:title=Problem summary|bgColor=yellow}  This bug occurs when all of the following conditions are met:   * IDEA 12.1.1 or later is used   * Clover 3.1.12 or later is used    * an """"external build"""" feature is enabled (Settings > Compiler > Use external build)   * project has a mixed Java + Groovy code    It's an IDEA bug - http://youtrack.jetbrains.com/issue/IDEA-110835 - and has been fixed in IDEA13.     Therefore:   * in IDEA 12.x - disable the """"external build"""" feature   * in IDEA 13.x - problem does not occur  {panel}  """
"CLOV-1398","Bug","Instrumentation",3,"Java 1.8 Exceptions not being propagated correctly","""I have the following test stub (src/main/java)    {code:java}  public final class TestStub {      TestStub() {          throw new IllegalArgumentException();      }        public static void getHandler() {          new HashMap<>().computeIfAbsent(String.class, t -> new TestStub());      }  }  {code}    And the following test (src/test/java)    {code:java}  public class FooTest {        @Test(expected = IllegalArgumentException.class)      public void test0() {          TestStub.getHandler();      }  }  {code}    Using maven It runs fine using """"clean install"""" however using clover I get the following exception        If I replace with a standard anonymous class implementing java.util.function.Function it runs fine"""
"CLOV-1399","Bug","Ant Tasks|CEP Plugin|CIJ Plugin|Grails Plugin|Instrumentation|Maven plugin",3,"Java 1.8 compilation fails when lambda is passed to a generic argument","""The following piece of code fails to be instrumented    Javac gives the following error message:    [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project cake-util: Compilation failure: Compilation failure:  [ERROR] /Users/kasperni/workspace/CAKE/cake-util/cake-util/target/clover/src-instrumented/org/cakeframework/internal/util/tree/Fails.java:[27,67] reference to depthFirstTraversal is ambiguous  [ERROR] both method <S>depthFirstTraversal(java.lang.Class<S>) in org.cakeframework.internal.util.tree.Fails and method depthFirstTraversal(java.util.function.Predicate<? super N>) in org.cakeframework.internal.util.tree.Fails match  [ERROR] /Users/kasperni/workspace/CAKE/cake-util/cake-util/target/clover/src-instrumented/org/cakeframework/internal/util/tree/Fails.java:[27,86] incompatible types: cannot infer type-variable(s) I,T  [ERROR] (argument mismatch; java.lang.Class is not a functional interface)  [ERROR] -> [Help 1]"""
"CLOV-1404","Bug","CIJ Plugin",2,"Source highlighting label is cropped in the settings dialog","""Project Settings > Clover > View    """"Out of date"""" labels are cropped    [^project_settings_clover.png]"""
"CLOV-1403","Bug","CIJ Plugin",2,"Cloverage view layout is crappy with the Coverage Summary panel","""1. Not all buttons are visible by default.     2. Width/height proportion which triggers a change between horizontal/vertical layout is not set correctly. As a result we've got a crappy behavior as on the following screen shot:    !cloverage_view_layout.png!"""
"CLOV-1401","Bug","Instrumentation",8,"Clover fails to instrument generic type with a constructor reference","""This works fine:    {code:java}  myLambda = ArrayList::new;   // javac error since JDK8 b114  myLambda = ArrayList::<String>new;  {code}    But the following:    {code:java}  myLambda = ArrayList<String>::new;  myLambda = ArrayList<String>::<String>new;  {code}    fails with a parser error:        """
"CLOV-1406","Bug","CIJ Plugin",2,"URISyntaxException from Clover IDEA plugin under IDEA13 on Mac OS X",""""""
"CLOV-1413","Suggestion","CIJ Plugin",1,"as a developer I expect that Clover will automatically configure IntelliJ IDEA compiler settings","""Since IDEA12 a new external build feature has been introduced. It has also an option to perform parallel build (Settings > Compile > Build independent modules in parallel toggle), however Clover does not support parallel instrumentation (see CLOV-1284).     Clover should automatically disable the parallel build toggle whenever compilation starts (it can notify about this fact by a baloon), otherwise it will throw various runtime exceptions during compilation."""
"CLOV-1412","Suggestion","Reporting",1,"Use ADG-compliant colour set for widgets","""Replace existing colours by those recommended by ADG:   * https://developer.atlassian.com/design/latest/colors.html    Scope:   (/) tree map    (/) cloud view   (/) coverage bars (dashboard, package/class/file summary)   (/) test results bars (dashboard, test results pages)   (/) coverage markers on the page margin   (/) class coverage distribution / class complexity diagrams (use """"Blue"""" from ADG)    (/) colours of hyperlinks  """
"CLOV-1411","Suggestion","CEP Plugin|CIJ Plugin",1,"Add radio button style=adg/classic in eclipse and idea IDEs","""optional: add radio button in reports wizards    alternatively: use the default one (ADG) """
"CLOV-1410","Suggestion","Ant Tasks|Grails Plugin|Maven plugin|Reporting",2,"Add report style=adg/classic options for Ant, Maven, Grails","""scope: ant, maven, grails plugins  new toggle, default adg, pass to HtmlReporter"""
"CLOV-1409","Suggestion","Reporting",2,"Split velocity templates to 2 sets: adg and classic","""make a copy of original templates    extend HtmlReporter and add option to choose one of them, e.g.:    HtmlReporter -style classic/adg    ADG is the default one"""
"CLOV-1408","Suggestion","Instrumentation|Reporting|Test Optimization",5,"As a developer I'd like to see JUnit Parameterized tests in the report","""Similarly to the Spock framework (CLOV-1256) I'd like to see runtime test names from the JUnit4 parameterized tests. Example:        """
"CLOV-1429","Suggestion","Reporting",1,"chage test result labels to lozenges","""""""pass"""" / """"fail"""" / """"error"""" test statuses shall be changed to Subtle lozenges:    https://developer.atlassian.com/design/1.2/lozenges.html  """
