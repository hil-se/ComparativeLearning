"issuekey","type","components","storypoint","title","description_text"
"CLI-1197","Bug","CLI",3,"Appc CLI integration tests can't handle alphanumeric authorization code","In production, the Appc CLI integration tests can't handle alphanumeric authorization code from 360.    This issue is purely on the integration tests side i.e you can still enter the alphanumeric code manually when prompted."
"CLI-1203","Improvement","Installer",1,"Emojis should be removed from Appc CLI NPM ","*Details:* Since majority of our customers are (and will be) from the enterprise space, having emojis in our Appc CLI NPM seems unprofessional; see [^emojis.png].    Emojis should be removed from Appc CLI NPM.    *Steps to reproduce:*  # Run {{appc use <CORE_VER>}}  # When the CLI starts downloading, immediately press {{ctrl+c}} to cancel the download    *Actual:* Emojis will appear when you abort the download; see [^emojis.png]. "
"CLI-1208","Bug","Core",1,"appc run removes last arg","Last option is removed from the command.    "
"CLI-1207","Story","CLI",1,"Update appc-platform-sdk dependency to ~2.1.3 in appc-cli-titanium","."
"CLI-1213","Story","CLI",0,"Include Alloy 1.10.*","Alloy@1.10.0 introduced ES6 support in controller.   https://jira.appcelerator.org/browse/ALOY-1312"
"CLI-1215","Improvement","Installer",3,"appc-install improve subprocess npm rebuild","Use spawn instead of exec for cleaner code and not worry about buffer overflow.  https://github.com/appcelerator/appc-install/pull/75"
"CLI-1219","Improvement","CLI",3,"LiveView: Upgrade to handle ES6 sytax","h5.Description    When using ES6 syntax in an application LiveView will currently error out (however you wont see LiveView error out because of TIMOB-24694).    It's possible we could just update the acorn to a newer version allowing ES6 (and newer) code, but    # We don't own the package https://www.npmjs.com/package/jsparse-tools  # The repo doesnt exist (or is private)    We could grab the source from an npm install and update where necessary, I believe MIT allows this.     *Notes*    I had a quick try of updating to the latest acorn version and these were my observations    # The return data from the detect function stays the same across versions, so the acorn upgrade should not problematic  # Using const will throw an error, this seems to be because LiveView makes some assumptions about the length of a variable declaration, let works (let and var are both 3 characters long). (https://github.com/appcelerator/liveview/blob/de6bb766edf10b83e28e5f941528d420ef50798d/lib/fserver.js#L314-L324)   #* There is a note about usage of const in the docs but I cannot track down the origins of this warning https://wiki.appcelerator.org/display/guides2/LiveView#LiveView-Troubleshooting  # This is only run for app.js files I believe"
"CLI-1226","Improvement","CLI",5,"Automate AppSpider test","We need to test our APIs using AppSpider and upload the results    # Using the AppSpider Application, run a scan manually (https://axway.jiveon.com/docs/DOC-80884) against the REST endpoint for preproduction  ## URL: http://software-preprod.cloud.appctest.com/arrow/swagger.json  ## Inside the AppSpider application, import the Swagger document  ## Configure the scan and run it once manually. Save the configuration.  # https://axway.jiveon.com/groups/product-security-group/blog/2016/10/14/automating-appspider-and-nessus-with-hakbot  ## Recommend copying the Fortify scans to run this nightly: https://github.com/appcelerator/jenkins_dsl/tree/master/fortify-jobs"
"CLI-1230","Improvement","CLI",1,"Update create arrow app command ","As part of the product rebranding and renaming initiative, we are replacing the ""Arrow"" name.    appc new -t arrow    should be replaced with    appc new -t  api     !image-2017-06-16-17-07-49-385.png|thumbnail!     Should be backward compatible so the previous scripting that used ""arrow"" should continue to work.  Alias approach is OK."
"CLI-1229","Improvement","CLI",2,"Rename appc new options","As part of product rebranding and renaming initiative we need the following changes to the  ""appc new""  command:     !image-2017-06-16-17-02-32-741.png|thumbnail!     This should not affect any existing functionality.    "
"CLI-1232","Improvement","CLI",0,"Update descriptions in appc cloud -help  (ACS CLI)","Rename some of the descriptions in the ACS CLI help to refer to new naming    Specific lines:  Function: Cloud/ACS command line interface and app runner    Usage: cloud/acs [COMMAND] [COMMON OPTIONS] [COMMAND OPTIONS]    login to the API Runtime cloud    logout of the API Runtime cloud    restart an app from the API Runtime cloud. If no appname provided it can run in app dir or with -d to specify an app dir.    "
"CLI-1233","Bug","Core",1,"If you build appc-cli with NPM 3.X and Node 6.10.3, then you will get """"listener"" argument must be a function"""" when creating a mobile project","*Details:* If you build appc-cli with NPM 3.X and Node 6.10.3, then you will get {{""listener"" argument must be a function}} error when creating a mobile project.    *Notes:*  * This bug will appear when our (or ECD's) Jenkins build system start using NPM 3.X and Node 6.X to build appc-cli.  * To *workaround* the issue, you will need to use the {{--legacy-bundling}} flag: {{npm install --production --legacy-bundling}}  * On Jenkins, you will need to replace this line with the above command: https://github.com/appcelerator/jenkins_dsl/blob/master/jobs/appc_cli.groovy#L55    *Technical Notes:*  * It seems like the {{wrap}} function from {{lib/logger.js}} (https://github.com/appcelerator/appc-cli/blob/master/lib/logger.js#L99) is being destroyed when {{lib/core.js}} is processing {{node_modules/arrow/lib/plugin/new.js}}; specifically, here: https://github.com/appcelerator/appc-cli/blob/master/lib/core.js#L230    *Steps to reproduce:*  # Clone https://github.com/appcelerator/appc-cli  # From terminal, run the following commands in the appc-cli repo:    # After the tarball is created, create a folder in {{~/.appcelerator/install}} and name it the version from the package.json file i.e. the {{version}} property.  # Untar the tarball and move the {{package}} folder to the folder created in the above step  # Run {{appc use <VER_YOU_PREV_CREATED>}}  # Run {{appc new --name monkey --id com.appc.monkey --type titanium --force --no-services -l trace}}    *Actual:* The following error will appear (also, see attached log for full stack trace):      *Expected:* You should be able to create mobile project regardless how app-cli is built."
"CLI-1236","Improvement","CLI",1,"Trim any spaces from auth code entered for two-factor verification","UX team has recommended that we make a change to the CLI to trim and spaces from the auth code as part of the two-factor verification step. An extra space is added when users copy and paste the auth code from their emails.    Links for the Usability teardown  [Usability Study #1|https://axway.jiveon.com/docs/DOC-100696]  [Usability Study #2|https://axway.jiveon.com/docs/DOC-100695]"
"CLI-1241","Bug","CLI",2,"appc login --host option is not recognized","{{appc login --host \[dashboard url\]}} doesn't recognize the custom host option."
"CLI-1246","Bug","CLI",1,"Remove duplicated -v parameter in appc-cli help","in [CLI-675] we added CLI options -v (--vpc-env). However, this conflicts with the short -v option. It appears the simplest approach is to just remove the -v short form for -vpc-env, since that wouldn't have worked."
"CLI-1250","New Feature","Core",5,"Add support for allowing a proxy pac file to be specified in configuration","h5.Description    Some customers are behind a proxy where they use a proxy PAC file, when using the Appc CLI this can lead to a bad UX where the customer may have two possible proxy URLs and only through trial and error can they tell which URL will work, a working URL can also go to not working without easy warning also.    There are node packages that exist to allow resolving a proxy URL from a given PAC file, for example https://www.npmjs.com/package/pac-proxy-agent, I'm not sure how useful this would be and whether this problem is better solved in a lower level module such as request itself    Example usage    I would imagine this would be similar to the CA File support we have, so setting it would be set in the appc config like so {{appc config set proxypac C:\Users\Ewan\proxy.pac}}"
"CLI-1253","Improvement","Installer",5,"Unable to do appc config without appc core","This is only happens when setting up CLI for the first time.     After npm install appcelerator, there's no way to set config values, i.e. proxyServer, cafile, through {{appc config}} command. This is an issue for users try to setup CLI behind proxy.     Workaround is to use environment variables. "
"CLI-1263","New Feature","Core",0,"appc cli include acs cli 2.0.6","We have just upgraded tiger to 1.6.0 and released latest acs cli 2.0.6. Can you please include the latest acs cli? "
"CLI-1273","Bug","Core",3,"Ti.Database.execute() should return null when no results are found","- Our current {{ti.database.test.js}} test case is failing  - {{Titanium.Database.execute()}} should return {{null}} when no results are found    *TEST CASE*  {code:js}  var db = Ti.Database.install('made.up.sqlite', 'category'),      rows = db.execute('pragma table_info(\'category\');');    Ti.API.info('rows: ' + JSON.stringify(rows, null, 2));    db.remove();  {code}"
"CLI-1278","Bug","CLI|Titanium",1,"Android build always enables JavaScript encryption","Subsequent Android builds always have the {{encryptJS}} flag set to true when writing the build manifest, regardless of current deployment type.    *Steps to reproduce the behavior*  # Run a clean build  # Run the app a second time without any changes    *Actual behavior*  Second build and onwards always forces a full rebuild indicated by the following logs:      *Expected behavior*  The build does an incremental build instead of a full rebuild. The above log message should not appear.  "
"CLI-1280","Bug","CLI",0,"CLI: Cannot create projects when using 7.0.0-master.11","When using CLI 7.0.0-master.11, I am unable to create a new project. I get the below error:      *Steps to reproduce issue*  1. Create a new project with {{appc new}}  2. Enter valid project information    *Expected Results*  The project is created successfully    *Actual Results*  Project creation fails with the above error after entering the app id"
"CLI-1279","Improvement","Core",1,"Include API Builder 3.*","Bump API Builder major version."
"CLI-1283","Improvement","Installer",2,"appc use pre-release versions are not listed numerically","This is triggering my ocd.      Perhaps an ascending sort will create a better experience. Especially when the list is long, it is a pain to keep scrolling up to see the latest version.  "
"CLI-1285","Improvement","Installer",2,"""appc use"" must stop the daemon, if present, prior to switching core","We need {{appc use}} to stop the daemon prior to switching the core so that the old daemon code will no longer be used.    Here's the basic steps    1. Switch to the new core    2. Check if the new core has {{appcd}}      - If it does, run {{appcd stop}}  "
"CLI-1287","Bug","Core",1,"CLI Core 7.0.0-master.34 fails to install ""ioslib/node-ios-device"" with error","h5.Steps to reproduce:  1. Go to preprod & run .    h5.Actual results:  1. Core installation goes well but it fails at installing {{ioslib/node-ios-device}}.      h5.Expected results:  1. Core installation should not error installing {{ioslib/node-ios-device}}."
"CLI-1289","Improvement","Core",1,"Update AppPreview hook","https://jira.appcelerator.org/browse/PREVIEW-24    CLI needs to update {{appc-app-preview}} once the hook's URL is updated and ssl cert set up correctly."
"CLI-1290","Bug","Core",3,"npmconf causing errors when resolving plugins","The following error appears when running arrow tests. (which exec an appc run -l trace from a generated project) I never fully traced down the location of the issue in npmconf, but running the app generated by the tests directly does not show this error, so it's possibly something to do with the cwd.         These config options which are causing the error are npm defaults, however, and not set directly by me.  The error is being thrown by the npmconf module, which is now deprecated with warnings of _Do not use this package._.     While the suggested alternative is to use npm for this check, I don't feel like having npm as a dependency is a good idea, and I don't think that it is expected. Other packages seem to be using https://github.com/kevva/npm-conf instead.    I've created a branch which uses npm-conf instead of npmconf and this no longer throws errors or emits warnings. "
"CLI-1296","Improvement","Documentation|Installer",0,"Bump min node version to 8.1.2 or 8.9.0 ( first LTS version)","h5.Description    There's an issue with Node 8.0.0 - 8.1.1 that is seen when building Titanium apps (https://github.com/archiverjs/node-archiver/issues/236) this is fixed in Node 8.1.2, I've seen a few people on slack be burned by this, I propose we bump our minimum required node in appc-install to either 8.1.2 or 8.9.1."
"CLI-1306","Bug","Core",0,"Information link about replacing ArrowDB keys is dead","h5.Description    When importing an existing app using {{appc new --import}} a short-link is printed out that informs a user the impact of replacing arrowdb app keys in the tiapp, the page in 360 no longer exists. Side note that we also need to replace arrowdb/acs with MBS (I think?)    Link redirects to https://platform.axway.com/#/product/migrate-app        h5.Steps to reproduce    # Create an app with services enabled  # Import the app using {{appc new --import}}  # Go to the link printed to understand the impact of replacing arrowdb keys in the tiapp    h5.Actual    Dead link    h5.Expected    A link with information"
"CLI-1305","Bug","CLI",8,"Error thrown when an uncaughtException is thrown by the CLI process","h5.Description    When an uncaughtException occurs in the CLI it's possible the CLI will actually error out with the below, we just need to check if logger exists before using it like the other instances.        h5.Steps to reproduce    # Cause an uncaught exception in the CLI (TODO)    h5.Actual    An error in our code is logged, causing us to lose the uncaughtException error    h5.Expected    Exception should be logged"
"CLI-1309","Bug","CLI",1,"Include titanium@5.1.0 for CLI is unable to recognise JDK 9 fix","(Note JDK 9 is not supported yet, ticket is for reference)     When trying to set {{java.home}} in the CLI to JDK 9 using {{appc ti config java.home path/to/jdk}}. The CLI does not set it to JDK 9 and instead will revert back to 1.8. (switching from 1.7 to 1.8 and vice versa works as expected)    *Test Steps*  1. Download JDK 9   2. Use the CLI to set java.home to JDK 9 using {{appc ti config java.home path/to/jdk}}  3. Run {{appc info}}  4. Note that the CLI does not recognise it and reverts back to an older JDK version    *Actual result*  Should be able to switch to JDK 9. "
"CLI-1308","Bug","CLI",2,"'appc use' offline doesn't show installed versions","**Reproduce Step**  1. make sure you have appc core installed  2. run {{appc use}} offline    **Actual Result**  {{TypeError: Cannot read property 'version' of undefined}}    **Expected Output**  Installed appc core should be listed.  "
"CLI-1312","Bug","Core",1,"Can't start appc daemon with 7.0.3-master.36","This appears to be a regression. Not seen in 7.0.3-master.34.    I did not find any changes merged which would have caused this issue but not 100% sure.    h5.Steps to reproduce:  1. Install appc core 7.0.3-master.36.  2. Run . (Daemon was not running after I installed the core).    h5.Actual results:  1. Daemon start fails:  https://gist.github.com/lokeshchdhry/3340ef8fd04d074b7eb2838885234fdf    h5.Expected results:  1. Daemon should start successfully."
"CLI-1314","Bug","CLI|Core",5,"ABC: Issue enabling cloud and performance services for new apps","H5.Customer created a new app called BackupTest in VPC-Prod today.   He selected enable Axway platform services but, cloud and performance services were not enabled. I tried to enable them again by clicking the enable services and still didn't work.   After clicking it 4 times, finally the performance is enabled but, the cloud is still not getting enabled.     He created another new app testBackup and this time it worked fine.   but is still not able to enable the cloud service for the previous app.    I've attached the configuration file for their environment.   "
"CLI-1319","Improvement","Installer",5,"Reduce number of vulnerabilities found by npm audit","h5.Description    Currently npm audit shows the following number of vulnerabilities, {{found 39 vulnerabilities (14 low, 15 moderate, 7 high, 3 critical) in 920 scanned packages}}. Note that some of these are only dev dependencies, but we should try and fix as many as possible. The npm audit output is pretty noisy so here's a reduced version of modules that will need updating, assume that the version bump is in range unless noted    "
"CLI-1321","Bug","Markdown",1,"Hyperloop: Windows platform is not added to tiapp.xml","{{<module platform=""android"">hyperloop</module>}} is only added on creation, if you add it after creation android and windows are added.    *Steps to reproduce*   # Create a new application in studio with services and hyperloop     *Error*    Only {{<module platform=""android"">hyperloop</module>}} is added on creation.     *Expected*    {{<module platform=""windows"">hyperloop</module>}} is not added on creation."
"CLI-1324","Bug","CLI",8,"[Windows] Unable to install latest version of the CLI (7.0.6-master.5)","When trying to install latest version of the CLI on pre-prod the installation seems to get stuck.    *Test Steps*  # Make sure you are on pre-prod  # Use {{appc use --prerelease}} to see all releases   # Use {{appc use 7.0.6-master.5}} to get the latest version     *Expected*  CLI should install without any issues     *Actual*  CLI gets stuck on ""Installing""    *Note:* Seems to have been broken since {{7.0.6-master.2}} on Windows. "
"CLI-1343","Bug","CLI",13,"Android: Setting ""appc-sourcecode-encryption-policy"" to ""remote"" crashes on startup as of 7.3.0","This issue was reported via the [7.3.0 announcement blog post|https://www.appcelerator.com/blog/2018/08/ga-release-titanium-sdk-7-3-0-cli-7-0-5/]:    {quote}  App fail to run with the following error    [ERROR] : V8Exception: Exception occurred at ti:/invoker.js:101: Uncaught Error: abstract method “java.lang.String[] org.appcelerator.kroll.util.KrollAssetHelper$AssetCrypt.getAssetPaths()”  {quote}"
"CLI-1326","Bug","Installer",3,"Fix tar extraction method","- Our core CLI {{tar}} bundles are failing to extract on Windows  - To fix this we can simplyify the {{targz}} method in the installer to only use the {{tar}} module"
"CLI-1328","Bug","CLI",1,"AppC CLI --no-prompt flag broken.","I run this following command in appcelerator CLI:       Expected behavior:       But I'm getting this from CLI:       I did not get return any error code.   Instead, CLI prompts me to get logged in once again.  Though I did check it in 7.0.6, I have got same results. "
"CLI-1330","Bug","Installer",3,"appc use --prerelease -o json will try to download version json","h5.Description    When running {{appc use --prerelease -o json}} or {{appc use --prerelease --output json}} the cli will try to download a core version of json, using {{appc use -o json --prerelease}} or {{appc use --output json --prerelease}} will do the correct thing and list the version info.    h5.Steps to reproduce    1. Run {{appc use --prerelease -o json}}    h5.Actual    An attempt is made to download version ""json""    h5.Expected    The version info should be listed"
"CLI-1340","Bug","Core",5,"Login error when using Node 10 in Windows","On a fresh Windows 10 installation I've installed Node 10, Java 8, the Android SDK and the Appcelerator parts with {{npm install -g appcelerator titanium alloy}}. The open source version works fine but when trying to login to my appc account it will stop during the login part.    *appc info*        When running {{appc -l trace setup}} or {{appc -l trace login}} the login will stop at:  {quote}  Get the registry...  {quote}    *Workaround*  Commenting out these lines:    in install\7.0.9\package\lib\commands\login.js will skip the registry part and the login will continue up to the end."
"CLI-1344","Bug","CLI",2,"Packaging module with CLI 7.0.10-master.7  throws uncaught exception error","*Steps To Reproduce:*  1.Create a new mobile module project from command line  2. Build it  for android or iOS from CLI    *Expected:*  Module should be packaged successfully.    *Actual:*  2019-02-05T23:09:08.817Z | DEBUG  | Titanium Downloads Last Checked: 1549391907761  2019-02-05T23:09:08.817Z | ERROR  | An uncaught exception was thrown!  tiapp.xml not found  2019-02-05T23:09:08.818Z | ERROR  | tiapp.xml not found  2019-02-05T23:09:08.818Z | TRACE  | Error: tiapp.xml not found      at Object.load (/Users/kmahalingam/.appcelerator/install/7.0.10-master.7/package/node_modules/tiapp.xml/lib/tiapp.xml.js:57:9)      at updateConfig (/Users/kmahalingam/.appcelerator/install/7.0.10-master.7/package/node_modules/appc-cli-titanium/plugins/run.js:68:26)      at Object.getTiConfig (/Users/kmahalingam/.appcelerator/install/7.0.10-master.7/package/node_modules/appc-cli-titanium/plugins/util.js:177:9)      at /Users/kmahalingam/.appcelerator/install/7.0.10-master.7/package/node_modules/appc-cli-titanium/plugins/run.js:44:8      at /Users/kmahalingam/.appcelerator/install/7.0.10-master.7/package/node_modules/appc-cli-titanium/plugins/util.js:713:11      at fn (/Users/kmahalingam/.appcelerator/install/7.0.10-master.7/package/node_modules/async/lib/async.js:746:34)      at /Users/kmahalingam/.appcelerator/install/7.0.10-master.7/package/node_modules/async/lib/async.js:1213:16      at /Users/kmahalingam/.appcelerator/install/7.0.10-master.7/package/node_modules/async/lib/async.js:166:37      at /Users/kmahalingam/.appcelerator/install/7.0.10-master.7/package/node_modules/async/lib/async.js:706:43      at /Users/kmahalingam/.appcelerator/install/7.0.10-master.7/package/node_modules/async/lib/async.js:167:37    Command used:      *Note:*  This is not happening with 7.0.10 master 6 CLI    "
"CLI-1346","Improvement","Installer",5,"Improve the CLI install flow","h5.Description    Currently the CLI install process does the following looks for packages that contains native modules and reinstall them. For example, appcd contains a native module, so whenever I download the appc cli, the appcd version in the CLI is reinstalled.    We have mostly operated on the basis that a CLI distribution is locked down, but by reinstalling a package we're effectively recreating the dep tree underneath that package, leading to issues like DAEMON-270    I propose that rather than reinstalling the package, we take a similar approach to what's done elsewhere in the CLI where we run {{npm rebuild}} in the root dir. This has two advantages    1) CLIs become locked down ""again"" as we're just rebuilding native modules, not reinstalling  2) A CLI install becomes much faster I believe, on my machine a rebuild is way faster than an install"
"CLI-1347","Bug","CLI",1,"""componentForDownload is not defined"" error when running a project","h5.Description    I tried to build a project, and hit the following error        h5.Steps to reproduce    1. Remove the {{lastUpdateCheckTiDownloads}} property from the appc-cli.json  2. Build a project using {{appc run}}    h5.Actual    Above error    h5.Expected    No error should occur"
"CLI-1349","Improvement","Titanium",1,"Support passing a custom template directory to alloy new command","h5.Description    ALOY-1632 introduced passing a path to a template to the {{alloy new}} command. It would be good to bubble this up to the appc cli. There is an existing {{\-\-testapp}} option that can be used, but it might be better to go with something like {{\-\-template-path}}, it should be clear that this option is only used for Alloy projects"
"CLI-1350","Story","CLI",1,"Update to latest arrow version","h5.Description    API Builder team will be updating arrow to handle the recent change to the iconset dashboard ships. We should include this version, the version number is unknown at this time, and it might contain some security fixes too    cc [~ahurst]"
"CLI-1352","Bug","CLI",3,"Reduce time to check Titanium downloads","- Currently, the CLI checks Titanium downloads when a {{new}} or {{run}} occurs after a 24 hour period.  - This is too long, it should re-check after thirty minutes so customers can receive the latest modules shortly after being released."
"CLI-1354","Story","CLI|Titanium",1,"Include alloy 1.14.0","h5.Description    We want to include alloy 1.14.0 in the cli 7.1.0 release. Initially we will include the prerelease version {{1.14.0-0}} and then when we're ready we'll cut the release of alloy and include that in the cli.    We will need PRs for appc-cli and appc-cli-titanium"
"CLI-1355","Bug","CLI",3,"Android ""appc run"" will always trigger rebuild if ""tiapp.xml"" is missing encryption policy property","*Summary:*  If the ""tiapp.xml"" file is missing property ""appc-sourcecode-encryption-policy"", then an Android ""appc run"" will alway trigger a *rebuild*.    This is preventing incremental Android builds from working.    *Steps to reproduce:*  # Create a default Alloy or Classic app from template.  # Build for Android via: {{appc run -p android --build-only}}  # Build for Android again using the above command line.  # In the build log, notice the following message    {code}  [INFO]  Forcing rebuild: JavaScript files need to be re-encrypted  {code}    *Cause:*  The CLI's {{precompileHook()}} code is wrongly setting the {{AndroidBuilder}} object's ""encryptJS"" property to {{undefined}} if the ""appc-sourcecode-encryption-policy"" property was not found. This code should *+only+* set the ""encryptJS"" field to {{true}} if the encryption policy was found and set to ""remote"". Otherwise, it should leave the ""encryptJS"" field alone.  [titanium.js#precompileHook()|https://github.com/appcelerator/appc-cli-titanium/blob/cd6a63dbeac0cb6a2327f24e6b2f2e53a54b2984/hook/titanium.js#L216]    *Work-around:*  Add the following property to the ""tiapp.xml"" file.  {code:xml}  <?xml version=""1.0"" encoding=""UTF-8""?>  <ti:app xmlns:ti=""http://ti.appcelerator.org"">   <property name=""appc-sourcecode-encryption-policy"" type=""string"">none</property>  </ti:app>  {code}"
"CLI-1356","Bug","Installer",3,"Compiling platform native modules contains more packages than necessary","h5.Description    The CLI uses the existence of a postinstall step as a method of determining that a module is a native module. This isn't always the case as packages such as core-js use this as a method of gathering contributions, this doesn't cause any problems but it's a minor cosmetic issue and might cause a slight speed reduction in install time    "
"CLI-1359","Bug","CLI",3,"When commenting out modules in the Tiapp.xml and running a build all modules move to one line","*Test Steps*  # Create a new Titanium application using an SDK > 8.0.0.GA (In this instance 8.0.2.GA was used)  # Open the {{Tiapp.xml}}  # Add some modules  # Comment out the modules in the {{Tiapp.xml}}  # Run the app    *Expected result:*   Each module should be on a separate line like:    *Actual result:*  All modules are shown in one line like:      "
"CLI-1368","Improvement","CLI",1,"Daemon: update to ioslib 2.5.1 to support apple certificate detection","ioslib was updated in TIMOB-27358 to support detecting the new apple certs, we need to update ioslib in the daemon to support detecting these so Studio can show them"
"CLI-1369","Improvement","CLI",1,"Remove longjohn dependency","We use [longjohn|https://www.npmjs.com/package/longjohn] in our CLI to improve stack traces for async code. However, longjohn has quite a few negative impacts and shouldn't be used in procution code, mainly due to performance reasons.    Additionally longjohn has issues with source maps, which we now try to parse in our JS processing build step. This can lead to obscured error messages coming from longjohn instead of the original error, e.g. missing or corrupt source map.    We should remove longjohn to avoid all of the above issues in our shipped CLI."
"CLI-1371","Story","Titanium",1,"For Push in Preproduction & Older environments require '/v1' extension for acs-base URL","For Push in Preproduction & Older environments require '/v1' extension for acs-base URL.    If we change:     to       in the tiapp.xml. titanium in preprod will create URL successfully and ti.cloudpush will not throw an error. This is not the case in production where '/v1' is not needed.    but against Production it seems as per my tests we dont need to add '/v1' to the tiapp.xml."
"CLI-1376","Story","CLI|Titanium",3,"Update to daemon 3.x","We should ship the long awaited appcd 3.X line with CLI 8.0.0, this is already being tracked in the next branch but this makes it official"
"CLI-1380","Bug","Titanium",1,"No watchos simulators shown in studio","h5.Description    Update ioslib to v2.5.3 to pull in the fix for DAEMON-306 "
"CLI-1385","Story","Core",3,"Remove API Builder (arrow) in 8.0.0","API Builder 3 will be EOL at the end of April 2020 and has been deprecated in the 7.x CLI already. Since the 7.x CLI is supported past this EOL date we should be able to get away with cleaning up the 8.0.0 release with a breaking change to remove it, making the footprint significantly smaller.    [~cmcgovern] has approved this decision.  "
"CLI-1390","Bug","Core",3,"Android: Packaging an unregistered app does not encrypt files","h5. Steps to reproduce:  1. Make sure the project it not registered to your org.  2. Try to package (production build) the project for android distribution.  3. Unzip the {{.apk}} file & check the contents in {{./assets/resources}}.    h5. Actual results:  1. The {{app.js}} and other files are not encrypted.    h5. Expected results:  2. The {{app.js}} and other files should be encrypted."
"CLI-1392","Improvement","CLI",5,"Improve handling of no MBaaS entitlement","h5.Description    When creating a new project we will try to create a MBaaS resource, it seems that his creation is completely unguarded in terms of whether the user has access to MBaaS, and results in an ugly and confusing error being thrown like the below. We should improve this so that we don't create an MBaaS resource if they don't have access, and maybe logging if not entitled?    "
"CLI-1393","Improvement","Titanium",5,"Allow passing template option through when creating a classic application","h5.Description    To support the creation of webpack enabled classic projects we want to allow passing the {{--template}} option through to classic applications too, currently the code will not pass the template option through to the {{titanium create}} command only to the {{alloy new}} command"
